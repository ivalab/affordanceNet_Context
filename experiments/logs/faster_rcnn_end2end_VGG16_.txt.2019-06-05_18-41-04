+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-05_18-41-04
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-05_18-41-04
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0605 18:41:11.601521  5944 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0605 18:41:11.601538  5944 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0605 18:41:11.602784  5944 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "pool5_2_conv4_relu"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv6_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 32
      dim: 14884
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 32
      dim: 14884
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 256
      dim: 14884
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 256
      dim: 122
      dim: 122
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0605 18:41:11.603075  5944 layer_factory.hpp:77] Creating layer input-data
I0605 18:41:11.615897  5944 net.cpp:106] Creating Layer input-data
I0605 18:41:11.615913  5944 net.cpp:411] input-data -> data
I0605 18:41:11.615921  5944 net.cpp:411] input-data -> im_info
I0605 18:41:11.615926  5944 net.cpp:411] input-data -> gt_boxes
I0605 18:41:11.615931  5944 net.cpp:411] input-data -> seg_mask_inds
I0605 18:41:11.615934  5944 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0605 18:41:11.627148  5944 net.cpp:150] Setting up input-data
I0605 18:41:11.627163  5944 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 18:41:11.627168  5944 net.cpp:157] Top shape: 1 3 (3)
I0605 18:41:11.627172  5944 net.cpp:157] Top shape: 1 4 (4)
I0605 18:41:11.627176  5944 net.cpp:157] Top shape: 1 2 (2)
I0605 18:41:11.627179  5944 net.cpp:157] Top shape: 1 1 (1)
I0605 18:41:11.627182  5944 net.cpp:165] Memory required for data: 7200040
I0605 18:41:11.627188  5944 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0605 18:41:11.627202  5944 net.cpp:106] Creating Layer data_input-data_0_split
I0605 18:41:11.627210  5944 net.cpp:454] data_input-data_0_split <- data
I0605 18:41:11.627219  5944 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0605 18:41:11.627239  5944 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0605 18:41:11.627292  5944 net.cpp:150] Setting up data_input-data_0_split
I0605 18:41:11.627301  5944 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 18:41:11.627305  5944 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 18:41:11.627321  5944 net.cpp:165] Memory required for data: 21600040
I0605 18:41:11.627326  5944 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0605 18:41:11.627337  5944 net.cpp:106] Creating Layer im_info_input-data_1_split
I0605 18:41:11.627347  5944 net.cpp:454] im_info_input-data_1_split <- im_info
I0605 18:41:11.627353  5944 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0605 18:41:11.627364  5944 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0605 18:41:11.627374  5944 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0605 18:41:11.627424  5944 net.cpp:150] Setting up im_info_input-data_1_split
I0605 18:41:11.627430  5944 net.cpp:157] Top shape: 1 3 (3)
I0605 18:41:11.627444  5944 net.cpp:157] Top shape: 1 3 (3)
I0605 18:41:11.627449  5944 net.cpp:157] Top shape: 1 3 (3)
I0605 18:41:11.627466  5944 net.cpp:165] Memory required for data: 21600076
I0605 18:41:11.627471  5944 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0605 18:41:11.627481  5944 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0605 18:41:11.627488  5944 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0605 18:41:11.627497  5944 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0605 18:41:11.627511  5944 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0605 18:41:11.627552  5944 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0605 18:41:11.627558  5944 net.cpp:157] Top shape: 1 4 (4)
I0605 18:41:11.627562  5944 net.cpp:157] Top shape: 1 4 (4)
I0605 18:41:11.627578  5944 net.cpp:165] Memory required for data: 21600108
I0605 18:41:11.627583  5944 layer_factory.hpp:77] Creating layer conv1_1
I0605 18:41:11.627598  5944 net.cpp:106] Creating Layer conv1_1
I0605 18:41:11.627602  5944 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0605 18:41:11.627615  5944 net.cpp:411] conv1_1 -> conv1_1
I0605 18:41:11.795754  5944 net.cpp:150] Setting up conv1_1
I0605 18:41:11.795775  5944 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 18:41:11.795779  5944 net.cpp:165] Memory required for data: 175200108
I0605 18:41:11.795794  5944 layer_factory.hpp:77] Creating layer relu1_1
I0605 18:41:11.795814  5944 net.cpp:106] Creating Layer relu1_1
I0605 18:41:11.795821  5944 net.cpp:454] relu1_1 <- conv1_1
I0605 18:41:11.795837  5944 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0605 18:41:11.795989  5944 net.cpp:150] Setting up relu1_1
I0605 18:41:11.795995  5944 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 18:41:11.796000  5944 net.cpp:165] Memory required for data: 328800108
I0605 18:41:11.796003  5944 layer_factory.hpp:77] Creating layer conv1_2
I0605 18:41:11.796013  5944 net.cpp:106] Creating Layer conv1_2
I0605 18:41:11.796017  5944 net.cpp:454] conv1_2 <- conv1_1
I0605 18:41:11.796037  5944 net.cpp:411] conv1_2 -> conv1_2
I0605 18:41:11.798142  5944 net.cpp:150] Setting up conv1_2
I0605 18:41:11.798154  5944 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 18:41:11.798158  5944 net.cpp:165] Memory required for data: 482400108
I0605 18:41:11.798168  5944 layer_factory.hpp:77] Creating layer relu1_2
I0605 18:41:11.798177  5944 net.cpp:106] Creating Layer relu1_2
I0605 18:41:11.798193  5944 net.cpp:454] relu1_2 <- conv1_2
I0605 18:41:11.798200  5944 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0605 18:41:11.798342  5944 net.cpp:150] Setting up relu1_2
I0605 18:41:11.798349  5944 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 18:41:11.798353  5944 net.cpp:165] Memory required for data: 636000108
I0605 18:41:11.798357  5944 layer_factory.hpp:77] Creating layer pool1
I0605 18:41:11.798367  5944 net.cpp:106] Creating Layer pool1
I0605 18:41:11.798372  5944 net.cpp:454] pool1 <- conv1_2
I0605 18:41:11.798386  5944 net.cpp:411] pool1 -> pool1
I0605 18:41:11.798434  5944 net.cpp:150] Setting up pool1
I0605 18:41:11.798439  5944 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0605 18:41:11.798442  5944 net.cpp:165] Memory required for data: 674400108
I0605 18:41:11.798445  5944 layer_factory.hpp:77] Creating layer conv2_1
I0605 18:41:11.798454  5944 net.cpp:106] Creating Layer conv2_1
I0605 18:41:11.798458  5944 net.cpp:454] conv2_1 <- pool1
I0605 18:41:11.798475  5944 net.cpp:411] conv2_1 -> conv2_1
I0605 18:41:11.800148  5944 net.cpp:150] Setting up conv2_1
I0605 18:41:11.800158  5944 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 18:41:11.800161  5944 net.cpp:165] Memory required for data: 751200108
I0605 18:41:11.800181  5944 layer_factory.hpp:77] Creating layer relu2_1
I0605 18:41:11.800189  5944 net.cpp:106] Creating Layer relu2_1
I0605 18:41:11.800192  5944 net.cpp:454] relu2_1 <- conv2_1
I0605 18:41:11.800199  5944 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0605 18:41:11.800673  5944 net.cpp:150] Setting up relu2_1
I0605 18:41:11.800681  5944 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 18:41:11.800685  5944 net.cpp:165] Memory required for data: 828000108
I0605 18:41:11.800689  5944 layer_factory.hpp:77] Creating layer conv2_2
I0605 18:41:11.800707  5944 net.cpp:106] Creating Layer conv2_2
I0605 18:41:11.800714  5944 net.cpp:454] conv2_2 <- conv2_1
I0605 18:41:11.800719  5944 net.cpp:411] conv2_2 -> conv2_2
I0605 18:41:11.801991  5944 net.cpp:150] Setting up conv2_2
I0605 18:41:11.802001  5944 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 18:41:11.802006  5944 net.cpp:165] Memory required for data: 904800108
I0605 18:41:11.802024  5944 layer_factory.hpp:77] Creating layer relu2_2
I0605 18:41:11.802040  5944 net.cpp:106] Creating Layer relu2_2
I0605 18:41:11.802047  5944 net.cpp:454] relu2_2 <- conv2_2
I0605 18:41:11.802055  5944 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0605 18:41:11.802178  5944 net.cpp:150] Setting up relu2_2
I0605 18:41:11.802186  5944 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 18:41:11.802188  5944 net.cpp:165] Memory required for data: 981600108
I0605 18:41:11.802192  5944 layer_factory.hpp:77] Creating layer pool2
I0605 18:41:11.802211  5944 net.cpp:106] Creating Layer pool2
I0605 18:41:11.802218  5944 net.cpp:454] pool2 <- conv2_2
I0605 18:41:11.802223  5944 net.cpp:411] pool2 -> pool2
I0605 18:41:11.802253  5944 net.cpp:150] Setting up pool2
I0605 18:41:11.802268  5944 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0605 18:41:11.802271  5944 net.cpp:165] Memory required for data: 1000800108
I0605 18:41:11.802274  5944 layer_factory.hpp:77] Creating layer conv3_1
I0605 18:41:11.802295  5944 net.cpp:106] Creating Layer conv3_1
I0605 18:41:11.802300  5944 net.cpp:454] conv3_1 <- pool2
I0605 18:41:11.802305  5944 net.cpp:411] conv3_1 -> conv3_1
I0605 18:41:11.804096  5944 net.cpp:150] Setting up conv3_1
I0605 18:41:11.804107  5944 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 18:41:11.804111  5944 net.cpp:165] Memory required for data: 1039200108
I0605 18:41:11.804122  5944 layer_factory.hpp:77] Creating layer relu3_1
I0605 18:41:11.804131  5944 net.cpp:106] Creating Layer relu3_1
I0605 18:41:11.804134  5944 net.cpp:454] relu3_1 <- conv3_1
I0605 18:41:11.804141  5944 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0605 18:41:11.804266  5944 net.cpp:150] Setting up relu3_1
I0605 18:41:11.804273  5944 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 18:41:11.804277  5944 net.cpp:165] Memory required for data: 1077600108
I0605 18:41:11.804291  5944 layer_factory.hpp:77] Creating layer conv3_2
I0605 18:41:11.804301  5944 net.cpp:106] Creating Layer conv3_2
I0605 18:41:11.804306  5944 net.cpp:454] conv3_2 <- conv3_1
I0605 18:41:11.804322  5944 net.cpp:411] conv3_2 -> conv3_2
I0605 18:41:11.806437  5944 net.cpp:150] Setting up conv3_2
I0605 18:41:11.806447  5944 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 18:41:11.806450  5944 net.cpp:165] Memory required for data: 1116000108
I0605 18:41:11.806459  5944 layer_factory.hpp:77] Creating layer relu3_2
I0605 18:41:11.806466  5944 net.cpp:106] Creating Layer relu3_2
I0605 18:41:11.806483  5944 net.cpp:454] relu3_2 <- conv3_2
I0605 18:41:11.806500  5944 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0605 18:41:11.806628  5944 net.cpp:150] Setting up relu3_2
I0605 18:41:11.806635  5944 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 18:41:11.806638  5944 net.cpp:165] Memory required for data: 1154400108
I0605 18:41:11.806653  5944 layer_factory.hpp:77] Creating layer conv3_3
I0605 18:41:11.806672  5944 net.cpp:106] Creating Layer conv3_3
I0605 18:41:11.806676  5944 net.cpp:454] conv3_3 <- conv3_2
I0605 18:41:11.806684  5944 net.cpp:411] conv3_3 -> conv3_3
I0605 18:41:11.808871  5944 net.cpp:150] Setting up conv3_3
I0605 18:41:11.808884  5944 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 18:41:11.808887  5944 net.cpp:165] Memory required for data: 1192800108
I0605 18:41:11.808907  5944 layer_factory.hpp:77] Creating layer relu3_3
I0605 18:41:11.808925  5944 net.cpp:106] Creating Layer relu3_3
I0605 18:41:11.808931  5944 net.cpp:454] relu3_3 <- conv3_3
I0605 18:41:11.808948  5944 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0605 18:41:11.809104  5944 net.cpp:150] Setting up relu3_3
I0605 18:41:11.809123  5944 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 18:41:11.809126  5944 net.cpp:165] Memory required for data: 1231200108
I0605 18:41:11.809130  5944 layer_factory.hpp:77] Creating layer pool3
I0605 18:41:11.809149  5944 net.cpp:106] Creating Layer pool3
I0605 18:41:11.809154  5944 net.cpp:454] pool3 <- conv3_3
I0605 18:41:11.809164  5944 net.cpp:411] pool3 -> pool3
I0605 18:41:11.809208  5944 net.cpp:150] Setting up pool3
I0605 18:41:11.809223  5944 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0605 18:41:11.809226  5944 net.cpp:165] Memory required for data: 1240800108
I0605 18:41:11.809231  5944 layer_factory.hpp:77] Creating layer conv4_1
I0605 18:41:11.809248  5944 net.cpp:106] Creating Layer conv4_1
I0605 18:41:11.809262  5944 net.cpp:454] conv4_1 <- pool3
I0605 18:41:11.809268  5944 net.cpp:411] conv4_1 -> conv4_1
I0605 18:41:11.812963  5944 net.cpp:150] Setting up conv4_1
I0605 18:41:11.812984  5944 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 18:41:11.812988  5944 net.cpp:165] Memory required for data: 1260000108
I0605 18:41:11.812999  5944 layer_factory.hpp:77] Creating layer relu4_1
I0605 18:41:11.813009  5944 net.cpp:106] Creating Layer relu4_1
I0605 18:41:11.813015  5944 net.cpp:454] relu4_1 <- conv4_1
I0605 18:41:11.813024  5944 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0605 18:41:11.813148  5944 net.cpp:150] Setting up relu4_1
I0605 18:41:11.813155  5944 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 18:41:11.813158  5944 net.cpp:165] Memory required for data: 1279200108
I0605 18:41:11.813163  5944 layer_factory.hpp:77] Creating layer conv4_2
I0605 18:41:11.813194  5944 net.cpp:106] Creating Layer conv4_2
I0605 18:41:11.813199  5944 net.cpp:454] conv4_2 <- conv4_1
I0605 18:41:11.813215  5944 net.cpp:411] conv4_2 -> conv4_2
I0605 18:41:11.817734  5944 net.cpp:150] Setting up conv4_2
I0605 18:41:11.817752  5944 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 18:41:11.817756  5944 net.cpp:165] Memory required for data: 1298400108
I0605 18:41:11.817770  5944 layer_factory.hpp:77] Creating layer relu4_2
I0605 18:41:11.817780  5944 net.cpp:106] Creating Layer relu4_2
I0605 18:41:11.817798  5944 net.cpp:454] relu4_2 <- conv4_2
I0605 18:41:11.817804  5944 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0605 18:41:11.818270  5944 net.cpp:150] Setting up relu4_2
I0605 18:41:11.818279  5944 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 18:41:11.818282  5944 net.cpp:165] Memory required for data: 1317600108
I0605 18:41:11.818286  5944 layer_factory.hpp:77] Creating layer conv4_3
I0605 18:41:11.818296  5944 net.cpp:106] Creating Layer conv4_3
I0605 18:41:11.818300  5944 net.cpp:454] conv4_3 <- conv4_2
I0605 18:41:11.818307  5944 net.cpp:411] conv4_3 -> conv4_3
I0605 18:41:11.822572  5944 net.cpp:150] Setting up conv4_3
I0605 18:41:11.822593  5944 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 18:41:11.822597  5944 net.cpp:165] Memory required for data: 1336800108
I0605 18:41:11.822607  5944 layer_factory.hpp:77] Creating layer relu4_3
I0605 18:41:11.822618  5944 net.cpp:106] Creating Layer relu4_3
I0605 18:41:11.822623  5944 net.cpp:454] relu4_3 <- conv4_3
I0605 18:41:11.822630  5944 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0605 18:41:11.822737  5944 net.cpp:150] Setting up relu4_3
I0605 18:41:11.822744  5944 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 18:41:11.822748  5944 net.cpp:165] Memory required for data: 1356000108
I0605 18:41:11.822752  5944 layer_factory.hpp:77] Creating layer pool4
I0605 18:41:11.822760  5944 net.cpp:106] Creating Layer pool4
I0605 18:41:11.822765  5944 net.cpp:454] pool4 <- conv4_3
I0605 18:41:11.822772  5944 net.cpp:411] pool4 -> pool4
I0605 18:41:11.822803  5944 net.cpp:150] Setting up pool4
I0605 18:41:11.822809  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.822813  5944 net.cpp:165] Memory required for data: 1360903020
I0605 18:41:11.822816  5944 layer_factory.hpp:77] Creating layer conv5_1
I0605 18:41:11.822826  5944 net.cpp:106] Creating Layer conv5_1
I0605 18:41:11.822830  5944 net.cpp:454] conv5_1 <- pool4
I0605 18:41:11.822836  5944 net.cpp:411] conv5_1 -> conv5_1
I0605 18:41:11.827378  5944 net.cpp:150] Setting up conv5_1
I0605 18:41:11.827400  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.827404  5944 net.cpp:165] Memory required for data: 1365805932
I0605 18:41:11.827414  5944 layer_factory.hpp:77] Creating layer relu5_1
I0605 18:41:11.827422  5944 net.cpp:106] Creating Layer relu5_1
I0605 18:41:11.827428  5944 net.cpp:454] relu5_1 <- conv5_1
I0605 18:41:11.827435  5944 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0605 18:41:11.827543  5944 net.cpp:150] Setting up relu5_1
I0605 18:41:11.827549  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.827553  5944 net.cpp:165] Memory required for data: 1370708844
I0605 18:41:11.827556  5944 layer_factory.hpp:77] Creating layer conv5_2
I0605 18:41:11.827566  5944 net.cpp:106] Creating Layer conv5_2
I0605 18:41:11.827570  5944 net.cpp:454] conv5_2 <- conv5_1
I0605 18:41:11.827576  5944 net.cpp:411] conv5_2 -> conv5_2
I0605 18:41:11.831746  5944 net.cpp:150] Setting up conv5_2
I0605 18:41:11.831768  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.831773  5944 net.cpp:165] Memory required for data: 1375611756
I0605 18:41:11.831781  5944 layer_factory.hpp:77] Creating layer relu5_2
I0605 18:41:11.831790  5944 net.cpp:106] Creating Layer relu5_2
I0605 18:41:11.831796  5944 net.cpp:454] relu5_2 <- conv5_2
I0605 18:41:11.831815  5944 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0605 18:41:11.831933  5944 net.cpp:150] Setting up relu5_2
I0605 18:41:11.831938  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.831943  5944 net.cpp:165] Memory required for data: 1380514668
I0605 18:41:11.831946  5944 layer_factory.hpp:77] Creating layer conv5_3
I0605 18:41:11.831959  5944 net.cpp:106] Creating Layer conv5_3
I0605 18:41:11.831962  5944 net.cpp:454] conv5_3 <- conv5_2
I0605 18:41:11.831969  5944 net.cpp:411] conv5_3 -> conv5_3
I0605 18:41:11.836599  5944 net.cpp:150] Setting up conv5_3
I0605 18:41:11.836621  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.836623  5944 net.cpp:165] Memory required for data: 1385417580
I0605 18:41:11.836633  5944 layer_factory.hpp:77] Creating layer relu5_3
I0605 18:41:11.836643  5944 net.cpp:106] Creating Layer relu5_3
I0605 18:41:11.836661  5944 net.cpp:454] relu5_3 <- conv5_3
I0605 18:41:11.836668  5944 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0605 18:41:11.836787  5944 net.cpp:150] Setting up relu5_3
I0605 18:41:11.836794  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.836797  5944 net.cpp:165] Memory required for data: 1390320492
I0605 18:41:11.836802  5944 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0605 18:41:11.836818  5944 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0605 18:41:11.836824  5944 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0605 18:41:11.836830  5944 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0605 18:41:11.836840  5944 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0605 18:41:11.836846  5944 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0605 18:41:11.836891  5944 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0605 18:41:11.836897  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.836901  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.836906  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.836920  5944 net.cpp:165] Memory required for data: 1405029228
I0605 18:41:11.836925  5944 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0605 18:41:11.836947  5944 net.cpp:106] Creating Layer rpn_conv/3x3
I0605 18:41:11.836952  5944 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0605 18:41:11.836968  5944 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0605 18:41:11.887825  5944 net.cpp:150] Setting up rpn_conv/3x3
I0605 18:41:11.887845  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.887848  5944 net.cpp:165] Memory required for data: 1409932140
I0605 18:41:11.887857  5944 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0605 18:41:11.887867  5944 net.cpp:106] Creating Layer rpn_relu/3x3
I0605 18:41:11.887884  5944 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0605 18:41:11.887900  5944 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0605 18:41:11.888007  5944 net.cpp:150] Setting up rpn_relu/3x3
I0605 18:41:11.888015  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.888017  5944 net.cpp:165] Memory required for data: 1414835052
I0605 18:41:11.888021  5944 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0605 18:41:11.888027  5944 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0605 18:41:11.888033  5944 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0605 18:41:11.888039  5944 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0605 18:41:11.888047  5944 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0605 18:41:11.888078  5944 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0605 18:41:11.888084  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.888089  5944 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 18:41:11.888094  5944 net.cpp:165] Memory required for data: 1424640876
I0605 18:41:11.888098  5944 layer_factory.hpp:77] Creating layer rpn_cls_score
I0605 18:41:11.888110  5944 net.cpp:106] Creating Layer rpn_cls_score
I0605 18:41:11.888115  5944 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0605 18:41:11.888121  5944 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0605 18:41:11.889725  5944 net.cpp:150] Setting up rpn_cls_score
I0605 18:41:11.889735  5944 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 18:41:11.889739  5944 net.cpp:165] Memory required for data: 1424928156
I0605 18:41:11.889756  5944 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0605 18:41:11.889765  5944 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0605 18:41:11.889770  5944 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0605 18:41:11.889776  5944 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0605 18:41:11.889786  5944 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0605 18:41:11.889827  5944 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0605 18:41:11.889832  5944 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 18:41:11.889837  5944 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 18:41:11.889853  5944 net.cpp:165] Memory required for data: 1425502716
I0605 18:41:11.889856  5944 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0605 18:41:11.889866  5944 net.cpp:106] Creating Layer rpn_bbox_pred
I0605 18:41:11.889871  5944 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0605 18:41:11.889888  5944 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0605 18:41:11.891400  5944 net.cpp:150] Setting up rpn_bbox_pred
I0605 18:41:11.891409  5944 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 18:41:11.891413  5944 net.cpp:165] Memory required for data: 1426077276
I0605 18:41:11.891429  5944 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 18:41:11.891436  5944 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 18:41:11.891443  5944 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0605 18:41:11.891450  5944 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0605 18:41:11.891459  5944 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0605 18:41:11.891494  5944 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 18:41:11.891500  5944 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 18:41:11.891515  5944 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 18:41:11.891517  5944 net.cpp:165] Memory required for data: 1427226396
I0605 18:41:11.891533  5944 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0605 18:41:11.891542  5944 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0605 18:41:11.891549  5944 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0605 18:41:11.891557  5944 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0605 18:41:11.891584  5944 net.cpp:150] Setting up rpn_cls_score_reshape
I0605 18:41:11.891590  5944 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 18:41:11.891594  5944 net.cpp:165] Memory required for data: 1427513676
I0605 18:41:11.891599  5944 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 18:41:11.891604  5944 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 18:41:11.891611  5944 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0605 18:41:11.891620  5944 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0605 18:41:11.891629  5944 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0605 18:41:11.891659  5944 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 18:41:11.891666  5944 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 18:41:11.891672  5944 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 18:41:11.891676  5944 net.cpp:165] Memory required for data: 1428088236
I0605 18:41:11.891682  5944 layer_factory.hpp:77] Creating layer rpn-data
I0605 18:41:11.892006  5944 net.cpp:106] Creating Layer rpn-data
I0605 18:41:11.892014  5944 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0605 18:41:11.892020  5944 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0605 18:41:11.892026  5944 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0605 18:41:11.892031  5944 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0605 18:41:11.892040  5944 net.cpp:411] rpn-data -> rpn_labels
I0605 18:41:11.892050  5944 net.cpp:411] rpn-data -> rpn_bbox_targets
I0605 18:41:11.892058  5944 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0605 18:41:11.892068  5944 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0605 18:41:11.892886  5944 net.cpp:150] Setting up rpn-data
I0605 18:41:11.892895  5944 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0605 18:41:11.892900  5944 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 18:41:11.892905  5944 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 18:41:11.892910  5944 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 18:41:11.892926  5944 net.cpp:165] Memory required for data: 1429955556
I0605 18:41:11.892932  5944 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0605 18:41:11.892944  5944 net.cpp:106] Creating Layer rpn_loss_cls
I0605 18:41:11.892959  5944 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0605 18:41:11.892966  5944 net.cpp:454] rpn_loss_cls <- rpn_labels
I0605 18:41:11.892974  5944 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0605 18:41:11.892992  5944 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0605 18:41:11.893596  5944 net.cpp:150] Setting up rpn_loss_cls
I0605 18:41:11.893605  5944 net.cpp:157] Top shape: (1)
I0605 18:41:11.893610  5944 net.cpp:160]     with loss weight 1
I0605 18:41:11.893622  5944 net.cpp:165] Memory required for data: 1429955560
I0605 18:41:11.893627  5944 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0605 18:41:11.893651  5944 net.cpp:106] Creating Layer rpn_loss_bbox
I0605 18:41:11.893656  5944 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0605 18:41:11.893661  5944 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0605 18:41:11.893666  5944 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0605 18:41:11.893673  5944 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0605 18:41:11.893678  5944 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0605 18:41:11.894740  5944 net.cpp:150] Setting up rpn_loss_bbox
I0605 18:41:11.894749  5944 net.cpp:157] Top shape: (1)
I0605 18:41:11.894753  5944 net.cpp:160]     with loss weight 1
I0605 18:41:11.894771  5944 net.cpp:165] Memory required for data: 1429955564
I0605 18:41:11.894778  5944 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0605 18:41:11.894788  5944 net.cpp:106] Creating Layer rpn_cls_prob
I0605 18:41:11.894795  5944 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0605 18:41:11.894804  5944 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0605 18:41:11.894978  5944 net.cpp:150] Setting up rpn_cls_prob
I0605 18:41:11.894984  5944 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 18:41:11.894989  5944 net.cpp:165] Memory required for data: 1430242844
I0605 18:41:11.895001  5944 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0605 18:41:11.895012  5944 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0605 18:41:11.895020  5944 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0605 18:41:11.895035  5944 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0605 18:41:11.895059  5944 net.cpp:150] Setting up rpn_cls_prob_reshape
I0605 18:41:11.895066  5944 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 18:41:11.895069  5944 net.cpp:165] Memory required for data: 1430530124
I0605 18:41:11.895073  5944 layer_factory.hpp:77] Creating layer proposal
I0605 18:41:11.895500  5944 net.cpp:106] Creating Layer proposal
I0605 18:41:11.895509  5944 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0605 18:41:11.895514  5944 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0605 18:41:11.895519  5944 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0605 18:41:11.895526  5944 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0605 18:41:11.896355  5944 net.cpp:150] Setting up proposal
I0605 18:41:11.896364  5944 net.cpp:157] Top shape: 1 5 (5)
I0605 18:41:11.896368  5944 net.cpp:165] Memory required for data: 1430530144
I0605 18:41:11.896383  5944 layer_factory.hpp:77] Creating layer roi-data
I0605 18:41:11.896569  5944 net.cpp:106] Creating Layer roi-data
I0605 18:41:11.896575  5944 net.cpp:454] roi-data <- rpn_rois
I0605 18:41:11.896580  5944 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0605 18:41:11.896595  5944 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0605 18:41:11.896600  5944 net.cpp:454] roi-data <- seg_mask_inds
I0605 18:41:11.896605  5944 net.cpp:454] roi-data <- flipped
I0605 18:41:11.896612  5944 net.cpp:411] roi-data -> rois
I0605 18:41:11.896621  5944 net.cpp:411] roi-data -> labels
I0605 18:41:11.896629  5944 net.cpp:411] roi-data -> bbox_targets
I0605 18:41:11.896637  5944 net.cpp:411] roi-data -> bbox_inside_weights
I0605 18:41:11.896644  5944 net.cpp:411] roi-data -> bbox_outside_weights
I0605 18:41:11.896651  5944 net.cpp:411] roi-data -> mask_targets
I0605 18:41:11.896668  5944 net.cpp:411] roi-data -> rois_pos
I0605 18:41:11.896939  5944 net.cpp:150] Setting up roi-data
I0605 18:41:11.896950  5944 net.cpp:157] Top shape: 1 5 (5)
I0605 18:41:11.896955  5944 net.cpp:157] Top shape: 1 1 (1)
I0605 18:41:11.896960  5944 net.cpp:157] Top shape: 1 8 (8)
I0605 18:41:11.896963  5944 net.cpp:157] Top shape: 1 8 (8)
I0605 18:41:11.896971  5944 net.cpp:157] Top shape: 1 8 (8)
I0605 18:41:11.896977  5944 net.cpp:157] Top shape: 1 244 244 (59536)
I0605 18:41:11.896983  5944 net.cpp:157] Top shape: 1 5 (5)
I0605 18:41:11.896986  5944 net.cpp:165] Memory required for data: 1430768428
I0605 18:41:11.896991  5944 layer_factory.hpp:77] Creating layer roi_pool5
I0605 18:41:11.897006  5944 net.cpp:106] Creating Layer roi_pool5
I0605 18:41:11.897011  5944 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0605 18:41:11.897017  5944 net.cpp:454] roi_pool5 <- rois
I0605 18:41:11.897024  5944 net.cpp:411] roi_pool5 -> pool5
I0605 18:41:11.897033  5944 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0605 18:41:11.897104  5944 net.cpp:150] Setting up roi_pool5
I0605 18:41:11.897110  5944 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 18:41:11.897114  5944 net.cpp:165] Memory required for data: 1430868780
I0605 18:41:11.897119  5944 layer_factory.hpp:77] Creating layer fc6
I0605 18:41:11.897130  5944 net.cpp:106] Creating Layer fc6
I0605 18:41:11.897135  5944 net.cpp:454] fc6 <- pool5
I0605 18:41:11.897141  5944 net.cpp:411] fc6 -> fc6
I0605 18:41:12.038738  5944 net.cpp:150] Setting up fc6
I0605 18:41:12.038767  5944 net.cpp:157] Top shape: 1 4096 (4096)
I0605 18:41:12.038771  5944 net.cpp:165] Memory required for data: 1430885164
I0605 18:41:12.038789  5944 layer_factory.hpp:77] Creating layer relu6
I0605 18:41:12.038810  5944 net.cpp:106] Creating Layer relu6
I0605 18:41:12.038817  5944 net.cpp:454] relu6 <- fc6
I0605 18:41:12.038836  5944 net.cpp:397] relu6 -> fc6 (in-place)
I0605 18:41:12.039018  5944 net.cpp:150] Setting up relu6
I0605 18:41:12.039026  5944 net.cpp:157] Top shape: 1 4096 (4096)
I0605 18:41:12.039029  5944 net.cpp:165] Memory required for data: 1430901548
I0605 18:41:12.039032  5944 layer_factory.hpp:77] Creating layer fc7
I0605 18:41:12.039041  5944 net.cpp:106] Creating Layer fc7
I0605 18:41:12.039045  5944 net.cpp:454] fc7 <- fc6
I0605 18:41:12.039052  5944 net.cpp:411] fc7 -> fc7
I0605 18:41:12.062139  5944 net.cpp:150] Setting up fc7
I0605 18:41:12.062163  5944 net.cpp:157] Top shape: 1 4096 (4096)
I0605 18:41:12.062167  5944 net.cpp:165] Memory required for data: 1430917932
I0605 18:41:12.062178  5944 layer_factory.hpp:77] Creating layer relu7
I0605 18:41:12.062188  5944 net.cpp:106] Creating Layer relu7
I0605 18:41:12.062193  5944 net.cpp:454] relu7 <- fc7
I0605 18:41:12.062211  5944 net.cpp:397] relu7 -> fc7 (in-place)
I0605 18:41:12.062412  5944 net.cpp:150] Setting up relu7
I0605 18:41:12.062419  5944 net.cpp:157] Top shape: 1 4096 (4096)
I0605 18:41:12.062422  5944 net.cpp:165] Memory required for data: 1430934316
I0605 18:41:12.062434  5944 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0605 18:41:12.062440  5944 net.cpp:106] Creating Layer fc7_relu7_0_split
I0605 18:41:12.062454  5944 net.cpp:454] fc7_relu7_0_split <- fc7
I0605 18:41:12.062461  5944 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0605 18:41:12.062481  5944 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0605 18:41:12.062546  5944 net.cpp:150] Setting up fc7_relu7_0_split
I0605 18:41:12.062562  5944 net.cpp:157] Top shape: 1 4096 (4096)
I0605 18:41:12.062567  5944 net.cpp:157] Top shape: 1 4096 (4096)
I0605 18:41:12.062579  5944 net.cpp:165] Memory required for data: 1430967084
I0605 18:41:12.062583  5944 layer_factory.hpp:77] Creating layer cls_score
I0605 18:41:12.062603  5944 net.cpp:106] Creating Layer cls_score
I0605 18:41:12.062618  5944 net.cpp:454] cls_score <- fc7_relu7_0_split_0
I0605 18:41:12.062634  5944 net.cpp:411] cls_score -> cls_score
I0605 18:41:12.062883  5944 net.cpp:150] Setting up cls_score
I0605 18:41:12.062891  5944 net.cpp:157] Top shape: 1 2 (2)
I0605 18:41:12.062893  5944 net.cpp:165] Memory required for data: 1430967092
I0605 18:41:12.062911  5944 layer_factory.hpp:77] Creating layer bbox_pred
I0605 18:41:12.062917  5944 net.cpp:106] Creating Layer bbox_pred
I0605 18:41:12.062922  5944 net.cpp:454] bbox_pred <- fc7_relu7_0_split_1
I0605 18:41:12.062927  5944 net.cpp:411] bbox_pred -> bbox_pred
I0605 18:41:12.063661  5944 net.cpp:150] Setting up bbox_pred
I0605 18:41:12.063668  5944 net.cpp:157] Top shape: 1 8 (8)
I0605 18:41:12.063670  5944 net.cpp:165] Memory required for data: 1430967124
I0605 18:41:12.063688  5944 layer_factory.hpp:77] Creating layer loss_cls
I0605 18:41:12.063709  5944 net.cpp:106] Creating Layer loss_cls
I0605 18:41:12.063714  5944 net.cpp:454] loss_cls <- cls_score
I0605 18:41:12.063729  5944 net.cpp:454] loss_cls <- labels
I0605 18:41:12.063733  5944 net.cpp:411] loss_cls -> loss_cls
I0605 18:41:12.063755  5944 layer_factory.hpp:77] Creating layer loss_cls
I0605 18:41:12.064479  5944 net.cpp:150] Setting up loss_cls
I0605 18:41:12.064488  5944 net.cpp:157] Top shape: (1)
I0605 18:41:12.064492  5944 net.cpp:160]     with loss weight 3
I0605 18:41:12.064514  5944 net.cpp:165] Memory required for data: 1430967128
I0605 18:41:12.064530  5944 layer_factory.hpp:77] Creating layer loss_bbox
I0605 18:41:12.064537  5944 net.cpp:106] Creating Layer loss_bbox
I0605 18:41:12.064543  5944 net.cpp:454] loss_bbox <- bbox_pred
I0605 18:41:12.064548  5944 net.cpp:454] loss_bbox <- bbox_targets
I0605 18:41:12.064561  5944 net.cpp:454] loss_bbox <- bbox_inside_weights
I0605 18:41:12.064566  5944 net.cpp:454] loss_bbox <- bbox_outside_weights
I0605 18:41:12.064584  5944 net.cpp:411] loss_bbox -> loss_bbox
I0605 18:41:12.064652  5944 net.cpp:150] Setting up loss_bbox
I0605 18:41:12.064658  5944 net.cpp:157] Top shape: (1)
I0605 18:41:12.064661  5944 net.cpp:160]     with loss weight 2
I0605 18:41:12.064677  5944 net.cpp:165] Memory required for data: 1430967132
I0605 18:41:12.064683  5944 layer_factory.hpp:77] Creating layer roi_pool5_2
I0605 18:41:12.064692  5944 net.cpp:106] Creating Layer roi_pool5_2
I0605 18:41:12.064697  5944 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0605 18:41:12.064702  5944 net.cpp:454] roi_pool5_2 <- rois_pos
I0605 18:41:12.064708  5944 net.cpp:411] roi_pool5_2 -> pool5_2
I0605 18:41:12.064716  5944 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0605 18:41:12.064780  5944 net.cpp:150] Setting up roi_pool5_2
I0605 18:41:12.064785  5944 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 18:41:12.064790  5944 net.cpp:165] Memory required for data: 1431067484
I0605 18:41:12.064793  5944 layer_factory.hpp:77] Creating layer pool5_2_conv
I0605 18:41:12.064805  5944 net.cpp:106] Creating Layer pool5_2_conv
I0605 18:41:12.064810  5944 net.cpp:454] pool5_2_conv <- pool5_2
I0605 18:41:12.064816  5944 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0605 18:41:12.071609  5944 net.cpp:150] Setting up pool5_2_conv
I0605 18:41:12.071622  5944 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 18:41:12.071626  5944 net.cpp:165] Memory required for data: 1431167836
I0605 18:41:12.071637  5944 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0605 18:41:12.071660  5944 net.cpp:106] Creating Layer pool5_2_conv_relu
I0605 18:41:12.071666  5944 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0605 18:41:12.071674  5944 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0605 18:41:12.071820  5944 net.cpp:150] Setting up pool5_2_conv_relu
I0605 18:41:12.071828  5944 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 18:41:12.071832  5944 net.cpp:165] Memory required for data: 1431268188
I0605 18:41:12.071837  5944 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0605 18:41:12.071863  5944 net.cpp:106] Creating Layer pool5_2_conv2
I0605 18:41:12.071868  5944 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0605 18:41:12.071877  5944 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0605 18:41:12.123324  5944 net.cpp:150] Setting up pool5_2_conv2
I0605 18:41:12.123344  5944 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 18:41:12.123348  5944 net.cpp:165] Memory required for data: 1431368540
I0605 18:41:12.123359  5944 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0605 18:41:12.123369  5944 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0605 18:41:12.123387  5944 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0605 18:41:12.123395  5944 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0605 18:41:12.123539  5944 net.cpp:150] Setting up pool5_2_conv2_relu
I0605 18:41:12.123548  5944 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 18:41:12.123551  5944 net.cpp:165] Memory required for data: 1431468892
I0605 18:41:12.123555  5944 layer_factory.hpp:77] Creating layer mask_deconv1
I0605 18:41:12.123565  5944 net.cpp:106] Creating Layer mask_deconv1
I0605 18:41:12.123580  5944 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0605 18:41:12.123587  5944 net.cpp:411] mask_deconv1 -> mask_deconv1
I0605 18:41:12.124377  5944 net.cpp:150] Setting up mask_deconv1
I0605 18:41:12.124384  5944 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0605 18:41:12.124387  5944 net.cpp:165] Memory required for data: 1432390492
I0605 18:41:12.124394  5944 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0605 18:41:12.124405  5944 net.cpp:106] Creating Layer pool5_2_conv3
I0605 18:41:12.124410  5944 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0605 18:41:12.124416  5944 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0605 18:41:12.150661  5944 net.cpp:150] Setting up pool5_2_conv3
I0605 18:41:12.150681  5944 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 18:41:12.150684  5944 net.cpp:165] Memory required for data: 1434233692
I0605 18:41:12.150696  5944 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0605 18:41:12.150717  5944 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0605 18:41:12.150724  5944 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0605 18:41:12.150743  5944 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0605 18:41:12.150933  5944 net.cpp:150] Setting up pool5_2_conv3_relu
I0605 18:41:12.150940  5944 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 18:41:12.150943  5944 net.cpp:165] Memory required for data: 1436076892
I0605 18:41:12.150948  5944 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0605 18:41:12.150960  5944 net.cpp:106] Creating Layer pool5_2_conv4
I0605 18:41:12.150976  5944 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0605 18:41:12.150982  5944 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0605 18:41:12.201050  5944 net.cpp:150] Setting up pool5_2_conv4
I0605 18:41:12.201071  5944 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 18:41:12.201076  5944 net.cpp:165] Memory required for data: 1437920092
I0605 18:41:12.201086  5944 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0605 18:41:12.201105  5944 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0605 18:41:12.201122  5944 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0605 18:41:12.201130  5944 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0605 18:41:12.201313  5944 net.cpp:150] Setting up pool5_2_conv4_relu
I0605 18:41:12.201320  5944 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 18:41:12.201323  5944 net.cpp:165] Memory required for data: 1439763292
I0605 18:41:12.201328  5944 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0605 18:41:12.201336  5944 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0605 18:41:12.201352  5944 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0605 18:41:12.201360  5944 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0605 18:41:12.201370  5944 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0605 18:41:12.201378  5944 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0605 18:41:12.201387  5944 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0605 18:41:12.201479  5944 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0605 18:41:12.201485  5944 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 18:41:12.201490  5944 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 18:41:12.201495  5944 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 18:41:12.201498  5944 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 18:41:12.201503  5944 net.cpp:165] Memory required for data: 1447136092
I0605 18:41:12.201506  5944 layer_factory.hpp:77] Creating layer mask_deconv2
I0605 18:41:12.201519  5944 net.cpp:106] Creating Layer mask_deconv2
I0605 18:41:12.201524  5944 net.cpp:454] mask_deconv2 <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0605 18:41:12.201532  5944 net.cpp:411] mask_deconv2 -> mask_deconv2
I0605 18:41:12.202317  5944 net.cpp:150] Setting up mask_deconv2
I0605 18:41:12.202324  5944 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0605 18:41:12.202327  5944 net.cpp:165] Memory required for data: 1462377308
I0605 18:41:12.202337  5944 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0605 18:41:12.202347  5944 net.cpp:106] Creating Layer pool5_2_conv5
I0605 18:41:12.202353  5944 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0605 18:41:12.202365  5944 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0605 18:41:12.228579  5944 net.cpp:150] Setting up pool5_2_conv5
I0605 18:41:12.228596  5944 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0605 18:41:12.228600  5944 net.cpp:165] Memory required for data: 1492859740
I0605 18:41:12.228610  5944 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0605 18:41:12.228619  5944 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0605 18:41:12.228636  5944 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0605 18:41:12.228647  5944 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0605 18:41:12.228837  5944 net.cpp:150] Setting up pool5_2_conv5_relu
I0605 18:41:12.228845  5944 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0605 18:41:12.228848  5944 net.cpp:165] Memory required for data: 1523342172
I0605 18:41:12.228852  5944 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0605 18:41:12.228864  5944 net.cpp:106] Creating Layer pool5_2_conv6
I0605 18:41:12.228879  5944 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0605 18:41:12.228886  5944 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0605 18:41:12.278494  5944 net.cpp:150] Setting up pool5_2_conv6
I0605 18:41:12.278514  5944 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0605 18:41:12.278518  5944 net.cpp:165] Memory required for data: 1553824604
I0605 18:41:12.278528  5944 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0605 18:41:12.278538  5944 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0605 18:41:12.278558  5944 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0605 18:41:12.278574  5944 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0605 18:41:12.279173  5944 net.cpp:150] Setting up pool5_2_conv6_relu
I0605 18:41:12.279191  5944 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0605 18:41:12.279196  5944 net.cpp:165] Memory required for data: 1584307036
I0605 18:41:12.279201  5944 layer_factory.hpp:77] Creating layer query_conv
I0605 18:41:12.279213  5944 net.cpp:106] Creating Layer query_conv
I0605 18:41:12.279218  5944 net.cpp:454] query_conv <- pool5_2_conv6_relu
I0605 18:41:12.279227  5944 net.cpp:411] query_conv -> query_conv
I0605 18:41:12.280495  5944 net.cpp:150] Setting up query_conv
I0605 18:41:12.280505  5944 net.cpp:157] Top shape: 1 32 122 122 (476288)
I0605 18:41:12.280509  5944 net.cpp:165] Memory required for data: 1586212188
I0605 18:41:12.280517  5944 layer_factory.hpp:77] Creating layer key_conv
I0605 18:41:12.280532  5944 net.cpp:106] Creating Layer key_conv
I0605 18:41:12.280539  5944 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0605 18:41:12.280546  5944 net.cpp:411] key_conv -> key_conv
I0605 18:41:12.281371  5944 net.cpp:150] Setting up key_conv
I0605 18:41:12.281381  5944 net.cpp:157] Top shape: 1 32 30 30 (28800)
I0605 18:41:12.281384  5944 net.cpp:165] Memory required for data: 1586327388
I0605 18:41:12.281394  5944 layer_factory.hpp:77] Creating layer value_conv
I0605 18:41:12.281404  5944 net.cpp:106] Creating Layer value_conv
I0605 18:41:12.281409  5944 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0605 18:41:12.281424  5944 net.cpp:411] value_conv -> value_conv
I0605 18:41:12.285498  5944 net.cpp:150] Setting up value_conv
I0605 18:41:12.285509  5944 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0605 18:41:12.285512  5944 net.cpp:165] Memory required for data: 1587248988
I0605 18:41:12.285529  5944 layer_factory.hpp:77] Creating layer query_conv_reshape
I0605 18:41:12.285557  5944 net.cpp:106] Creating Layer query_conv_reshape
I0605 18:41:12.285571  5944 net.cpp:454] query_conv_reshape <- query_conv
I0605 18:41:12.285589  5944 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0605 18:41:12.285627  5944 net.cpp:150] Setting up query_conv_reshape
I0605 18:41:12.285634  5944 net.cpp:157] Top shape: 1 32 14884 1 (476288)
I0605 18:41:12.285636  5944 net.cpp:165] Memory required for data: 1589154140
I0605 18:41:12.285640  5944 layer_factory.hpp:77] Creating layer key_conv_reshape
I0605 18:41:12.285660  5944 net.cpp:106] Creating Layer key_conv_reshape
I0605 18:41:12.285674  5944 net.cpp:454] key_conv_reshape <- key_conv
I0605 18:41:12.285692  5944 net.cpp:411] key_conv_reshape -> key_conv_reshape
F0605 18:41:12.285715  5944 reshape_layer.cpp:80] Check failed: 0 == bottom[0]->count() % explicit_count (0 vs. 28800) bottom count (28800) must be divisible by the product of the specified dimensions (476288)
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65:  5944 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
