+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-04_17-54-53
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-04_17-54-53
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
29646 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 29646 -> 29646
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0604 17:54:59.393337 24646 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0604 17:54:59.393381 24646 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0604 17:54:59.395866 24646 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "query_conv_reshape_ch"
  type: "Reshape"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv_reshape_ch"
  reshape_param {
    shape {
      dim: 1
      dim: 512
      dim: -1
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape_ch"
  type: "Reshape"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv_reshape_ch"
  reshape_param {
    shape {
      dim: 1
      dim: 512
      dim: -1
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape_ch"
  type: "Reshape"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv_reshape_ch"
  reshape_param {
    shape {
      dim: 1
      dim: 512
      dim: -1
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm_ch"
  type: "Permute"
  bottom: "query_conv_reshape_ch"
  top: "query_conv_reshape_perm_ch"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "key_conv_reshape_perm_ch"
  type: "Permute"
  bottom: "key_conv_reshape_ch"
  top: "key_conv_reshape_perm_ch"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "energy_ch"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm_ch"
  bottom: "key_conv_reshape_perm_ch"
  top: "energy_ch"
}
layer {
  name: "energy_ch_perm"
  type: "Permute"
  bottom: "energy_ch"
  top: "energy_ch_perm"
  permute_param {
    order: 0
    order: 2
    order: 1
    order: 3
  }
}
layer {
  name: "energy_ch_pool"
  type: "Pooling"
  bottom: "energy_ch_perm"
  top: "energy_ch_pool"
  pooling_param {
    pool: MAX
    kernel_h: 1
    kernel_w: 512
    stride_h: 1
    stride_w: 512
  }
}
layer {
  name: "energy_ch_reperm"
  type: "Permute"
  bottom: "energy_ch_pool"
  top: "energy_ch_reperm"
  permute_param {
    order: 0
    order: 2
    order: 1
    order: 3
  }
}
layer {
  name: "energy_ch_max"
  type: "Tile"
  bottom: "energy_ch_reperm"
  top: "energy_ch_max"
  tile_param {
    axis: 3
    tiles: 512
  }
}
layer {
  name: "energy_ch_minus"
  type: "Power"
  bottom: "energy_ch"
  top: "energy_ch_minus"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "energy_new"
  type: "Eltwise"
  bottom: "energy_ch_max"
  bottom: "energy_ch_minus"
  top: "energy_new"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "attention_ch"
  type: "Softmax"
  bottom: "energy_new"
  top: "attention_ch"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_ch_perm"
  type: "Permute"
  bottom: "value_conv_reshape_ch"
  top: "value_conv_reshape_ch_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_ch_perm"
  type: "Permute"
  bottom: "attention_ch"
  top: "attention_ch_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out_ch"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_ch_perm"
  bottom: "attention_ch_perm"
  top: "out_ch"
}
layer {
  name: "out_ch_reshape"
  type: "Reshape"
  bottom: "out_ch"
  top: "out_ch_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_ch_reshape_scale"
  type: "Scale"
  bottom: "out_ch_reshape"
  top: "out_ch_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_ch_x"
  type: "Eltwise"
  bottom: "out_ch_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_ch_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "out_conv_ch_x"
  type: "Convolution"
  bottom: "out_ch_x"
  top: "out_conv_ch_x"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out_conv_x"
  type: "Convolution"
  bottom: "out_x"
  top: "out_conv_x"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out_x_sum"
  type: "Eltwise"
  bottom: "out_conv_x"
  bottom: "out_conv_ch_x"
  top: "out_x_sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x_sum"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0604 17:54:59.396387 24646 layer_factory.hpp:77] Creating layer input-data
I0604 17:54:59.455148 24646 net.cpp:106] Creating Layer input-data
I0604 17:54:59.455164 24646 net.cpp:411] input-data -> data
I0604 17:54:59.455173 24646 net.cpp:411] input-data -> im_info
I0604 17:54:59.455178 24646 net.cpp:411] input-data -> gt_boxes
I0604 17:54:59.455183 24646 net.cpp:411] input-data -> seg_mask_inds
I0604 17:54:59.455186 24646 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0604 17:54:59.465965 24646 net.cpp:150] Setting up input-data
I0604 17:54:59.466001 24646 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0604 17:54:59.466006 24646 net.cpp:157] Top shape: 1 3 (3)
I0604 17:54:59.466008 24646 net.cpp:157] Top shape: 1 4 (4)
I0604 17:54:59.466012 24646 net.cpp:157] Top shape: 1 2 (2)
I0604 17:54:59.466013 24646 net.cpp:157] Top shape: 1 1 (1)
I0604 17:54:59.466015 24646 net.cpp:165] Memory required for data: 7200040
I0604 17:54:59.466022 24646 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0604 17:54:59.466037 24646 net.cpp:106] Creating Layer data_input-data_0_split
I0604 17:54:59.466042 24646 net.cpp:454] data_input-data_0_split <- data
I0604 17:54:59.466048 24646 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0604 17:54:59.466054 24646 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0604 17:54:59.466078 24646 net.cpp:150] Setting up data_input-data_0_split
I0604 17:54:59.466082 24646 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0604 17:54:59.466085 24646 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0604 17:54:59.466089 24646 net.cpp:165] Memory required for data: 21600040
I0604 17:54:59.466090 24646 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0604 17:54:59.466096 24646 net.cpp:106] Creating Layer im_info_input-data_1_split
I0604 17:54:59.466099 24646 net.cpp:454] im_info_input-data_1_split <- im_info
I0604 17:54:59.466104 24646 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0604 17:54:59.466109 24646 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0604 17:54:59.466114 24646 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0604 17:54:59.466147 24646 net.cpp:150] Setting up im_info_input-data_1_split
I0604 17:54:59.466151 24646 net.cpp:157] Top shape: 1 3 (3)
I0604 17:54:59.466154 24646 net.cpp:157] Top shape: 1 3 (3)
I0604 17:54:59.466157 24646 net.cpp:157] Top shape: 1 3 (3)
I0604 17:54:59.466159 24646 net.cpp:165] Memory required for data: 21600076
I0604 17:54:59.466161 24646 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0604 17:54:59.466166 24646 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0604 17:54:59.466171 24646 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0604 17:54:59.466176 24646 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0604 17:54:59.466178 24646 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0604 17:54:59.466199 24646 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0604 17:54:59.466203 24646 net.cpp:157] Top shape: 1 4 (4)
I0604 17:54:59.466207 24646 net.cpp:157] Top shape: 1 4 (4)
I0604 17:54:59.466208 24646 net.cpp:165] Memory required for data: 21600108
I0604 17:54:59.466212 24646 layer_factory.hpp:77] Creating layer conv1_1
I0604 17:54:59.466222 24646 net.cpp:106] Creating Layer conv1_1
I0604 17:54:59.466225 24646 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0604 17:54:59.466231 24646 net.cpp:411] conv1_1 -> conv1_1
I0604 17:55:00.168246 24646 net.cpp:150] Setting up conv1_1
I0604 17:55:00.168267 24646 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0604 17:55:00.168269 24646 net.cpp:165] Memory required for data: 175200108
I0604 17:55:00.168280 24646 layer_factory.hpp:77] Creating layer relu1_1
I0604 17:55:00.168290 24646 net.cpp:106] Creating Layer relu1_1
I0604 17:55:00.168304 24646 net.cpp:454] relu1_1 <- conv1_1
I0604 17:55:00.168308 24646 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0604 17:55:00.168428 24646 net.cpp:150] Setting up relu1_1
I0604 17:55:00.168434 24646 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0604 17:55:00.168437 24646 net.cpp:165] Memory required for data: 328800108
I0604 17:55:00.168439 24646 layer_factory.hpp:77] Creating layer conv1_2
I0604 17:55:00.168447 24646 net.cpp:106] Creating Layer conv1_2
I0604 17:55:00.168449 24646 net.cpp:454] conv1_2 <- conv1_1
I0604 17:55:00.168453 24646 net.cpp:411] conv1_2 -> conv1_2
I0604 17:55:00.170509 24646 net.cpp:150] Setting up conv1_2
I0604 17:55:00.170521 24646 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0604 17:55:00.170523 24646 net.cpp:165] Memory required for data: 482400108
I0604 17:55:00.170531 24646 layer_factory.hpp:77] Creating layer relu1_2
I0604 17:55:00.170536 24646 net.cpp:106] Creating Layer relu1_2
I0604 17:55:00.170538 24646 net.cpp:454] relu1_2 <- conv1_2
I0604 17:55:00.170542 24646 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0604 17:55:00.170662 24646 net.cpp:150] Setting up relu1_2
I0604 17:55:00.170668 24646 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0604 17:55:00.170670 24646 net.cpp:165] Memory required for data: 636000108
I0604 17:55:00.170672 24646 layer_factory.hpp:77] Creating layer pool1
I0604 17:55:00.170678 24646 net.cpp:106] Creating Layer pool1
I0604 17:55:00.170681 24646 net.cpp:454] pool1 <- conv1_2
I0604 17:55:00.170684 24646 net.cpp:411] pool1 -> pool1
I0604 17:55:00.170727 24646 net.cpp:150] Setting up pool1
I0604 17:55:00.170732 24646 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0604 17:55:00.170735 24646 net.cpp:165] Memory required for data: 674400108
I0604 17:55:00.170737 24646 layer_factory.hpp:77] Creating layer conv2_1
I0604 17:55:00.170753 24646 net.cpp:106] Creating Layer conv2_1
I0604 17:55:00.170755 24646 net.cpp:454] conv2_1 <- pool1
I0604 17:55:00.170758 24646 net.cpp:411] conv2_1 -> conv2_1
I0604 17:55:00.172452 24646 net.cpp:150] Setting up conv2_1
I0604 17:55:00.172461 24646 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0604 17:55:00.172464 24646 net.cpp:165] Memory required for data: 751200108
I0604 17:55:00.172479 24646 layer_factory.hpp:77] Creating layer relu2_1
I0604 17:55:00.172502 24646 net.cpp:106] Creating Layer relu2_1
I0604 17:55:00.172515 24646 net.cpp:454] relu2_1 <- conv2_1
I0604 17:55:00.172523 24646 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0604 17:55:00.173019 24646 net.cpp:150] Setting up relu2_1
I0604 17:55:00.173028 24646 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0604 17:55:00.173032 24646 net.cpp:165] Memory required for data: 828000108
I0604 17:55:00.173034 24646 layer_factory.hpp:77] Creating layer conv2_2
I0604 17:55:00.173044 24646 net.cpp:106] Creating Layer conv2_2
I0604 17:55:00.173049 24646 net.cpp:454] conv2_2 <- conv2_1
I0604 17:55:00.173070 24646 net.cpp:411] conv2_2 -> conv2_2
I0604 17:55:00.174412 24646 net.cpp:150] Setting up conv2_2
I0604 17:55:00.174422 24646 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0604 17:55:00.174424 24646 net.cpp:165] Memory required for data: 904800108
I0604 17:55:00.174441 24646 layer_factory.hpp:77] Creating layer relu2_2
I0604 17:55:00.174448 24646 net.cpp:106] Creating Layer relu2_2
I0604 17:55:00.174453 24646 net.cpp:454] relu2_2 <- conv2_2
I0604 17:55:00.174461 24646 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0604 17:55:00.174605 24646 net.cpp:150] Setting up relu2_2
I0604 17:55:00.174613 24646 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0604 17:55:00.174616 24646 net.cpp:165] Memory required for data: 981600108
I0604 17:55:00.174620 24646 layer_factory.hpp:77] Creating layer pool2
I0604 17:55:00.174628 24646 net.cpp:106] Creating Layer pool2
I0604 17:55:00.174633 24646 net.cpp:454] pool2 <- conv2_2
I0604 17:55:00.174638 24646 net.cpp:411] pool2 -> pool2
I0604 17:55:00.174693 24646 net.cpp:150] Setting up pool2
I0604 17:55:00.174700 24646 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0604 17:55:00.174711 24646 net.cpp:165] Memory required for data: 1000800108
I0604 17:55:00.174715 24646 layer_factory.hpp:77] Creating layer conv3_1
I0604 17:55:00.174721 24646 net.cpp:106] Creating Layer conv3_1
I0604 17:55:00.174723 24646 net.cpp:454] conv3_1 <- pool2
I0604 17:55:00.174729 24646 net.cpp:411] conv3_1 -> conv3_1
I0604 17:55:00.176609 24646 net.cpp:150] Setting up conv3_1
I0604 17:55:00.176630 24646 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:55:00.176633 24646 net.cpp:165] Memory required for data: 1039200108
I0604 17:55:00.176641 24646 layer_factory.hpp:77] Creating layer relu3_1
I0604 17:55:00.176646 24646 net.cpp:106] Creating Layer relu3_1
I0604 17:55:00.176659 24646 net.cpp:454] relu3_1 <- conv3_1
I0604 17:55:00.176663 24646 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0604 17:55:00.176797 24646 net.cpp:150] Setting up relu3_1
I0604 17:55:00.176802 24646 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:55:00.176815 24646 net.cpp:165] Memory required for data: 1077600108
I0604 17:55:00.176817 24646 layer_factory.hpp:77] Creating layer conv3_2
I0604 17:55:00.176826 24646 net.cpp:106] Creating Layer conv3_2
I0604 17:55:00.176839 24646 net.cpp:454] conv3_2 <- conv3_1
I0604 17:55:00.176844 24646 net.cpp:411] conv3_2 -> conv3_2
I0604 17:55:00.179123 24646 net.cpp:150] Setting up conv3_2
I0604 17:55:00.179145 24646 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:55:00.179147 24646 net.cpp:165] Memory required for data: 1116000108
I0604 17:55:00.179153 24646 layer_factory.hpp:77] Creating layer relu3_2
I0604 17:55:00.179158 24646 net.cpp:106] Creating Layer relu3_2
I0604 17:55:00.179162 24646 net.cpp:454] relu3_2 <- conv3_2
I0604 17:55:00.179177 24646 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0604 17:55:00.179309 24646 net.cpp:150] Setting up relu3_2
I0604 17:55:00.179316 24646 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:55:00.179327 24646 net.cpp:165] Memory required for data: 1154400108
I0604 17:55:00.179330 24646 layer_factory.hpp:77] Creating layer conv3_3
I0604 17:55:00.179337 24646 net.cpp:106] Creating Layer conv3_3
I0604 17:55:00.179339 24646 net.cpp:454] conv3_3 <- conv3_2
I0604 17:55:00.179353 24646 net.cpp:411] conv3_3 -> conv3_3
I0604 17:55:00.181371 24646 net.cpp:150] Setting up conv3_3
I0604 17:55:00.181391 24646 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:55:00.181394 24646 net.cpp:165] Memory required for data: 1192800108
I0604 17:55:00.181399 24646 layer_factory.hpp:77] Creating layer relu3_3
I0604 17:55:00.181406 24646 net.cpp:106] Creating Layer relu3_3
I0604 17:55:00.181408 24646 net.cpp:454] relu3_3 <- conv3_3
I0604 17:55:00.181437 24646 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0604 17:55:00.181563 24646 net.cpp:150] Setting up relu3_3
I0604 17:55:00.181569 24646 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:55:00.181581 24646 net.cpp:165] Memory required for data: 1231200108
I0604 17:55:00.181583 24646 layer_factory.hpp:77] Creating layer pool3
I0604 17:55:00.181589 24646 net.cpp:106] Creating Layer pool3
I0604 17:55:00.181592 24646 net.cpp:454] pool3 <- conv3_3
I0604 17:55:00.181597 24646 net.cpp:411] pool3 -> pool3
I0604 17:55:00.181632 24646 net.cpp:150] Setting up pool3
I0604 17:55:00.181638 24646 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0604 17:55:00.181639 24646 net.cpp:165] Memory required for data: 1240800108
I0604 17:55:00.181641 24646 layer_factory.hpp:77] Creating layer conv4_1
I0604 17:55:00.181653 24646 net.cpp:106] Creating Layer conv4_1
I0604 17:55:00.181658 24646 net.cpp:454] conv4_1 <- pool3
I0604 17:55:00.181661 24646 net.cpp:411] conv4_1 -> conv4_1
I0604 17:55:00.185567 24646 net.cpp:150] Setting up conv4_1
I0604 17:55:00.185585 24646 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:55:00.185587 24646 net.cpp:165] Memory required for data: 1260000108
I0604 17:55:00.185595 24646 layer_factory.hpp:77] Creating layer relu4_1
I0604 17:55:00.185603 24646 net.cpp:106] Creating Layer relu4_1
I0604 17:55:00.185618 24646 net.cpp:454] relu4_1 <- conv4_1
I0604 17:55:00.185622 24646 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0604 17:55:00.185771 24646 net.cpp:150] Setting up relu4_1
I0604 17:55:00.185777 24646 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:55:00.185780 24646 net.cpp:165] Memory required for data: 1279200108
I0604 17:55:00.185782 24646 layer_factory.hpp:77] Creating layer conv4_2
I0604 17:55:00.185789 24646 net.cpp:106] Creating Layer conv4_2
I0604 17:55:00.185792 24646 net.cpp:454] conv4_2 <- conv4_1
I0604 17:55:00.185797 24646 net.cpp:411] conv4_2 -> conv4_2
I0604 17:55:00.190505 24646 net.cpp:150] Setting up conv4_2
I0604 17:55:00.190533 24646 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:55:00.190536 24646 net.cpp:165] Memory required for data: 1298400108
I0604 17:55:00.190557 24646 layer_factory.hpp:77] Creating layer relu4_2
I0604 17:55:00.190565 24646 net.cpp:106] Creating Layer relu4_2
I0604 17:55:00.190569 24646 net.cpp:454] relu4_2 <- conv4_2
I0604 17:55:00.190574 24646 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0604 17:55:00.191124 24646 net.cpp:150] Setting up relu4_2
I0604 17:55:00.191133 24646 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:55:00.191135 24646 net.cpp:165] Memory required for data: 1317600108
I0604 17:55:00.191138 24646 layer_factory.hpp:77] Creating layer conv4_3
I0604 17:55:00.191148 24646 net.cpp:106] Creating Layer conv4_3
I0604 17:55:00.191150 24646 net.cpp:454] conv4_3 <- conv4_2
I0604 17:55:00.191164 24646 net.cpp:411] conv4_3 -> conv4_3
I0604 17:55:00.195827 24646 net.cpp:150] Setting up conv4_3
I0604 17:55:00.195845 24646 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:55:00.195848 24646 net.cpp:165] Memory required for data: 1336800108
I0604 17:55:00.195855 24646 layer_factory.hpp:77] Creating layer relu4_3
I0604 17:55:00.195863 24646 net.cpp:106] Creating Layer relu4_3
I0604 17:55:00.195878 24646 net.cpp:454] relu4_3 <- conv4_3
I0604 17:55:00.195883 24646 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0604 17:55:00.196027 24646 net.cpp:150] Setting up relu4_3
I0604 17:55:00.196033 24646 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:55:00.196046 24646 net.cpp:165] Memory required for data: 1356000108
I0604 17:55:00.196048 24646 layer_factory.hpp:77] Creating layer pool4
I0604 17:55:00.196054 24646 net.cpp:106] Creating Layer pool4
I0604 17:55:00.196058 24646 net.cpp:454] pool4 <- conv4_3
I0604 17:55:00.196064 24646 net.cpp:411] pool4 -> pool4
I0604 17:55:00.196120 24646 net.cpp:150] Setting up pool4
I0604 17:55:00.196123 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.196135 24646 net.cpp:165] Memory required for data: 1360903020
I0604 17:55:00.196137 24646 layer_factory.hpp:77] Creating layer conv5_1
I0604 17:55:00.196156 24646 net.cpp:106] Creating Layer conv5_1
I0604 17:55:00.196162 24646 net.cpp:454] conv5_1 <- pool4
I0604 17:55:00.196177 24646 net.cpp:411] conv5_1 -> conv5_1
I0604 17:55:00.200415 24646 net.cpp:150] Setting up conv5_1
I0604 17:55:00.200435 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.200438 24646 net.cpp:165] Memory required for data: 1365805932
I0604 17:55:00.200444 24646 layer_factory.hpp:77] Creating layer relu5_1
I0604 17:55:00.200453 24646 net.cpp:106] Creating Layer relu5_1
I0604 17:55:00.200459 24646 net.cpp:454] relu5_1 <- conv5_1
I0604 17:55:00.200465 24646 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0604 17:55:00.200629 24646 net.cpp:150] Setting up relu5_1
I0604 17:55:00.200635 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.200637 24646 net.cpp:165] Memory required for data: 1370708844
I0604 17:55:00.200640 24646 layer_factory.hpp:77] Creating layer conv5_2
I0604 17:55:00.200647 24646 net.cpp:106] Creating Layer conv5_2
I0604 17:55:00.200649 24646 net.cpp:454] conv5_2 <- conv5_1
I0604 17:55:00.200654 24646 net.cpp:411] conv5_2 -> conv5_2
I0604 17:55:00.205030 24646 net.cpp:150] Setting up conv5_2
I0604 17:55:00.205049 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.205051 24646 net.cpp:165] Memory required for data: 1375611756
I0604 17:55:00.205057 24646 layer_factory.hpp:77] Creating layer relu5_2
I0604 17:55:00.205066 24646 net.cpp:106] Creating Layer relu5_2
I0604 17:55:00.205071 24646 net.cpp:454] relu5_2 <- conv5_2
I0604 17:55:00.205080 24646 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0604 17:55:00.205242 24646 net.cpp:150] Setting up relu5_2
I0604 17:55:00.205248 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.205250 24646 net.cpp:165] Memory required for data: 1380514668
I0604 17:55:00.205253 24646 layer_factory.hpp:77] Creating layer conv5_3
I0604 17:55:00.205263 24646 net.cpp:106] Creating Layer conv5_3
I0604 17:55:00.205277 24646 net.cpp:454] conv5_3 <- conv5_2
I0604 17:55:00.205282 24646 net.cpp:411] conv5_3 -> conv5_3
I0604 17:55:00.209746 24646 net.cpp:150] Setting up conv5_3
I0604 17:55:00.209766 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.209769 24646 net.cpp:165] Memory required for data: 1385417580
I0604 17:55:00.209777 24646 layer_factory.hpp:77] Creating layer relu5_3
I0604 17:55:00.209790 24646 net.cpp:106] Creating Layer relu5_3
I0604 17:55:00.209798 24646 net.cpp:454] relu5_3 <- conv5_3
I0604 17:55:00.209806 24646 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0604 17:55:00.209980 24646 net.cpp:150] Setting up relu5_3
I0604 17:55:00.209988 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.209991 24646 net.cpp:165] Memory required for data: 1390320492
I0604 17:55:00.210005 24646 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0604 17:55:00.210011 24646 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0604 17:55:00.210026 24646 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0604 17:55:00.210032 24646 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0604 17:55:00.210039 24646 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0604 17:55:00.210047 24646 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0604 17:55:00.210117 24646 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0604 17:55:00.210124 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.210129 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.210142 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.210147 24646 net.cpp:165] Memory required for data: 1405029228
I0604 17:55:00.210150 24646 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0604 17:55:00.210167 24646 net.cpp:106] Creating Layer rpn_conv/3x3
I0604 17:55:00.210171 24646 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0604 17:55:00.210178 24646 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0604 17:55:00.263368 24646 net.cpp:150] Setting up rpn_conv/3x3
I0604 17:55:00.263386 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.263391 24646 net.cpp:165] Memory required for data: 1409932140
I0604 17:55:00.263409 24646 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0604 17:55:00.263430 24646 net.cpp:106] Creating Layer rpn_relu/3x3
I0604 17:55:00.263447 24646 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0604 17:55:00.263465 24646 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0604 17:55:00.263623 24646 net.cpp:150] Setting up rpn_relu/3x3
I0604 17:55:00.263631 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.263635 24646 net.cpp:165] Memory required for data: 1414835052
I0604 17:55:00.263639 24646 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0604 17:55:00.263654 24646 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0604 17:55:00.263659 24646 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0604 17:55:00.263664 24646 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0604 17:55:00.263671 24646 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0604 17:55:00.263711 24646 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0604 17:55:00.263720 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.263727 24646 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:55:00.263731 24646 net.cpp:165] Memory required for data: 1424640876
I0604 17:55:00.263736 24646 layer_factory.hpp:77] Creating layer rpn_cls_score
I0604 17:55:00.263756 24646 net.cpp:106] Creating Layer rpn_cls_score
I0604 17:55:00.263768 24646 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0604 17:55:00.263772 24646 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0604 17:55:00.265642 24646 net.cpp:150] Setting up rpn_cls_score
I0604 17:55:00.265666 24646 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0604 17:55:00.265667 24646 net.cpp:165] Memory required for data: 1424928156
I0604 17:55:00.265674 24646 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0604 17:55:00.265681 24646 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0604 17:55:00.265686 24646 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0604 17:55:00.265692 24646 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0604 17:55:00.265702 24646 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0604 17:55:00.265731 24646 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0604 17:55:00.265743 24646 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0604 17:55:00.265746 24646 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0604 17:55:00.265748 24646 net.cpp:165] Memory required for data: 1425502716
I0604 17:55:00.265753 24646 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0604 17:55:00.265761 24646 net.cpp:106] Creating Layer rpn_bbox_pred
I0604 17:55:00.265764 24646 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0604 17:55:00.265771 24646 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0604 17:55:00.268759 24646 net.cpp:150] Setting up rpn_bbox_pred
I0604 17:55:00.268769 24646 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:55:00.268771 24646 net.cpp:165] Memory required for data: 1426077276
I0604 17:55:00.268793 24646 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0604 17:55:00.268800 24646 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0604 17:55:00.268803 24646 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0604 17:55:00.268811 24646 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0604 17:55:00.268822 24646 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0604 17:55:00.268889 24646 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0604 17:55:00.268894 24646 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:55:00.268898 24646 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:55:00.268899 24646 net.cpp:165] Memory required for data: 1427226396
I0604 17:55:00.268901 24646 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0604 17:55:00.268923 24646 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0604 17:55:00.268927 24646 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0604 17:55:00.268932 24646 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0604 17:55:00.268968 24646 net.cpp:150] Setting up rpn_cls_score_reshape
I0604 17:55:00.268973 24646 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0604 17:55:00.268975 24646 net.cpp:165] Memory required for data: 1427513676
I0604 17:55:00.268977 24646 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0604 17:55:00.268992 24646 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0604 17:55:00.268996 24646 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0604 17:55:00.269008 24646 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0604 17:55:00.269013 24646 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0604 17:55:00.269037 24646 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0604 17:55:00.269042 24646 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0604 17:55:00.269043 24646 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0604 17:55:00.269047 24646 net.cpp:165] Memory required for data: 1428088236
I0604 17:55:00.269049 24646 layer_factory.hpp:77] Creating layer rpn-data
I0604 17:55:00.269389 24646 net.cpp:106] Creating Layer rpn-data
I0604 17:55:00.269397 24646 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0604 17:55:00.269405 24646 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0604 17:55:00.269429 24646 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0604 17:55:00.269433 24646 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0604 17:55:00.269441 24646 net.cpp:411] rpn-data -> rpn_labels
I0604 17:55:00.269450 24646 net.cpp:411] rpn-data -> rpn_bbox_targets
I0604 17:55:00.269456 24646 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0604 17:55:00.269462 24646 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0604 17:55:00.270377 24646 net.cpp:150] Setting up rpn-data
I0604 17:55:00.270386 24646 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0604 17:55:00.270401 24646 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:55:00.270403 24646 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:55:00.270406 24646 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:55:00.270409 24646 net.cpp:165] Memory required for data: 1429955556
I0604 17:55:00.270412 24646 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0604 17:55:00.270419 24646 net.cpp:106] Creating Layer rpn_loss_cls
I0604 17:55:00.270422 24646 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0604 17:55:00.270426 24646 net.cpp:454] rpn_loss_cls <- rpn_labels
I0604 17:55:00.270431 24646 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0604 17:55:00.270442 24646 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0604 17:55:00.272472 24646 net.cpp:150] Setting up rpn_loss_cls
I0604 17:55:00.272482 24646 net.cpp:157] Top shape: (1)
I0604 17:55:00.272485 24646 net.cpp:160]     with loss weight 1
I0604 17:55:00.272493 24646 net.cpp:165] Memory required for data: 1429955560
I0604 17:55:00.272496 24646 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0604 17:55:00.272508 24646 net.cpp:106] Creating Layer rpn_loss_bbox
I0604 17:55:00.272512 24646 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0604 17:55:00.272516 24646 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0604 17:55:00.272519 24646 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0604 17:55:00.272522 24646 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0604 17:55:00.272527 24646 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0604 17:55:00.273749 24646 net.cpp:150] Setting up rpn_loss_bbox
I0604 17:55:00.273768 24646 net.cpp:157] Top shape: (1)
I0604 17:55:00.273771 24646 net.cpp:160]     with loss weight 1
I0604 17:55:00.273788 24646 net.cpp:165] Memory required for data: 1429955564
I0604 17:55:00.273790 24646 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0604 17:55:00.273795 24646 net.cpp:106] Creating Layer rpn_cls_prob
I0604 17:55:00.273808 24646 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0604 17:55:00.273813 24646 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0604 17:55:00.274025 24646 net.cpp:150] Setting up rpn_cls_prob
I0604 17:55:00.274032 24646 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0604 17:55:00.274044 24646 net.cpp:165] Memory required for data: 1430242844
I0604 17:55:00.274047 24646 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0604 17:55:00.274063 24646 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0604 17:55:00.274067 24646 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0604 17:55:00.274071 24646 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0604 17:55:00.274101 24646 net.cpp:150] Setting up rpn_cls_prob_reshape
I0604 17:55:00.274104 24646 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0604 17:55:00.274106 24646 net.cpp:165] Memory required for data: 1430530124
I0604 17:55:00.274109 24646 layer_factory.hpp:77] Creating layer proposal
I0604 17:55:00.274690 24646 net.cpp:106] Creating Layer proposal
I0604 17:55:00.274698 24646 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0604 17:55:00.274713 24646 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0604 17:55:00.274715 24646 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0604 17:55:00.274719 24646 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0604 17:55:00.275766 24646 net.cpp:150] Setting up proposal
I0604 17:55:00.275775 24646 net.cpp:157] Top shape: 1 5 (5)
I0604 17:55:00.275777 24646 net.cpp:165] Memory required for data: 1430530144
I0604 17:55:00.275780 24646 layer_factory.hpp:77] Creating layer roi-data
I0604 17:55:00.275995 24646 net.cpp:106] Creating Layer roi-data
I0604 17:55:00.276002 24646 net.cpp:454] roi-data <- rpn_rois
I0604 17:55:00.276015 24646 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0604 17:55:00.276019 24646 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0604 17:55:00.276022 24646 net.cpp:454] roi-data <- seg_mask_inds
I0604 17:55:00.276024 24646 net.cpp:454] roi-data <- flipped
I0604 17:55:00.276038 24646 net.cpp:411] roi-data -> rois
I0604 17:55:00.276044 24646 net.cpp:411] roi-data -> labels
I0604 17:55:00.276051 24646 net.cpp:411] roi-data -> bbox_targets
I0604 17:55:00.276054 24646 net.cpp:411] roi-data -> bbox_inside_weights
I0604 17:55:00.276058 24646 net.cpp:411] roi-data -> bbox_outside_weights
I0604 17:55:00.276063 24646 net.cpp:411] roi-data -> mask_targets
I0604 17:55:00.276067 24646 net.cpp:411] roi-data -> rois_pos
I0604 17:55:00.276374 24646 net.cpp:150] Setting up roi-data
I0604 17:55:00.276382 24646 net.cpp:157] Top shape: 1 5 (5)
I0604 17:55:00.276386 24646 net.cpp:157] Top shape: 1 1 (1)
I0604 17:55:00.276387 24646 net.cpp:157] Top shape: 1 8 (8)
I0604 17:55:00.276392 24646 net.cpp:157] Top shape: 1 8 (8)
I0604 17:55:00.276397 24646 net.cpp:157] Top shape: 1 8 (8)
I0604 17:55:00.276405 24646 net.cpp:157] Top shape: 1 244 244 (59536)
I0604 17:55:00.276412 24646 net.cpp:157] Top shape: 1 5 (5)
I0604 17:55:00.276417 24646 net.cpp:165] Memory required for data: 1430768428
I0604 17:55:00.276434 24646 layer_factory.hpp:77] Creating layer roi_pool5
I0604 17:55:00.276450 24646 net.cpp:106] Creating Layer roi_pool5
I0604 17:55:00.276456 24646 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0604 17:55:00.276476 24646 net.cpp:454] roi_pool5 <- rois
I0604 17:55:00.276484 24646 net.cpp:411] roi_pool5 -> pool5
I0604 17:55:00.276494 24646 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0604 17:55:00.276579 24646 net.cpp:150] Setting up roi_pool5
I0604 17:55:00.276584 24646 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:55:00.276588 24646 net.cpp:165] Memory required for data: 1430868780
I0604 17:55:00.276592 24646 layer_factory.hpp:77] Creating layer fc6
I0604 17:55:00.276616 24646 net.cpp:106] Creating Layer fc6
I0604 17:55:00.276620 24646 net.cpp:454] fc6 <- pool5
I0604 17:55:00.276626 24646 net.cpp:411] fc6 -> fc6
I0604 17:55:00.449224 24646 net.cpp:150] Setting up fc6
I0604 17:55:00.449255 24646 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:55:00.449259 24646 net.cpp:165] Memory required for data: 1430885164
I0604 17:55:00.449283 24646 layer_factory.hpp:77] Creating layer relu6
I0604 17:55:00.449291 24646 net.cpp:106] Creating Layer relu6
I0604 17:55:00.449296 24646 net.cpp:454] relu6 <- fc6
I0604 17:55:00.449302 24646 net.cpp:397] relu6 -> fc6 (in-place)
I0604 17:55:00.449515 24646 net.cpp:150] Setting up relu6
I0604 17:55:00.449522 24646 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:55:00.449533 24646 net.cpp:165] Memory required for data: 1430901548
I0604 17:55:00.449537 24646 layer_factory.hpp:77] Creating layer fc7
I0604 17:55:00.449553 24646 net.cpp:106] Creating Layer fc7
I0604 17:55:00.449556 24646 net.cpp:454] fc7 <- fc6
I0604 17:55:00.449560 24646 net.cpp:411] fc7 -> fc7
I0604 17:55:00.474725 24646 net.cpp:150] Setting up fc7
I0604 17:55:00.474756 24646 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:55:00.474759 24646 net.cpp:165] Memory required for data: 1430917932
I0604 17:55:00.474767 24646 layer_factory.hpp:77] Creating layer relu7
I0604 17:55:00.474788 24646 net.cpp:106] Creating Layer relu7
I0604 17:55:00.474793 24646 net.cpp:454] relu7 <- fc7
I0604 17:55:00.474798 24646 net.cpp:397] relu7 -> fc7 (in-place)
I0604 17:55:00.475001 24646 net.cpp:150] Setting up relu7
I0604 17:55:00.475008 24646 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:55:00.475009 24646 net.cpp:165] Memory required for data: 1430934316
I0604 17:55:00.475011 24646 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0604 17:55:00.475016 24646 net.cpp:106] Creating Layer fc7_relu7_0_split
I0604 17:55:00.475018 24646 net.cpp:454] fc7_relu7_0_split <- fc7
I0604 17:55:00.475023 24646 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0604 17:55:00.475037 24646 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0604 17:55:00.475101 24646 net.cpp:150] Setting up fc7_relu7_0_split
I0604 17:55:00.475106 24646 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:55:00.475118 24646 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:55:00.475121 24646 net.cpp:165] Memory required for data: 1430967084
I0604 17:55:00.475122 24646 layer_factory.hpp:77] Creating layer cls_score
I0604 17:55:00.475139 24646 net.cpp:106] Creating Layer cls_score
I0604 17:55:00.475142 24646 net.cpp:454] cls_score <- fc7_relu7_0_split_0
I0604 17:55:00.475157 24646 net.cpp:411] cls_score -> cls_score
I0604 17:55:00.475415 24646 net.cpp:150] Setting up cls_score
I0604 17:55:00.475419 24646 net.cpp:157] Top shape: 1 2 (2)
I0604 17:55:00.475421 24646 net.cpp:165] Memory required for data: 1430967092
I0604 17:55:00.475425 24646 layer_factory.hpp:77] Creating layer bbox_pred
I0604 17:55:00.475430 24646 net.cpp:106] Creating Layer bbox_pred
I0604 17:55:00.475432 24646 net.cpp:454] bbox_pred <- fc7_relu7_0_split_1
I0604 17:55:00.475435 24646 net.cpp:411] bbox_pred -> bbox_pred
I0604 17:55:00.476225 24646 net.cpp:150] Setting up bbox_pred
I0604 17:55:00.476229 24646 net.cpp:157] Top shape: 1 8 (8)
I0604 17:55:00.476231 24646 net.cpp:165] Memory required for data: 1430967124
I0604 17:55:00.476235 24646 layer_factory.hpp:77] Creating layer loss_cls
I0604 17:55:00.476239 24646 net.cpp:106] Creating Layer loss_cls
I0604 17:55:00.476243 24646 net.cpp:454] loss_cls <- cls_score
I0604 17:55:00.476245 24646 net.cpp:454] loss_cls <- labels
I0604 17:55:00.476260 24646 net.cpp:411] loss_cls -> loss_cls
I0604 17:55:00.476269 24646 layer_factory.hpp:77] Creating layer loss_cls
I0604 17:55:00.477005 24646 net.cpp:150] Setting up loss_cls
I0604 17:55:00.477012 24646 net.cpp:157] Top shape: (1)
I0604 17:55:00.477015 24646 net.cpp:160]     with loss weight 3
I0604 17:55:00.477022 24646 net.cpp:165] Memory required for data: 1430967128
I0604 17:55:00.477025 24646 layer_factory.hpp:77] Creating layer loss_bbox
I0604 17:55:00.477041 24646 net.cpp:106] Creating Layer loss_bbox
I0604 17:55:00.477044 24646 net.cpp:454] loss_bbox <- bbox_pred
I0604 17:55:00.477047 24646 net.cpp:454] loss_bbox <- bbox_targets
I0604 17:55:00.477062 24646 net.cpp:454] loss_bbox <- bbox_inside_weights
I0604 17:55:00.477066 24646 net.cpp:454] loss_bbox <- bbox_outside_weights
I0604 17:55:00.477072 24646 net.cpp:411] loss_bbox -> loss_bbox
I0604 17:55:00.477176 24646 net.cpp:150] Setting up loss_bbox
I0604 17:55:00.477181 24646 net.cpp:157] Top shape: (1)
I0604 17:55:00.477183 24646 net.cpp:160]     with loss weight 2
I0604 17:55:00.477197 24646 net.cpp:165] Memory required for data: 1430967132
I0604 17:55:00.477200 24646 layer_factory.hpp:77] Creating layer roi_pool5_2
I0604 17:55:00.477205 24646 net.cpp:106] Creating Layer roi_pool5_2
I0604 17:55:00.477210 24646 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0604 17:55:00.477213 24646 net.cpp:454] roi_pool5_2 <- rois_pos
I0604 17:55:00.477218 24646 net.cpp:411] roi_pool5_2 -> pool5_2
I0604 17:55:00.477224 24646 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0604 17:55:00.477288 24646 net.cpp:150] Setting up roi_pool5_2
I0604 17:55:00.477293 24646 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:55:00.477295 24646 net.cpp:165] Memory required for data: 1431067484
I0604 17:55:00.477298 24646 layer_factory.hpp:77] Creating layer pool5_2_conv
I0604 17:55:00.477305 24646 net.cpp:106] Creating Layer pool5_2_conv
I0604 17:55:00.477309 24646 net.cpp:454] pool5_2_conv <- pool5_2
I0604 17:55:00.477314 24646 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0604 17:55:00.484849 24646 net.cpp:150] Setting up pool5_2_conv
I0604 17:55:00.484871 24646 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:55:00.484874 24646 net.cpp:165] Memory required for data: 1431167836
I0604 17:55:00.484879 24646 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0604 17:55:00.484885 24646 net.cpp:106] Creating Layer pool5_2_conv_relu
I0604 17:55:00.484899 24646 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0604 17:55:00.484905 24646 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0604 17:55:00.485062 24646 net.cpp:150] Setting up pool5_2_conv_relu
I0604 17:55:00.485069 24646 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:55:00.485081 24646 net.cpp:165] Memory required for data: 1431268188
I0604 17:55:00.485083 24646 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0604 17:55:00.485110 24646 net.cpp:106] Creating Layer pool5_2_conv2
I0604 17:55:00.485123 24646 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0604 17:55:00.485127 24646 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0604 17:55:00.537259 24646 net.cpp:150] Setting up pool5_2_conv2
I0604 17:55:00.537276 24646 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:55:00.537279 24646 net.cpp:165] Memory required for data: 1431368540
I0604 17:55:00.537287 24646 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0604 17:55:00.537297 24646 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0604 17:55:00.537314 24646 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0604 17:55:00.537323 24646 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0604 17:55:00.537530 24646 net.cpp:150] Setting up pool5_2_conv2_relu
I0604 17:55:00.537539 24646 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:55:00.537540 24646 net.cpp:165] Memory required for data: 1431468892
I0604 17:55:00.537544 24646 layer_factory.hpp:77] Creating layer mask_deconv1
I0604 17:55:00.537550 24646 net.cpp:106] Creating Layer mask_deconv1
I0604 17:55:00.537554 24646 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0604 17:55:00.537560 24646 net.cpp:411] mask_deconv1 -> mask_deconv1
I0604 17:55:00.538372 24646 net.cpp:150] Setting up mask_deconv1
I0604 17:55:00.538379 24646 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0604 17:55:00.538381 24646 net.cpp:165] Memory required for data: 1432390492
I0604 17:55:00.538385 24646 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0604 17:55:00.538393 24646 net.cpp:106] Creating Layer pool5_2_conv3
I0604 17:55:00.538395 24646 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0604 17:55:00.538403 24646 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0604 17:55:00.565189 24646 net.cpp:150] Setting up pool5_2_conv3
I0604 17:55:00.565207 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.565209 24646 net.cpp:165] Memory required for data: 1434233692
I0604 17:55:00.565217 24646 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0604 17:55:00.565223 24646 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0604 17:55:00.565238 24646 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0604 17:55:00.565243 24646 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0604 17:55:00.565407 24646 net.cpp:150] Setting up pool5_2_conv3_relu
I0604 17:55:00.565433 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.565445 24646 net.cpp:165] Memory required for data: 1436076892
I0604 17:55:00.565448 24646 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0604 17:55:00.565469 24646 net.cpp:106] Creating Layer pool5_2_conv4
I0604 17:55:00.565474 24646 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0604 17:55:00.565488 24646 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0604 17:55:00.616206 24646 net.cpp:150] Setting up pool5_2_conv4
I0604 17:55:00.616225 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616226 24646 net.cpp:165] Memory required for data: 1437920092
I0604 17:55:00.616233 24646 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0604 17:55:00.616241 24646 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0604 17:55:00.616247 24646 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0604 17:55:00.616266 24646 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0604 17:55:00.616405 24646 net.cpp:150] Setting up pool5_2_conv4_relu
I0604 17:55:00.616410 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616412 24646 net.cpp:165] Memory required for data: 1439763292
I0604 17:55:00.616415 24646 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0604 17:55:00.616420 24646 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0604 17:55:00.616423 24646 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0604 17:55:00.616426 24646 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0604 17:55:00.616433 24646 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0604 17:55:00.616451 24646 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0604 17:55:00.616457 24646 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0604 17:55:00.616462 24646 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_4
I0604 17:55:00.616469 24646 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_5
I0604 17:55:00.616474 24646 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_6
I0604 17:55:00.616478 24646 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_7
I0604 17:55:00.616559 24646 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0604 17:55:00.616564 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616566 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616569 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616571 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616573 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616575 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616578 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616581 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.616585 24646 net.cpp:165] Memory required for data: 1454508892
I0604 17:55:00.616587 24646 layer_factory.hpp:77] Creating layer query_conv
I0604 17:55:00.616608 24646 net.cpp:106] Creating Layer query_conv
I0604 17:55:00.616611 24646 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0604 17:55:00.616616 24646 net.cpp:411] query_conv -> query_conv
I0604 17:55:00.618162 24646 net.cpp:150] Setting up query_conv
I0604 17:55:00.618170 24646 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0604 17:55:00.618172 24646 net.cpp:165] Memory required for data: 1454739292
I0604 17:55:00.618176 24646 layer_factory.hpp:77] Creating layer key_conv
I0604 17:55:00.618185 24646 net.cpp:106] Creating Layer key_conv
I0604 17:55:00.618187 24646 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0604 17:55:00.618203 24646 net.cpp:411] key_conv -> key_conv
I0604 17:55:00.619743 24646 net.cpp:150] Setting up key_conv
I0604 17:55:00.619751 24646 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0604 17:55:00.619753 24646 net.cpp:165] Memory required for data: 1454969692
I0604 17:55:00.619757 24646 layer_factory.hpp:77] Creating layer value_conv
I0604 17:55:00.619765 24646 net.cpp:106] Creating Layer value_conv
I0604 17:55:00.619768 24646 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0604 17:55:00.619783 24646 net.cpp:411] value_conv -> value_conv
I0604 17:55:00.626252 24646 net.cpp:150] Setting up value_conv
I0604 17:55:00.626261 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.626263 24646 net.cpp:165] Memory required for data: 1456812892
I0604 17:55:00.626268 24646 layer_factory.hpp:77] Creating layer query_conv_reshape
I0604 17:55:00.626273 24646 net.cpp:106] Creating Layer query_conv_reshape
I0604 17:55:00.626276 24646 net.cpp:454] query_conv_reshape <- query_conv
I0604 17:55:00.626291 24646 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0604 17:55:00.626320 24646 net.cpp:150] Setting up query_conv_reshape
I0604 17:55:00.626325 24646 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0604 17:55:00.626327 24646 net.cpp:165] Memory required for data: 1457043292
I0604 17:55:00.626329 24646 layer_factory.hpp:77] Creating layer key_conv_reshape
I0604 17:55:00.626333 24646 net.cpp:106] Creating Layer key_conv_reshape
I0604 17:55:00.626335 24646 net.cpp:454] key_conv_reshape <- key_conv
I0604 17:55:00.626339 24646 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0604 17:55:00.626364 24646 net.cpp:150] Setting up key_conv_reshape
I0604 17:55:00.626368 24646 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0604 17:55:00.626379 24646 net.cpp:165] Memory required for data: 1457273692
I0604 17:55:00.626381 24646 layer_factory.hpp:77] Creating layer value_conv_reshape
I0604 17:55:00.626384 24646 net.cpp:106] Creating Layer value_conv_reshape
I0604 17:55:00.626386 24646 net.cpp:454] value_conv_reshape <- value_conv
I0604 17:55:00.626390 24646 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0604 17:55:00.626415 24646 net.cpp:150] Setting up value_conv_reshape
I0604 17:55:00.626420 24646 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0604 17:55:00.626421 24646 net.cpp:165] Memory required for data: 1459116892
I0604 17:55:00.626425 24646 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0604 17:55:00.626431 24646 net.cpp:106] Creating Layer query_conv_reshape_perm
I0604 17:55:00.626435 24646 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0604 17:55:00.626438 24646 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0604 17:55:00.626508 24646 net.cpp:150] Setting up query_conv_reshape_perm
I0604 17:55:00.626513 24646 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0604 17:55:00.626515 24646 net.cpp:165] Memory required for data: 1459347292
I0604 17:55:00.626518 24646 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0604 17:55:00.626520 24646 net.cpp:106] Creating Layer key_conv_reshape_perm
I0604 17:55:00.626533 24646 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0604 17:55:00.626538 24646 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0604 17:55:00.626603 24646 net.cpp:150] Setting up key_conv_reshape_perm
I0604 17:55:00.626607 24646 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0604 17:55:00.626610 24646 net.cpp:165] Memory required for data: 1459577692
I0604 17:55:00.626611 24646 layer_factory.hpp:77] Creating layer energy
I0604 17:55:00.626616 24646 net.cpp:106] Creating Layer energy
I0604 17:55:00.626627 24646 net.cpp:454] energy <- query_conv_reshape_perm
I0604 17:55:00.626631 24646 net.cpp:454] energy <- key_conv_reshape_perm
I0604 17:55:00.626636 24646 net.cpp:411] energy -> energy
I0604 17:55:00.626665 24646 net.cpp:150] Setting up energy
I0604 17:55:00.626679 24646 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0604 17:55:00.626682 24646 net.cpp:165] Memory required for data: 1462817692
I0604 17:55:00.626683 24646 layer_factory.hpp:77] Creating layer attention
I0604 17:55:00.626698 24646 net.cpp:106] Creating Layer attention
I0604 17:55:00.626701 24646 net.cpp:454] attention <- energy
I0604 17:55:00.626706 24646 net.cpp:411] attention -> attention
I0604 17:55:00.626875 24646 net.cpp:150] Setting up attention
I0604 17:55:00.626881 24646 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0604 17:55:00.626886 24646 net.cpp:165] Memory required for data: 1466057692
I0604 17:55:00.626889 24646 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0604 17:55:00.626911 24646 net.cpp:106] Creating Layer value_conv_reshape_perm
I0604 17:55:00.626914 24646 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0604 17:55:00.626921 24646 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0604 17:55:00.626998 24646 net.cpp:150] Setting up value_conv_reshape_perm
I0604 17:55:00.627002 24646 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0604 17:55:00.627014 24646 net.cpp:165] Memory required for data: 1467900892
I0604 17:55:00.627017 24646 layer_factory.hpp:77] Creating layer attention_perm
I0604 17:55:00.627022 24646 net.cpp:106] Creating Layer attention_perm
I0604 17:55:00.627025 24646 net.cpp:454] attention_perm <- attention
I0604 17:55:00.627030 24646 net.cpp:411] attention_perm -> attention_perm
I0604 17:55:00.627095 24646 net.cpp:150] Setting up attention_perm
I0604 17:55:00.627100 24646 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0604 17:55:00.627102 24646 net.cpp:165] Memory required for data: 1471140892
I0604 17:55:00.627107 24646 layer_factory.hpp:77] Creating layer out
I0604 17:55:00.627112 24646 net.cpp:106] Creating Layer out
I0604 17:55:00.627116 24646 net.cpp:454] out <- value_conv_reshape_perm
I0604 17:55:00.627120 24646 net.cpp:454] out <- attention_perm
I0604 17:55:00.627125 24646 net.cpp:411] out -> out
I0604 17:55:00.627141 24646 net.cpp:150] Setting up out
I0604 17:55:00.627146 24646 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0604 17:55:00.627151 24646 net.cpp:165] Memory required for data: 1472984092
I0604 17:55:00.627153 24646 layer_factory.hpp:77] Creating layer out_reshape
I0604 17:55:00.627159 24646 net.cpp:106] Creating Layer out_reshape
I0604 17:55:00.627164 24646 net.cpp:454] out_reshape <- out
I0604 17:55:00.627169 24646 net.cpp:411] out_reshape -> out_reshape
I0604 17:55:00.627187 24646 net.cpp:150] Setting up out_reshape
I0604 17:55:00.627192 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.627193 24646 net.cpp:165] Memory required for data: 1474827292
I0604 17:55:00.627197 24646 layer_factory.hpp:77] Creating layer out_reshape_scale
I0604 17:55:00.627205 24646 net.cpp:106] Creating Layer out_reshape_scale
I0604 17:55:00.627209 24646 net.cpp:454] out_reshape_scale <- out_reshape
I0604 17:55:00.627214 24646 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0604 17:55:00.627279 24646 net.cpp:150] Setting up out_reshape_scale
I0604 17:55:00.627285 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.627286 24646 net.cpp:165] Memory required for data: 1476670492
I0604 17:55:00.627292 24646 layer_factory.hpp:77] Creating layer out_x
I0604 17:55:00.627303 24646 net.cpp:106] Creating Layer out_x
I0604 17:55:00.627308 24646 net.cpp:454] out_x <- out_reshape_scale
I0604 17:55:00.627312 24646 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0604 17:55:00.627317 24646 net.cpp:411] out_x -> out_x
I0604 17:55:00.627336 24646 net.cpp:150] Setting up out_x
I0604 17:55:00.627341 24646 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:55:00.627342 24646 net.cpp:165] Memory required for data: 1478513692
I0604 17:55:00.627347 24646 layer_factory.hpp:77] Creating layer query_conv_reshape_ch
I0604 17:55:00.627353 24646 net.cpp:106] Creating Layer query_conv_reshape_ch
I0604 17:55:00.627358 24646 net.cpp:454] query_conv_reshape_ch <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_4
I0604 17:55:00.627364 24646 net.cpp:411] query_conv_reshape_ch -> query_conv_reshape_ch
I0604 17:55:00.627384 24646 net.cpp:150] Setting up query_conv_reshape_ch
I0604 17:55:00.627388 24646 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0604 17:55:00.627391 24646 net.cpp:165] Memory required for data: 1480356892
I0604 17:55:00.627396 24646 layer_factory.hpp:77] Creating layer key_conv_reshape_ch
I0604 17:55:00.627403 24646 net.cpp:106] Creating Layer key_conv_reshape_ch
I0604 17:55:00.627409 24646 net.cpp:454] key_conv_reshape_ch <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_5
I0604 17:55:00.627415 24646 net.cpp:411] key_conv_reshape_ch -> key_conv_reshape_ch
I0604 17:55:00.627435 24646 net.cpp:150] Setting up key_conv_reshape_ch
I0604 17:55:00.627439 24646 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0604 17:55:00.627444 24646 net.cpp:165] Memory required for data: 1482200092
I0604 17:55:00.627449 24646 layer_factory.hpp:77] Creating layer value_conv_reshape_ch
I0604 17:55:00.627454 24646 net.cpp:106] Creating Layer value_conv_reshape_ch
I0604 17:55:00.627458 24646 net.cpp:454] value_conv_reshape_ch <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_6
I0604 17:55:00.627462 24646 net.cpp:411] value_conv_reshape_ch -> value_conv_reshape_ch
I0604 17:55:00.627483 24646 net.cpp:150] Setting up value_conv_reshape_ch
I0604 17:55:00.627487 24646 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0604 17:55:00.627490 24646 net.cpp:165] Memory required for data: 1484043292
I0604 17:55:00.627496 24646 layer_factory.hpp:77] Creating layer query_conv_reshape_perm_ch
I0604 17:55:00.627501 24646 net.cpp:106] Creating Layer query_conv_reshape_perm_ch
I0604 17:55:00.627504 24646 net.cpp:454] query_conv_reshape_perm_ch <- query_conv_reshape_ch
I0604 17:55:00.627509 24646 net.cpp:411] query_conv_reshape_perm_ch -> query_conv_reshape_perm_ch
I0604 17:55:00.627580 24646 net.cpp:150] Setting up query_conv_reshape_perm_ch
I0604 17:55:00.627585 24646 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0604 17:55:00.627589 24646 net.cpp:165] Memory required for data: 1485886492
I0604 17:55:00.627593 24646 layer_factory.hpp:77] Creating layer key_conv_reshape_perm_ch
I0604 17:55:00.627599 24646 net.cpp:106] Creating Layer key_conv_reshape_perm_ch
I0604 17:55:00.627604 24646 net.cpp:454] key_conv_reshape_perm_ch <- key_conv_reshape_ch
I0604 17:55:00.627609 24646 net.cpp:411] key_conv_reshape_perm_ch -> key_conv_reshape_perm_ch
I0604 17:55:00.627681 24646 net.cpp:150] Setting up key_conv_reshape_perm_ch
I0604 17:55:00.627696 24646 net.cpp:157] Top shape: 1 1 900 512 (460800)
I0604 17:55:00.627698 24646 net.cpp:165] Memory required for data: 1487729692
I0604 17:55:00.627702 24646 layer_factory.hpp:77] Creating layer energy_ch
I0604 17:55:00.627707 24646 net.cpp:106] Creating Layer energy_ch
I0604 17:55:00.627712 24646 net.cpp:454] energy_ch <- query_conv_reshape_perm_ch
I0604 17:55:00.627714 24646 net.cpp:454] energy_ch <- key_conv_reshape_perm_ch
I0604 17:55:00.627717 24646 net.cpp:411] energy_ch -> energy_ch
I0604 17:55:00.627732 24646 net.cpp:150] Setting up energy_ch
I0604 17:55:00.627735 24646 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:55:00.627737 24646 net.cpp:165] Memory required for data: 1488778268
I0604 17:55:00.627740 24646 layer_factory.hpp:77] Creating layer energy_ch_energy_ch_0_split
I0604 17:55:00.627743 24646 net.cpp:106] Creating Layer energy_ch_energy_ch_0_split
I0604 17:55:00.627750 24646 net.cpp:454] energy_ch_energy_ch_0_split <- energy_ch
I0604 17:55:00.627758 24646 net.cpp:411] energy_ch_energy_ch_0_split -> energy_ch_energy_ch_0_split_0
I0604 17:55:00.627774 24646 net.cpp:411] energy_ch_energy_ch_0_split -> energy_ch_energy_ch_0_split_1
I0604 17:55:00.627800 24646 net.cpp:150] Setting up energy_ch_energy_ch_0_split
I0604 17:55:00.627804 24646 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:55:00.627810 24646 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:55:00.627813 24646 net.cpp:165] Memory required for data: 1490875420
I0604 17:55:00.627816 24646 layer_factory.hpp:77] Creating layer energy_ch_perm
I0604 17:55:00.627823 24646 net.cpp:106] Creating Layer energy_ch_perm
I0604 17:55:00.627828 24646 net.cpp:454] energy_ch_perm <- energy_ch_energy_ch_0_split_0
I0604 17:55:00.627836 24646 net.cpp:411] energy_ch_perm -> energy_ch_perm
I0604 17:55:00.627902 24646 net.cpp:150] Setting up energy_ch_perm
I0604 17:55:00.627907 24646 net.cpp:157] Top shape: 1 512 1 512 (262144)
I0604 17:55:00.627910 24646 net.cpp:165] Memory required for data: 1491923996
I0604 17:55:00.627913 24646 layer_factory.hpp:77] Creating layer energy_ch_pool
I0604 17:55:00.627923 24646 net.cpp:106] Creating Layer energy_ch_pool
I0604 17:55:00.627928 24646 net.cpp:454] energy_ch_pool <- energy_ch_perm
I0604 17:55:00.627934 24646 net.cpp:411] energy_ch_pool -> energy_ch_pool
I0604 17:55:00.627962 24646 net.cpp:150] Setting up energy_ch_pool
I0604 17:55:00.627966 24646 net.cpp:157] Top shape: 1 512 1 1 (512)
I0604 17:55:00.627969 24646 net.cpp:165] Memory required for data: 1491926044
I0604 17:55:00.627974 24646 layer_factory.hpp:77] Creating layer energy_ch_reperm
I0604 17:55:00.627979 24646 net.cpp:106] Creating Layer energy_ch_reperm
I0604 17:55:00.627982 24646 net.cpp:454] energy_ch_reperm <- energy_ch_pool
I0604 17:55:00.627987 24646 net.cpp:411] energy_ch_reperm -> energy_ch_reperm
I0604 17:55:00.628051 24646 net.cpp:150] Setting up energy_ch_reperm
I0604 17:55:00.628054 24646 net.cpp:157] Top shape: 1 1 512 1 (512)
I0604 17:55:00.628057 24646 net.cpp:165] Memory required for data: 1491928092
I0604 17:55:00.628062 24646 layer_factory.hpp:77] Creating layer energy_ch_max
I0604 17:55:00.628069 24646 net.cpp:106] Creating Layer energy_ch_max
I0604 17:55:00.628072 24646 net.cpp:454] energy_ch_max <- energy_ch_reperm
I0604 17:55:00.628077 24646 net.cpp:411] energy_ch_max -> energy_ch_max
I0604 17:55:00.628096 24646 net.cpp:150] Setting up energy_ch_max
I0604 17:55:00.628100 24646 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:55:00.628103 24646 net.cpp:165] Memory required for data: 1492976668
I0604 17:55:00.628106 24646 layer_factory.hpp:77] Creating layer energy_ch_minus
I0604 17:55:00.628116 24646 net.cpp:106] Creating Layer energy_ch_minus
I0604 17:55:00.628120 24646 net.cpp:454] energy_ch_minus <- energy_ch_energy_ch_0_split_1
I0604 17:55:00.628124 24646 net.cpp:411] energy_ch_minus -> energy_ch_minus
I0604 17:55:00.628145 24646 net.cpp:150] Setting up energy_ch_minus
I0604 17:55:00.628149 24646 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:55:00.628151 24646 net.cpp:165] Memory required for data: 1494025244
I0604 17:55:00.628156 24646 layer_factory.hpp:77] Creating layer energy_new
I0604 17:55:00.628163 24646 net.cpp:106] Creating Layer energy_new
I0604 17:55:00.628168 24646 net.cpp:454] energy_new <- energy_ch_max
I0604 17:55:00.628173 24646 net.cpp:454] energy_new <- energy_ch_minus
I0604 17:55:00.628180 24646 net.cpp:411] energy_new -> energy_new
I0604 17:55:00.628197 24646 net.cpp:150] Setting up energy_new
I0604 17:55:00.628201 24646 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:55:00.628204 24646 net.cpp:165] Memory required for data: 1495073820
I0604 17:55:00.628209 24646 layer_factory.hpp:77] Creating layer attention_ch
I0604 17:55:00.628216 24646 net.cpp:106] Creating Layer attention_ch
I0604 17:55:00.628221 24646 net.cpp:454] attention_ch <- energy_new
I0604 17:55:00.628226 24646 net.cpp:411] attention_ch -> attention_ch
I0604 17:55:00.628767 24646 net.cpp:150] Setting up attention_ch
I0604 17:55:00.628774 24646 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:55:00.628779 24646 net.cpp:165] Memory required for data: 1496122396
I0604 17:55:00.628785 24646 layer_factory.hpp:77] Creating layer value_conv_reshape_ch_perm
I0604 17:55:00.628795 24646 net.cpp:106] Creating Layer value_conv_reshape_ch_perm
I0604 17:55:00.628800 24646 net.cpp:454] value_conv_reshape_ch_perm <- value_conv_reshape_ch
I0604 17:55:00.628805 24646 net.cpp:411] value_conv_reshape_ch_perm -> value_conv_reshape_ch_perm
I0604 17:55:00.628875 24646 net.cpp:150] Setting up value_conv_reshape_ch_perm
I0604 17:55:00.628880 24646 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0604 17:55:00.628883 24646 net.cpp:165] Memory required for data: 1497965596
I0604 17:55:00.628887 24646 layer_factory.hpp:77] Creating layer attention_ch_perm
I0604 17:55:00.628895 24646 net.cpp:106] Creating Layer attention_ch_perm
I0604 17:55:00.628901 24646 net.cpp:454] attention_ch_perm <- attention_ch
I0604 17:55:00.628906 24646 net.cpp:411] attention_ch_perm -> attention_ch_perm
I0604 17:55:00.628971 24646 net.cpp:150] Setting up attention_ch_perm
I0604 17:55:00.628976 24646 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:55:00.628979 24646 net.cpp:165] Memory required for data: 1499014172
I0604 17:55:00.628983 24646 layer_factory.hpp:77] Creating layer out_ch
I0604 17:55:00.628988 24646 net.cpp:106] Creating Layer out_ch
I0604 17:55:00.628993 24646 net.cpp:454] out_ch <- value_conv_reshape_ch_perm
I0604 17:55:00.628996 24646 net.cpp:454] out_ch <- attention_ch_perm
I0604 17:55:00.629004 24646 net.cpp:411] out_ch -> out_ch
F0604 17:55:00.629014 24646 matrix_multiplication_layer.cpp:33] Check failed: Cx == Ry (900 vs. 512) Input X and Y have incompatible dimensions (512x900 vs. 512x512).
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 24646 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
