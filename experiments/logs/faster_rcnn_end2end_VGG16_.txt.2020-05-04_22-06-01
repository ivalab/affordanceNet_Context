+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2020-05-04_22-06-01
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2020-05-04_22-06-01
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/vgg16_faster_rcnn_iter_imgwise_pam_attri_85000.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/vgg16_faster_rcnn_iter_imgwise_pam_attri_85000.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 36,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
29646 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 29646 -> 29646
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0504 22:06:11.210306 11651 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 1e-05
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0504 22:06:11.210325 11651 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0504 22:06:11.211694 11651 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0504 22:06:11.212018 11651 layer_factory.hpp:77] Creating layer input-data
I0504 22:06:11.251199 11651 net.cpp:106] Creating Layer input-data
I0504 22:06:11.251215 11651 net.cpp:411] input-data -> data
I0504 22:06:11.251222 11651 net.cpp:411] input-data -> im_info
I0504 22:06:11.251227 11651 net.cpp:411] input-data -> gt_boxes
I0504 22:06:11.251231 11651 net.cpp:411] input-data -> seg_mask_inds
I0504 22:06:11.251235 11651 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0504 22:06:11.261867 11651 net.cpp:150] Setting up input-data
I0504 22:06:11.261891 11651 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0504 22:06:11.261894 11651 net.cpp:157] Top shape: 1 3 (3)
I0504 22:06:11.261907 11651 net.cpp:157] Top shape: 1 4 (4)
I0504 22:06:11.261909 11651 net.cpp:157] Top shape: 1 2 (2)
I0504 22:06:11.261911 11651 net.cpp:157] Top shape: 1 1 (1)
I0504 22:06:11.261914 11651 net.cpp:165] Memory required for data: 7200040
I0504 22:06:11.261919 11651 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0504 22:06:11.261931 11651 net.cpp:106] Creating Layer data_input-data_0_split
I0504 22:06:11.261948 11651 net.cpp:454] data_input-data_0_split <- data
I0504 22:06:11.261952 11651 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0504 22:06:11.261958 11651 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0504 22:06:11.261992 11651 net.cpp:150] Setting up data_input-data_0_split
I0504 22:06:11.262006 11651 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0504 22:06:11.262008 11651 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0504 22:06:11.262009 11651 net.cpp:165] Memory required for data: 21600040
I0504 22:06:11.262012 11651 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0504 22:06:11.262025 11651 net.cpp:106] Creating Layer im_info_input-data_1_split
I0504 22:06:11.262027 11651 net.cpp:454] im_info_input-data_1_split <- im_info
I0504 22:06:11.262030 11651 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0504 22:06:11.262044 11651 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0504 22:06:11.262050 11651 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0504 22:06:11.262094 11651 net.cpp:150] Setting up im_info_input-data_1_split
I0504 22:06:11.262099 11651 net.cpp:157] Top shape: 1 3 (3)
I0504 22:06:11.262100 11651 net.cpp:157] Top shape: 1 3 (3)
I0504 22:06:11.262113 11651 net.cpp:157] Top shape: 1 3 (3)
I0504 22:06:11.262115 11651 net.cpp:165] Memory required for data: 21600076
I0504 22:06:11.262116 11651 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0504 22:06:11.262130 11651 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0504 22:06:11.262132 11651 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0504 22:06:11.262136 11651 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0504 22:06:11.262151 11651 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0504 22:06:11.262169 11651 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0504 22:06:11.262173 11651 net.cpp:157] Top shape: 1 4 (4)
I0504 22:06:11.262178 11651 net.cpp:157] Top shape: 1 4 (4)
I0504 22:06:11.262181 11651 net.cpp:165] Memory required for data: 21600108
I0504 22:06:11.262185 11651 layer_factory.hpp:77] Creating layer conv1_1
I0504 22:06:11.262194 11651 net.cpp:106] Creating Layer conv1_1
I0504 22:06:11.262197 11651 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0504 22:06:11.262202 11651 net.cpp:411] conv1_1 -> conv1_1
I0504 22:06:11.438138 11651 net.cpp:150] Setting up conv1_1
I0504 22:06:11.438163 11651 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0504 22:06:11.438167 11651 net.cpp:165] Memory required for data: 175200108
I0504 22:06:11.438194 11651 layer_factory.hpp:77] Creating layer relu1_1
I0504 22:06:11.438215 11651 net.cpp:106] Creating Layer relu1_1
I0504 22:06:11.438220 11651 net.cpp:454] relu1_1 <- conv1_1
I0504 22:06:11.438235 11651 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0504 22:06:11.438417 11651 net.cpp:150] Setting up relu1_1
I0504 22:06:11.438426 11651 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0504 22:06:11.438428 11651 net.cpp:165] Memory required for data: 328800108
I0504 22:06:11.438431 11651 layer_factory.hpp:77] Creating layer conv1_2
I0504 22:06:11.438452 11651 net.cpp:106] Creating Layer conv1_2
I0504 22:06:11.438459 11651 net.cpp:454] conv1_2 <- conv1_1
I0504 22:06:11.438477 11651 net.cpp:411] conv1_2 -> conv1_2
I0504 22:06:11.441092 11651 net.cpp:150] Setting up conv1_2
I0504 22:06:11.441115 11651 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0504 22:06:11.441118 11651 net.cpp:165] Memory required for data: 482400108
I0504 22:06:11.441126 11651 layer_factory.hpp:77] Creating layer relu1_2
I0504 22:06:11.441143 11651 net.cpp:106] Creating Layer relu1_2
I0504 22:06:11.441146 11651 net.cpp:454] relu1_2 <- conv1_2
I0504 22:06:11.441150 11651 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0504 22:06:11.441273 11651 net.cpp:150] Setting up relu1_2
I0504 22:06:11.441278 11651 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0504 22:06:11.441290 11651 net.cpp:165] Memory required for data: 636000108
I0504 22:06:11.441293 11651 layer_factory.hpp:77] Creating layer pool1
I0504 22:06:11.441308 11651 net.cpp:106] Creating Layer pool1
I0504 22:06:11.441311 11651 net.cpp:454] pool1 <- conv1_2
I0504 22:06:11.441314 11651 net.cpp:411] pool1 -> pool1
I0504 22:06:11.441910 11651 net.cpp:150] Setting up pool1
I0504 22:06:11.441916 11651 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0504 22:06:11.441918 11651 net.cpp:165] Memory required for data: 674400108
I0504 22:06:11.441931 11651 layer_factory.hpp:77] Creating layer conv2_1
I0504 22:06:11.441937 11651 net.cpp:106] Creating Layer conv2_1
I0504 22:06:11.441941 11651 net.cpp:454] conv2_1 <- pool1
I0504 22:06:11.441943 11651 net.cpp:411] conv2_1 -> conv2_1
I0504 22:06:11.443730 11651 net.cpp:150] Setting up conv2_1
I0504 22:06:11.443739 11651 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0504 22:06:11.443742 11651 net.cpp:165] Memory required for data: 751200108
I0504 22:06:11.443763 11651 layer_factory.hpp:77] Creating layer relu2_1
I0504 22:06:11.443768 11651 net.cpp:106] Creating Layer relu2_1
I0504 22:06:11.443769 11651 net.cpp:454] relu2_1 <- conv2_1
I0504 22:06:11.443773 11651 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0504 22:06:11.444224 11651 net.cpp:150] Setting up relu2_1
I0504 22:06:11.444232 11651 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0504 22:06:11.444245 11651 net.cpp:165] Memory required for data: 828000108
I0504 22:06:11.444248 11651 layer_factory.hpp:77] Creating layer conv2_2
I0504 22:06:11.444254 11651 net.cpp:106] Creating Layer conv2_2
I0504 22:06:11.444257 11651 net.cpp:454] conv2_2 <- conv2_1
I0504 22:06:11.444260 11651 net.cpp:411] conv2_2 -> conv2_2
I0504 22:06:11.445802 11651 net.cpp:150] Setting up conv2_2
I0504 22:06:11.445811 11651 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0504 22:06:11.445814 11651 net.cpp:165] Memory required for data: 904800108
I0504 22:06:11.445818 11651 layer_factory.hpp:77] Creating layer relu2_2
I0504 22:06:11.445823 11651 net.cpp:106] Creating Layer relu2_2
I0504 22:06:11.445825 11651 net.cpp:454] relu2_2 <- conv2_2
I0504 22:06:11.445828 11651 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0504 22:06:11.445936 11651 net.cpp:150] Setting up relu2_2
I0504 22:06:11.445942 11651 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0504 22:06:11.445945 11651 net.cpp:165] Memory required for data: 981600108
I0504 22:06:11.445946 11651 layer_factory.hpp:77] Creating layer pool2
I0504 22:06:11.445951 11651 net.cpp:106] Creating Layer pool2
I0504 22:06:11.445953 11651 net.cpp:454] pool2 <- conv2_2
I0504 22:06:11.445956 11651 net.cpp:411] pool2 -> pool2
I0504 22:06:11.445981 11651 net.cpp:150] Setting up pool2
I0504 22:06:11.445984 11651 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0504 22:06:11.445986 11651 net.cpp:165] Memory required for data: 1000800108
I0504 22:06:11.445987 11651 layer_factory.hpp:77] Creating layer conv3_1
I0504 22:06:11.445992 11651 net.cpp:106] Creating Layer conv3_1
I0504 22:06:11.445994 11651 net.cpp:454] conv3_1 <- pool2
I0504 22:06:11.445997 11651 net.cpp:411] conv3_1 -> conv3_1
I0504 22:06:11.447784 11651 net.cpp:150] Setting up conv3_1
I0504 22:06:11.447793 11651 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0504 22:06:11.447805 11651 net.cpp:165] Memory required for data: 1039200108
I0504 22:06:11.447813 11651 layer_factory.hpp:77] Creating layer relu3_1
I0504 22:06:11.447818 11651 net.cpp:106] Creating Layer relu3_1
I0504 22:06:11.447820 11651 net.cpp:454] relu3_1 <- conv3_1
I0504 22:06:11.447824 11651 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0504 22:06:11.447952 11651 net.cpp:150] Setting up relu3_1
I0504 22:06:11.447958 11651 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0504 22:06:11.447960 11651 net.cpp:165] Memory required for data: 1077600108
I0504 22:06:11.447962 11651 layer_factory.hpp:77] Creating layer conv3_2
I0504 22:06:11.447971 11651 net.cpp:106] Creating Layer conv3_2
I0504 22:06:11.447978 11651 net.cpp:454] conv3_2 <- conv3_1
I0504 22:06:11.447981 11651 net.cpp:411] conv3_2 -> conv3_2
I0504 22:06:11.450142 11651 net.cpp:150] Setting up conv3_2
I0504 22:06:11.450152 11651 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0504 22:06:11.450155 11651 net.cpp:165] Memory required for data: 1116000108
I0504 22:06:11.450160 11651 layer_factory.hpp:77] Creating layer relu3_2
I0504 22:06:11.450165 11651 net.cpp:106] Creating Layer relu3_2
I0504 22:06:11.450167 11651 net.cpp:454] relu3_2 <- conv3_2
I0504 22:06:11.450170 11651 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0504 22:06:11.450299 11651 net.cpp:150] Setting up relu3_2
I0504 22:06:11.450304 11651 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0504 22:06:11.450306 11651 net.cpp:165] Memory required for data: 1154400108
I0504 22:06:11.450309 11651 layer_factory.hpp:77] Creating layer conv3_3
I0504 22:06:11.450314 11651 net.cpp:106] Creating Layer conv3_3
I0504 22:06:11.450315 11651 net.cpp:454] conv3_3 <- conv3_2
I0504 22:06:11.450318 11651 net.cpp:411] conv3_3 -> conv3_3
I0504 22:06:11.452551 11651 net.cpp:150] Setting up conv3_3
I0504 22:06:11.452579 11651 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0504 22:06:11.452584 11651 net.cpp:165] Memory required for data: 1192800108
I0504 22:06:11.452591 11651 layer_factory.hpp:77] Creating layer relu3_3
I0504 22:06:11.452608 11651 net.cpp:106] Creating Layer relu3_3
I0504 22:06:11.452615 11651 net.cpp:454] relu3_3 <- conv3_3
I0504 22:06:11.452632 11651 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0504 22:06:11.452827 11651 net.cpp:150] Setting up relu3_3
I0504 22:06:11.452847 11651 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0504 22:06:11.452850 11651 net.cpp:165] Memory required for data: 1231200108
I0504 22:06:11.452854 11651 layer_factory.hpp:77] Creating layer pool3
I0504 22:06:11.452872 11651 net.cpp:106] Creating Layer pool3
I0504 22:06:11.452875 11651 net.cpp:454] pool3 <- conv3_3
I0504 22:06:11.452880 11651 net.cpp:411] pool3 -> pool3
I0504 22:06:11.452940 11651 net.cpp:150] Setting up pool3
I0504 22:06:11.452946 11651 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0504 22:06:11.452950 11651 net.cpp:165] Memory required for data: 1240800108
I0504 22:06:11.452951 11651 layer_factory.hpp:77] Creating layer conv4_1
I0504 22:06:11.452961 11651 net.cpp:106] Creating Layer conv4_1
I0504 22:06:11.452977 11651 net.cpp:454] conv4_1 <- pool3
I0504 22:06:11.452982 11651 net.cpp:411] conv4_1 -> conv4_1
I0504 22:06:11.461277 11651 net.cpp:150] Setting up conv4_1
I0504 22:06:11.461294 11651 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0504 22:06:11.461297 11651 net.cpp:165] Memory required for data: 1260000108
I0504 22:06:11.461305 11651 layer_factory.hpp:77] Creating layer relu4_1
I0504 22:06:11.461313 11651 net.cpp:106] Creating Layer relu4_1
I0504 22:06:11.461318 11651 net.cpp:454] relu4_1 <- conv4_1
I0504 22:06:11.461321 11651 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0504 22:06:11.461462 11651 net.cpp:150] Setting up relu4_1
I0504 22:06:11.461468 11651 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0504 22:06:11.461472 11651 net.cpp:165] Memory required for data: 1279200108
I0504 22:06:11.461473 11651 layer_factory.hpp:77] Creating layer conv4_2
I0504 22:06:11.461479 11651 net.cpp:106] Creating Layer conv4_2
I0504 22:06:11.461481 11651 net.cpp:454] conv4_2 <- conv4_1
I0504 22:06:11.461485 11651 net.cpp:411] conv4_2 -> conv4_2
I0504 22:06:11.466951 11651 net.cpp:150] Setting up conv4_2
I0504 22:06:11.466975 11651 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0504 22:06:11.466979 11651 net.cpp:165] Memory required for data: 1298400108
I0504 22:06:11.466995 11651 layer_factory.hpp:77] Creating layer relu4_2
I0504 22:06:11.467005 11651 net.cpp:106] Creating Layer relu4_2
I0504 22:06:11.467020 11651 net.cpp:454] relu4_2 <- conv4_2
I0504 22:06:11.467025 11651 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0504 22:06:11.467659 11651 net.cpp:150] Setting up relu4_2
I0504 22:06:11.467669 11651 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0504 22:06:11.467672 11651 net.cpp:165] Memory required for data: 1317600108
I0504 22:06:11.467675 11651 layer_factory.hpp:77] Creating layer conv4_3
I0504 22:06:11.467686 11651 net.cpp:106] Creating Layer conv4_3
I0504 22:06:11.467689 11651 net.cpp:454] conv4_3 <- conv4_2
I0504 22:06:11.467694 11651 net.cpp:411] conv4_3 -> conv4_3
I0504 22:06:11.472774 11651 net.cpp:150] Setting up conv4_3
I0504 22:06:11.472792 11651 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0504 22:06:11.472795 11651 net.cpp:165] Memory required for data: 1336800108
I0504 22:06:11.472801 11651 layer_factory.hpp:77] Creating layer relu4_3
I0504 22:06:11.472810 11651 net.cpp:106] Creating Layer relu4_3
I0504 22:06:11.472813 11651 net.cpp:454] relu4_3 <- conv4_3
I0504 22:06:11.472826 11651 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0504 22:06:11.472975 11651 net.cpp:150] Setting up relu4_3
I0504 22:06:11.472980 11651 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0504 22:06:11.472982 11651 net.cpp:165] Memory required for data: 1356000108
I0504 22:06:11.472985 11651 layer_factory.hpp:77] Creating layer pool4
I0504 22:06:11.472990 11651 net.cpp:106] Creating Layer pool4
I0504 22:06:11.472991 11651 net.cpp:454] pool4 <- conv4_3
I0504 22:06:11.472995 11651 net.cpp:411] pool4 -> pool4
I0504 22:06:11.473054 11651 net.cpp:150] Setting up pool4
I0504 22:06:11.473058 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.473059 11651 net.cpp:165] Memory required for data: 1360903020
I0504 22:06:11.473071 11651 layer_factory.hpp:77] Creating layer conv5_1
I0504 22:06:11.473078 11651 net.cpp:106] Creating Layer conv5_1
I0504 22:06:11.473089 11651 net.cpp:454] conv5_1 <- pool4
I0504 22:06:11.473093 11651 net.cpp:411] conv5_1 -> conv5_1
I0504 22:06:11.477543 11651 net.cpp:150] Setting up conv5_1
I0504 22:06:11.477562 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.477566 11651 net.cpp:165] Memory required for data: 1365805932
I0504 22:06:11.477571 11651 layer_factory.hpp:77] Creating layer relu5_1
I0504 22:06:11.477578 11651 net.cpp:106] Creating Layer relu5_1
I0504 22:06:11.477592 11651 net.cpp:454] relu5_1 <- conv5_1
I0504 22:06:11.477597 11651 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0504 22:06:11.477739 11651 net.cpp:150] Setting up relu5_1
I0504 22:06:11.477746 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.477746 11651 net.cpp:165] Memory required for data: 1370708844
I0504 22:06:11.477748 11651 layer_factory.hpp:77] Creating layer conv5_2
I0504 22:06:11.477756 11651 net.cpp:106] Creating Layer conv5_2
I0504 22:06:11.477757 11651 net.cpp:454] conv5_2 <- conv5_1
I0504 22:06:11.477761 11651 net.cpp:411] conv5_2 -> conv5_2
I0504 22:06:11.481928 11651 net.cpp:150] Setting up conv5_2
I0504 22:06:11.481947 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.481950 11651 net.cpp:165] Memory required for data: 1375611756
I0504 22:06:11.481956 11651 layer_factory.hpp:77] Creating layer relu5_2
I0504 22:06:11.481964 11651 net.cpp:106] Creating Layer relu5_2
I0504 22:06:11.481968 11651 net.cpp:454] relu5_2 <- conv5_2
I0504 22:06:11.481983 11651 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0504 22:06:11.482106 11651 net.cpp:150] Setting up relu5_2
I0504 22:06:11.482112 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.482115 11651 net.cpp:165] Memory required for data: 1380514668
I0504 22:06:11.482117 11651 layer_factory.hpp:77] Creating layer conv5_3
I0504 22:06:11.482127 11651 net.cpp:106] Creating Layer conv5_3
I0504 22:06:11.482129 11651 net.cpp:454] conv5_3 <- conv5_2
I0504 22:06:11.482133 11651 net.cpp:411] conv5_3 -> conv5_3
I0504 22:06:11.487623 11651 net.cpp:150] Setting up conv5_3
I0504 22:06:11.487669 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.487673 11651 net.cpp:165] Memory required for data: 1385417580
I0504 22:06:11.487684 11651 layer_factory.hpp:77] Creating layer relu5_3
I0504 22:06:11.487704 11651 net.cpp:106] Creating Layer relu5_3
I0504 22:06:11.487710 11651 net.cpp:454] relu5_3 <- conv5_3
I0504 22:06:11.487718 11651 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0504 22:06:11.487905 11651 net.cpp:150] Setting up relu5_3
I0504 22:06:11.487915 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.487918 11651 net.cpp:165] Memory required for data: 1390320492
I0504 22:06:11.487922 11651 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0504 22:06:11.487929 11651 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0504 22:06:11.487944 11651 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0504 22:06:11.487949 11651 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0504 22:06:11.487967 11651 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0504 22:06:11.487973 11651 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0504 22:06:11.488059 11651 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0504 22:06:11.488075 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.488080 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.488085 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.488097 11651 net.cpp:165] Memory required for data: 1405029228
I0504 22:06:11.488102 11651 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0504 22:06:11.488114 11651 net.cpp:106] Creating Layer rpn_conv/3x3
I0504 22:06:11.488118 11651 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0504 22:06:11.488126 11651 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0504 22:06:11.540097 11651 net.cpp:150] Setting up rpn_conv/3x3
I0504 22:06:11.540115 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.540117 11651 net.cpp:165] Memory required for data: 1409932140
I0504 22:06:11.540124 11651 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0504 22:06:11.540134 11651 net.cpp:106] Creating Layer rpn_relu/3x3
I0504 22:06:11.540138 11651 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0504 22:06:11.540154 11651 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0504 22:06:11.540283 11651 net.cpp:150] Setting up rpn_relu/3x3
I0504 22:06:11.540289 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.540292 11651 net.cpp:165] Memory required for data: 1414835052
I0504 22:06:11.540293 11651 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0504 22:06:11.540297 11651 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0504 22:06:11.540299 11651 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0504 22:06:11.540303 11651 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0504 22:06:11.540307 11651 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0504 22:06:11.540354 11651 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0504 22:06:11.540359 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.540371 11651 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0504 22:06:11.540372 11651 net.cpp:165] Memory required for data: 1424640876
I0504 22:06:11.540374 11651 layer_factory.hpp:77] Creating layer rpn_cls_score
I0504 22:06:11.540391 11651 net.cpp:106] Creating Layer rpn_cls_score
I0504 22:06:11.540393 11651 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0504 22:06:11.540396 11651 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0504 22:06:11.542035 11651 net.cpp:150] Setting up rpn_cls_score
I0504 22:06:11.542044 11651 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0504 22:06:11.542047 11651 net.cpp:165] Memory required for data: 1424928156
I0504 22:06:11.542062 11651 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0504 22:06:11.542066 11651 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0504 22:06:11.542068 11651 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0504 22:06:11.542073 11651 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0504 22:06:11.542078 11651 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0504 22:06:11.542110 11651 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0504 22:06:11.542114 11651 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0504 22:06:11.542117 11651 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0504 22:06:11.542119 11651 net.cpp:165] Memory required for data: 1425502716
I0504 22:06:11.542130 11651 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0504 22:06:11.542137 11651 net.cpp:106] Creating Layer rpn_bbox_pred
I0504 22:06:11.542140 11651 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0504 22:06:11.542143 11651 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0504 22:06:11.543637 11651 net.cpp:150] Setting up rpn_bbox_pred
I0504 22:06:11.543644 11651 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0504 22:06:11.543648 11651 net.cpp:165] Memory required for data: 1426077276
I0504 22:06:11.543661 11651 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0504 22:06:11.543668 11651 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0504 22:06:11.543670 11651 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0504 22:06:11.543673 11651 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0504 22:06:11.543678 11651 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0504 22:06:11.543702 11651 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0504 22:06:11.543715 11651 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0504 22:06:11.543717 11651 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0504 22:06:11.543720 11651 net.cpp:165] Memory required for data: 1427226396
I0504 22:06:11.543721 11651 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0504 22:06:11.543741 11651 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0504 22:06:11.543745 11651 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0504 22:06:11.543749 11651 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0504 22:06:11.543766 11651 net.cpp:150] Setting up rpn_cls_score_reshape
I0504 22:06:11.543769 11651 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0504 22:06:11.543771 11651 net.cpp:165] Memory required for data: 1427513676
I0504 22:06:11.543772 11651 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0504 22:06:11.543785 11651 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0504 22:06:11.543788 11651 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0504 22:06:11.543790 11651 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0504 22:06:11.543794 11651 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0504 22:06:11.543813 11651 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0504 22:06:11.543817 11651 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0504 22:06:11.543819 11651 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0504 22:06:11.543821 11651 net.cpp:165] Memory required for data: 1428088236
I0504 22:06:11.543823 11651 layer_factory.hpp:77] Creating layer rpn-data
I0504 22:06:11.544876 11651 net.cpp:106] Creating Layer rpn-data
I0504 22:06:11.544883 11651 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0504 22:06:11.544888 11651 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0504 22:06:11.544893 11651 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0504 22:06:11.544894 11651 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0504 22:06:11.544899 11651 net.cpp:411] rpn-data -> rpn_labels
I0504 22:06:11.544904 11651 net.cpp:411] rpn-data -> rpn_bbox_targets
I0504 22:06:11.544909 11651 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0504 22:06:11.544912 11651 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0504 22:06:11.545805 11651 net.cpp:150] Setting up rpn-data
I0504 22:06:11.545814 11651 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0504 22:06:11.545817 11651 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0504 22:06:11.545820 11651 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0504 22:06:11.545822 11651 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0504 22:06:11.545825 11651 net.cpp:165] Memory required for data: 1429955556
I0504 22:06:11.545826 11651 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0504 22:06:11.546293 11651 net.cpp:106] Creating Layer rpn_loss_cls
I0504 22:06:11.546298 11651 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0504 22:06:11.546303 11651 net.cpp:454] rpn_loss_cls <- rpn_labels
I0504 22:06:11.546306 11651 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0504 22:06:11.546314 11651 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0504 22:06:11.546962 11651 net.cpp:150] Setting up rpn_loss_cls
I0504 22:06:11.546969 11651 net.cpp:157] Top shape: (1)
I0504 22:06:11.546972 11651 net.cpp:160]     with loss weight 1
I0504 22:06:11.546979 11651 net.cpp:165] Memory required for data: 1429955560
I0504 22:06:11.546981 11651 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0504 22:06:11.546988 11651 net.cpp:106] Creating Layer rpn_loss_bbox
I0504 22:06:11.546991 11651 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0504 22:06:11.546994 11651 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0504 22:06:11.546998 11651 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0504 22:06:11.546999 11651 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0504 22:06:11.547003 11651 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0504 22:06:11.548156 11651 net.cpp:150] Setting up rpn_loss_bbox
I0504 22:06:11.548162 11651 net.cpp:157] Top shape: (1)
I0504 22:06:11.548164 11651 net.cpp:160]     with loss weight 1
I0504 22:06:11.548168 11651 net.cpp:165] Memory required for data: 1429955564
I0504 22:06:11.548171 11651 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0504 22:06:11.548175 11651 net.cpp:106] Creating Layer rpn_cls_prob
I0504 22:06:11.548178 11651 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0504 22:06:11.548182 11651 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0504 22:06:11.548333 11651 net.cpp:150] Setting up rpn_cls_prob
I0504 22:06:11.548339 11651 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0504 22:06:11.548341 11651 net.cpp:165] Memory required for data: 1430242844
I0504 22:06:11.548343 11651 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0504 22:06:11.548347 11651 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0504 22:06:11.548350 11651 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0504 22:06:11.548357 11651 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0504 22:06:11.548372 11651 net.cpp:150] Setting up rpn_cls_prob_reshape
I0504 22:06:11.548377 11651 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0504 22:06:11.548378 11651 net.cpp:165] Memory required for data: 1430530124
I0504 22:06:11.548379 11651 layer_factory.hpp:77] Creating layer proposal
I0504 22:06:11.561353 11651 net.cpp:106] Creating Layer proposal
I0504 22:06:11.561373 11651 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0504 22:06:11.561386 11651 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0504 22:06:11.561393 11651 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0504 22:06:11.561399 11651 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0504 22:06:11.563186 11651 net.cpp:150] Setting up proposal
I0504 22:06:11.563205 11651 net.cpp:157] Top shape: 1 5 (5)
I0504 22:06:11.563220 11651 net.cpp:165] Memory required for data: 1430530144
I0504 22:06:11.563225 11651 layer_factory.hpp:77] Creating layer roi-data
I0504 22:06:11.565239 11651 net.cpp:106] Creating Layer roi-data
I0504 22:06:11.565251 11651 net.cpp:454] roi-data <- rpn_rois
I0504 22:06:11.565268 11651 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0504 22:06:11.565274 11651 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0504 22:06:11.565277 11651 net.cpp:454] roi-data <- seg_mask_inds
I0504 22:06:11.565282 11651 net.cpp:454] roi-data <- flipped
I0504 22:06:11.565290 11651 net.cpp:411] roi-data -> rois
I0504 22:06:11.565300 11651 net.cpp:411] roi-data -> labels
I0504 22:06:11.565308 11651 net.cpp:411] roi-data -> bbox_targets
I0504 22:06:11.565315 11651 net.cpp:411] roi-data -> bbox_inside_weights
I0504 22:06:11.565322 11651 net.cpp:411] roi-data -> bbox_outside_weights
I0504 22:06:11.565330 11651 net.cpp:411] roi-data -> mask_targets
I0504 22:06:11.565337 11651 net.cpp:411] roi-data -> rois_pos
I0504 22:06:11.565344 11651 net.cpp:411] roi-data -> attrArray
I0504 22:06:11.565351 11651 net.cpp:411] roi-data -> attrArrayInd
I0504 22:06:11.565358 11651 net.cpp:411] roi-data -> attrArrayShift
I0504 22:06:11.565943 11651 net.cpp:150] Setting up roi-data
I0504 22:06:11.565956 11651 net.cpp:157] Top shape: 1 5 (5)
I0504 22:06:11.565960 11651 net.cpp:157] Top shape: 1 1 (1)
I0504 22:06:11.565966 11651 net.cpp:157] Top shape: 1 8 (8)
I0504 22:06:11.565970 11651 net.cpp:157] Top shape: 1 8 (8)
I0504 22:06:11.565974 11651 net.cpp:157] Top shape: 1 8 (8)
I0504 22:06:11.565980 11651 net.cpp:157] Top shape: 1 244 244 (59536)
I0504 22:06:11.565985 11651 net.cpp:157] Top shape: 1 5 (5)
I0504 22:06:11.565989 11651 net.cpp:157] Top shape: 1 7 (7)
I0504 22:06:11.565994 11651 net.cpp:157] Top shape: 1 7 (7)
I0504 22:06:11.565999 11651 net.cpp:157] Top shape: 1 7 (7)
I0504 22:06:11.566000 11651 net.cpp:165] Memory required for data: 1430768512
I0504 22:06:11.566005 11651 layer_factory.hpp:77] Creating layer roi_pool5
I0504 22:06:11.566020 11651 net.cpp:106] Creating Layer roi_pool5
I0504 22:06:11.566025 11651 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0504 22:06:11.566030 11651 net.cpp:454] roi_pool5 <- rois
I0504 22:06:11.566035 11651 net.cpp:411] roi_pool5 -> pool5
I0504 22:06:11.566045 11651 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0504 22:06:11.566155 11651 net.cpp:150] Setting up roi_pool5
I0504 22:06:11.566164 11651 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0504 22:06:11.566166 11651 net.cpp:165] Memory required for data: 1430868864
I0504 22:06:11.566169 11651 layer_factory.hpp:77] Creating layer fc6
I0504 22:06:11.566177 11651 net.cpp:106] Creating Layer fc6
I0504 22:06:11.566181 11651 net.cpp:454] fc6 <- pool5
I0504 22:06:11.566185 11651 net.cpp:411] fc6 -> fc6
I0504 22:06:11.728930 11651 net.cpp:150] Setting up fc6
I0504 22:06:11.728967 11651 net.cpp:157] Top shape: 1 4096 (4096)
I0504 22:06:11.728971 11651 net.cpp:165] Memory required for data: 1430885248
I0504 22:06:11.728987 11651 layer_factory.hpp:77] Creating layer relu6
I0504 22:06:11.729007 11651 net.cpp:106] Creating Layer relu6
I0504 22:06:11.729012 11651 net.cpp:454] relu6 <- fc6
I0504 22:06:11.729017 11651 net.cpp:397] relu6 -> fc6 (in-place)
I0504 22:06:11.729238 11651 net.cpp:150] Setting up relu6
I0504 22:06:11.729244 11651 net.cpp:157] Top shape: 1 4096 (4096)
I0504 22:06:11.729246 11651 net.cpp:165] Memory required for data: 1430901632
I0504 22:06:11.729249 11651 layer_factory.hpp:77] Creating layer fc7
I0504 22:06:11.729254 11651 net.cpp:106] Creating Layer fc7
I0504 22:06:11.729256 11651 net.cpp:454] fc7 <- fc6
I0504 22:06:11.729260 11651 net.cpp:411] fc7 -> fc7
I0504 22:06:11.753175 11651 net.cpp:150] Setting up fc7
I0504 22:06:11.753197 11651 net.cpp:157] Top shape: 1 4096 (4096)
I0504 22:06:11.753199 11651 net.cpp:165] Memory required for data: 1430918016
I0504 22:06:11.753207 11651 layer_factory.hpp:77] Creating layer relu7
I0504 22:06:11.753214 11651 net.cpp:106] Creating Layer relu7
I0504 22:06:11.753229 11651 net.cpp:454] relu7 <- fc7
I0504 22:06:11.753237 11651 net.cpp:397] relu7 -> fc7 (in-place)
I0504 22:06:11.753463 11651 net.cpp:150] Setting up relu7
I0504 22:06:11.753470 11651 net.cpp:157] Top shape: 1 4096 (4096)
I0504 22:06:11.753473 11651 net.cpp:165] Memory required for data: 1430934400
I0504 22:06:11.753474 11651 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0504 22:06:11.753479 11651 net.cpp:106] Creating Layer fc7_relu7_0_split
I0504 22:06:11.753482 11651 net.cpp:454] fc7_relu7_0_split <- fc7
I0504 22:06:11.753485 11651 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0504 22:06:11.753499 11651 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0504 22:06:11.753504 11651 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0504 22:06:11.753576 11651 net.cpp:150] Setting up fc7_relu7_0_split
I0504 22:06:11.753578 11651 net.cpp:157] Top shape: 1 4096 (4096)
I0504 22:06:11.753592 11651 net.cpp:157] Top shape: 1 4096 (4096)
I0504 22:06:11.753593 11651 net.cpp:157] Top shape: 1 4096 (4096)
I0504 22:06:11.753594 11651 net.cpp:165] Memory required for data: 1430983552
I0504 22:06:11.753597 11651 layer_factory.hpp:77] Creating layer attr_score
I0504 22:06:11.753610 11651 net.cpp:106] Creating Layer attr_score
I0504 22:06:11.753612 11651 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0504 22:06:11.753618 11651 net.cpp:411] attr_score -> attr_score
I0504 22:06:11.754302 11651 net.cpp:150] Setting up attr_score
I0504 22:06:11.754307 11651 net.cpp:157] Top shape: 1 7 (7)
I0504 22:06:11.754308 11651 net.cpp:165] Memory required for data: 1430983580
I0504 22:06:11.754312 11651 layer_factory.hpp:77] Creating layer attr_score_pos
I0504 22:06:11.754317 11651 net.cpp:106] Creating Layer attr_score_pos
I0504 22:06:11.754319 11651 net.cpp:454] attr_score_pos <- attr_score
I0504 22:06:11.754321 11651 net.cpp:454] attr_score_pos <- attrArrayInd
I0504 22:06:11.754324 11651 net.cpp:411] attr_score_pos -> attr_score_pos
I0504 22:06:11.754362 11651 net.cpp:150] Setting up attr_score_pos
I0504 22:06:11.754365 11651 net.cpp:157] Top shape: 1 7 (7)
I0504 22:06:11.754376 11651 net.cpp:165] Memory required for data: 1430983608
I0504 22:06:11.754377 11651 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0504 22:06:11.754381 11651 net.cpp:106] Creating Layer attr_score_pos_shift
I0504 22:06:11.754384 11651 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0504 22:06:11.754396 11651 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0504 22:06:11.754398 11651 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0504 22:06:11.754421 11651 net.cpp:150] Setting up attr_score_pos_shift
I0504 22:06:11.754424 11651 net.cpp:157] Top shape: 1 7 (7)
I0504 22:06:11.754426 11651 net.cpp:165] Memory required for data: 1430983636
I0504 22:06:11.754441 11651 layer_factory.hpp:77] Creating layer cls_score
I0504 22:06:11.754446 11651 net.cpp:106] Creating Layer cls_score
I0504 22:06:11.754448 11651 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0504 22:06:11.754451 11651 net.cpp:411] cls_score -> cls_score
I0504 22:06:11.754706 11651 net.cpp:150] Setting up cls_score
I0504 22:06:11.754710 11651 net.cpp:157] Top shape: 1 2 (2)
I0504 22:06:11.754714 11651 net.cpp:165] Memory required for data: 1430983644
I0504 22:06:11.754726 11651 layer_factory.hpp:77] Creating layer bbox_pred
I0504 22:06:11.754732 11651 net.cpp:106] Creating Layer bbox_pred
I0504 22:06:11.754734 11651 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0504 22:06:11.754746 11651 net.cpp:411] bbox_pred -> bbox_pred
I0504 22:06:11.755579 11651 net.cpp:150] Setting up bbox_pred
I0504 22:06:11.755584 11651 net.cpp:157] Top shape: 1 8 (8)
I0504 22:06:11.755584 11651 net.cpp:165] Memory required for data: 1430983676
I0504 22:06:11.755599 11651 layer_factory.hpp:77] Creating layer loss_attribute
I0504 22:06:11.755604 11651 net.cpp:106] Creating Layer loss_attribute
I0504 22:06:11.755621 11651 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0504 22:06:11.755623 11651 net.cpp:454] loss_attribute <- attrArray
I0504 22:06:11.755626 11651 net.cpp:411] loss_attribute -> loss_attribute
I0504 22:06:11.755681 11651 net.cpp:150] Setting up loss_attribute
I0504 22:06:11.755683 11651 net.cpp:157] Top shape: (1)
I0504 22:06:11.755686 11651 net.cpp:160]     with loss weight 1
I0504 22:06:11.755702 11651 net.cpp:165] Memory required for data: 1430983680
I0504 22:06:11.755704 11651 layer_factory.hpp:77] Creating layer loss_cls
I0504 22:06:11.755718 11651 net.cpp:106] Creating Layer loss_cls
I0504 22:06:11.755722 11651 net.cpp:454] loss_cls <- cls_score
I0504 22:06:11.755723 11651 net.cpp:454] loss_cls <- labels
I0504 22:06:11.755728 11651 net.cpp:411] loss_cls -> loss_cls
I0504 22:06:11.755731 11651 layer_factory.hpp:77] Creating layer loss_cls
I0504 22:06:11.756402 11651 net.cpp:150] Setting up loss_cls
I0504 22:06:11.756410 11651 net.cpp:157] Top shape: (1)
I0504 22:06:11.756412 11651 net.cpp:160]     with loss weight 3
I0504 22:06:11.756431 11651 net.cpp:165] Memory required for data: 1430983684
I0504 22:06:11.756433 11651 layer_factory.hpp:77] Creating layer loss_bbox
I0504 22:06:11.756453 11651 net.cpp:106] Creating Layer loss_bbox
I0504 22:06:11.756456 11651 net.cpp:454] loss_bbox <- bbox_pred
I0504 22:06:11.756469 11651 net.cpp:454] loss_bbox <- bbox_targets
I0504 22:06:11.756471 11651 net.cpp:454] loss_bbox <- bbox_inside_weights
I0504 22:06:11.756474 11651 net.cpp:454] loss_bbox <- bbox_outside_weights
I0504 22:06:11.756489 11651 net.cpp:411] loss_bbox -> loss_bbox
I0504 22:06:11.756569 11651 net.cpp:150] Setting up loss_bbox
I0504 22:06:11.756573 11651 net.cpp:157] Top shape: (1)
I0504 22:06:11.756575 11651 net.cpp:160]     with loss weight 2
I0504 22:06:11.756589 11651 net.cpp:165] Memory required for data: 1430983688
I0504 22:06:11.756592 11651 layer_factory.hpp:77] Creating layer roi_pool5_2
I0504 22:06:11.756595 11651 net.cpp:106] Creating Layer roi_pool5_2
I0504 22:06:11.756609 11651 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0504 22:06:11.756613 11651 net.cpp:454] roi_pool5_2 <- rois_pos
I0504 22:06:11.756615 11651 net.cpp:411] roi_pool5_2 -> pool5_2
I0504 22:06:11.756620 11651 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0504 22:06:11.756702 11651 net.cpp:150] Setting up roi_pool5_2
I0504 22:06:11.756706 11651 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0504 22:06:11.756708 11651 net.cpp:165] Memory required for data: 1431084040
I0504 22:06:11.756721 11651 layer_factory.hpp:77] Creating layer pool5_2_conv
I0504 22:06:11.756728 11651 net.cpp:106] Creating Layer pool5_2_conv
I0504 22:06:11.756741 11651 net.cpp:454] pool5_2_conv <- pool5_2
I0504 22:06:11.756743 11651 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0504 22:06:11.763267 11651 net.cpp:150] Setting up pool5_2_conv
I0504 22:06:11.763274 11651 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0504 22:06:11.763276 11651 net.cpp:165] Memory required for data: 1431184392
I0504 22:06:11.763280 11651 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0504 22:06:11.763286 11651 net.cpp:106] Creating Layer pool5_2_conv_relu
I0504 22:06:11.763288 11651 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0504 22:06:11.763301 11651 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0504 22:06:11.763455 11651 net.cpp:150] Setting up pool5_2_conv_relu
I0504 22:06:11.763461 11651 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0504 22:06:11.763463 11651 net.cpp:165] Memory required for data: 1431284744
I0504 22:06:11.763464 11651 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0504 22:06:11.763471 11651 net.cpp:106] Creating Layer pool5_2_conv2
I0504 22:06:11.763473 11651 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0504 22:06:11.763478 11651 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0504 22:06:11.813858 11651 net.cpp:150] Setting up pool5_2_conv2
I0504 22:06:11.813874 11651 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0504 22:06:11.813877 11651 net.cpp:165] Memory required for data: 1431385096
I0504 22:06:11.813884 11651 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0504 22:06:11.813892 11651 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0504 22:06:11.813906 11651 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0504 22:06:11.813912 11651 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0504 22:06:11.814105 11651 net.cpp:150] Setting up pool5_2_conv2_relu
I0504 22:06:11.814111 11651 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0504 22:06:11.814113 11651 net.cpp:165] Memory required for data: 1431485448
I0504 22:06:11.814116 11651 layer_factory.hpp:77] Creating layer mask_deconv1
I0504 22:06:11.814402 11651 net.cpp:106] Creating Layer mask_deconv1
I0504 22:06:11.814407 11651 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0504 22:06:11.814411 11651 net.cpp:411] mask_deconv1 -> mask_deconv1
I0504 22:06:11.815275 11651 net.cpp:150] Setting up mask_deconv1
I0504 22:06:11.815281 11651 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0504 22:06:11.815284 11651 net.cpp:165] Memory required for data: 1432407048
I0504 22:06:11.815287 11651 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0504 22:06:11.815297 11651 net.cpp:106] Creating Layer pool5_2_conv3
I0504 22:06:11.815300 11651 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0504 22:06:11.815305 11651 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0504 22:06:11.841243 11651 net.cpp:150] Setting up pool5_2_conv3
I0504 22:06:11.841257 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.841259 11651 net.cpp:165] Memory required for data: 1434250248
I0504 22:06:11.841266 11651 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0504 22:06:11.841272 11651 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0504 22:06:11.841276 11651 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0504 22:06:11.841291 11651 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0504 22:06:11.841452 11651 net.cpp:150] Setting up pool5_2_conv3_relu
I0504 22:06:11.841459 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.841460 11651 net.cpp:165] Memory required for data: 1436093448
I0504 22:06:11.841462 11651 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0504 22:06:11.841470 11651 net.cpp:106] Creating Layer pool5_2_conv4
I0504 22:06:11.841471 11651 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0504 22:06:11.841475 11651 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0504 22:06:11.891216 11651 net.cpp:150] Setting up pool5_2_conv4
I0504 22:06:11.891233 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.891237 11651 net.cpp:165] Memory required for data: 1437936648
I0504 22:06:11.891243 11651 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0504 22:06:11.891250 11651 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0504 22:06:11.891265 11651 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0504 22:06:11.891270 11651 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0504 22:06:11.891409 11651 net.cpp:150] Setting up pool5_2_conv4_relu
I0504 22:06:11.891417 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.891417 11651 net.cpp:165] Memory required for data: 1439779848
I0504 22:06:11.891419 11651 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0504 22:06:11.891424 11651 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0504 22:06:11.891427 11651 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0504 22:06:11.891429 11651 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0504 22:06:11.891433 11651 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0504 22:06:11.891448 11651 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0504 22:06:11.891451 11651 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0504 22:06:11.891500 11651 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0504 22:06:11.891503 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.891505 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.891507 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.891510 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.891511 11651 net.cpp:165] Memory required for data: 1447152648
I0504 22:06:11.891512 11651 layer_factory.hpp:77] Creating layer query_conv
I0504 22:06:11.891520 11651 net.cpp:106] Creating Layer query_conv
I0504 22:06:11.891532 11651 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0504 22:06:11.891536 11651 net.cpp:411] query_conv -> query_conv
I0504 22:06:11.893097 11651 net.cpp:150] Setting up query_conv
I0504 22:06:11.893105 11651 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0504 22:06:11.893107 11651 net.cpp:165] Memory required for data: 1447383048
I0504 22:06:11.893111 11651 layer_factory.hpp:77] Creating layer key_conv
I0504 22:06:11.893119 11651 net.cpp:106] Creating Layer key_conv
I0504 22:06:11.893132 11651 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0504 22:06:11.893137 11651 net.cpp:411] key_conv -> key_conv
I0504 22:06:11.894731 11651 net.cpp:150] Setting up key_conv
I0504 22:06:11.894739 11651 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0504 22:06:11.894742 11651 net.cpp:165] Memory required for data: 1447613448
I0504 22:06:11.894745 11651 layer_factory.hpp:77] Creating layer value_conv
I0504 22:06:11.894753 11651 net.cpp:106] Creating Layer value_conv
I0504 22:06:11.894755 11651 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0504 22:06:11.894769 11651 net.cpp:411] value_conv -> value_conv
I0504 22:06:11.901569 11651 net.cpp:150] Setting up value_conv
I0504 22:06:11.901579 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.901582 11651 net.cpp:165] Memory required for data: 1449456648
I0504 22:06:11.901587 11651 layer_factory.hpp:77] Creating layer query_conv_reshape
I0504 22:06:11.901592 11651 net.cpp:106] Creating Layer query_conv_reshape
I0504 22:06:11.901595 11651 net.cpp:454] query_conv_reshape <- query_conv
I0504 22:06:11.901609 11651 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0504 22:06:11.901639 11651 net.cpp:150] Setting up query_conv_reshape
I0504 22:06:11.901643 11651 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0504 22:06:11.901655 11651 net.cpp:165] Memory required for data: 1449687048
I0504 22:06:11.901657 11651 layer_factory.hpp:77] Creating layer key_conv_reshape
I0504 22:06:11.901660 11651 net.cpp:106] Creating Layer key_conv_reshape
I0504 22:06:11.901664 11651 net.cpp:454] key_conv_reshape <- key_conv
I0504 22:06:11.901666 11651 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0504 22:06:11.901680 11651 net.cpp:150] Setting up key_conv_reshape
I0504 22:06:11.901693 11651 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0504 22:06:11.901695 11651 net.cpp:165] Memory required for data: 1449917448
I0504 22:06:11.901696 11651 layer_factory.hpp:77] Creating layer value_conv_reshape
I0504 22:06:11.901698 11651 net.cpp:106] Creating Layer value_conv_reshape
I0504 22:06:11.901715 11651 net.cpp:454] value_conv_reshape <- value_conv
I0504 22:06:11.901716 11651 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0504 22:06:11.901751 11651 net.cpp:150] Setting up value_conv_reshape
I0504 22:06:11.901754 11651 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0504 22:06:11.901755 11651 net.cpp:165] Memory required for data: 1451760648
I0504 22:06:11.901757 11651 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0504 22:06:11.902210 11651 net.cpp:106] Creating Layer query_conv_reshape_perm
I0504 22:06:11.902215 11651 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0504 22:06:11.902220 11651 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0504 22:06:11.902290 11651 net.cpp:150] Setting up query_conv_reshape_perm
I0504 22:06:11.902297 11651 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0504 22:06:11.902297 11651 net.cpp:165] Memory required for data: 1451991048
I0504 22:06:11.902299 11651 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0504 22:06:11.902302 11651 net.cpp:106] Creating Layer key_conv_reshape_perm
I0504 22:06:11.902304 11651 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0504 22:06:11.902307 11651 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0504 22:06:11.902369 11651 net.cpp:150] Setting up key_conv_reshape_perm
I0504 22:06:11.902375 11651 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0504 22:06:11.902379 11651 net.cpp:165] Memory required for data: 1452221448
I0504 22:06:11.902380 11651 layer_factory.hpp:77] Creating layer energy
I0504 22:06:11.902384 11651 net.cpp:106] Creating Layer energy
I0504 22:06:11.902385 11651 net.cpp:454] energy <- query_conv_reshape_perm
I0504 22:06:11.902388 11651 net.cpp:454] energy <- key_conv_reshape_perm
I0504 22:06:11.902392 11651 net.cpp:411] energy -> energy
I0504 22:06:11.902408 11651 net.cpp:150] Setting up energy
I0504 22:06:11.902411 11651 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0504 22:06:11.902413 11651 net.cpp:165] Memory required for data: 1455461448
I0504 22:06:11.902415 11651 layer_factory.hpp:77] Creating layer attention
I0504 22:06:11.902418 11651 net.cpp:106] Creating Layer attention
I0504 22:06:11.902420 11651 net.cpp:454] attention <- energy
I0504 22:06:11.902423 11651 net.cpp:411] attention -> attention
I0504 22:06:11.902593 11651 net.cpp:150] Setting up attention
I0504 22:06:11.902599 11651 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0504 22:06:11.902601 11651 net.cpp:165] Memory required for data: 1458701448
I0504 22:06:11.902603 11651 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0504 22:06:11.902607 11651 net.cpp:106] Creating Layer value_conv_reshape_perm
I0504 22:06:11.902609 11651 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0504 22:06:11.902614 11651 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0504 22:06:11.902681 11651 net.cpp:150] Setting up value_conv_reshape_perm
I0504 22:06:11.902685 11651 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0504 22:06:11.902686 11651 net.cpp:165] Memory required for data: 1460544648
I0504 22:06:11.902688 11651 layer_factory.hpp:77] Creating layer attention_perm
I0504 22:06:11.902693 11651 net.cpp:106] Creating Layer attention_perm
I0504 22:06:11.902694 11651 net.cpp:454] attention_perm <- attention
I0504 22:06:11.902698 11651 net.cpp:411] attention_perm -> attention_perm
I0504 22:06:11.902761 11651 net.cpp:150] Setting up attention_perm
I0504 22:06:11.902765 11651 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0504 22:06:11.902766 11651 net.cpp:165] Memory required for data: 1463784648
I0504 22:06:11.902768 11651 layer_factory.hpp:77] Creating layer out
I0504 22:06:11.902771 11651 net.cpp:106] Creating Layer out
I0504 22:06:11.902773 11651 net.cpp:454] out <- value_conv_reshape_perm
I0504 22:06:11.902776 11651 net.cpp:454] out <- attention_perm
I0504 22:06:11.902778 11651 net.cpp:411] out -> out
I0504 22:06:11.902792 11651 net.cpp:150] Setting up out
I0504 22:06:11.902796 11651 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0504 22:06:11.902798 11651 net.cpp:165] Memory required for data: 1465627848
I0504 22:06:11.902801 11651 layer_factory.hpp:77] Creating layer out_reshape
I0504 22:06:11.902803 11651 net.cpp:106] Creating Layer out_reshape
I0504 22:06:11.902806 11651 net.cpp:454] out_reshape <- out
I0504 22:06:11.902809 11651 net.cpp:411] out_reshape -> out_reshape
I0504 22:06:11.902823 11651 net.cpp:150] Setting up out_reshape
I0504 22:06:11.902827 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.902829 11651 net.cpp:165] Memory required for data: 1467471048
I0504 22:06:11.902832 11651 layer_factory.hpp:77] Creating layer out_reshape_scale
I0504 22:06:11.902837 11651 net.cpp:106] Creating Layer out_reshape_scale
I0504 22:06:11.902839 11651 net.cpp:454] out_reshape_scale <- out_reshape
I0504 22:06:11.902843 11651 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0504 22:06:11.902904 11651 net.cpp:150] Setting up out_reshape_scale
I0504 22:06:11.902907 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.902909 11651 net.cpp:165] Memory required for data: 1469314248
I0504 22:06:11.902912 11651 layer_factory.hpp:77] Creating layer out_x
I0504 22:06:11.902920 11651 net.cpp:106] Creating Layer out_x
I0504 22:06:11.902922 11651 net.cpp:454] out_x <- out_reshape_scale
I0504 22:06:11.902925 11651 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0504 22:06:11.902928 11651 net.cpp:411] out_x -> out_x
I0504 22:06:11.902945 11651 net.cpp:150] Setting up out_x
I0504 22:06:11.902949 11651 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0504 22:06:11.902951 11651 net.cpp:165] Memory required for data: 1471157448
I0504 22:06:11.902952 11651 layer_factory.hpp:77] Creating layer mask_deconv2
I0504 22:06:11.902958 11651 net.cpp:106] Creating Layer mask_deconv2
I0504 22:06:11.902961 11651 net.cpp:454] mask_deconv2 <- out_x
I0504 22:06:11.902964 11651 net.cpp:411] mask_deconv2 -> mask_deconv2
I0504 22:06:11.903789 11651 net.cpp:150] Setting up mask_deconv2
I0504 22:06:11.903795 11651 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0504 22:06:11.903796 11651 net.cpp:165] Memory required for data: 1486398664
I0504 22:06:11.903800 11651 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0504 22:06:11.903807 11651 net.cpp:106] Creating Layer pool5_2_conv5
I0504 22:06:11.903810 11651 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0504 22:06:11.903815 11651 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0504 22:06:11.929785 11651 net.cpp:150] Setting up pool5_2_conv5
I0504 22:06:11.929800 11651 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0504 22:06:11.929802 11651 net.cpp:165] Memory required for data: 1516881096
I0504 22:06:11.929808 11651 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0504 22:06:11.929816 11651 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0504 22:06:11.929829 11651 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0504 22:06:11.929833 11651 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0504 22:06:11.929993 11651 net.cpp:150] Setting up pool5_2_conv5_relu
I0504 22:06:11.929999 11651 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0504 22:06:11.930001 11651 net.cpp:165] Memory required for data: 1547363528
I0504 22:06:11.930003 11651 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0504 22:06:11.930011 11651 net.cpp:106] Creating Layer pool5_2_conv6
I0504 22:06:11.930012 11651 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0504 22:06:11.930016 11651 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0504 22:06:11.979477 11651 net.cpp:150] Setting up pool5_2_conv6
I0504 22:06:11.979496 11651 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0504 22:06:11.979497 11651 net.cpp:165] Memory required for data: 1577845960
I0504 22:06:11.979511 11651 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0504 22:06:11.979529 11651 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0504 22:06:11.979533 11651 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0504 22:06:11.979550 11651 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0504 22:06:11.980098 11651 net.cpp:150] Setting up pool5_2_conv6_relu
I0504 22:06:11.980104 11651 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0504 22:06:11.980106 11651 net.cpp:165] Memory required for data: 1608328392
I0504 22:06:11.980108 11651 layer_factory.hpp:77] Creating layer mask_deconv3
I0504 22:06:11.980115 11651 net.cpp:106] Creating Layer mask_deconv3
I0504 22:06:11.980118 11651 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0504 22:06:11.980134 11651 net.cpp:411] mask_deconv3 -> mask_deconv3
I0504 22:06:11.980499 11651 net.cpp:150] Setting up mask_deconv3
I0504 22:06:11.980504 11651 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0504 22:06:11.980506 11651 net.cpp:165] Memory required for data: 1669293256
I0504 22:06:11.980509 11651 layer_factory.hpp:77] Creating layer mask_score
I0504 22:06:11.980520 11651 net.cpp:106] Creating Layer mask_score
I0504 22:06:11.980521 11651 net.cpp:454] mask_score <- mask_deconv3
I0504 22:06:11.980535 11651 net.cpp:411] mask_score -> mask_score
I0504 22:06:11.981124 11651 net.cpp:150] Setting up mask_score
I0504 22:06:11.981132 11651 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0504 22:06:11.981133 11651 net.cpp:165] Memory required for data: 1671198408
I0504 22:06:11.981137 11651 layer_factory.hpp:77] Creating layer loss_mask
I0504 22:06:11.981142 11651 net.cpp:106] Creating Layer loss_mask
I0504 22:06:11.981144 11651 net.cpp:454] loss_mask <- mask_score
I0504 22:06:11.981146 11651 net.cpp:454] loss_mask <- mask_targets
I0504 22:06:11.981160 11651 net.cpp:411] loss_mask -> loss_mask
I0504 22:06:11.981165 11651 layer_factory.hpp:77] Creating layer loss_mask
I0504 22:06:11.982436 11651 net.cpp:150] Setting up loss_mask
I0504 22:06:11.982445 11651 net.cpp:157] Top shape: (1)
I0504 22:06:11.982446 11651 net.cpp:160]     with loss weight 3
I0504 22:06:11.982452 11651 net.cpp:165] Memory required for data: 1671198412
I0504 22:06:11.982455 11651 net.cpp:226] loss_mask needs backward computation.
I0504 22:06:11.982457 11651 net.cpp:226] mask_score needs backward computation.
I0504 22:06:11.982458 11651 net.cpp:226] mask_deconv3 needs backward computation.
I0504 22:06:11.982460 11651 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0504 22:06:11.982472 11651 net.cpp:226] pool5_2_conv6 needs backward computation.
I0504 22:06:11.982475 11651 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0504 22:06:11.982476 11651 net.cpp:226] pool5_2_conv5 needs backward computation.
I0504 22:06:11.982477 11651 net.cpp:226] mask_deconv2 needs backward computation.
I0504 22:06:11.982479 11651 net.cpp:226] out_x needs backward computation.
I0504 22:06:11.982492 11651 net.cpp:226] out_reshape_scale needs backward computation.
I0504 22:06:11.982494 11651 net.cpp:226] out_reshape needs backward computation.
I0504 22:06:11.982496 11651 net.cpp:226] out needs backward computation.
I0504 22:06:11.982498 11651 net.cpp:226] attention_perm needs backward computation.
I0504 22:06:11.982501 11651 net.cpp:226] value_conv_reshape_perm needs backward computation.
I0504 22:06:11.982502 11651 net.cpp:226] attention needs backward computation.
I0504 22:06:11.982504 11651 net.cpp:226] energy needs backward computation.
I0504 22:06:11.982507 11651 net.cpp:226] key_conv_reshape_perm needs backward computation.
I0504 22:06:11.982509 11651 net.cpp:226] query_conv_reshape_perm needs backward computation.
I0504 22:06:11.982520 11651 net.cpp:226] value_conv_reshape needs backward computation.
I0504 22:06:11.982522 11651 net.cpp:226] key_conv_reshape needs backward computation.
I0504 22:06:11.982524 11651 net.cpp:226] query_conv_reshape needs backward computation.
I0504 22:06:11.982527 11651 net.cpp:226] value_conv needs backward computation.
I0504 22:06:11.982540 11651 net.cpp:226] key_conv needs backward computation.
I0504 22:06:11.982542 11651 net.cpp:226] query_conv needs backward computation.
I0504 22:06:11.982544 11651 net.cpp:226] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split needs backward computation.
I0504 22:06:11.982547 11651 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0504 22:06:11.982548 11651 net.cpp:226] pool5_2_conv4 needs backward computation.
I0504 22:06:11.982551 11651 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0504 22:06:11.982553 11651 net.cpp:226] pool5_2_conv3 needs backward computation.
I0504 22:06:11.982555 11651 net.cpp:226] mask_deconv1 needs backward computation.
I0504 22:06:11.982558 11651 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0504 22:06:11.982568 11651 net.cpp:226] pool5_2_conv2 needs backward computation.
I0504 22:06:11.982570 11651 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0504 22:06:11.982573 11651 net.cpp:226] pool5_2_conv needs backward computation.
I0504 22:06:11.982586 11651 net.cpp:226] roi_pool5_2 needs backward computation.
I0504 22:06:11.982589 11651 net.cpp:226] loss_bbox needs backward computation.
I0504 22:06:11.982592 11651 net.cpp:226] loss_cls needs backward computation.
I0504 22:06:11.982594 11651 net.cpp:226] loss_attribute needs backward computation.
I0504 22:06:11.982597 11651 net.cpp:226] bbox_pred needs backward computation.
I0504 22:06:11.982600 11651 net.cpp:226] cls_score needs backward computation.
I0504 22:06:11.982602 11651 net.cpp:226] attr_score_pos_shift needs backward computation.
I0504 22:06:11.982604 11651 net.cpp:226] attr_score_pos needs backward computation.
I0504 22:06:11.982616 11651 net.cpp:226] attr_score needs backward computation.
I0504 22:06:11.982619 11651 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0504 22:06:11.982620 11651 net.cpp:226] relu7 needs backward computation.
I0504 22:06:11.982622 11651 net.cpp:226] fc7 needs backward computation.
I0504 22:06:11.982625 11651 net.cpp:226] relu6 needs backward computation.
I0504 22:06:11.982626 11651 net.cpp:226] fc6 needs backward computation.
I0504 22:06:11.982628 11651 net.cpp:226] roi_pool5 needs backward computation.
I0504 22:06:11.982630 11651 net.cpp:226] roi-data needs backward computation.
I0504 22:06:11.982636 11651 net.cpp:226] proposal needs backward computation.
I0504 22:06:11.982640 11651 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0504 22:06:11.982641 11651 net.cpp:226] rpn_cls_prob needs backward computation.
I0504 22:06:11.982645 11651 net.cpp:226] rpn_loss_bbox needs backward computation.
I0504 22:06:11.982647 11651 net.cpp:226] rpn_loss_cls needs backward computation.
I0504 22:06:11.982650 11651 net.cpp:226] rpn-data needs backward computation.
I0504 22:06:11.982653 11651 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0504 22:06:11.982656 11651 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0504 22:06:11.982658 11651 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0504 22:06:11.982661 11651 net.cpp:226] rpn_bbox_pred needs backward computation.
I0504 22:06:11.982663 11651 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0504 22:06:11.982666 11651 net.cpp:226] rpn_cls_score needs backward computation.
I0504 22:06:11.982667 11651 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0504 22:06:11.982671 11651 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0504 22:06:11.982671 11651 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0504 22:06:11.982674 11651 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0504 22:06:11.982676 11651 net.cpp:226] relu5_3 needs backward computation.
I0504 22:06:11.982679 11651 net.cpp:226] conv5_3 needs backward computation.
I0504 22:06:11.982681 11651 net.cpp:226] relu5_2 needs backward computation.
I0504 22:06:11.982682 11651 net.cpp:226] conv5_2 needs backward computation.
I0504 22:06:11.982686 11651 net.cpp:226] relu5_1 needs backward computation.
I0504 22:06:11.982687 11651 net.cpp:226] conv5_1 needs backward computation.
I0504 22:06:11.982689 11651 net.cpp:226] pool4 needs backward computation.
I0504 22:06:11.982692 11651 net.cpp:226] relu4_3 needs backward computation.
I0504 22:06:11.982693 11651 net.cpp:226] conv4_3 needs backward computation.
I0504 22:06:11.982695 11651 net.cpp:226] relu4_2 needs backward computation.
I0504 22:06:11.982697 11651 net.cpp:226] conv4_2 needs backward computation.
I0504 22:06:11.982699 11651 net.cpp:226] relu4_1 needs backward computation.
I0504 22:06:11.982702 11651 net.cpp:226] conv4_1 needs backward computation.
I0504 22:06:11.982703 11651 net.cpp:226] pool3 needs backward computation.
I0504 22:06:11.982705 11651 net.cpp:226] relu3_3 needs backward computation.
I0504 22:06:11.982707 11651 net.cpp:226] conv3_3 needs backward computation.
I0504 22:06:11.982709 11651 net.cpp:226] relu3_2 needs backward computation.
I0504 22:06:11.982712 11651 net.cpp:226] conv3_2 needs backward computation.
I0504 22:06:11.982712 11651 net.cpp:226] relu3_1 needs backward computation.
I0504 22:06:11.982714 11651 net.cpp:226] conv3_1 needs backward computation.
I0504 22:06:11.982717 11651 net.cpp:228] pool2 does not need backward computation.
I0504 22:06:11.982719 11651 net.cpp:228] relu2_2 does not need backward computation.
I0504 22:06:11.982722 11651 net.cpp:228] conv2_2 does not need backward computation.
I0504 22:06:11.982724 11651 net.cpp:228] relu2_1 does not need backward computation.
I0504 22:06:11.982726 11651 net.cpp:228] conv2_1 does not need backward computation.
I0504 22:06:11.982728 11651 net.cpp:228] pool1 does not need backward computation.
I0504 22:06:11.982731 11651 net.cpp:228] relu1_2 does not need backward computation.
I0504 22:06:11.982733 11651 net.cpp:228] conv1_2 does not need backward computation.
I0504 22:06:11.982735 11651 net.cpp:228] relu1_1 does not need backward computation.
I0504 22:06:11.982738 11651 net.cpp:228] conv1_1 does not need backward computation.
I0504 22:06:11.982739 11651 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0504 22:06:11.982743 11651 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0504 22:06:11.982745 11651 net.cpp:228] data_input-data_0_split does not need backward computation.
I0504 22:06:11.982748 11651 net.cpp:228] input-data does not need backward computation.
I0504 22:06:11.982751 11651 net.cpp:270] This network produces output loss_attribute
I0504 22:06:11.982753 11651 net.cpp:270] This network produces output loss_bbox
I0504 22:06:11.982755 11651 net.cpp:270] This network produces output loss_cls
I0504 22:06:11.982758 11651 net.cpp:270] This network produces output loss_mask
I0504 22:06:11.982758 11651 net.cpp:270] This network produces output rpn_cls_loss
I0504 22:06:11.982760 11651 net.cpp:270] This network produces output rpn_loss_bbox
I0504 22:06:11.982810 11651 net.cpp:283] Network initialization done.
I0504 22:06:11.982981 11651 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/vgg16_faster_rcnn_iter_imgwise_pam_attri_85000.caffemodel
F0504 22:06:11.984828 11651 io.cpp:54] Check failed: fd != -1 (-1 vs. -1) File not found: data/imagenet_models/vgg16_faster_rcnn_iter_imgwise_pam_attri_85000.caffemodel
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 11651 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/vgg16_faster_rcnn_iter_imgwise_pam_attri_85000.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
