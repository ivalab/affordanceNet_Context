+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_16-03-44
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_16-03-44
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0625 16:03:51.758467 29656 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0625 16:03:51.758496 29656 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0625 16:03:51.760275 29656 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "pool5_2_conv4_relu"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "mask_score"
  top: "mask_score_softmax"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "log"
  type: "Log"
  bottom: "mask_score_softmax"
  top: "log"
}
layer {
  name: "mult1"
  type: "Eltwise"
  bottom: "log"
  bottom: "mask_targets"
  top: "mult1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cross_entropy"
  type: "Power"
  bottom: "mult1"
  top: "cross_entropy"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "ce_sum"
  type: "Convolution"
  bottom: "cross_entropy"
  top: "cross_entropy_sum"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 1
    weight_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "ce_mean"
  type: "Reduction"
  bottom: "cross_entropy_sum"
  top: "cross_entropy_mean"
  loss_weight: 1
  reduction_param {
    operation: MEAN
    axis: 0
  }
}
I0625 16:03:51.760620 29656 layer_factory.hpp:77] Creating layer input-data
I0625 16:03:51.786051 29656 net.cpp:106] Creating Layer input-data
I0625 16:03:51.786070 29656 net.cpp:411] input-data -> data
I0625 16:03:51.786082 29656 net.cpp:411] input-data -> im_info
I0625 16:03:51.786088 29656 net.cpp:411] input-data -> gt_boxes
I0625 16:03:51.786093 29656 net.cpp:411] input-data -> seg_mask_inds
I0625 16:03:51.786098 29656 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0625 16:03:51.797533 29656 net.cpp:150] Setting up input-data
I0625 16:03:51.797561 29656 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:03:51.797580 29656 net.cpp:157] Top shape: 1 3 (3)
I0625 16:03:51.797585 29656 net.cpp:157] Top shape: 1 4 (4)
I0625 16:03:51.797600 29656 net.cpp:157] Top shape: 1 2 (2)
I0625 16:03:51.797605 29656 net.cpp:157] Top shape: 1 1 (1)
I0625 16:03:51.797608 29656 net.cpp:165] Memory required for data: 7200040
I0625 16:03:51.797631 29656 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0625 16:03:51.797655 29656 net.cpp:106] Creating Layer data_input-data_0_split
I0625 16:03:51.797668 29656 net.cpp:454] data_input-data_0_split <- data
I0625 16:03:51.797675 29656 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0625 16:03:51.797684 29656 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0625 16:03:51.797708 29656 net.cpp:150] Setting up data_input-data_0_split
I0625 16:03:51.797714 29656 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:03:51.797719 29656 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:03:51.797721 29656 net.cpp:165] Memory required for data: 21600040
I0625 16:03:51.797725 29656 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0625 16:03:51.797730 29656 net.cpp:106] Creating Layer im_info_input-data_1_split
I0625 16:03:51.797734 29656 net.cpp:454] im_info_input-data_1_split <- im_info
I0625 16:03:51.797739 29656 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0625 16:03:51.797745 29656 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0625 16:03:51.797752 29656 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0625 16:03:51.797780 29656 net.cpp:150] Setting up im_info_input-data_1_split
I0625 16:03:51.797785 29656 net.cpp:157] Top shape: 1 3 (3)
I0625 16:03:51.797791 29656 net.cpp:157] Top shape: 1 3 (3)
I0625 16:03:51.797794 29656 net.cpp:157] Top shape: 1 3 (3)
I0625 16:03:51.797797 29656 net.cpp:165] Memory required for data: 21600076
I0625 16:03:51.797811 29656 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0625 16:03:51.797816 29656 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0625 16:03:51.797819 29656 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0625 16:03:51.797824 29656 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0625 16:03:51.797829 29656 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0625 16:03:51.797852 29656 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0625 16:03:51.797855 29656 net.cpp:157] Top shape: 1 4 (4)
I0625 16:03:51.797859 29656 net.cpp:157] Top shape: 1 4 (4)
I0625 16:03:51.797863 29656 net.cpp:165] Memory required for data: 21600108
I0625 16:03:51.797866 29656 layer_factory.hpp:77] Creating layer conv1_1
I0625 16:03:51.797876 29656 net.cpp:106] Creating Layer conv1_1
I0625 16:03:51.797879 29656 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0625 16:03:51.797883 29656 net.cpp:411] conv1_1 -> conv1_1
I0625 16:03:52.062198 29656 net.cpp:150] Setting up conv1_1
I0625 16:03:52.062217 29656 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:03:52.062220 29656 net.cpp:165] Memory required for data: 175200108
I0625 16:03:52.062232 29656 layer_factory.hpp:77] Creating layer relu1_1
I0625 16:03:52.062240 29656 net.cpp:106] Creating Layer relu1_1
I0625 16:03:52.062243 29656 net.cpp:454] relu1_1 <- conv1_1
I0625 16:03:52.062247 29656 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0625 16:03:52.062407 29656 net.cpp:150] Setting up relu1_1
I0625 16:03:52.062412 29656 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:03:52.062414 29656 net.cpp:165] Memory required for data: 328800108
I0625 16:03:52.062417 29656 layer_factory.hpp:77] Creating layer conv1_2
I0625 16:03:52.062422 29656 net.cpp:106] Creating Layer conv1_2
I0625 16:03:52.062424 29656 net.cpp:454] conv1_2 <- conv1_1
I0625 16:03:52.062427 29656 net.cpp:411] conv1_2 -> conv1_2
I0625 16:03:52.064606 29656 net.cpp:150] Setting up conv1_2
I0625 16:03:52.064616 29656 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:03:52.064620 29656 net.cpp:165] Memory required for data: 482400108
I0625 16:03:52.064625 29656 layer_factory.hpp:77] Creating layer relu1_2
I0625 16:03:52.064630 29656 net.cpp:106] Creating Layer relu1_2
I0625 16:03:52.064632 29656 net.cpp:454] relu1_2 <- conv1_2
I0625 16:03:52.064635 29656 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0625 16:03:52.064769 29656 net.cpp:150] Setting up relu1_2
I0625 16:03:52.064775 29656 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:03:52.064787 29656 net.cpp:165] Memory required for data: 636000108
I0625 16:03:52.064788 29656 layer_factory.hpp:77] Creating layer pool1
I0625 16:03:52.064805 29656 net.cpp:106] Creating Layer pool1
I0625 16:03:52.064807 29656 net.cpp:454] pool1 <- conv1_2
I0625 16:03:52.064810 29656 net.cpp:411] pool1 -> pool1
I0625 16:03:52.064852 29656 net.cpp:150] Setting up pool1
I0625 16:03:52.064857 29656 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0625 16:03:52.064867 29656 net.cpp:165] Memory required for data: 674400108
I0625 16:03:52.064869 29656 layer_factory.hpp:77] Creating layer conv2_1
I0625 16:03:52.064885 29656 net.cpp:106] Creating Layer conv2_1
I0625 16:03:52.064888 29656 net.cpp:454] conv2_1 <- pool1
I0625 16:03:52.064893 29656 net.cpp:411] conv2_1 -> conv2_1
I0625 16:03:52.066797 29656 net.cpp:150] Setting up conv2_1
I0625 16:03:52.066807 29656 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:03:52.066809 29656 net.cpp:165] Memory required for data: 751200108
I0625 16:03:52.066817 29656 layer_factory.hpp:77] Creating layer relu2_1
I0625 16:03:52.066823 29656 net.cpp:106] Creating Layer relu2_1
I0625 16:03:52.066824 29656 net.cpp:454] relu2_1 <- conv2_1
I0625 16:03:52.066828 29656 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0625 16:03:52.067291 29656 net.cpp:150] Setting up relu2_1
I0625 16:03:52.067298 29656 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:03:52.067301 29656 net.cpp:165] Memory required for data: 828000108
I0625 16:03:52.067302 29656 layer_factory.hpp:77] Creating layer conv2_2
I0625 16:03:52.067311 29656 net.cpp:106] Creating Layer conv2_2
I0625 16:03:52.067313 29656 net.cpp:454] conv2_2 <- conv2_1
I0625 16:03:52.067317 29656 net.cpp:411] conv2_2 -> conv2_2
I0625 16:03:52.068599 29656 net.cpp:150] Setting up conv2_2
I0625 16:03:52.068608 29656 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:03:52.068610 29656 net.cpp:165] Memory required for data: 904800108
I0625 16:03:52.068614 29656 layer_factory.hpp:77] Creating layer relu2_2
I0625 16:03:52.068619 29656 net.cpp:106] Creating Layer relu2_2
I0625 16:03:52.068620 29656 net.cpp:454] relu2_2 <- conv2_2
I0625 16:03:52.068622 29656 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0625 16:03:52.068753 29656 net.cpp:150] Setting up relu2_2
I0625 16:03:52.068758 29656 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:03:52.068759 29656 net.cpp:165] Memory required for data: 981600108
I0625 16:03:52.068761 29656 layer_factory.hpp:77] Creating layer pool2
I0625 16:03:52.068765 29656 net.cpp:106] Creating Layer pool2
I0625 16:03:52.068768 29656 net.cpp:454] pool2 <- conv2_2
I0625 16:03:52.068769 29656 net.cpp:411] pool2 -> pool2
I0625 16:03:52.068815 29656 net.cpp:150] Setting up pool2
I0625 16:03:52.068819 29656 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0625 16:03:52.068819 29656 net.cpp:165] Memory required for data: 1000800108
I0625 16:03:52.068831 29656 layer_factory.hpp:77] Creating layer conv3_1
I0625 16:03:52.068836 29656 net.cpp:106] Creating Layer conv3_1
I0625 16:03:52.068838 29656 net.cpp:454] conv3_1 <- pool2
I0625 16:03:52.068841 29656 net.cpp:411] conv3_1 -> conv3_1
I0625 16:03:52.070592 29656 net.cpp:150] Setting up conv3_1
I0625 16:03:52.070600 29656 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:03:52.070602 29656 net.cpp:165] Memory required for data: 1039200108
I0625 16:03:52.070608 29656 layer_factory.hpp:77] Creating layer relu3_1
I0625 16:03:52.070612 29656 net.cpp:106] Creating Layer relu3_1
I0625 16:03:52.070616 29656 net.cpp:454] relu3_1 <- conv3_1
I0625 16:03:52.070617 29656 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0625 16:03:52.070746 29656 net.cpp:150] Setting up relu3_1
I0625 16:03:52.070751 29656 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:03:52.070752 29656 net.cpp:165] Memory required for data: 1077600108
I0625 16:03:52.070755 29656 layer_factory.hpp:77] Creating layer conv3_2
I0625 16:03:52.070761 29656 net.cpp:106] Creating Layer conv3_2
I0625 16:03:52.070763 29656 net.cpp:454] conv3_2 <- conv3_1
I0625 16:03:52.070776 29656 net.cpp:411] conv3_2 -> conv3_2
I0625 16:03:52.072850 29656 net.cpp:150] Setting up conv3_2
I0625 16:03:52.072870 29656 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:03:52.072872 29656 net.cpp:165] Memory required for data: 1116000108
I0625 16:03:52.072878 29656 layer_factory.hpp:77] Creating layer relu3_2
I0625 16:03:52.072883 29656 net.cpp:106] Creating Layer relu3_2
I0625 16:03:52.072885 29656 net.cpp:454] relu3_2 <- conv3_2
I0625 16:03:52.072888 29656 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0625 16:03:52.073006 29656 net.cpp:150] Setting up relu3_2
I0625 16:03:52.073012 29656 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:03:52.073014 29656 net.cpp:165] Memory required for data: 1154400108
I0625 16:03:52.073015 29656 layer_factory.hpp:77] Creating layer conv3_3
I0625 16:03:52.073021 29656 net.cpp:106] Creating Layer conv3_3
I0625 16:03:52.073024 29656 net.cpp:454] conv3_3 <- conv3_2
I0625 16:03:52.073029 29656 net.cpp:411] conv3_3 -> conv3_3
I0625 16:03:52.075114 29656 net.cpp:150] Setting up conv3_3
I0625 16:03:52.075124 29656 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:03:52.075127 29656 net.cpp:165] Memory required for data: 1192800108
I0625 16:03:52.075134 29656 layer_factory.hpp:77] Creating layer relu3_3
I0625 16:03:52.075142 29656 net.cpp:106] Creating Layer relu3_3
I0625 16:03:52.075146 29656 net.cpp:454] relu3_3 <- conv3_3
I0625 16:03:52.075152 29656 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0625 16:03:52.075266 29656 net.cpp:150] Setting up relu3_3
I0625 16:03:52.075273 29656 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:03:52.075276 29656 net.cpp:165] Memory required for data: 1231200108
I0625 16:03:52.075279 29656 layer_factory.hpp:77] Creating layer pool3
I0625 16:03:52.075289 29656 net.cpp:106] Creating Layer pool3
I0625 16:03:52.075291 29656 net.cpp:454] pool3 <- conv3_3
I0625 16:03:52.075297 29656 net.cpp:411] pool3 -> pool3
I0625 16:03:52.075330 29656 net.cpp:150] Setting up pool3
I0625 16:03:52.075335 29656 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0625 16:03:52.075338 29656 net.cpp:165] Memory required for data: 1240800108
I0625 16:03:52.075341 29656 layer_factory.hpp:77] Creating layer conv4_1
I0625 16:03:52.075350 29656 net.cpp:106] Creating Layer conv4_1
I0625 16:03:52.075352 29656 net.cpp:454] conv4_1 <- pool3
I0625 16:03:52.075359 29656 net.cpp:411] conv4_1 -> conv4_1
I0625 16:03:52.079006 29656 net.cpp:150] Setting up conv4_1
I0625 16:03:52.079026 29656 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:03:52.079030 29656 net.cpp:165] Memory required for data: 1260000108
I0625 16:03:52.079039 29656 layer_factory.hpp:77] Creating layer relu4_1
I0625 16:03:52.079048 29656 net.cpp:106] Creating Layer relu4_1
I0625 16:03:52.079056 29656 net.cpp:454] relu4_1 <- conv4_1
I0625 16:03:52.079062 29656 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0625 16:03:52.079187 29656 net.cpp:150] Setting up relu4_1
I0625 16:03:52.079195 29656 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:03:52.079197 29656 net.cpp:165] Memory required for data: 1279200108
I0625 16:03:52.079200 29656 layer_factory.hpp:77] Creating layer conv4_2
I0625 16:03:52.079210 29656 net.cpp:106] Creating Layer conv4_2
I0625 16:03:52.079213 29656 net.cpp:454] conv4_2 <- conv4_1
I0625 16:03:52.079219 29656 net.cpp:411] conv4_2 -> conv4_2
I0625 16:03:52.083873 29656 net.cpp:150] Setting up conv4_2
I0625 16:03:52.083894 29656 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:03:52.083896 29656 net.cpp:165] Memory required for data: 1298400108
I0625 16:03:52.083911 29656 layer_factory.hpp:77] Creating layer relu4_2
I0625 16:03:52.083920 29656 net.cpp:106] Creating Layer relu4_2
I0625 16:03:52.083926 29656 net.cpp:454] relu4_2 <- conv4_2
I0625 16:03:52.083933 29656 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0625 16:03:52.084501 29656 net.cpp:150] Setting up relu4_2
I0625 16:03:52.084511 29656 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:03:52.084513 29656 net.cpp:165] Memory required for data: 1317600108
I0625 16:03:52.084517 29656 layer_factory.hpp:77] Creating layer conv4_3
I0625 16:03:52.084527 29656 net.cpp:106] Creating Layer conv4_3
I0625 16:03:52.084532 29656 net.cpp:454] conv4_3 <- conv4_2
I0625 16:03:52.084537 29656 net.cpp:411] conv4_3 -> conv4_3
I0625 16:03:52.090059 29656 net.cpp:150] Setting up conv4_3
I0625 16:03:52.090080 29656 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:03:52.090085 29656 net.cpp:165] Memory required for data: 1336800108
I0625 16:03:52.090102 29656 layer_factory.hpp:77] Creating layer relu4_3
I0625 16:03:52.090123 29656 net.cpp:106] Creating Layer relu4_3
I0625 16:03:52.090128 29656 net.cpp:454] relu4_3 <- conv4_3
I0625 16:03:52.090137 29656 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0625 16:03:52.090282 29656 net.cpp:150] Setting up relu4_3
I0625 16:03:52.090299 29656 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:03:52.090301 29656 net.cpp:165] Memory required for data: 1356000108
I0625 16:03:52.090306 29656 layer_factory.hpp:77] Creating layer pool4
I0625 16:03:52.090323 29656 net.cpp:106] Creating Layer pool4
I0625 16:03:52.090337 29656 net.cpp:454] pool4 <- conv4_3
I0625 16:03:52.090343 29656 net.cpp:411] pool4 -> pool4
I0625 16:03:52.090378 29656 net.cpp:150] Setting up pool4
I0625 16:03:52.090384 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.090386 29656 net.cpp:165] Memory required for data: 1360903020
I0625 16:03:52.090389 29656 layer_factory.hpp:77] Creating layer conv5_1
I0625 16:03:52.090399 29656 net.cpp:106] Creating Layer conv5_1
I0625 16:03:52.090402 29656 net.cpp:454] conv5_1 <- pool4
I0625 16:03:52.090407 29656 net.cpp:411] conv5_1 -> conv5_1
I0625 16:03:52.094660 29656 net.cpp:150] Setting up conv5_1
I0625 16:03:52.094677 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.094681 29656 net.cpp:165] Memory required for data: 1365805932
I0625 16:03:52.094689 29656 layer_factory.hpp:77] Creating layer relu5_1
I0625 16:03:52.094699 29656 net.cpp:106] Creating Layer relu5_1
I0625 16:03:52.094703 29656 net.cpp:454] relu5_1 <- conv5_1
I0625 16:03:52.094710 29656 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0625 16:03:52.094832 29656 net.cpp:150] Setting up relu5_1
I0625 16:03:52.094839 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.094842 29656 net.cpp:165] Memory required for data: 1370708844
I0625 16:03:52.094846 29656 layer_factory.hpp:77] Creating layer conv5_2
I0625 16:03:52.094856 29656 net.cpp:106] Creating Layer conv5_2
I0625 16:03:52.094871 29656 net.cpp:454] conv5_2 <- conv5_1
I0625 16:03:52.094877 29656 net.cpp:411] conv5_2 -> conv5_2
I0625 16:03:52.099174 29656 net.cpp:150] Setting up conv5_2
I0625 16:03:52.099193 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.099196 29656 net.cpp:165] Memory required for data: 1375611756
I0625 16:03:52.099215 29656 layer_factory.hpp:77] Creating layer relu5_2
I0625 16:03:52.099227 29656 net.cpp:106] Creating Layer relu5_2
I0625 16:03:52.099232 29656 net.cpp:454] relu5_2 <- conv5_2
I0625 16:03:52.099239 29656 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0625 16:03:52.099371 29656 net.cpp:150] Setting up relu5_2
I0625 16:03:52.099378 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.099380 29656 net.cpp:165] Memory required for data: 1380514668
I0625 16:03:52.099393 29656 layer_factory.hpp:77] Creating layer conv5_3
I0625 16:03:52.099407 29656 net.cpp:106] Creating Layer conv5_3
I0625 16:03:52.099412 29656 net.cpp:454] conv5_3 <- conv5_2
I0625 16:03:52.099419 29656 net.cpp:411] conv5_3 -> conv5_3
I0625 16:03:52.103791 29656 net.cpp:150] Setting up conv5_3
I0625 16:03:52.103811 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.103814 29656 net.cpp:165] Memory required for data: 1385417580
I0625 16:03:52.103822 29656 layer_factory.hpp:77] Creating layer relu5_3
I0625 16:03:52.103833 29656 net.cpp:106] Creating Layer relu5_3
I0625 16:03:52.103850 29656 net.cpp:454] relu5_3 <- conv5_3
I0625 16:03:52.103857 29656 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0625 16:03:52.103987 29656 net.cpp:150] Setting up relu5_3
I0625 16:03:52.103996 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.103998 29656 net.cpp:165] Memory required for data: 1390320492
I0625 16:03:52.104001 29656 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0625 16:03:52.104008 29656 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0625 16:03:52.104012 29656 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0625 16:03:52.104027 29656 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0625 16:03:52.104032 29656 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0625 16:03:52.104039 29656 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0625 16:03:52.104087 29656 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0625 16:03:52.104092 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.104106 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.104110 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.104115 29656 net.cpp:165] Memory required for data: 1405029228
I0625 16:03:52.104117 29656 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0625 16:03:52.104127 29656 net.cpp:106] Creating Layer rpn_conv/3x3
I0625 16:03:52.104130 29656 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0625 16:03:52.104137 29656 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0625 16:03:52.155467 29656 net.cpp:150] Setting up rpn_conv/3x3
I0625 16:03:52.155486 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.155489 29656 net.cpp:165] Memory required for data: 1409932140
I0625 16:03:52.155508 29656 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0625 16:03:52.155517 29656 net.cpp:106] Creating Layer rpn_relu/3x3
I0625 16:03:52.155522 29656 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0625 16:03:52.155531 29656 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0625 16:03:52.155659 29656 net.cpp:150] Setting up rpn_relu/3x3
I0625 16:03:52.155666 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.155669 29656 net.cpp:165] Memory required for data: 1414835052
I0625 16:03:52.155683 29656 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0625 16:03:52.155690 29656 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0625 16:03:52.155694 29656 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0625 16:03:52.155699 29656 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0625 16:03:52.155716 29656 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0625 16:03:52.155756 29656 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0625 16:03:52.155771 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.155784 29656 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:03:52.155788 29656 net.cpp:165] Memory required for data: 1424640876
I0625 16:03:52.155791 29656 layer_factory.hpp:77] Creating layer rpn_cls_score
I0625 16:03:52.155812 29656 net.cpp:106] Creating Layer rpn_cls_score
I0625 16:03:52.155814 29656 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0625 16:03:52.155830 29656 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0625 16:03:52.157384 29656 net.cpp:150] Setting up rpn_cls_score
I0625 16:03:52.157393 29656 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:03:52.157397 29656 net.cpp:165] Memory required for data: 1424928156
I0625 16:03:52.157413 29656 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0625 16:03:52.157419 29656 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0625 16:03:52.157425 29656 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0625 16:03:52.157430 29656 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0625 16:03:52.157438 29656 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0625 16:03:52.157479 29656 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0625 16:03:52.157483 29656 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:03:52.157497 29656 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:03:52.157500 29656 net.cpp:165] Memory required for data: 1425502716
I0625 16:03:52.157503 29656 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0625 16:03:52.157512 29656 net.cpp:106] Creating Layer rpn_bbox_pred
I0625 16:03:52.157516 29656 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0625 16:03:52.157522 29656 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0625 16:03:52.159035 29656 net.cpp:150] Setting up rpn_bbox_pred
I0625 16:03:52.159044 29656 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:03:52.159049 29656 net.cpp:165] Memory required for data: 1426077276
I0625 16:03:52.159054 29656 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:03:52.159062 29656 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:03:52.159066 29656 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0625 16:03:52.159073 29656 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 16:03:52.159080 29656 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 16:03:52.159109 29656 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:03:52.159114 29656 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:03:52.159118 29656 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:03:52.159122 29656 net.cpp:165] Memory required for data: 1427226396
I0625 16:03:52.159126 29656 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0625 16:03:52.159137 29656 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0625 16:03:52.159140 29656 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0625 16:03:52.159145 29656 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0625 16:03:52.159166 29656 net.cpp:150] Setting up rpn_cls_score_reshape
I0625 16:03:52.159171 29656 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:03:52.159174 29656 net.cpp:165] Memory required for data: 1427513676
I0625 16:03:52.159178 29656 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:03:52.159183 29656 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:03:52.159186 29656 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0625 16:03:52.159191 29656 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 16:03:52.159198 29656 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 16:03:52.159224 29656 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:03:52.159229 29656 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:03:52.159232 29656 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:03:52.159236 29656 net.cpp:165] Memory required for data: 1428088236
I0625 16:03:52.159240 29656 layer_factory.hpp:77] Creating layer rpn-data
I0625 16:03:52.159556 29656 net.cpp:106] Creating Layer rpn-data
I0625 16:03:52.159564 29656 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0625 16:03:52.159569 29656 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0625 16:03:52.159574 29656 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0625 16:03:52.159577 29656 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0625 16:03:52.159584 29656 net.cpp:411] rpn-data -> rpn_labels
I0625 16:03:52.159591 29656 net.cpp:411] rpn-data -> rpn_bbox_targets
I0625 16:03:52.159598 29656 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0625 16:03:52.159605 29656 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0625 16:03:52.160425 29656 net.cpp:150] Setting up rpn-data
I0625 16:03:52.160434 29656 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0625 16:03:52.160439 29656 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:03:52.160441 29656 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:03:52.160445 29656 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:03:52.160449 29656 net.cpp:165] Memory required for data: 1429955556
I0625 16:03:52.160451 29656 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 16:03:52.160459 29656 net.cpp:106] Creating Layer rpn_loss_cls
I0625 16:03:52.160464 29656 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 16:03:52.160468 29656 net.cpp:454] rpn_loss_cls <- rpn_labels
I0625 16:03:52.160473 29656 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0625 16:03:52.160485 29656 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 16:03:52.161056 29656 net.cpp:150] Setting up rpn_loss_cls
I0625 16:03:52.161065 29656 net.cpp:157] Top shape: (1)
I0625 16:03:52.161067 29656 net.cpp:160]     with loss weight 1
I0625 16:03:52.161078 29656 net.cpp:165] Memory required for data: 1429955560
I0625 16:03:52.161082 29656 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0625 16:03:52.161092 29656 net.cpp:106] Creating Layer rpn_loss_bbox
I0625 16:03:52.161095 29656 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 16:03:52.161099 29656 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0625 16:03:52.161103 29656 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0625 16:03:52.161108 29656 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0625 16:03:52.161113 29656 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0625 16:03:52.162181 29656 net.cpp:150] Setting up rpn_loss_bbox
I0625 16:03:52.162190 29656 net.cpp:157] Top shape: (1)
I0625 16:03:52.162194 29656 net.cpp:160]     with loss weight 1
I0625 16:03:52.162199 29656 net.cpp:165] Memory required for data: 1429955564
I0625 16:03:52.162202 29656 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0625 16:03:52.162209 29656 net.cpp:106] Creating Layer rpn_cls_prob
I0625 16:03:52.162214 29656 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 16:03:52.162220 29656 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0625 16:03:52.162410 29656 net.cpp:150] Setting up rpn_cls_prob
I0625 16:03:52.162418 29656 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:03:52.162421 29656 net.cpp:165] Memory required for data: 1430242844
I0625 16:03:52.162425 29656 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0625 16:03:52.162431 29656 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0625 16:03:52.162436 29656 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0625 16:03:52.162441 29656 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0625 16:03:52.162461 29656 net.cpp:150] Setting up rpn_cls_prob_reshape
I0625 16:03:52.162467 29656 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:03:52.162469 29656 net.cpp:165] Memory required for data: 1430530124
I0625 16:03:52.162472 29656 layer_factory.hpp:77] Creating layer proposal
I0625 16:03:52.162896 29656 net.cpp:106] Creating Layer proposal
I0625 16:03:52.162904 29656 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0625 16:03:52.162909 29656 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 16:03:52.162912 29656 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0625 16:03:52.162920 29656 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0625 16:03:52.163661 29656 net.cpp:150] Setting up proposal
I0625 16:03:52.163668 29656 net.cpp:157] Top shape: 1 5 (5)
I0625 16:03:52.163671 29656 net.cpp:165] Memory required for data: 1430530144
I0625 16:03:52.163676 29656 layer_factory.hpp:77] Creating layer roi-data
I0625 16:03:52.166160 29656 net.cpp:106] Creating Layer roi-data
I0625 16:03:52.166168 29656 net.cpp:454] roi-data <- rpn_rois
I0625 16:03:52.166173 29656 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0625 16:03:52.166177 29656 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0625 16:03:52.166182 29656 net.cpp:454] roi-data <- seg_mask_inds
I0625 16:03:52.166187 29656 net.cpp:454] roi-data <- flipped
I0625 16:03:52.166191 29656 net.cpp:411] roi-data -> rois
I0625 16:03:52.166200 29656 net.cpp:411] roi-data -> labels
I0625 16:03:52.166208 29656 net.cpp:411] roi-data -> bbox_targets
I0625 16:03:52.166215 29656 net.cpp:411] roi-data -> bbox_inside_weights
I0625 16:03:52.166222 29656 net.cpp:411] roi-data -> bbox_outside_weights
I0625 16:03:52.166229 29656 net.cpp:411] roi-data -> mask_targets
I0625 16:03:52.166235 29656 net.cpp:411] roi-data -> rois_pos
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 168, in train_net
    pretrained_model=pretrained_model)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 52, in __init__
    self.solver = caffe.SGDSolver(solver_prototxt)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_target_layer.py", line 85, in setup
    top[7].reshape(1, 7)
IndexError: Index out of range
