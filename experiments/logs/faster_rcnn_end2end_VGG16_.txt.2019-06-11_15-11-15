+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-11_15-11-15
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-11_15-11-15
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0611 15:11:23.042228 25571 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0611 15:11:23.042250 25571 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0611 15:11:23.043539 25571 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0611 15:11:23.044008 25571 layer_factory.hpp:77] Creating layer input-data
I0611 15:11:23.089112 25571 net.cpp:106] Creating Layer input-data
I0611 15:11:23.089128 25571 net.cpp:411] input-data -> data
I0611 15:11:23.089140 25571 net.cpp:411] input-data -> im_info
I0611 15:11:23.089148 25571 net.cpp:411] input-data -> gt_boxes
I0611 15:11:23.089157 25571 net.cpp:411] input-data -> seg_mask_inds
I0611 15:11:23.089162 25571 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0611 15:11:23.102439 25571 net.cpp:150] Setting up input-data
I0611 15:11:23.102455 25571 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 15:11:23.102471 25571 net.cpp:157] Top shape: 1 3 (3)
I0611 15:11:23.102476 25571 net.cpp:157] Top shape: 1 4 (4)
I0611 15:11:23.102483 25571 net.cpp:157] Top shape: 1 2 (2)
I0611 15:11:23.102488 25571 net.cpp:157] Top shape: 1 1 (1)
I0611 15:11:23.102501 25571 net.cpp:165] Memory required for data: 7200040
I0611 15:11:23.102519 25571 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0611 15:11:23.102538 25571 net.cpp:106] Creating Layer data_input-data_0_split
I0611 15:11:23.102545 25571 net.cpp:454] data_input-data_0_split <- data
I0611 15:11:23.102551 25571 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0611 15:11:23.102563 25571 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0611 15:11:23.102593 25571 net.cpp:150] Setting up data_input-data_0_split
I0611 15:11:23.102600 25571 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 15:11:23.102604 25571 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 15:11:23.102609 25571 net.cpp:165] Memory required for data: 21600040
I0611 15:11:23.102613 25571 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0611 15:11:23.102622 25571 net.cpp:106] Creating Layer im_info_input-data_1_split
I0611 15:11:23.102627 25571 net.cpp:454] im_info_input-data_1_split <- im_info
I0611 15:11:23.102634 25571 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0611 15:11:23.102641 25571 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0611 15:11:23.102648 25571 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0611 15:11:23.102679 25571 net.cpp:150] Setting up im_info_input-data_1_split
I0611 15:11:23.102684 25571 net.cpp:157] Top shape: 1 3 (3)
I0611 15:11:23.102689 25571 net.cpp:157] Top shape: 1 3 (3)
I0611 15:11:23.102695 25571 net.cpp:157] Top shape: 1 3 (3)
I0611 15:11:23.102699 25571 net.cpp:165] Memory required for data: 21600076
I0611 15:11:23.102704 25571 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0611 15:11:23.102713 25571 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0611 15:11:23.102718 25571 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0611 15:11:23.102723 25571 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0611 15:11:23.102730 25571 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0611 15:11:23.102754 25571 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0611 15:11:23.102759 25571 net.cpp:157] Top shape: 1 4 (4)
I0611 15:11:23.102764 25571 net.cpp:157] Top shape: 1 4 (4)
I0611 15:11:23.102767 25571 net.cpp:165] Memory required for data: 21600108
I0611 15:11:23.102772 25571 layer_factory.hpp:77] Creating layer conv1_1
I0611 15:11:23.102782 25571 net.cpp:106] Creating Layer conv1_1
I0611 15:11:23.102787 25571 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0611 15:11:23.102793 25571 net.cpp:411] conv1_1 -> conv1_1
I0611 15:11:23.299701 25571 net.cpp:150] Setting up conv1_1
I0611 15:11:23.299721 25571 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 15:11:23.299724 25571 net.cpp:165] Memory required for data: 175200108
I0611 15:11:23.299751 25571 layer_factory.hpp:77] Creating layer relu1_1
I0611 15:11:23.299775 25571 net.cpp:106] Creating Layer relu1_1
I0611 15:11:23.299782 25571 net.cpp:454] relu1_1 <- conv1_1
I0611 15:11:23.299788 25571 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0611 15:11:23.299958 25571 net.cpp:150] Setting up relu1_1
I0611 15:11:23.299968 25571 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 15:11:23.299981 25571 net.cpp:165] Memory required for data: 328800108
I0611 15:11:23.299985 25571 layer_factory.hpp:77] Creating layer conv1_2
I0611 15:11:23.300006 25571 net.cpp:106] Creating Layer conv1_2
I0611 15:11:23.300011 25571 net.cpp:454] conv1_2 <- conv1_1
I0611 15:11:23.300019 25571 net.cpp:411] conv1_2 -> conv1_2
I0611 15:11:23.302697 25571 net.cpp:150] Setting up conv1_2
I0611 15:11:23.302714 25571 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 15:11:23.302717 25571 net.cpp:165] Memory required for data: 482400108
I0611 15:11:23.302729 25571 layer_factory.hpp:77] Creating layer relu1_2
I0611 15:11:23.302750 25571 net.cpp:106] Creating Layer relu1_2
I0611 15:11:23.302757 25571 net.cpp:454] relu1_2 <- conv1_2
I0611 15:11:23.302762 25571 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0611 15:11:23.302889 25571 net.cpp:150] Setting up relu1_2
I0611 15:11:23.302896 25571 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 15:11:23.302901 25571 net.cpp:165] Memory required for data: 636000108
I0611 15:11:23.302903 25571 layer_factory.hpp:77] Creating layer pool1
I0611 15:11:23.302913 25571 net.cpp:106] Creating Layer pool1
I0611 15:11:23.302932 25571 net.cpp:454] pool1 <- conv1_2
I0611 15:11:23.302947 25571 net.cpp:411] pool1 -> pool1
I0611 15:11:23.303004 25571 net.cpp:150] Setting up pool1
I0611 15:11:23.303009 25571 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0611 15:11:23.303011 25571 net.cpp:165] Memory required for data: 674400108
I0611 15:11:23.303025 25571 layer_factory.hpp:77] Creating layer conv2_1
I0611 15:11:23.303043 25571 net.cpp:106] Creating Layer conv2_1
I0611 15:11:23.303047 25571 net.cpp:454] conv2_1 <- pool1
I0611 15:11:23.303063 25571 net.cpp:411] conv2_1 -> conv2_1
I0611 15:11:23.304769 25571 net.cpp:150] Setting up conv2_1
I0611 15:11:23.304778 25571 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 15:11:23.304782 25571 net.cpp:165] Memory required for data: 751200108
I0611 15:11:23.304801 25571 layer_factory.hpp:77] Creating layer relu2_1
I0611 15:11:23.304810 25571 net.cpp:106] Creating Layer relu2_1
I0611 15:11:23.304816 25571 net.cpp:454] relu2_1 <- conv2_1
I0611 15:11:23.304822 25571 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0611 15:11:23.305281 25571 net.cpp:150] Setting up relu2_1
I0611 15:11:23.305290 25571 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 15:11:23.305294 25571 net.cpp:165] Memory required for data: 828000108
I0611 15:11:23.305299 25571 layer_factory.hpp:77] Creating layer conv2_2
I0611 15:11:23.305308 25571 net.cpp:106] Creating Layer conv2_2
I0611 15:11:23.305315 25571 net.cpp:454] conv2_2 <- conv2_1
I0611 15:11:23.305323 25571 net.cpp:411] conv2_2 -> conv2_2
I0611 15:11:23.306612 25571 net.cpp:150] Setting up conv2_2
I0611 15:11:23.306622 25571 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 15:11:23.306625 25571 net.cpp:165] Memory required for data: 904800108
I0611 15:11:23.306644 25571 layer_factory.hpp:77] Creating layer relu2_2
I0611 15:11:23.306651 25571 net.cpp:106] Creating Layer relu2_2
I0611 15:11:23.306655 25571 net.cpp:454] relu2_2 <- conv2_2
I0611 15:11:23.306663 25571 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0611 15:11:23.306783 25571 net.cpp:150] Setting up relu2_2
I0611 15:11:23.306790 25571 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 15:11:23.306794 25571 net.cpp:165] Memory required for data: 981600108
I0611 15:11:23.306797 25571 layer_factory.hpp:77] Creating layer pool2
I0611 15:11:23.306814 25571 net.cpp:106] Creating Layer pool2
I0611 15:11:23.306820 25571 net.cpp:454] pool2 <- conv2_2
I0611 15:11:23.306825 25571 net.cpp:411] pool2 -> pool2
I0611 15:11:23.306857 25571 net.cpp:150] Setting up pool2
I0611 15:11:23.306871 25571 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0611 15:11:23.306875 25571 net.cpp:165] Memory required for data: 1000800108
I0611 15:11:23.306879 25571 layer_factory.hpp:77] Creating layer conv3_1
I0611 15:11:23.306898 25571 net.cpp:106] Creating Layer conv3_1
I0611 15:11:23.306902 25571 net.cpp:454] conv3_1 <- pool2
I0611 15:11:23.306907 25571 net.cpp:411] conv3_1 -> conv3_1
I0611 15:11:23.308652 25571 net.cpp:150] Setting up conv3_1
I0611 15:11:23.308661 25571 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 15:11:23.308665 25571 net.cpp:165] Memory required for data: 1039200108
I0611 15:11:23.308684 25571 layer_factory.hpp:77] Creating layer relu3_1
I0611 15:11:23.308691 25571 net.cpp:106] Creating Layer relu3_1
I0611 15:11:23.308696 25571 net.cpp:454] relu3_1 <- conv3_1
I0611 15:11:23.308703 25571 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0611 15:11:23.308821 25571 net.cpp:150] Setting up relu3_1
I0611 15:11:23.308828 25571 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 15:11:23.308831 25571 net.cpp:165] Memory required for data: 1077600108
I0611 15:11:23.308835 25571 layer_factory.hpp:77] Creating layer conv3_2
I0611 15:11:23.308856 25571 net.cpp:106] Creating Layer conv3_2
I0611 15:11:23.308861 25571 net.cpp:454] conv3_2 <- conv3_1
I0611 15:11:23.308866 25571 net.cpp:411] conv3_2 -> conv3_2
I0611 15:11:23.310822 25571 net.cpp:150] Setting up conv3_2
I0611 15:11:23.310832 25571 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 15:11:23.310835 25571 net.cpp:165] Memory required for data: 1116000108
I0611 15:11:23.310853 25571 layer_factory.hpp:77] Creating layer relu3_2
I0611 15:11:23.310861 25571 net.cpp:106] Creating Layer relu3_2
I0611 15:11:23.310866 25571 net.cpp:454] relu3_2 <- conv3_2
I0611 15:11:23.310873 25571 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0611 15:11:23.311015 25571 net.cpp:150] Setting up relu3_2
I0611 15:11:23.311022 25571 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 15:11:23.311026 25571 net.cpp:165] Memory required for data: 1154400108
I0611 15:11:23.311040 25571 layer_factory.hpp:77] Creating layer conv3_3
I0611 15:11:23.311049 25571 net.cpp:106] Creating Layer conv3_3
I0611 15:11:23.311064 25571 net.cpp:454] conv3_3 <- conv3_2
I0611 15:11:23.311079 25571 net.cpp:411] conv3_3 -> conv3_3
I0611 15:11:23.313149 25571 net.cpp:150] Setting up conv3_3
I0611 15:11:23.313163 25571 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 15:11:23.313166 25571 net.cpp:165] Memory required for data: 1192800108
I0611 15:11:23.313174 25571 layer_factory.hpp:77] Creating layer relu3_3
I0611 15:11:23.313194 25571 net.cpp:106] Creating Layer relu3_3
I0611 15:11:23.313200 25571 net.cpp:454] relu3_3 <- conv3_3
I0611 15:11:23.313205 25571 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0611 15:11:23.313318 25571 net.cpp:150] Setting up relu3_3
I0611 15:11:23.313324 25571 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 15:11:23.313328 25571 net.cpp:165] Memory required for data: 1231200108
I0611 15:11:23.313333 25571 layer_factory.hpp:77] Creating layer pool3
I0611 15:11:23.313340 25571 net.cpp:106] Creating Layer pool3
I0611 15:11:23.313346 25571 net.cpp:454] pool3 <- conv3_3
I0611 15:11:23.313354 25571 net.cpp:411] pool3 -> pool3
I0611 15:11:23.313386 25571 net.cpp:150] Setting up pool3
I0611 15:11:23.313392 25571 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0611 15:11:23.313395 25571 net.cpp:165] Memory required for data: 1240800108
I0611 15:11:23.313400 25571 layer_factory.hpp:77] Creating layer conv4_1
I0611 15:11:23.313436 25571 net.cpp:106] Creating Layer conv4_1
I0611 15:11:23.313438 25571 net.cpp:454] conv4_1 <- pool3
I0611 15:11:23.313446 25571 net.cpp:411] conv4_1 -> conv4_1
I0611 15:11:23.317574 25571 net.cpp:150] Setting up conv4_1
I0611 15:11:23.317592 25571 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 15:11:23.317596 25571 net.cpp:165] Memory required for data: 1260000108
I0611 15:11:23.317617 25571 layer_factory.hpp:77] Creating layer relu4_1
I0611 15:11:23.317627 25571 net.cpp:106] Creating Layer relu4_1
I0611 15:11:23.317634 25571 net.cpp:454] relu4_1 <- conv4_1
I0611 15:11:23.317641 25571 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0611 15:11:23.317791 25571 net.cpp:150] Setting up relu4_1
I0611 15:11:23.317798 25571 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 15:11:23.317802 25571 net.cpp:165] Memory required for data: 1279200108
I0611 15:11:23.317806 25571 layer_factory.hpp:77] Creating layer conv4_2
I0611 15:11:23.317817 25571 net.cpp:106] Creating Layer conv4_2
I0611 15:11:23.317822 25571 net.cpp:454] conv4_2 <- conv4_1
I0611 15:11:23.317829 25571 net.cpp:411] conv4_2 -> conv4_2
I0611 15:11:23.322734 25571 net.cpp:150] Setting up conv4_2
I0611 15:11:23.322765 25571 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 15:11:23.322769 25571 net.cpp:165] Memory required for data: 1298400108
I0611 15:11:23.322794 25571 layer_factory.hpp:77] Creating layer relu4_2
I0611 15:11:23.322805 25571 net.cpp:106] Creating Layer relu4_2
I0611 15:11:23.322811 25571 net.cpp:454] relu4_2 <- conv4_2
I0611 15:11:23.322826 25571 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0611 15:11:23.323312 25571 net.cpp:150] Setting up relu4_2
I0611 15:11:23.323320 25571 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 15:11:23.323324 25571 net.cpp:165] Memory required for data: 1317600108
I0611 15:11:23.323328 25571 layer_factory.hpp:77] Creating layer conv4_3
I0611 15:11:23.323338 25571 net.cpp:106] Creating Layer conv4_3
I0611 15:11:23.323352 25571 net.cpp:454] conv4_3 <- conv4_2
I0611 15:11:23.323360 25571 net.cpp:411] conv4_3 -> conv4_3
I0611 15:11:23.327651 25571 net.cpp:150] Setting up conv4_3
I0611 15:11:23.327673 25571 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 15:11:23.327677 25571 net.cpp:165] Memory required for data: 1336800108
I0611 15:11:23.327697 25571 layer_factory.hpp:77] Creating layer relu4_3
I0611 15:11:23.327706 25571 net.cpp:106] Creating Layer relu4_3
I0611 15:11:23.327713 25571 net.cpp:454] relu4_3 <- conv4_3
I0611 15:11:23.327721 25571 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0611 15:11:23.327862 25571 net.cpp:150] Setting up relu4_3
I0611 15:11:23.327869 25571 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 15:11:23.327872 25571 net.cpp:165] Memory required for data: 1356000108
I0611 15:11:23.327877 25571 layer_factory.hpp:77] Creating layer pool4
I0611 15:11:23.327884 25571 net.cpp:106] Creating Layer pool4
I0611 15:11:23.327888 25571 net.cpp:454] pool4 <- conv4_3
I0611 15:11:23.327895 25571 net.cpp:411] pool4 -> pool4
I0611 15:11:23.327930 25571 net.cpp:150] Setting up pool4
I0611 15:11:23.327935 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.327939 25571 net.cpp:165] Memory required for data: 1360903020
I0611 15:11:23.327944 25571 layer_factory.hpp:77] Creating layer conv5_1
I0611 15:11:23.327965 25571 net.cpp:106] Creating Layer conv5_1
I0611 15:11:23.327970 25571 net.cpp:454] conv5_1 <- pool4
I0611 15:11:23.327977 25571 net.cpp:411] conv5_1 -> conv5_1
I0611 15:11:23.332867 25571 net.cpp:150] Setting up conv5_1
I0611 15:11:23.332887 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.332892 25571 net.cpp:165] Memory required for data: 1365805932
I0611 15:11:23.332902 25571 layer_factory.hpp:77] Creating layer relu5_1
I0611 15:11:23.332916 25571 net.cpp:106] Creating Layer relu5_1
I0611 15:11:23.332922 25571 net.cpp:454] relu5_1 <- conv5_1
I0611 15:11:23.332929 25571 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0611 15:11:23.333062 25571 net.cpp:150] Setting up relu5_1
I0611 15:11:23.333070 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.333072 25571 net.cpp:165] Memory required for data: 1370708844
I0611 15:11:23.333086 25571 layer_factory.hpp:77] Creating layer conv5_2
I0611 15:11:23.333106 25571 net.cpp:106] Creating Layer conv5_2
I0611 15:11:23.333112 25571 net.cpp:454] conv5_2 <- conv5_1
I0611 15:11:23.333119 25571 net.cpp:411] conv5_2 -> conv5_2
I0611 15:11:23.337766 25571 net.cpp:150] Setting up conv5_2
I0611 15:11:23.337788 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.337792 25571 net.cpp:165] Memory required for data: 1375611756
I0611 15:11:23.337802 25571 layer_factory.hpp:77] Creating layer relu5_2
I0611 15:11:23.337815 25571 net.cpp:106] Creating Layer relu5_2
I0611 15:11:23.337831 25571 net.cpp:454] relu5_2 <- conv5_2
I0611 15:11:23.337841 25571 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0611 15:11:23.337977 25571 net.cpp:150] Setting up relu5_2
I0611 15:11:23.337985 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.337990 25571 net.cpp:165] Memory required for data: 1380514668
I0611 15:11:23.337992 25571 layer_factory.hpp:77] Creating layer conv5_3
I0611 15:11:23.338006 25571 net.cpp:106] Creating Layer conv5_3
I0611 15:11:23.338021 25571 net.cpp:454] conv5_3 <- conv5_2
I0611 15:11:23.338029 25571 net.cpp:411] conv5_3 -> conv5_3
I0611 15:11:23.342308 25571 net.cpp:150] Setting up conv5_3
I0611 15:11:23.342327 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.342331 25571 net.cpp:165] Memory required for data: 1385417580
I0611 15:11:23.342340 25571 layer_factory.hpp:77] Creating layer relu5_3
I0611 15:11:23.342350 25571 net.cpp:106] Creating Layer relu5_3
I0611 15:11:23.342367 25571 net.cpp:454] relu5_3 <- conv5_3
I0611 15:11:23.342373 25571 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0611 15:11:23.342525 25571 net.cpp:150] Setting up relu5_3
I0611 15:11:23.342531 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.342535 25571 net.cpp:165] Memory required for data: 1390320492
I0611 15:11:23.342538 25571 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0611 15:11:23.342547 25571 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0611 15:11:23.342564 25571 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0611 15:11:23.342571 25571 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0611 15:11:23.342588 25571 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0611 15:11:23.342604 25571 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0611 15:11:23.342655 25571 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0611 15:11:23.342661 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.342665 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.342679 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.342684 25571 net.cpp:165] Memory required for data: 1405029228
I0611 15:11:23.342696 25571 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0611 15:11:23.342717 25571 net.cpp:106] Creating Layer rpn_conv/3x3
I0611 15:11:23.342721 25571 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0611 15:11:23.342728 25571 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0611 15:11:23.396195 25571 net.cpp:150] Setting up rpn_conv/3x3
I0611 15:11:23.396215 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.396219 25571 net.cpp:165] Memory required for data: 1409932140
I0611 15:11:23.396229 25571 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0611 15:11:23.396239 25571 net.cpp:106] Creating Layer rpn_relu/3x3
I0611 15:11:23.396247 25571 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0611 15:11:23.396258 25571 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0611 15:11:23.396389 25571 net.cpp:150] Setting up rpn_relu/3x3
I0611 15:11:23.396396 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.396399 25571 net.cpp:165] Memory required for data: 1414835052
I0611 15:11:23.396404 25571 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0611 15:11:23.396411 25571 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0611 15:11:23.396415 25571 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0611 15:11:23.396421 25571 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0611 15:11:23.396428 25571 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0611 15:11:23.396466 25571 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0611 15:11:23.396472 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.396477 25571 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 15:11:23.396481 25571 net.cpp:165] Memory required for data: 1424640876
I0611 15:11:23.396486 25571 layer_factory.hpp:77] Creating layer rpn_cls_score
I0611 15:11:23.396499 25571 net.cpp:106] Creating Layer rpn_cls_score
I0611 15:11:23.396503 25571 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0611 15:11:23.396512 25571 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0611 15:11:23.401451 25571 net.cpp:150] Setting up rpn_cls_score
I0611 15:11:23.401482 25571 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 15:11:23.401486 25571 net.cpp:165] Memory required for data: 1424928156
I0611 15:11:23.401509 25571 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0611 15:11:23.401520 25571 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0611 15:11:23.401526 25571 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0611 15:11:23.401535 25571 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0611 15:11:23.401546 25571 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0611 15:11:23.401590 25571 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0611 15:11:23.401605 25571 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 15:11:23.401610 25571 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 15:11:23.401613 25571 net.cpp:165] Memory required for data: 1425502716
I0611 15:11:23.401626 25571 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0611 15:11:23.401639 25571 net.cpp:106] Creating Layer rpn_bbox_pred
I0611 15:11:23.401643 25571 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0611 15:11:23.401652 25571 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0611 15:11:23.403280 25571 net.cpp:150] Setting up rpn_bbox_pred
I0611 15:11:23.403290 25571 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 15:11:23.403293 25571 net.cpp:165] Memory required for data: 1426077276
I0611 15:11:23.403301 25571 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 15:11:23.403308 25571 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 15:11:23.403314 25571 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0611 15:11:23.403326 25571 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0611 15:11:23.403333 25571 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0611 15:11:23.403378 25571 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 15:11:23.403383 25571 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 15:11:23.403388 25571 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 15:11:23.403400 25571 net.cpp:165] Memory required for data: 1427226396
I0611 15:11:23.403404 25571 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0611 15:11:23.403422 25571 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0611 15:11:23.403439 25571 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0611 15:11:23.403445 25571 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0611 15:11:23.403488 25571 net.cpp:150] Setting up rpn_cls_score_reshape
I0611 15:11:23.403504 25571 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 15:11:23.403507 25571 net.cpp:165] Memory required for data: 1427513676
I0611 15:11:23.403522 25571 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 15:11:23.403538 25571 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 15:11:23.403543 25571 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0611 15:11:23.403559 25571 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0611 15:11:23.403568 25571 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0611 15:11:23.403597 25571 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 15:11:23.403604 25571 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 15:11:23.403609 25571 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 15:11:23.403614 25571 net.cpp:165] Memory required for data: 1428088236
I0611 15:11:23.403618 25571 layer_factory.hpp:77] Creating layer rpn-data
I0611 15:11:23.403936 25571 net.cpp:106] Creating Layer rpn-data
I0611 15:11:23.403944 25571 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0611 15:11:23.403950 25571 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0611 15:11:23.403955 25571 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0611 15:11:23.403960 25571 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0611 15:11:23.403967 25571 net.cpp:411] rpn-data -> rpn_labels
I0611 15:11:23.403976 25571 net.cpp:411] rpn-data -> rpn_bbox_targets
I0611 15:11:23.403985 25571 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0611 15:11:23.403991 25571 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0611 15:11:23.404812 25571 net.cpp:150] Setting up rpn-data
I0611 15:11:23.404821 25571 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0611 15:11:23.404826 25571 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 15:11:23.404830 25571 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 15:11:23.404834 25571 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 15:11:23.404837 25571 net.cpp:165] Memory required for data: 1429955556
I0611 15:11:23.404841 25571 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0611 15:11:23.404850 25571 net.cpp:106] Creating Layer rpn_loss_cls
I0611 15:11:23.404855 25571 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0611 15:11:23.404860 25571 net.cpp:454] rpn_loss_cls <- rpn_labels
I0611 15:11:23.404866 25571 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0611 15:11:23.404882 25571 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0611 15:11:23.405524 25571 net.cpp:150] Setting up rpn_loss_cls
I0611 15:11:23.405534 25571 net.cpp:157] Top shape: (1)
I0611 15:11:23.405537 25571 net.cpp:160]     with loss weight 1
I0611 15:11:23.405547 25571 net.cpp:165] Memory required for data: 1429955560
I0611 15:11:23.405551 25571 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0611 15:11:23.405565 25571 net.cpp:106] Creating Layer rpn_loss_bbox
I0611 15:11:23.405570 25571 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0611 15:11:23.405575 25571 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0611 15:11:23.405580 25571 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0611 15:11:23.405584 25571 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0611 15:11:23.405591 25571 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0611 15:11:23.406653 25571 net.cpp:150] Setting up rpn_loss_bbox
I0611 15:11:23.406661 25571 net.cpp:157] Top shape: (1)
I0611 15:11:23.406666 25571 net.cpp:160]     with loss weight 1
I0611 15:11:23.406672 25571 net.cpp:165] Memory required for data: 1429955564
I0611 15:11:23.406675 25571 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0611 15:11:23.406683 25571 net.cpp:106] Creating Layer rpn_cls_prob
I0611 15:11:23.406688 25571 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0611 15:11:23.406695 25571 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0611 15:11:23.406857 25571 net.cpp:150] Setting up rpn_cls_prob
I0611 15:11:23.406864 25571 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 15:11:23.406868 25571 net.cpp:165] Memory required for data: 1430242844
I0611 15:11:23.406872 25571 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0611 15:11:23.406880 25571 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0611 15:11:23.406884 25571 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0611 15:11:23.406889 25571 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0611 15:11:23.406913 25571 net.cpp:150] Setting up rpn_cls_prob_reshape
I0611 15:11:23.406919 25571 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 15:11:23.406922 25571 net.cpp:165] Memory required for data: 1430530124
I0611 15:11:23.406925 25571 layer_factory.hpp:77] Creating layer proposal
I0611 15:11:23.423446 25571 net.cpp:106] Creating Layer proposal
I0611 15:11:23.423463 25571 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0611 15:11:23.423471 25571 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0611 15:11:23.423476 25571 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0611 15:11:23.423482 25571 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0611 15:11:23.424569 25571 net.cpp:150] Setting up proposal
I0611 15:11:23.424580 25571 net.cpp:157] Top shape: 1 5 (5)
I0611 15:11:23.424583 25571 net.cpp:165] Memory required for data: 1430530144
I0611 15:11:23.424588 25571 layer_factory.hpp:77] Creating layer roi-data
I0611 15:11:23.426820 25571 net.cpp:106] Creating Layer roi-data
I0611 15:11:23.426827 25571 net.cpp:454] roi-data <- rpn_rois
I0611 15:11:23.426833 25571 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0611 15:11:23.426837 25571 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0611 15:11:23.426842 25571 net.cpp:454] roi-data <- seg_mask_inds
I0611 15:11:23.426847 25571 net.cpp:454] roi-data <- flipped
I0611 15:11:23.426868 25571 net.cpp:411] roi-data -> rois
I0611 15:11:23.426877 25571 net.cpp:411] roi-data -> labels
I0611 15:11:23.426885 25571 net.cpp:411] roi-data -> bbox_targets
I0611 15:11:23.426901 25571 net.cpp:411] roi-data -> bbox_inside_weights
I0611 15:11:23.426908 25571 net.cpp:411] roi-data -> bbox_outside_weights
I0611 15:11:23.426924 25571 net.cpp:411] roi-data -> mask_targets
I0611 15:11:23.426940 25571 net.cpp:411] roi-data -> rois_pos
I0611 15:11:23.426959 25571 net.cpp:411] roi-data -> attrArray
I0611 15:11:23.427255 25571 net.cpp:150] Setting up roi-data
I0611 15:11:23.427264 25571 net.cpp:157] Top shape: 1 5 (5)
I0611 15:11:23.427268 25571 net.cpp:157] Top shape: 1 1 (1)
I0611 15:11:23.427273 25571 net.cpp:157] Top shape: 1 8 (8)
I0611 15:11:23.427278 25571 net.cpp:157] Top shape: 1 8 (8)
I0611 15:11:23.427282 25571 net.cpp:157] Top shape: 1 8 (8)
I0611 15:11:23.427297 25571 net.cpp:157] Top shape: 1 244 244 (59536)
I0611 15:11:23.427302 25571 net.cpp:157] Top shape: 1 5 (5)
I0611 15:11:23.427309 25571 net.cpp:157] Top shape: 1 7 (7)
I0611 15:11:23.427311 25571 net.cpp:165] Memory required for data: 1430768456
I0611 15:11:23.427316 25571 layer_factory.hpp:77] Creating layer roi_pool5
I0611 15:11:23.427325 25571 net.cpp:106] Creating Layer roi_pool5
I0611 15:11:23.427330 25571 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0611 15:11:23.427333 25571 net.cpp:454] roi_pool5 <- rois
I0611 15:11:23.427340 25571 net.cpp:411] roi_pool5 -> pool5
I0611 15:11:23.427348 25571 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0611 15:11:23.427429 25571 net.cpp:150] Setting up roi_pool5
I0611 15:11:23.427435 25571 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0611 15:11:23.427439 25571 net.cpp:165] Memory required for data: 1430868808
I0611 15:11:23.427454 25571 layer_factory.hpp:77] Creating layer fc6
I0611 15:11:23.427474 25571 net.cpp:106] Creating Layer fc6
I0611 15:11:23.427479 25571 net.cpp:454] fc6 <- pool5
I0611 15:11:23.427484 25571 net.cpp:411] fc6 -> fc6
I0611 15:11:23.580771 25571 net.cpp:150] Setting up fc6
I0611 15:11:23.580796 25571 net.cpp:157] Top shape: 1 4096 (4096)
I0611 15:11:23.580798 25571 net.cpp:165] Memory required for data: 1430885192
I0611 15:11:23.580811 25571 layer_factory.hpp:77] Creating layer relu6
I0611 15:11:23.580821 25571 net.cpp:106] Creating Layer relu6
I0611 15:11:23.580826 25571 net.cpp:454] relu6 <- fc6
I0611 15:11:23.580832 25571 net.cpp:397] relu6 -> fc6 (in-place)
I0611 15:11:23.581004 25571 net.cpp:150] Setting up relu6
I0611 15:11:23.581010 25571 net.cpp:157] Top shape: 1 4096 (4096)
I0611 15:11:23.581013 25571 net.cpp:165] Memory required for data: 1430901576
I0611 15:11:23.581015 25571 layer_factory.hpp:77] Creating layer fc7
I0611 15:11:23.581020 25571 net.cpp:106] Creating Layer fc7
I0611 15:11:23.581023 25571 net.cpp:454] fc7 <- fc6
I0611 15:11:23.581027 25571 net.cpp:411] fc7 -> fc7
I0611 15:11:23.609313 25571 net.cpp:150] Setting up fc7
I0611 15:11:23.609336 25571 net.cpp:157] Top shape: 1 4096 (4096)
I0611 15:11:23.609340 25571 net.cpp:165] Memory required for data: 1430917960
I0611 15:11:23.609349 25571 layer_factory.hpp:77] Creating layer relu7
I0611 15:11:23.609359 25571 net.cpp:106] Creating Layer relu7
I0611 15:11:23.609365 25571 net.cpp:454] relu7 <- fc7
I0611 15:11:23.609374 25571 net.cpp:397] relu7 -> fc7 (in-place)
I0611 15:11:23.609601 25571 net.cpp:150] Setting up relu7
I0611 15:11:23.609609 25571 net.cpp:157] Top shape: 1 4096 (4096)
I0611 15:11:23.609611 25571 net.cpp:165] Memory required for data: 1430934344
I0611 15:11:23.609616 25571 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0611 15:11:23.609621 25571 net.cpp:106] Creating Layer fc7_relu7_0_split
I0611 15:11:23.609623 25571 net.cpp:454] fc7_relu7_0_split <- fc7
I0611 15:11:23.609628 25571 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0611 15:11:23.609642 25571 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0611 15:11:23.609647 25571 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0611 15:11:23.609702 25571 net.cpp:150] Setting up fc7_relu7_0_split
I0611 15:11:23.609710 25571 net.cpp:157] Top shape: 1 4096 (4096)
I0611 15:11:23.609714 25571 net.cpp:157] Top shape: 1 4096 (4096)
I0611 15:11:23.609717 25571 net.cpp:157] Top shape: 1 4096 (4096)
I0611 15:11:23.609720 25571 net.cpp:165] Memory required for data: 1430983496
I0611 15:11:23.609724 25571 layer_factory.hpp:77] Creating layer attr_score
I0611 15:11:23.609733 25571 net.cpp:106] Creating Layer attr_score
I0611 15:11:23.609737 25571 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0611 15:11:23.609743 25571 net.cpp:411] attr_score -> attr_score
I0611 15:11:23.610648 25571 net.cpp:150] Setting up attr_score
I0611 15:11:23.610654 25571 net.cpp:157] Top shape: 1 10 (10)
I0611 15:11:23.610656 25571 net.cpp:165] Memory required for data: 1430983536
I0611 15:11:23.610661 25571 layer_factory.hpp:77] Creating layer cls_score
I0611 15:11:23.610666 25571 net.cpp:106] Creating Layer cls_score
I0611 15:11:23.610668 25571 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0611 15:11:23.610682 25571 net.cpp:411] cls_score -> cls_score
I0611 15:11:23.610970 25571 net.cpp:150] Setting up cls_score
I0611 15:11:23.610976 25571 net.cpp:157] Top shape: 1 2 (2)
I0611 15:11:23.610990 25571 net.cpp:165] Memory required for data: 1430983544
I0611 15:11:23.610996 25571 layer_factory.hpp:77] Creating layer bbox_pred
I0611 15:11:23.611001 25571 net.cpp:106] Creating Layer bbox_pred
I0611 15:11:23.611006 25571 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0611 15:11:23.611011 25571 net.cpp:411] bbox_pred -> bbox_pred
I0611 15:11:23.611826 25571 net.cpp:150] Setting up bbox_pred
I0611 15:11:23.611831 25571 net.cpp:157] Top shape: 1 8 (8)
I0611 15:11:23.611845 25571 net.cpp:165] Memory required for data: 1430983576
I0611 15:11:23.611848 25571 layer_factory.hpp:77] Creating layer loss_attribute
I0611 15:11:23.611855 25571 net.cpp:106] Creating Layer loss_attribute
I0611 15:11:23.611860 25571 net.cpp:454] loss_attribute <- attr_score
I0611 15:11:23.611873 25571 net.cpp:454] loss_attribute <- attrArray
I0611 15:11:23.611879 25571 net.cpp:411] loss_attribute -> loss_attribute
F0611 15:11:23.611939 25571 sigmoid_cross_entropy_loss_layer.cpp:23] Check failed: bottom[0]->count() == bottom[1]->count() (10 vs. 7) SIGMOID_CROSS_ENTROPY_LOSS layer inputs must have the same count.
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 25571 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
