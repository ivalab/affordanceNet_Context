+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-04_17-43-23
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-04_17-43-23
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
29646 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 29646 -> 29646
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0604 17:43:34.928823  5740 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0604 17:43:34.928855  5740 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0604 17:43:34.930582  5740 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "query_conv_reshape_ch"
  type: "Reshape"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv_reshape_ch"
  reshape_param {
    shape {
      dim: 1
      dim: 512
      dim: -1
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape_ch"
  type: "Reshape"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv_reshape_ch"
  reshape_param {
    shape {
      dim: 1
      dim: 512
      dim: -1
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape_ch"
  type: "Reshape"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv_reshape_ch"
  reshape_param {
    shape {
      dim: 1
      dim: 512
      dim: -1
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm_ch"
  type: "Permute"
  bottom: "query_conv_reshape_ch"
  top: "query_conv_reshape_perm_ch"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "key_conv_reshape_perm_ch"
  type: "Permute"
  bottom: "key_conv_reshape_ch"
  top: "key_conv_reshape_perm_ch"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "energy_ch"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm_ch"
  bottom: "key_conv_reshape_perm_ch"
  top: "energy_ch"
}
layer {
  name: "energy_ch_perm"
  type: "Permute"
  bottom: "energy_ch"
  top: "energy_ch_perm"
  permute_param {
    order: 0
    order: 2
    order: 1
    order: 3
  }
}
layer {
  name: "energy_ch_pool"
  type: "Pooling"
  bottom: "energy_ch_perm"
  top: "energy_ch_pool"
  pooling_param {
    pool: MAX
    kernel_h: 1
    kernel_w: 512
    stride_h: 1
    stride_w: 512
  }
}
layer {
  name: "energy_ch_perm_perm"
  type: "Permute"
  bottom: "energy_ch_perm"
  top: "energy_ch_perm_perm"
  permute_param {
    order: 0
    order: 2
    order: 1
    order: 3
  }
}
layer {
  name: "energy_ch_max"
  type: "Tile"
  bottom: "energy_ch_perm_perm"
  top: "energy_ch_max"
  tile_param {
    axis: 3
    tiles: 512
  }
}
layer {
  name: "energy_ch_minus"
  type: "Power"
  bottom: "energy_ch"
  top: "energy_ch_minus"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "energy_new"
  type: "Eltwise"
  bottom: "energy_ch_max"
  bottom: "energy_ch_minus"
  top: "energy_new"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "attention_ch"
  type: "Softmax"
  bottom: "energy_new"
  top: "attention_ch"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_ch_perm"
  type: "Permute"
  bottom: "value_conv_reshape_ch"
  top: "value_conv_reshape_ch_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_ch_perm"
  type: "Permute"
  bottom: "attention_ch"
  top: "attention_ch_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out_ch"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_ch_perm"
  bottom: "attention_ch_perm"
  top: "out_ch"
}
layer {
  name: "out_ch_reshape"
  type: "Reshape"
  bottom: "out_ch"
  top: "out_ch_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_ch_reshape_scale"
  type: "Scale"
  bottom: "out_ch_reshape"
  top: "out_ch_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_ch_x"
  type: "Eltwise"
  bottom: "out_ch_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_ch_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "out_conv_ch_x"
  type: "Convolution"
  bottom: "out_ch_x"
  top: "out_conv_ch_x"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out_conv_x"
  type: "Convolution"
  bottom: "out_x"
  top: "out_conv_x"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out_x_sum"
  type: "Eltwise"
  bottom: "out_conv_x"
  bottom: "out_conv_ch_x"
  top: "out_x_sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x_sum"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0604 17:43:34.931082  5740 layer_factory.hpp:77] Creating layer input-data
I0604 17:43:35.036512  5740 net.cpp:106] Creating Layer input-data
I0604 17:43:35.036535  5740 net.cpp:411] input-data -> data
I0604 17:43:35.036551  5740 net.cpp:411] input-data -> im_info
I0604 17:43:35.036561  5740 net.cpp:411] input-data -> gt_boxes
I0604 17:43:35.036571  5740 net.cpp:411] input-data -> seg_mask_inds
I0604 17:43:35.036576  5740 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0604 17:43:35.140528  5740 net.cpp:150] Setting up input-data
I0604 17:43:35.140547  5740 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0604 17:43:35.140555  5740 net.cpp:157] Top shape: 1 3 (3)
I0604 17:43:35.140560  5740 net.cpp:157] Top shape: 1 4 (4)
I0604 17:43:35.140566  5740 net.cpp:157] Top shape: 1 2 (2)
I0604 17:43:35.140571  5740 net.cpp:157] Top shape: 1 1 (1)
I0604 17:43:35.140575  5740 net.cpp:165] Memory required for data: 7200040
I0604 17:43:35.140584  5740 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0604 17:43:35.141145  5740 net.cpp:106] Creating Layer data_input-data_0_split
I0604 17:43:35.141151  5740 net.cpp:454] data_input-data_0_split <- data
I0604 17:43:35.141160  5740 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0604 17:43:35.141170  5740 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0604 17:43:35.141197  5740 net.cpp:150] Setting up data_input-data_0_split
I0604 17:43:35.141203  5740 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0604 17:43:35.141209  5740 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0604 17:43:35.141214  5740 net.cpp:165] Memory required for data: 21600040
I0604 17:43:35.141218  5740 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0604 17:43:35.141225  5740 net.cpp:106] Creating Layer im_info_input-data_1_split
I0604 17:43:35.141230  5740 net.cpp:454] im_info_input-data_1_split <- im_info
I0604 17:43:35.141237  5740 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0604 17:43:35.141244  5740 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0604 17:43:35.141252  5740 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0604 17:43:35.141281  5740 net.cpp:150] Setting up im_info_input-data_1_split
I0604 17:43:35.141286  5740 net.cpp:157] Top shape: 1 3 (3)
I0604 17:43:35.141292  5740 net.cpp:157] Top shape: 1 3 (3)
I0604 17:43:35.141296  5740 net.cpp:157] Top shape: 1 3 (3)
I0604 17:43:35.141301  5740 net.cpp:165] Memory required for data: 21600076
I0604 17:43:35.141305  5740 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0604 17:43:35.141311  5740 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0604 17:43:35.141316  5740 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0604 17:43:35.141322  5740 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0604 17:43:35.141330  5740 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0604 17:43:35.141355  5740 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0604 17:43:35.141360  5740 net.cpp:157] Top shape: 1 4 (4)
I0604 17:43:35.141366  5740 net.cpp:157] Top shape: 1 4 (4)
I0604 17:43:35.141368  5740 net.cpp:165] Memory required for data: 21600108
I0604 17:43:35.141372  5740 layer_factory.hpp:77] Creating layer conv1_1
I0604 17:43:35.141387  5740 net.cpp:106] Creating Layer conv1_1
I0604 17:43:35.141392  5740 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0604 17:43:35.141398  5740 net.cpp:411] conv1_1 -> conv1_1
I0604 17:43:35.801388  5740 net.cpp:150] Setting up conv1_1
I0604 17:43:35.801410  5740 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0604 17:43:35.801446  5740 net.cpp:165] Memory required for data: 175200108
I0604 17:43:35.801460  5740 layer_factory.hpp:77] Creating layer relu1_1
I0604 17:43:35.801470  5740 net.cpp:106] Creating Layer relu1_1
I0604 17:43:35.801475  5740 net.cpp:454] relu1_1 <- conv1_1
I0604 17:43:35.801479  5740 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0604 17:43:35.801626  5740 net.cpp:150] Setting up relu1_1
I0604 17:43:35.801632  5740 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0604 17:43:35.801635  5740 net.cpp:165] Memory required for data: 328800108
I0604 17:43:35.801637  5740 layer_factory.hpp:77] Creating layer conv1_2
I0604 17:43:35.801646  5740 net.cpp:106] Creating Layer conv1_2
I0604 17:43:35.801650  5740 net.cpp:454] conv1_2 <- conv1_1
I0604 17:43:35.801654  5740 net.cpp:411] conv1_2 -> conv1_2
I0604 17:43:35.803802  5740 net.cpp:150] Setting up conv1_2
I0604 17:43:35.803824  5740 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0604 17:43:35.803827  5740 net.cpp:165] Memory required for data: 482400108
I0604 17:43:35.803834  5740 layer_factory.hpp:77] Creating layer relu1_2
I0604 17:43:35.803839  5740 net.cpp:106] Creating Layer relu1_2
I0604 17:43:35.803841  5740 net.cpp:454] relu1_2 <- conv1_2
I0604 17:43:35.803845  5740 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0604 17:43:35.804026  5740 net.cpp:150] Setting up relu1_2
I0604 17:43:35.804033  5740 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0604 17:43:35.804045  5740 net.cpp:165] Memory required for data: 636000108
I0604 17:43:35.804047  5740 layer_factory.hpp:77] Creating layer pool1
I0604 17:43:35.804054  5740 net.cpp:106] Creating Layer pool1
I0604 17:43:35.804067  5740 net.cpp:454] pool1 <- conv1_2
I0604 17:43:35.804072  5740 net.cpp:411] pool1 -> pool1
I0604 17:43:35.804667  5740 net.cpp:150] Setting up pool1
I0604 17:43:35.804674  5740 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0604 17:43:35.804677  5740 net.cpp:165] Memory required for data: 674400108
I0604 17:43:35.804679  5740 layer_factory.hpp:77] Creating layer conv2_1
I0604 17:43:35.804687  5740 net.cpp:106] Creating Layer conv2_1
I0604 17:43:35.804689  5740 net.cpp:454] conv2_1 <- pool1
I0604 17:43:35.804693  5740 net.cpp:411] conv2_1 -> conv2_1
I0604 17:43:35.806702  5740 net.cpp:150] Setting up conv2_1
I0604 17:43:35.806723  5740 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0604 17:43:35.806726  5740 net.cpp:165] Memory required for data: 751200108
I0604 17:43:35.806735  5740 layer_factory.hpp:77] Creating layer relu2_1
I0604 17:43:35.806751  5740 net.cpp:106] Creating Layer relu2_1
I0604 17:43:35.806754  5740 net.cpp:454] relu2_1 <- conv2_1
I0604 17:43:35.806759  5740 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0604 17:43:35.807229  5740 net.cpp:150] Setting up relu2_1
I0604 17:43:35.807236  5740 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0604 17:43:35.807250  5740 net.cpp:165] Memory required for data: 828000108
I0604 17:43:35.807251  5740 layer_factory.hpp:77] Creating layer conv2_2
I0604 17:43:35.807258  5740 net.cpp:106] Creating Layer conv2_2
I0604 17:43:35.807261  5740 net.cpp:454] conv2_2 <- conv2_1
I0604 17:43:35.807276  5740 net.cpp:411] conv2_2 -> conv2_2
I0604 17:43:35.809056  5740 net.cpp:150] Setting up conv2_2
I0604 17:43:35.809064  5740 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0604 17:43:35.809077  5740 net.cpp:165] Memory required for data: 904800108
I0604 17:43:35.809082  5740 layer_factory.hpp:77] Creating layer relu2_2
I0604 17:43:35.809087  5740 net.cpp:106] Creating Layer relu2_2
I0604 17:43:35.809089  5740 net.cpp:454] relu2_2 <- conv2_2
I0604 17:43:35.809103  5740 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0604 17:43:35.809233  5740 net.cpp:150] Setting up relu2_2
I0604 17:43:35.809239  5740 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0604 17:43:35.809252  5740 net.cpp:165] Memory required for data: 981600108
I0604 17:43:35.809254  5740 layer_factory.hpp:77] Creating layer pool2
I0604 17:43:35.809262  5740 net.cpp:106] Creating Layer pool2
I0604 17:43:35.809275  5740 net.cpp:454] pool2 <- conv2_2
I0604 17:43:35.809281  5740 net.cpp:411] pool2 -> pool2
I0604 17:43:35.809310  5740 net.cpp:150] Setting up pool2
I0604 17:43:35.809314  5740 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0604 17:43:35.809316  5740 net.cpp:165] Memory required for data: 1000800108
I0604 17:43:35.809319  5740 layer_factory.hpp:77] Creating layer conv3_1
I0604 17:43:35.809325  5740 net.cpp:106] Creating Layer conv3_1
I0604 17:43:35.809329  5740 net.cpp:454] conv3_1 <- pool2
I0604 17:43:35.809334  5740 net.cpp:411] conv3_1 -> conv3_1
I0604 17:43:35.811246  5740 net.cpp:150] Setting up conv3_1
I0604 17:43:35.811255  5740 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:43:35.811257  5740 net.cpp:165] Memory required for data: 1039200108
I0604 17:43:35.811264  5740 layer_factory.hpp:77] Creating layer relu3_1
I0604 17:43:35.811269  5740 net.cpp:106] Creating Layer relu3_1
I0604 17:43:35.811271  5740 net.cpp:454] relu3_1 <- conv3_1
I0604 17:43:35.811286  5740 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0604 17:43:35.811429  5740 net.cpp:150] Setting up relu3_1
I0604 17:43:35.811434  5740 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:43:35.811436  5740 net.cpp:165] Memory required for data: 1077600108
I0604 17:43:35.811450  5740 layer_factory.hpp:77] Creating layer conv3_2
I0604 17:43:35.811457  5740 net.cpp:106] Creating Layer conv3_2
I0604 17:43:35.811471  5740 net.cpp:454] conv3_2 <- conv3_1
I0604 17:43:35.811476  5740 net.cpp:411] conv3_2 -> conv3_2
I0604 17:43:35.813565  5740 net.cpp:150] Setting up conv3_2
I0604 17:43:35.813575  5740 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:43:35.813576  5740 net.cpp:165] Memory required for data: 1116000108
I0604 17:43:35.813581  5740 layer_factory.hpp:77] Creating layer relu3_2
I0604 17:43:35.813586  5740 net.cpp:106] Creating Layer relu3_2
I0604 17:43:35.813588  5740 net.cpp:454] relu3_2 <- conv3_2
I0604 17:43:35.813592  5740 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0604 17:43:35.813746  5740 net.cpp:150] Setting up relu3_2
I0604 17:43:35.813752  5740 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:43:35.813755  5740 net.cpp:165] Memory required for data: 1154400108
I0604 17:43:35.813757  5740 layer_factory.hpp:77] Creating layer conv3_3
I0604 17:43:35.813763  5740 net.cpp:106] Creating Layer conv3_3
I0604 17:43:35.813766  5740 net.cpp:454] conv3_3 <- conv3_2
I0604 17:43:35.813769  5740 net.cpp:411] conv3_3 -> conv3_3
I0604 17:43:35.815765  5740 net.cpp:150] Setting up conv3_3
I0604 17:43:35.815786  5740 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:43:35.815799  5740 net.cpp:165] Memory required for data: 1192800108
I0604 17:43:35.815804  5740 layer_factory.hpp:77] Creating layer relu3_3
I0604 17:43:35.815809  5740 net.cpp:106] Creating Layer relu3_3
I0604 17:43:35.815812  5740 net.cpp:454] relu3_3 <- conv3_3
I0604 17:43:35.815816  5740 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0604 17:43:35.815944  5740 net.cpp:150] Setting up relu3_3
I0604 17:43:35.815950  5740 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0604 17:43:35.815953  5740 net.cpp:165] Memory required for data: 1231200108
I0604 17:43:35.815955  5740 layer_factory.hpp:77] Creating layer pool3
I0604 17:43:35.815960  5740 net.cpp:106] Creating Layer pool3
I0604 17:43:35.815963  5740 net.cpp:454] pool3 <- conv3_3
I0604 17:43:35.815968  5740 net.cpp:411] pool3 -> pool3
I0604 17:43:35.816016  5740 net.cpp:150] Setting up pool3
I0604 17:43:35.816021  5740 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0604 17:43:35.816032  5740 net.cpp:165] Memory required for data: 1240800108
I0604 17:43:35.816035  5740 layer_factory.hpp:77] Creating layer conv4_1
I0604 17:43:35.816041  5740 net.cpp:106] Creating Layer conv4_1
I0604 17:43:35.816045  5740 net.cpp:454] conv4_1 <- pool3
I0604 17:43:35.816048  5740 net.cpp:411] conv4_1 -> conv4_1
I0604 17:43:35.820066  5740 net.cpp:150] Setting up conv4_1
I0604 17:43:35.820097  5740 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:43:35.820101  5740 net.cpp:165] Memory required for data: 1260000108
I0604 17:43:35.820109  5740 layer_factory.hpp:77] Creating layer relu4_1
I0604 17:43:35.820127  5740 net.cpp:106] Creating Layer relu4_1
I0604 17:43:35.820148  5740 net.cpp:454] relu4_1 <- conv4_1
I0604 17:43:35.820155  5740 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0604 17:43:35.820331  5740 net.cpp:150] Setting up relu4_1
I0604 17:43:35.820350  5740 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:43:35.820354  5740 net.cpp:165] Memory required for data: 1279200108
I0604 17:43:35.820358  5740 layer_factory.hpp:77] Creating layer conv4_2
I0604 17:43:35.820369  5740 net.cpp:106] Creating Layer conv4_2
I0604 17:43:35.820374  5740 net.cpp:454] conv4_2 <- conv4_1
I0604 17:43:35.820389  5740 net.cpp:411] conv4_2 -> conv4_2
I0604 17:43:35.826454  5740 net.cpp:150] Setting up conv4_2
I0604 17:43:35.826483  5740 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:43:35.826485  5740 net.cpp:165] Memory required for data: 1298400108
I0604 17:43:35.826500  5740 layer_factory.hpp:77] Creating layer relu4_2
I0604 17:43:35.826508  5740 net.cpp:106] Creating Layer relu4_2
I0604 17:43:35.826511  5740 net.cpp:454] relu4_2 <- conv4_2
I0604 17:43:35.826516  5740 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0604 17:43:35.827018  5740 net.cpp:150] Setting up relu4_2
I0604 17:43:35.827025  5740 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:43:35.827039  5740 net.cpp:165] Memory required for data: 1317600108
I0604 17:43:35.827040  5740 layer_factory.hpp:77] Creating layer conv4_3
I0604 17:43:35.827049  5740 net.cpp:106] Creating Layer conv4_3
I0604 17:43:35.827051  5740 net.cpp:454] conv4_3 <- conv4_2
I0604 17:43:35.827055  5740 net.cpp:411] conv4_3 -> conv4_3
I0604 17:43:35.831923  5740 net.cpp:150] Setting up conv4_3
I0604 17:43:35.831941  5740 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:43:35.831944  5740 net.cpp:165] Memory required for data: 1336800108
I0604 17:43:35.831951  5740 layer_factory.hpp:77] Creating layer relu4_3
I0604 17:43:35.831959  5740 net.cpp:106] Creating Layer relu4_3
I0604 17:43:35.831974  5740 net.cpp:454] relu4_3 <- conv4_3
I0604 17:43:35.831979  5740 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0604 17:43:35.832123  5740 net.cpp:150] Setting up relu4_3
I0604 17:43:35.832129  5740 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0604 17:43:35.832140  5740 net.cpp:165] Memory required for data: 1356000108
I0604 17:43:35.832144  5740 layer_factory.hpp:77] Creating layer pool4
I0604 17:43:35.832149  5740 net.cpp:106] Creating Layer pool4
I0604 17:43:35.832151  5740 net.cpp:454] pool4 <- conv4_3
I0604 17:43:35.832156  5740 net.cpp:411] pool4 -> pool4
I0604 17:43:35.832195  5740 net.cpp:150] Setting up pool4
I0604 17:43:35.832198  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.832211  5740 net.cpp:165] Memory required for data: 1360903020
I0604 17:43:35.832212  5740 layer_factory.hpp:77] Creating layer conv5_1
I0604 17:43:35.832219  5740 net.cpp:106] Creating Layer conv5_1
I0604 17:43:35.832222  5740 net.cpp:454] conv5_1 <- pool4
I0604 17:43:35.832226  5740 net.cpp:411] conv5_1 -> conv5_1
I0604 17:43:35.836596  5740 net.cpp:150] Setting up conv5_1
I0604 17:43:35.836614  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.836617  5740 net.cpp:165] Memory required for data: 1365805932
I0604 17:43:35.836624  5740 layer_factory.hpp:77] Creating layer relu5_1
I0604 17:43:35.836632  5740 net.cpp:106] Creating Layer relu5_1
I0604 17:43:35.836647  5740 net.cpp:454] relu5_1 <- conv5_1
I0604 17:43:35.836652  5740 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0604 17:43:35.836797  5740 net.cpp:150] Setting up relu5_1
I0604 17:43:35.836803  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.836817  5740 net.cpp:165] Memory required for data: 1370708844
I0604 17:43:35.836818  5740 layer_factory.hpp:77] Creating layer conv5_2
I0604 17:43:35.836827  5740 net.cpp:106] Creating Layer conv5_2
I0604 17:43:35.836828  5740 net.cpp:454] conv5_2 <- conv5_1
I0604 17:43:35.836843  5740 net.cpp:411] conv5_2 -> conv5_2
I0604 17:43:35.841176  5740 net.cpp:150] Setting up conv5_2
I0604 17:43:35.841207  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.841209  5740 net.cpp:165] Memory required for data: 1375611756
I0604 17:43:35.841219  5740 layer_factory.hpp:77] Creating layer relu5_2
I0604 17:43:35.841239  5740 net.cpp:106] Creating Layer relu5_2
I0604 17:43:35.841243  5740 net.cpp:454] relu5_2 <- conv5_2
I0604 17:43:35.841249  5740 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0604 17:43:35.841388  5740 net.cpp:150] Setting up relu5_2
I0604 17:43:35.841395  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.841399  5740 net.cpp:165] Memory required for data: 1380514668
I0604 17:43:35.841403  5740 layer_factory.hpp:77] Creating layer conv5_3
I0604 17:43:35.841449  5740 net.cpp:106] Creating Layer conv5_3
I0604 17:43:35.841464  5740 net.cpp:454] conv5_3 <- conv5_2
I0604 17:43:35.841470  5740 net.cpp:411] conv5_3 -> conv5_3
I0604 17:43:35.846130  5740 net.cpp:150] Setting up conv5_3
I0604 17:43:35.846153  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.846155  5740 net.cpp:165] Memory required for data: 1385417580
I0604 17:43:35.846175  5740 layer_factory.hpp:77] Creating layer relu5_3
I0604 17:43:35.846185  5740 net.cpp:106] Creating Layer relu5_3
I0604 17:43:35.846190  5740 net.cpp:454] relu5_3 <- conv5_3
I0604 17:43:35.846200  5740 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0604 17:43:35.846331  5740 net.cpp:150] Setting up relu5_3
I0604 17:43:35.846338  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.846341  5740 net.cpp:165] Memory required for data: 1390320492
I0604 17:43:35.846345  5740 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0604 17:43:35.846362  5740 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0604 17:43:35.846365  5740 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0604 17:43:35.846371  5740 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0604 17:43:35.846391  5740 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0604 17:43:35.846398  5740 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0604 17:43:35.846478  5740 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0604 17:43:35.846494  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.846498  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.846513  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.846518  5740 net.cpp:165] Memory required for data: 1405029228
I0604 17:43:35.846521  5740 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0604 17:43:35.846534  5740 net.cpp:106] Creating Layer rpn_conv/3x3
I0604 17:43:35.846546  5740 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0604 17:43:35.846554  5740 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0604 17:43:35.899698  5740 net.cpp:150] Setting up rpn_conv/3x3
I0604 17:43:35.899734  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.899742  5740 net.cpp:165] Memory required for data: 1409932140
I0604 17:43:35.899768  5740 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0604 17:43:35.899787  5740 net.cpp:106] Creating Layer rpn_relu/3x3
I0604 17:43:35.899796  5740 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0604 17:43:35.899806  5740 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0604 17:43:35.899981  5740 net.cpp:150] Setting up rpn_relu/3x3
I0604 17:43:35.899997  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.900019  5740 net.cpp:165] Memory required for data: 1414835052
I0604 17:43:35.900043  5740 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0604 17:43:35.900063  5740 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0604 17:43:35.900074  5740 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0604 17:43:35.900096  5740 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0604 17:43:35.900123  5740 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0604 17:43:35.900271  5740 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0604 17:43:35.900300  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.900310  5740 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0604 17:43:35.900316  5740 net.cpp:165] Memory required for data: 1424640876
I0604 17:43:35.900327  5740 layer_factory.hpp:77] Creating layer rpn_cls_score
I0604 17:43:35.900353  5740 net.cpp:106] Creating Layer rpn_cls_score
I0604 17:43:35.900362  5740 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0604 17:43:35.900379  5740 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0604 17:43:35.902653  5740 net.cpp:150] Setting up rpn_cls_score
I0604 17:43:35.902664  5740 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0604 17:43:35.902668  5740 net.cpp:165] Memory required for data: 1424928156
I0604 17:43:35.902676  5740 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0604 17:43:35.902699  5740 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0604 17:43:35.902709  5740 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0604 17:43:35.902719  5740 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0604 17:43:35.902740  5740 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0604 17:43:35.902793  5740 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0604 17:43:35.902801  5740 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0604 17:43:35.902814  5740 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0604 17:43:35.902820  5740 net.cpp:165] Memory required for data: 1425502716
I0604 17:43:35.902824  5740 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0604 17:43:35.902834  5740 net.cpp:106] Creating Layer rpn_bbox_pred
I0604 17:43:35.902840  5740 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0604 17:43:35.902849  5740 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0604 17:43:35.905524  5740 net.cpp:150] Setting up rpn_bbox_pred
I0604 17:43:35.905534  5740 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:43:35.905537  5740 net.cpp:165] Memory required for data: 1426077276
I0604 17:43:35.905545  5740 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0604 17:43:35.905556  5740 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0604 17:43:35.905561  5740 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0604 17:43:35.905567  5740 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0604 17:43:35.905576  5740 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0604 17:43:35.905616  5740 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0604 17:43:35.905623  5740 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:43:35.905627  5740 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:43:35.905632  5740 net.cpp:165] Memory required for data: 1427226396
I0604 17:43:35.905637  5740 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0604 17:43:35.905650  5740 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0604 17:43:35.905656  5740 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0604 17:43:35.905663  5740 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0604 17:43:35.905689  5740 net.cpp:150] Setting up rpn_cls_score_reshape
I0604 17:43:35.905694  5740 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0604 17:43:35.905697  5740 net.cpp:165] Memory required for data: 1427513676
I0604 17:43:35.905701  5740 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0604 17:43:35.905709  5740 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0604 17:43:35.905714  5740 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0604 17:43:35.905720  5740 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0604 17:43:35.905728  5740 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0604 17:43:35.905758  5740 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0604 17:43:35.905766  5740 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0604 17:43:35.905769  5740 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0604 17:43:35.905772  5740 net.cpp:165] Memory required for data: 1428088236
I0604 17:43:35.905776  5740 layer_factory.hpp:77] Creating layer rpn-data
I0604 17:43:35.906800  5740 net.cpp:106] Creating Layer rpn-data
I0604 17:43:35.906810  5740 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0604 17:43:35.906814  5740 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0604 17:43:35.906818  5740 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0604 17:43:35.906822  5740 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0604 17:43:35.906828  5740 net.cpp:411] rpn-data -> rpn_labels
I0604 17:43:35.906836  5740 net.cpp:411] rpn-data -> rpn_bbox_targets
I0604 17:43:35.906841  5740 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0604 17:43:35.906847  5740 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0604 17:43:35.907707  5740 net.cpp:150] Setting up rpn-data
I0604 17:43:35.907717  5740 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0604 17:43:35.907721  5740 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:43:35.907725  5740 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:43:35.907727  5740 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0604 17:43:35.907729  5740 net.cpp:165] Memory required for data: 1429955556
I0604 17:43:35.907733  5740 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0604 17:43:35.907740  5740 net.cpp:106] Creating Layer rpn_loss_cls
I0604 17:43:35.907748  5740 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0604 17:43:35.907752  5740 net.cpp:454] rpn_loss_cls <- rpn_labels
I0604 17:43:35.907759  5740 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0604 17:43:35.907771  5740 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0604 17:43:35.911247  5740 net.cpp:150] Setting up rpn_loss_cls
I0604 17:43:35.911258  5740 net.cpp:157] Top shape: (1)
I0604 17:43:35.911262  5740 net.cpp:160]     with loss weight 1
I0604 17:43:35.911303  5740 net.cpp:165] Memory required for data: 1429955560
I0604 17:43:35.911305  5740 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0604 17:43:35.911314  5740 net.cpp:106] Creating Layer rpn_loss_bbox
I0604 17:43:35.911319  5740 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0604 17:43:35.911324  5740 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0604 17:43:35.911329  5740 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0604 17:43:35.911331  5740 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0604 17:43:35.911335  5740 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0604 17:43:35.912528  5740 net.cpp:150] Setting up rpn_loss_bbox
I0604 17:43:35.912536  5740 net.cpp:157] Top shape: (1)
I0604 17:43:35.912549  5740 net.cpp:160]     with loss weight 1
I0604 17:43:35.912554  5740 net.cpp:165] Memory required for data: 1429955564
I0604 17:43:35.912555  5740 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0604 17:43:35.912571  5740 net.cpp:106] Creating Layer rpn_cls_prob
I0604 17:43:35.912575  5740 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0604 17:43:35.912578  5740 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0604 17:43:35.912773  5740 net.cpp:150] Setting up rpn_cls_prob
I0604 17:43:35.912781  5740 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0604 17:43:35.912793  5740 net.cpp:165] Memory required for data: 1430242844
I0604 17:43:35.912796  5740 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0604 17:43:35.912801  5740 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0604 17:43:35.912804  5740 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0604 17:43:35.912809  5740 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0604 17:43:35.912830  5740 net.cpp:150] Setting up rpn_cls_prob_reshape
I0604 17:43:35.912834  5740 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0604 17:43:35.912837  5740 net.cpp:165] Memory required for data: 1430530124
I0604 17:43:35.912848  5740 layer_factory.hpp:77] Creating layer proposal
I0604 17:43:35.916348  5740 net.cpp:106] Creating Layer proposal
I0604 17:43:35.916357  5740 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0604 17:43:35.916362  5740 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0604 17:43:35.916364  5740 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0604 17:43:35.916368  5740 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0604 17:43:35.917680  5740 net.cpp:150] Setting up proposal
I0604 17:43:35.917690  5740 net.cpp:157] Top shape: 1 5 (5)
I0604 17:43:35.917691  5740 net.cpp:165] Memory required for data: 1430530144
I0604 17:43:35.917695  5740 layer_factory.hpp:77] Creating layer roi-data
I0604 17:43:35.918190  5740 net.cpp:106] Creating Layer roi-data
I0604 17:43:35.918197  5740 net.cpp:454] roi-data <- rpn_rois
I0604 17:43:35.918202  5740 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0604 17:43:35.918205  5740 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0604 17:43:35.918208  5740 net.cpp:454] roi-data <- seg_mask_inds
I0604 17:43:35.918211  5740 net.cpp:454] roi-data <- flipped
I0604 17:43:35.918215  5740 net.cpp:411] roi-data -> rois
I0604 17:43:35.918221  5740 net.cpp:411] roi-data -> labels
I0604 17:43:35.918226  5740 net.cpp:411] roi-data -> bbox_targets
I0604 17:43:35.918231  5740 net.cpp:411] roi-data -> bbox_inside_weights
I0604 17:43:35.918236  5740 net.cpp:411] roi-data -> bbox_outside_weights
I0604 17:43:35.918241  5740 net.cpp:411] roi-data -> mask_targets
I0604 17:43:35.918246  5740 net.cpp:411] roi-data -> rois_pos
I0604 17:43:35.918535  5740 net.cpp:150] Setting up roi-data
I0604 17:43:35.918543  5740 net.cpp:157] Top shape: 1 5 (5)
I0604 17:43:35.918546  5740 net.cpp:157] Top shape: 1 1 (1)
I0604 17:43:35.918550  5740 net.cpp:157] Top shape: 1 8 (8)
I0604 17:43:35.918551  5740 net.cpp:157] Top shape: 1 8 (8)
I0604 17:43:35.918555  5740 net.cpp:157] Top shape: 1 8 (8)
I0604 17:43:35.918556  5740 net.cpp:157] Top shape: 1 244 244 (59536)
I0604 17:43:35.918560  5740 net.cpp:157] Top shape: 1 5 (5)
I0604 17:43:35.918561  5740 net.cpp:165] Memory required for data: 1430768428
I0604 17:43:35.918563  5740 layer_factory.hpp:77] Creating layer roi_pool5
I0604 17:43:35.919153  5740 net.cpp:106] Creating Layer roi_pool5
I0604 17:43:35.919159  5740 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0604 17:43:35.919162  5740 net.cpp:454] roi_pool5 <- rois
I0604 17:43:35.919167  5740 net.cpp:411] roi_pool5 -> pool5
I0604 17:43:35.919172  5740 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0604 17:43:35.919241  5740 net.cpp:150] Setting up roi_pool5
I0604 17:43:35.919246  5740 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:43:35.919248  5740 net.cpp:165] Memory required for data: 1430868780
I0604 17:43:35.919251  5740 layer_factory.hpp:77] Creating layer fc6
I0604 17:43:35.919258  5740 net.cpp:106] Creating Layer fc6
I0604 17:43:35.919261  5740 net.cpp:454] fc6 <- pool5
I0604 17:43:35.919266  5740 net.cpp:411] fc6 -> fc6
I0604 17:43:36.105959  5740 net.cpp:150] Setting up fc6
I0604 17:43:36.105983  5740 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:43:36.105985  5740 net.cpp:165] Memory required for data: 1430885164
I0604 17:43:36.106000  5740 layer_factory.hpp:77] Creating layer relu6
I0604 17:43:36.106009  5740 net.cpp:106] Creating Layer relu6
I0604 17:43:36.106014  5740 net.cpp:454] relu6 <- fc6
I0604 17:43:36.106017  5740 net.cpp:397] relu6 -> fc6 (in-place)
I0604 17:43:36.106207  5740 net.cpp:150] Setting up relu6
I0604 17:43:36.106214  5740 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:43:36.106215  5740 net.cpp:165] Memory required for data: 1430901548
I0604 17:43:36.106217  5740 layer_factory.hpp:77] Creating layer fc7
I0604 17:43:36.106225  5740 net.cpp:106] Creating Layer fc7
I0604 17:43:36.106226  5740 net.cpp:454] fc7 <- fc6
I0604 17:43:36.106230  5740 net.cpp:411] fc7 -> fc7
I0604 17:43:36.131433  5740 net.cpp:150] Setting up fc7
I0604 17:43:36.131464  5740 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:43:36.131469  5740 net.cpp:165] Memory required for data: 1430917932
I0604 17:43:36.131476  5740 layer_factory.hpp:77] Creating layer relu7
I0604 17:43:36.131496  5740 net.cpp:106] Creating Layer relu7
I0604 17:43:36.131501  5740 net.cpp:454] relu7 <- fc7
I0604 17:43:36.131508  5740 net.cpp:397] relu7 -> fc7 (in-place)
I0604 17:43:36.131810  5740 net.cpp:150] Setting up relu7
I0604 17:43:36.131830  5740 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:43:36.131834  5740 net.cpp:165] Memory required for data: 1430934316
I0604 17:43:36.131836  5740 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0604 17:43:36.131842  5740 net.cpp:106] Creating Layer fc7_relu7_0_split
I0604 17:43:36.131845  5740 net.cpp:454] fc7_relu7_0_split <- fc7
I0604 17:43:36.131850  5740 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0604 17:43:36.131855  5740 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0604 17:43:36.131918  5740 net.cpp:150] Setting up fc7_relu7_0_split
I0604 17:43:36.131927  5740 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:43:36.131932  5740 net.cpp:157] Top shape: 1 4096 (4096)
I0604 17:43:36.131935  5740 net.cpp:165] Memory required for data: 1430967084
I0604 17:43:36.131938  5740 layer_factory.hpp:77] Creating layer cls_score
I0604 17:43:36.131952  5740 net.cpp:106] Creating Layer cls_score
I0604 17:43:36.131956  5740 net.cpp:454] cls_score <- fc7_relu7_0_split_0
I0604 17:43:36.131963  5740 net.cpp:411] cls_score -> cls_score
I0604 17:43:36.132230  5740 net.cpp:150] Setting up cls_score
I0604 17:43:36.132237  5740 net.cpp:157] Top shape: 1 2 (2)
I0604 17:43:36.132241  5740 net.cpp:165] Memory required for data: 1430967092
I0604 17:43:36.132249  5740 layer_factory.hpp:77] Creating layer bbox_pred
I0604 17:43:36.132261  5740 net.cpp:106] Creating Layer bbox_pred
I0604 17:43:36.132266  5740 net.cpp:454] bbox_pred <- fc7_relu7_0_split_1
I0604 17:43:36.132273  5740 net.cpp:411] bbox_pred -> bbox_pred
I0604 17:43:36.133054  5740 net.cpp:150] Setting up bbox_pred
I0604 17:43:36.133061  5740 net.cpp:157] Top shape: 1 8 (8)
I0604 17:43:36.133064  5740 net.cpp:165] Memory required for data: 1430967124
I0604 17:43:36.133074  5740 layer_factory.hpp:77] Creating layer loss_cls
I0604 17:43:36.133085  5740 net.cpp:106] Creating Layer loss_cls
I0604 17:43:36.133105  5740 net.cpp:454] loss_cls <- cls_score
I0604 17:43:36.133112  5740 net.cpp:454] loss_cls <- labels
I0604 17:43:36.133124  5740 net.cpp:411] loss_cls -> loss_cls
I0604 17:43:36.133144  5740 layer_factory.hpp:77] Creating layer loss_cls
I0604 17:43:36.135821  5740 net.cpp:150] Setting up loss_cls
I0604 17:43:36.135831  5740 net.cpp:157] Top shape: (1)
I0604 17:43:36.135835  5740 net.cpp:160]     with loss weight 3
I0604 17:43:36.135850  5740 net.cpp:165] Memory required for data: 1430967128
I0604 17:43:36.135855  5740 layer_factory.hpp:77] Creating layer loss_bbox
I0604 17:43:36.135864  5740 net.cpp:106] Creating Layer loss_bbox
I0604 17:43:36.135870  5740 net.cpp:454] loss_bbox <- bbox_pred
I0604 17:43:36.135875  5740 net.cpp:454] loss_bbox <- bbox_targets
I0604 17:43:36.135880  5740 net.cpp:454] loss_bbox <- bbox_inside_weights
I0604 17:43:36.135886  5740 net.cpp:454] loss_bbox <- bbox_outside_weights
I0604 17:43:36.135896  5740 net.cpp:411] loss_bbox -> loss_bbox
I0604 17:43:36.135982  5740 net.cpp:150] Setting up loss_bbox
I0604 17:43:36.135988  5740 net.cpp:157] Top shape: (1)
I0604 17:43:36.135991  5740 net.cpp:160]     with loss weight 2
I0604 17:43:36.135998  5740 net.cpp:165] Memory required for data: 1430967132
I0604 17:43:36.136003  5740 layer_factory.hpp:77] Creating layer roi_pool5_2
I0604 17:43:36.136011  5740 net.cpp:106] Creating Layer roi_pool5_2
I0604 17:43:36.136016  5740 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0604 17:43:36.136024  5740 net.cpp:454] roi_pool5_2 <- rois_pos
I0604 17:43:36.136031  5740 net.cpp:411] roi_pool5_2 -> pool5_2
I0604 17:43:36.136039  5740 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0604 17:43:36.136112  5740 net.cpp:150] Setting up roi_pool5_2
I0604 17:43:36.136119  5740 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:43:36.136122  5740 net.cpp:165] Memory required for data: 1431067484
I0604 17:43:36.136135  5740 layer_factory.hpp:77] Creating layer pool5_2_conv
I0604 17:43:36.136147  5740 net.cpp:106] Creating Layer pool5_2_conv
I0604 17:43:36.136152  5740 net.cpp:454] pool5_2_conv <- pool5_2
I0604 17:43:36.136162  5740 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0604 17:43:36.142843  5740 net.cpp:150] Setting up pool5_2_conv
I0604 17:43:36.142853  5740 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:43:36.142855  5740 net.cpp:165] Memory required for data: 1431167836
I0604 17:43:36.142863  5740 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0604 17:43:36.142874  5740 net.cpp:106] Creating Layer pool5_2_conv_relu
I0604 17:43:36.142879  5740 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0604 17:43:36.142884  5740 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0604 17:43:36.143018  5740 net.cpp:150] Setting up pool5_2_conv_relu
I0604 17:43:36.143026  5740 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:43:36.143029  5740 net.cpp:165] Memory required for data: 1431268188
I0604 17:43:36.143033  5740 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0604 17:43:36.143049  5740 net.cpp:106] Creating Layer pool5_2_conv2
I0604 17:43:36.143054  5740 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0604 17:43:36.143060  5740 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0604 17:43:36.193745  5740 net.cpp:150] Setting up pool5_2_conv2
I0604 17:43:36.193764  5740 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:43:36.193768  5740 net.cpp:165] Memory required for data: 1431368540
I0604 17:43:36.193779  5740 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0604 17:43:36.193802  5740 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0604 17:43:36.193809  5740 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0604 17:43:36.193816  5740 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0604 17:43:36.194015  5740 net.cpp:150] Setting up pool5_2_conv2_relu
I0604 17:43:36.194025  5740 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0604 17:43:36.194027  5740 net.cpp:165] Memory required for data: 1431468892
I0604 17:43:36.194031  5740 layer_factory.hpp:77] Creating layer mask_deconv1
I0604 17:43:36.194043  5740 net.cpp:106] Creating Layer mask_deconv1
I0604 17:43:36.194061  5740 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0604 17:43:36.194067  5740 net.cpp:411] mask_deconv1 -> mask_deconv1
I0604 17:43:36.195017  5740 net.cpp:150] Setting up mask_deconv1
I0604 17:43:36.195025  5740 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0604 17:43:36.195029  5740 net.cpp:165] Memory required for data: 1432390492
I0604 17:43:36.195046  5740 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0604 17:43:36.195070  5740 net.cpp:106] Creating Layer pool5_2_conv3
I0604 17:43:36.195073  5740 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0604 17:43:36.195089  5740 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0604 17:43:36.222090  5740 net.cpp:150] Setting up pool5_2_conv3
I0604 17:43:36.222108  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.222112  5740 net.cpp:165] Memory required for data: 1434233692
I0604 17:43:36.222122  5740 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0604 17:43:36.222147  5740 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0604 17:43:36.222164  5740 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0604 17:43:36.222184  5740 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0604 17:43:36.222358  5740 net.cpp:150] Setting up pool5_2_conv3_relu
I0604 17:43:36.222368  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.222370  5740 net.cpp:165] Memory required for data: 1436076892
I0604 17:43:36.222374  5740 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0604 17:43:36.222399  5740 net.cpp:106] Creating Layer pool5_2_conv4
I0604 17:43:36.222404  5740 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0604 17:43:36.222412  5740 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0604 17:43:36.273614  5740 net.cpp:150] Setting up pool5_2_conv4
I0604 17:43:36.273634  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.273638  5740 net.cpp:165] Memory required for data: 1437920092
I0604 17:43:36.273648  5740 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0604 17:43:36.273658  5740 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0604 17:43:36.273675  5740 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0604 17:43:36.273694  5740 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0604 17:43:36.273855  5740 net.cpp:150] Setting up pool5_2_conv4_relu
I0604 17:43:36.273864  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.273867  5740 net.cpp:165] Memory required for data: 1439763292
I0604 17:43:36.273870  5740 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0604 17:43:36.273880  5740 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0604 17:43:36.273885  5740 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0604 17:43:36.273890  5740 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0604 17:43:36.273900  5740 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0604 17:43:36.273908  5740 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0604 17:43:36.273914  5740 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0604 17:43:36.273921  5740 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_4
I0604 17:43:36.273926  5740 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_5
I0604 17:43:36.273943  5740 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_6
I0604 17:43:36.273949  5740 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_7
I0604 17:43:36.274031  5740 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0604 17:43:36.274037  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.274041  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.274045  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.274050  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.274055  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.274060  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.274065  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.274070  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.274073  5740 net.cpp:165] Memory required for data: 1454508892
I0604 17:43:36.274077  5740 layer_factory.hpp:77] Creating layer query_conv
I0604 17:43:36.274091  5740 net.cpp:106] Creating Layer query_conv
I0604 17:43:36.274096  5740 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0604 17:43:36.274104  5740 net.cpp:411] query_conv -> query_conv
I0604 17:43:36.275708  5740 net.cpp:150] Setting up query_conv
I0604 17:43:36.275718  5740 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0604 17:43:36.275722  5740 net.cpp:165] Memory required for data: 1454739292
I0604 17:43:36.275729  5740 layer_factory.hpp:77] Creating layer key_conv
I0604 17:43:36.275744  5740 net.cpp:106] Creating Layer key_conv
I0604 17:43:36.275749  5740 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0604 17:43:36.275756  5740 net.cpp:411] key_conv -> key_conv
I0604 17:43:36.277400  5740 net.cpp:150] Setting up key_conv
I0604 17:43:36.277410  5740 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0604 17:43:36.277412  5740 net.cpp:165] Memory required for data: 1454969692
I0604 17:43:36.277441  5740 layer_factory.hpp:77] Creating layer value_conv
I0604 17:43:36.277463  5740 net.cpp:106] Creating Layer value_conv
I0604 17:43:36.277479  5740 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0604 17:43:36.277487  5740 net.cpp:411] value_conv -> value_conv
I0604 17:43:36.284557  5740 net.cpp:150] Setting up value_conv
I0604 17:43:36.284569  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.284571  5740 net.cpp:165] Memory required for data: 1456812892
I0604 17:43:36.284587  5740 layer_factory.hpp:77] Creating layer query_conv_reshape
I0604 17:43:36.284596  5740 net.cpp:106] Creating Layer query_conv_reshape
I0604 17:43:36.284611  5740 net.cpp:454] query_conv_reshape <- query_conv
I0604 17:43:36.284618  5740 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0604 17:43:36.284658  5740 net.cpp:150] Setting up query_conv_reshape
I0604 17:43:36.284665  5740 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0604 17:43:36.284677  5740 net.cpp:165] Memory required for data: 1457043292
I0604 17:43:36.284678  5740 layer_factory.hpp:77] Creating layer key_conv_reshape
I0604 17:43:36.284683  5740 net.cpp:106] Creating Layer key_conv_reshape
I0604 17:43:36.284698  5740 net.cpp:454] key_conv_reshape <- key_conv
I0604 17:43:36.284703  5740 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0604 17:43:36.284734  5740 net.cpp:150] Setting up key_conv_reshape
I0604 17:43:36.284739  5740 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0604 17:43:36.284740  5740 net.cpp:165] Memory required for data: 1457273692
I0604 17:43:36.284742  5740 layer_factory.hpp:77] Creating layer value_conv_reshape
I0604 17:43:36.284757  5740 net.cpp:106] Creating Layer value_conv_reshape
I0604 17:43:36.284760  5740 net.cpp:454] value_conv_reshape <- value_conv
I0604 17:43:36.284763  5740 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0604 17:43:36.284801  5740 net.cpp:150] Setting up value_conv_reshape
I0604 17:43:36.284814  5740 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0604 17:43:36.284816  5740 net.cpp:165] Memory required for data: 1459116892
I0604 17:43:36.284819  5740 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0604 17:43:36.285272  5740 net.cpp:106] Creating Layer query_conv_reshape_perm
I0604 17:43:36.285277  5740 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0604 17:43:36.285282  5740 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0604 17:43:36.285358  5740 net.cpp:150] Setting up query_conv_reshape_perm
I0604 17:43:36.285364  5740 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0604 17:43:36.285367  5740 net.cpp:165] Memory required for data: 1459347292
I0604 17:43:36.285370  5740 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0604 17:43:36.285374  5740 net.cpp:106] Creating Layer key_conv_reshape_perm
I0604 17:43:36.285378  5740 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0604 17:43:36.285382  5740 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0604 17:43:36.285459  5740 net.cpp:150] Setting up key_conv_reshape_perm
I0604 17:43:36.285464  5740 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0604 17:43:36.285465  5740 net.cpp:165] Memory required for data: 1459577692
I0604 17:43:36.285468  5740 layer_factory.hpp:77] Creating layer energy
I0604 17:43:36.285475  5740 net.cpp:106] Creating Layer energy
I0604 17:43:36.285478  5740 net.cpp:454] energy <- query_conv_reshape_perm
I0604 17:43:36.285482  5740 net.cpp:454] energy <- key_conv_reshape_perm
I0604 17:43:36.285486  5740 net.cpp:411] energy -> energy
I0604 17:43:36.285504  5740 net.cpp:150] Setting up energy
I0604 17:43:36.285509  5740 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0604 17:43:36.285511  5740 net.cpp:165] Memory required for data: 1462817692
I0604 17:43:36.285514  5740 layer_factory.hpp:77] Creating layer attention
I0604 17:43:36.285521  5740 net.cpp:106] Creating Layer attention
I0604 17:43:36.285524  5740 net.cpp:454] attention <- energy
I0604 17:43:36.285532  5740 net.cpp:411] attention -> attention
I0604 17:43:36.285712  5740 net.cpp:150] Setting up attention
I0604 17:43:36.285718  5740 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0604 17:43:36.285722  5740 net.cpp:165] Memory required for data: 1466057692
I0604 17:43:36.285727  5740 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0604 17:43:36.285732  5740 net.cpp:106] Creating Layer value_conv_reshape_perm
I0604 17:43:36.285735  5740 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0604 17:43:36.285740  5740 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0604 17:43:36.285814  5740 net.cpp:150] Setting up value_conv_reshape_perm
I0604 17:43:36.285818  5740 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0604 17:43:36.285820  5740 net.cpp:165] Memory required for data: 1467900892
I0604 17:43:36.285822  5740 layer_factory.hpp:77] Creating layer attention_perm
I0604 17:43:36.285828  5740 net.cpp:106] Creating Layer attention_perm
I0604 17:43:36.285831  5740 net.cpp:454] attention_perm <- attention
I0604 17:43:36.285835  5740 net.cpp:411] attention_perm -> attention_perm
I0604 17:43:36.285900  5740 net.cpp:150] Setting up attention_perm
I0604 17:43:36.285904  5740 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0604 17:43:36.285907  5740 net.cpp:165] Memory required for data: 1471140892
I0604 17:43:36.285909  5740 layer_factory.hpp:77] Creating layer out
I0604 17:43:36.285913  5740 net.cpp:106] Creating Layer out
I0604 17:43:36.285917  5740 net.cpp:454] out <- value_conv_reshape_perm
I0604 17:43:36.285920  5740 net.cpp:454] out <- attention_perm
I0604 17:43:36.285924  5740 net.cpp:411] out -> out
I0604 17:43:36.285941  5740 net.cpp:150] Setting up out
I0604 17:43:36.285945  5740 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0604 17:43:36.285948  5740 net.cpp:165] Memory required for data: 1472984092
I0604 17:43:36.285950  5740 layer_factory.hpp:77] Creating layer out_reshape
I0604 17:43:36.285954  5740 net.cpp:106] Creating Layer out_reshape
I0604 17:43:36.285959  5740 net.cpp:454] out_reshape <- out
I0604 17:43:36.285962  5740 net.cpp:411] out_reshape -> out_reshape
I0604 17:43:36.285979  5740 net.cpp:150] Setting up out_reshape
I0604 17:43:36.285984  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.285985  5740 net.cpp:165] Memory required for data: 1474827292
I0604 17:43:36.285987  5740 layer_factory.hpp:77] Creating layer out_reshape_scale
I0604 17:43:36.285996  5740 net.cpp:106] Creating Layer out_reshape_scale
I0604 17:43:36.286000  5740 net.cpp:454] out_reshape_scale <- out_reshape
I0604 17:43:36.286005  5740 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0604 17:43:36.286067  5740 net.cpp:150] Setting up out_reshape_scale
I0604 17:43:36.286072  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.286074  5740 net.cpp:165] Memory required for data: 1476670492
I0604 17:43:36.286077  5740 layer_factory.hpp:77] Creating layer out_x
I0604 17:43:36.286085  5740 net.cpp:106] Creating Layer out_x
I0604 17:43:36.286089  5740 net.cpp:454] out_x <- out_reshape_scale
I0604 17:43:36.286092  5740 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0604 17:43:36.286096  5740 net.cpp:411] out_x -> out_x
I0604 17:43:36.286114  5740 net.cpp:150] Setting up out_x
I0604 17:43:36.286118  5740 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0604 17:43:36.286121  5740 net.cpp:165] Memory required for data: 1478513692
I0604 17:43:36.286123  5740 layer_factory.hpp:77] Creating layer query_conv_reshape_ch
I0604 17:43:36.286128  5740 net.cpp:106] Creating Layer query_conv_reshape_ch
I0604 17:43:36.286131  5740 net.cpp:454] query_conv_reshape_ch <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_4
I0604 17:43:36.286135  5740 net.cpp:411] query_conv_reshape_ch -> query_conv_reshape_ch
I0604 17:43:36.286154  5740 net.cpp:150] Setting up query_conv_reshape_ch
I0604 17:43:36.286159  5740 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0604 17:43:36.286160  5740 net.cpp:165] Memory required for data: 1480356892
I0604 17:43:36.286162  5740 layer_factory.hpp:77] Creating layer key_conv_reshape_ch
I0604 17:43:36.286167  5740 net.cpp:106] Creating Layer key_conv_reshape_ch
I0604 17:43:36.286170  5740 net.cpp:454] key_conv_reshape_ch <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_5
I0604 17:43:36.286177  5740 net.cpp:411] key_conv_reshape_ch -> key_conv_reshape_ch
I0604 17:43:36.286193  5740 net.cpp:150] Setting up key_conv_reshape_ch
I0604 17:43:36.286198  5740 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0604 17:43:36.286201  5740 net.cpp:165] Memory required for data: 1482200092
I0604 17:43:36.286202  5740 layer_factory.hpp:77] Creating layer value_conv_reshape_ch
I0604 17:43:36.286206  5740 net.cpp:106] Creating Layer value_conv_reshape_ch
I0604 17:43:36.286209  5740 net.cpp:454] value_conv_reshape_ch <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_6
I0604 17:43:36.286212  5740 net.cpp:411] value_conv_reshape_ch -> value_conv_reshape_ch
I0604 17:43:36.286229  5740 net.cpp:150] Setting up value_conv_reshape_ch
I0604 17:43:36.286234  5740 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0604 17:43:36.286237  5740 net.cpp:165] Memory required for data: 1484043292
I0604 17:43:36.286238  5740 layer_factory.hpp:77] Creating layer query_conv_reshape_perm_ch
I0604 17:43:36.286242  5740 net.cpp:106] Creating Layer query_conv_reshape_perm_ch
I0604 17:43:36.286247  5740 net.cpp:454] query_conv_reshape_perm_ch <- query_conv_reshape_ch
I0604 17:43:36.286249  5740 net.cpp:411] query_conv_reshape_perm_ch -> query_conv_reshape_perm_ch
I0604 17:43:36.286315  5740 net.cpp:150] Setting up query_conv_reshape_perm_ch
I0604 17:43:36.286320  5740 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0604 17:43:36.286322  5740 net.cpp:165] Memory required for data: 1485886492
I0604 17:43:36.286324  5740 layer_factory.hpp:77] Creating layer key_conv_reshape_perm_ch
I0604 17:43:36.286329  5740 net.cpp:106] Creating Layer key_conv_reshape_perm_ch
I0604 17:43:36.286331  5740 net.cpp:454] key_conv_reshape_perm_ch <- key_conv_reshape_ch
I0604 17:43:36.286336  5740 net.cpp:411] key_conv_reshape_perm_ch -> key_conv_reshape_perm_ch
I0604 17:43:36.286401  5740 net.cpp:150] Setting up key_conv_reshape_perm_ch
I0604 17:43:36.286404  5740 net.cpp:157] Top shape: 1 1 900 512 (460800)
I0604 17:43:36.286407  5740 net.cpp:165] Memory required for data: 1487729692
I0604 17:43:36.286409  5740 layer_factory.hpp:77] Creating layer energy_ch
I0604 17:43:36.286414  5740 net.cpp:106] Creating Layer energy_ch
I0604 17:43:36.286417  5740 net.cpp:454] energy_ch <- query_conv_reshape_perm_ch
I0604 17:43:36.286420  5740 net.cpp:454] energy_ch <- key_conv_reshape_perm_ch
I0604 17:43:36.286425  5740 net.cpp:411] energy_ch -> energy_ch
I0604 17:43:36.286439  5740 net.cpp:150] Setting up energy_ch
I0604 17:43:36.286444  5740 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:43:36.286447  5740 net.cpp:165] Memory required for data: 1488778268
I0604 17:43:36.286448  5740 layer_factory.hpp:77] Creating layer energy_ch_energy_ch_0_split
I0604 17:43:36.286453  5740 net.cpp:106] Creating Layer energy_ch_energy_ch_0_split
I0604 17:43:36.286456  5740 net.cpp:454] energy_ch_energy_ch_0_split <- energy_ch
I0604 17:43:36.286460  5740 net.cpp:411] energy_ch_energy_ch_0_split -> energy_ch_energy_ch_0_split_0
I0604 17:43:36.286465  5740 net.cpp:411] energy_ch_energy_ch_0_split -> energy_ch_energy_ch_0_split_1
I0604 17:43:36.286489  5740 net.cpp:150] Setting up energy_ch_energy_ch_0_split
I0604 17:43:36.286494  5740 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:43:36.286495  5740 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:43:36.286499  5740 net.cpp:165] Memory required for data: 1490875420
I0604 17:43:36.286501  5740 layer_factory.hpp:77] Creating layer energy_ch_perm
I0604 17:43:36.286506  5740 net.cpp:106] Creating Layer energy_ch_perm
I0604 17:43:36.286509  5740 net.cpp:454] energy_ch_perm <- energy_ch_energy_ch_0_split_0
I0604 17:43:36.286514  5740 net.cpp:411] energy_ch_perm -> energy_ch_perm
I0604 17:43:36.286578  5740 net.cpp:150] Setting up energy_ch_perm
I0604 17:43:36.286583  5740 net.cpp:157] Top shape: 1 512 1 512 (262144)
I0604 17:43:36.286586  5740 net.cpp:165] Memory required for data: 1491923996
I0604 17:43:36.286588  5740 layer_factory.hpp:77] Creating layer energy_ch_perm_energy_ch_perm_0_split
I0604 17:43:36.286592  5740 net.cpp:106] Creating Layer energy_ch_perm_energy_ch_perm_0_split
I0604 17:43:36.286597  5740 net.cpp:454] energy_ch_perm_energy_ch_perm_0_split <- energy_ch_perm
I0604 17:43:36.286599  5740 net.cpp:411] energy_ch_perm_energy_ch_perm_0_split -> energy_ch_perm_energy_ch_perm_0_split_0
I0604 17:43:36.286604  5740 net.cpp:411] energy_ch_perm_energy_ch_perm_0_split -> energy_ch_perm_energy_ch_perm_0_split_1
I0604 17:43:36.286629  5740 net.cpp:150] Setting up energy_ch_perm_energy_ch_perm_0_split
I0604 17:43:36.286634  5740 net.cpp:157] Top shape: 1 512 1 512 (262144)
I0604 17:43:36.286636  5740 net.cpp:157] Top shape: 1 512 1 512 (262144)
I0604 17:43:36.286638  5740 net.cpp:165] Memory required for data: 1494021148
I0604 17:43:36.286643  5740 layer_factory.hpp:77] Creating layer energy_ch_pool
I0604 17:43:36.286649  5740 net.cpp:106] Creating Layer energy_ch_pool
I0604 17:43:36.286653  5740 net.cpp:454] energy_ch_pool <- energy_ch_perm_energy_ch_perm_0_split_0
I0604 17:43:36.286659  5740 net.cpp:411] energy_ch_pool -> energy_ch_pool
I0604 17:43:36.286685  5740 net.cpp:150] Setting up energy_ch_pool
I0604 17:43:36.286689  5740 net.cpp:157] Top shape: 1 512 1 1 (512)
I0604 17:43:36.286692  5740 net.cpp:165] Memory required for data: 1494023196
I0604 17:43:36.286695  5740 layer_factory.hpp:77] Creating layer energy_ch_perm_perm
I0604 17:43:36.286700  5740 net.cpp:106] Creating Layer energy_ch_perm_perm
I0604 17:43:36.286703  5740 net.cpp:454] energy_ch_perm_perm <- energy_ch_perm_energy_ch_perm_0_split_1
I0604 17:43:36.286706  5740 net.cpp:411] energy_ch_perm_perm -> energy_ch_perm_perm
I0604 17:43:36.286774  5740 net.cpp:150] Setting up energy_ch_perm_perm
I0604 17:43:36.286779  5740 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:43:36.286782  5740 net.cpp:165] Memory required for data: 1495071772
I0604 17:43:36.286787  5740 layer_factory.hpp:77] Creating layer energy_ch_max
I0604 17:43:36.286792  5740 net.cpp:106] Creating Layer energy_ch_max
I0604 17:43:36.286795  5740 net.cpp:454] energy_ch_max <- energy_ch_perm_perm
I0604 17:43:36.286798  5740 net.cpp:411] energy_ch_max -> energy_ch_max
I0604 17:43:36.286818  5740 net.cpp:150] Setting up energy_ch_max
I0604 17:43:36.286823  5740 net.cpp:157] Top shape: 1 1 512 262144 (134217728)
I0604 17:43:36.286824  5740 net.cpp:165] Memory required for data: 2031942684
I0604 17:43:36.286826  5740 layer_factory.hpp:77] Creating layer energy_ch_minus
I0604 17:43:36.286833  5740 net.cpp:106] Creating Layer energy_ch_minus
I0604 17:43:36.286835  5740 net.cpp:454] energy_ch_minus <- energy_ch_energy_ch_0_split_1
I0604 17:43:36.286839  5740 net.cpp:411] energy_ch_minus -> energy_ch_minus
I0604 17:43:36.286855  5740 net.cpp:150] Setting up energy_ch_minus
I0604 17:43:36.286860  5740 net.cpp:157] Top shape: 1 1 512 512 (262144)
I0604 17:43:36.286862  5740 net.cpp:165] Memory required for data: 2032991260
I0604 17:43:36.286864  5740 layer_factory.hpp:77] Creating layer energy_new
I0604 17:43:36.286870  5740 net.cpp:106] Creating Layer energy_new
I0604 17:43:36.286875  5740 net.cpp:454] energy_new <- energy_ch_max
I0604 17:43:36.286877  5740 net.cpp:454] energy_new <- energy_ch_minus
I0604 17:43:36.286883  5740 net.cpp:411] energy_new -> energy_new
F0604 17:43:36.286890  5740 eltwise_layer.cpp:34] Check failed: bottom[i]->shape() == bottom[0]->shape() 
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65:  5740 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
