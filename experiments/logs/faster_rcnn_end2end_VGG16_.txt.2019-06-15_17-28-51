+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-15_17-28-51
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-15_17-28-51
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/vgg16_faster_rcnn_iter_115000_attribute.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/vgg16_faster_rcnn_iter_115000_attribute.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0615 17:29:06.567581 16419 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 1e-05
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0615 17:29:06.567605 16419 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0615 17:29:06.569175 16419 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0615 17:29:06.569607 16419 layer_factory.hpp:77] Creating layer input-data
I0615 17:29:06.720644 16419 net.cpp:106] Creating Layer input-data
I0615 17:29:06.721189 16419 net.cpp:411] input-data -> data
I0615 17:29:06.721200 16419 net.cpp:411] input-data -> im_info
I0615 17:29:06.721205 16419 net.cpp:411] input-data -> gt_boxes
I0615 17:29:06.721210 16419 net.cpp:411] input-data -> seg_mask_inds
I0615 17:29:06.721213 16419 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0615 17:29:06.838716 16419 net.cpp:150] Setting up input-data
I0615 17:29:06.838732 16419 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0615 17:29:06.838735 16419 net.cpp:157] Top shape: 1 3 (3)
I0615 17:29:06.838738 16419 net.cpp:157] Top shape: 1 4 (4)
I0615 17:29:06.838742 16419 net.cpp:157] Top shape: 1 2 (2)
I0615 17:29:06.838743 16419 net.cpp:157] Top shape: 1 1 (1)
I0615 17:29:06.838747 16419 net.cpp:165] Memory required for data: 7200040
I0615 17:29:06.838752 16419 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0615 17:29:06.839262 16419 net.cpp:106] Creating Layer data_input-data_0_split
I0615 17:29:06.839268 16419 net.cpp:454] data_input-data_0_split <- data
I0615 17:29:06.839273 16419 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0615 17:29:06.839280 16419 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0615 17:29:06.839301 16419 net.cpp:150] Setting up data_input-data_0_split
I0615 17:29:06.839308 16419 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0615 17:29:06.839309 16419 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0615 17:29:06.839313 16419 net.cpp:165] Memory required for data: 21600040
I0615 17:29:06.839314 16419 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0615 17:29:06.839319 16419 net.cpp:106] Creating Layer im_info_input-data_1_split
I0615 17:29:06.839323 16419 net.cpp:454] im_info_input-data_1_split <- im_info
I0615 17:29:06.839327 16419 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0615 17:29:06.839334 16419 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0615 17:29:06.839339 16419 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0615 17:29:06.839370 16419 net.cpp:150] Setting up im_info_input-data_1_split
I0615 17:29:06.839373 16419 net.cpp:157] Top shape: 1 3 (3)
I0615 17:29:06.839376 16419 net.cpp:157] Top shape: 1 3 (3)
I0615 17:29:06.839380 16419 net.cpp:157] Top shape: 1 3 (3)
I0615 17:29:06.839382 16419 net.cpp:165] Memory required for data: 21600076
I0615 17:29:06.839385 16419 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0615 17:29:06.839388 16419 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0615 17:29:06.839391 16419 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0615 17:29:06.839396 16419 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0615 17:29:06.839404 16419 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0615 17:29:06.839429 16419 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0615 17:29:06.839433 16419 net.cpp:157] Top shape: 1 4 (4)
I0615 17:29:06.839437 16419 net.cpp:157] Top shape: 1 4 (4)
I0615 17:29:06.839438 16419 net.cpp:165] Memory required for data: 21600108
I0615 17:29:06.839440 16419 layer_factory.hpp:77] Creating layer conv1_1
I0615 17:29:06.839448 16419 net.cpp:106] Creating Layer conv1_1
I0615 17:29:06.839452 16419 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0615 17:29:06.839457 16419 net.cpp:411] conv1_1 -> conv1_1
I0615 17:29:07.792045 16419 net.cpp:150] Setting up conv1_1
I0615 17:29:07.792065 16419 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0615 17:29:07.792068 16419 net.cpp:165] Memory required for data: 175200108
I0615 17:29:07.792080 16419 layer_factory.hpp:77] Creating layer relu1_1
I0615 17:29:07.792089 16419 net.cpp:106] Creating Layer relu1_1
I0615 17:29:07.792093 16419 net.cpp:454] relu1_1 <- conv1_1
I0615 17:29:07.792099 16419 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0615 17:29:07.792239 16419 net.cpp:150] Setting up relu1_1
I0615 17:29:07.792246 16419 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0615 17:29:07.792249 16419 net.cpp:165] Memory required for data: 328800108
I0615 17:29:07.792253 16419 layer_factory.hpp:77] Creating layer conv1_2
I0615 17:29:07.792260 16419 net.cpp:106] Creating Layer conv1_2
I0615 17:29:07.792263 16419 net.cpp:454] conv1_2 <- conv1_1
I0615 17:29:07.792268 16419 net.cpp:411] conv1_2 -> conv1_2
I0615 17:29:07.794719 16419 net.cpp:150] Setting up conv1_2
I0615 17:29:07.794734 16419 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0615 17:29:07.794737 16419 net.cpp:165] Memory required for data: 482400108
I0615 17:29:07.794749 16419 layer_factory.hpp:77] Creating layer relu1_2
I0615 17:29:07.794756 16419 net.cpp:106] Creating Layer relu1_2
I0615 17:29:07.794761 16419 net.cpp:454] relu1_2 <- conv1_2
I0615 17:29:07.794776 16419 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0615 17:29:07.794937 16419 net.cpp:150] Setting up relu1_2
I0615 17:29:07.794953 16419 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0615 17:29:07.794956 16419 net.cpp:165] Memory required for data: 636000108
I0615 17:29:07.794960 16419 layer_factory.hpp:77] Creating layer pool1
I0615 17:29:07.794982 16419 net.cpp:106] Creating Layer pool1
I0615 17:29:07.794986 16419 net.cpp:454] pool1 <- conv1_2
I0615 17:29:07.794991 16419 net.cpp:411] pool1 -> pool1
I0615 17:29:07.795545 16419 net.cpp:150] Setting up pool1
I0615 17:29:07.795553 16419 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0615 17:29:07.795557 16419 net.cpp:165] Memory required for data: 674400108
I0615 17:29:07.795560 16419 layer_factory.hpp:77] Creating layer conv2_1
I0615 17:29:07.795581 16419 net.cpp:106] Creating Layer conv2_1
I0615 17:29:07.795588 16419 net.cpp:454] conv2_1 <- pool1
I0615 17:29:07.795594 16419 net.cpp:411] conv2_1 -> conv2_1
I0615 17:29:07.797588 16419 net.cpp:150] Setting up conv2_1
I0615 17:29:07.797598 16419 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0615 17:29:07.797601 16419 net.cpp:165] Memory required for data: 751200108
I0615 17:29:07.797611 16419 layer_factory.hpp:77] Creating layer relu2_1
I0615 17:29:07.797621 16419 net.cpp:106] Creating Layer relu2_1
I0615 17:29:07.797634 16419 net.cpp:454] relu2_1 <- conv2_1
I0615 17:29:07.797641 16419 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0615 17:29:07.798130 16419 net.cpp:150] Setting up relu2_1
I0615 17:29:07.798138 16419 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0615 17:29:07.798142 16419 net.cpp:165] Memory required for data: 828000108
I0615 17:29:07.798161 16419 layer_factory.hpp:77] Creating layer conv2_2
I0615 17:29:07.798182 16419 net.cpp:106] Creating Layer conv2_2
I0615 17:29:07.798187 16419 net.cpp:454] conv2_2 <- conv2_1
I0615 17:29:07.798202 16419 net.cpp:411] conv2_2 -> conv2_2
I0615 17:29:07.799602 16419 net.cpp:150] Setting up conv2_2
I0615 17:29:07.799612 16419 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0615 17:29:07.799615 16419 net.cpp:165] Memory required for data: 904800108
I0615 17:29:07.799623 16419 layer_factory.hpp:77] Creating layer relu2_2
I0615 17:29:07.799629 16419 net.cpp:106] Creating Layer relu2_2
I0615 17:29:07.799645 16419 net.cpp:454] relu2_2 <- conv2_2
I0615 17:29:07.799652 16419 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0615 17:29:07.799809 16419 net.cpp:150] Setting up relu2_2
I0615 17:29:07.799816 16419 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0615 17:29:07.799819 16419 net.cpp:165] Memory required for data: 981600108
I0615 17:29:07.799823 16419 layer_factory.hpp:77] Creating layer pool2
I0615 17:29:07.799831 16419 net.cpp:106] Creating Layer pool2
I0615 17:29:07.799835 16419 net.cpp:454] pool2 <- conv2_2
I0615 17:29:07.799851 16419 net.cpp:411] pool2 -> pool2
I0615 17:29:07.799892 16419 net.cpp:150] Setting up pool2
I0615 17:29:07.799898 16419 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0615 17:29:07.799901 16419 net.cpp:165] Memory required for data: 1000800108
I0615 17:29:07.799916 16419 layer_factory.hpp:77] Creating layer conv3_1
I0615 17:29:07.799932 16419 net.cpp:106] Creating Layer conv3_1
I0615 17:29:07.799937 16419 net.cpp:454] conv3_1 <- pool2
I0615 17:29:07.799955 16419 net.cpp:411] conv3_1 -> conv3_1
I0615 17:29:07.801720 16419 net.cpp:150] Setting up conv3_1
I0615 17:29:07.801729 16419 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0615 17:29:07.801733 16419 net.cpp:165] Memory required for data: 1039200108
I0615 17:29:07.801743 16419 layer_factory.hpp:77] Creating layer relu3_1
I0615 17:29:07.801750 16419 net.cpp:106] Creating Layer relu3_1
I0615 17:29:07.801764 16419 net.cpp:454] relu3_1 <- conv3_1
I0615 17:29:07.801769 16419 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0615 17:29:07.801905 16419 net.cpp:150] Setting up relu3_1
I0615 17:29:07.801913 16419 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0615 17:29:07.801916 16419 net.cpp:165] Memory required for data: 1077600108
I0615 17:29:07.801930 16419 layer_factory.hpp:77] Creating layer conv3_2
I0615 17:29:07.801952 16419 net.cpp:106] Creating Layer conv3_2
I0615 17:29:07.801956 16419 net.cpp:454] conv3_2 <- conv3_1
I0615 17:29:07.801961 16419 net.cpp:411] conv3_2 -> conv3_2
I0615 17:29:07.803916 16419 net.cpp:150] Setting up conv3_2
I0615 17:29:07.803936 16419 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0615 17:29:07.803941 16419 net.cpp:165] Memory required for data: 1116000108
I0615 17:29:07.803947 16419 layer_factory.hpp:77] Creating layer relu3_2
I0615 17:29:07.803963 16419 net.cpp:106] Creating Layer relu3_2
I0615 17:29:07.803969 16419 net.cpp:454] relu3_2 <- conv3_2
I0615 17:29:07.803974 16419 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0615 17:29:07.804105 16419 net.cpp:150] Setting up relu3_2
I0615 17:29:07.804112 16419 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0615 17:29:07.804116 16419 net.cpp:165] Memory required for data: 1154400108
I0615 17:29:07.804129 16419 layer_factory.hpp:77] Creating layer conv3_3
I0615 17:29:07.804152 16419 net.cpp:106] Creating Layer conv3_3
I0615 17:29:07.804155 16419 net.cpp:454] conv3_3 <- conv3_2
I0615 17:29:07.804162 16419 net.cpp:411] conv3_3 -> conv3_3
I0615 17:29:07.806335 16419 net.cpp:150] Setting up conv3_3
I0615 17:29:07.806349 16419 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0615 17:29:07.806352 16419 net.cpp:165] Memory required for data: 1192800108
I0615 17:29:07.806371 16419 layer_factory.hpp:77] Creating layer relu3_3
I0615 17:29:07.806391 16419 net.cpp:106] Creating Layer relu3_3
I0615 17:29:07.806397 16419 net.cpp:454] relu3_3 <- conv3_3
I0615 17:29:07.806404 16419 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0615 17:29:07.806535 16419 net.cpp:150] Setting up relu3_3
I0615 17:29:07.806542 16419 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0615 17:29:07.806545 16419 net.cpp:165] Memory required for data: 1231200108
I0615 17:29:07.806560 16419 layer_factory.hpp:77] Creating layer pool3
I0615 17:29:07.806568 16419 net.cpp:106] Creating Layer pool3
I0615 17:29:07.806573 16419 net.cpp:454] pool3 <- conv3_3
I0615 17:29:07.806578 16419 net.cpp:411] pool3 -> pool3
I0615 17:29:07.806613 16419 net.cpp:150] Setting up pool3
I0615 17:29:07.806627 16419 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0615 17:29:07.806630 16419 net.cpp:165] Memory required for data: 1240800108
I0615 17:29:07.806634 16419 layer_factory.hpp:77] Creating layer conv4_1
I0615 17:29:07.806653 16419 net.cpp:106] Creating Layer conv4_1
I0615 17:29:07.806658 16419 net.cpp:454] conv4_1 <- pool3
I0615 17:29:07.806664 16419 net.cpp:411] conv4_1 -> conv4_1
I0615 17:29:07.810578 16419 net.cpp:150] Setting up conv4_1
I0615 17:29:07.810598 16419 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0615 17:29:07.810602 16419 net.cpp:165] Memory required for data: 1260000108
I0615 17:29:07.810622 16419 layer_factory.hpp:77] Creating layer relu4_1
I0615 17:29:07.810632 16419 net.cpp:106] Creating Layer relu4_1
I0615 17:29:07.810639 16419 net.cpp:454] relu4_1 <- conv4_1
I0615 17:29:07.810657 16419 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0615 17:29:07.810796 16419 net.cpp:150] Setting up relu4_1
I0615 17:29:07.810802 16419 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0615 17:29:07.810806 16419 net.cpp:165] Memory required for data: 1279200108
I0615 17:29:07.810809 16419 layer_factory.hpp:77] Creating layer conv4_2
I0615 17:29:07.810829 16419 net.cpp:106] Creating Layer conv4_2
I0615 17:29:07.810833 16419 net.cpp:454] conv4_2 <- conv4_1
I0615 17:29:07.810848 16419 net.cpp:411] conv4_2 -> conv4_2
I0615 17:29:07.816150 16419 net.cpp:150] Setting up conv4_2
I0615 17:29:07.816169 16419 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0615 17:29:07.816174 16419 net.cpp:165] Memory required for data: 1298400108
I0615 17:29:07.816188 16419 layer_factory.hpp:77] Creating layer relu4_2
I0615 17:29:07.816207 16419 net.cpp:106] Creating Layer relu4_2
I0615 17:29:07.816213 16419 net.cpp:454] relu4_2 <- conv4_2
I0615 17:29:07.816228 16419 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0615 17:29:07.816782 16419 net.cpp:150] Setting up relu4_2
I0615 17:29:07.816792 16419 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0615 17:29:07.816795 16419 net.cpp:165] Memory required for data: 1317600108
I0615 17:29:07.816799 16419 layer_factory.hpp:77] Creating layer conv4_3
I0615 17:29:07.816823 16419 net.cpp:106] Creating Layer conv4_3
I0615 17:29:07.816840 16419 net.cpp:454] conv4_3 <- conv4_2
I0615 17:29:07.816860 16419 net.cpp:411] conv4_3 -> conv4_3
I0615 17:29:07.821198 16419 net.cpp:150] Setting up conv4_3
I0615 17:29:07.821219 16419 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0615 17:29:07.821223 16419 net.cpp:165] Memory required for data: 1336800108
I0615 17:29:07.821233 16419 layer_factory.hpp:77] Creating layer relu4_3
I0615 17:29:07.821243 16419 net.cpp:106] Creating Layer relu4_3
I0615 17:29:07.821257 16419 net.cpp:454] relu4_3 <- conv4_3
I0615 17:29:07.821265 16419 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0615 17:29:07.821398 16419 net.cpp:150] Setting up relu4_3
I0615 17:29:07.821405 16419 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0615 17:29:07.821408 16419 net.cpp:165] Memory required for data: 1356000108
I0615 17:29:07.821424 16419 layer_factory.hpp:77] Creating layer pool4
I0615 17:29:07.821432 16419 net.cpp:106] Creating Layer pool4
I0615 17:29:07.821449 16419 net.cpp:454] pool4 <- conv4_3
I0615 17:29:07.821455 16419 net.cpp:411] pool4 -> pool4
I0615 17:29:07.821506 16419 net.cpp:150] Setting up pool4
I0615 17:29:07.821512 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.821516 16419 net.cpp:165] Memory required for data: 1360903020
I0615 17:29:07.821519 16419 layer_factory.hpp:77] Creating layer conv5_1
I0615 17:29:07.821539 16419 net.cpp:106] Creating Layer conv5_1
I0615 17:29:07.821544 16419 net.cpp:454] conv5_1 <- pool4
I0615 17:29:07.821558 16419 net.cpp:411] conv5_1 -> conv5_1
I0615 17:29:07.826001 16419 net.cpp:150] Setting up conv5_1
I0615 17:29:07.826021 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.826025 16419 net.cpp:165] Memory required for data: 1365805932
I0615 17:29:07.826035 16419 layer_factory.hpp:77] Creating layer relu5_1
I0615 17:29:07.826045 16419 net.cpp:106] Creating Layer relu5_1
I0615 17:29:07.826050 16419 net.cpp:454] relu5_1 <- conv5_1
I0615 17:29:07.826059 16419 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0615 17:29:07.826170 16419 net.cpp:150] Setting up relu5_1
I0615 17:29:07.826177 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.826180 16419 net.cpp:165] Memory required for data: 1370708844
I0615 17:29:07.826184 16419 layer_factory.hpp:77] Creating layer conv5_2
I0615 17:29:07.826195 16419 net.cpp:106] Creating Layer conv5_2
I0615 17:29:07.826198 16419 net.cpp:454] conv5_2 <- conv5_1
I0615 17:29:07.826205 16419 net.cpp:411] conv5_2 -> conv5_2
I0615 17:29:07.830483 16419 net.cpp:150] Setting up conv5_2
I0615 17:29:07.830503 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.830507 16419 net.cpp:165] Memory required for data: 1375611756
I0615 17:29:07.830516 16419 layer_factory.hpp:77] Creating layer relu5_2
I0615 17:29:07.830525 16419 net.cpp:106] Creating Layer relu5_2
I0615 17:29:07.830531 16419 net.cpp:454] relu5_2 <- conv5_2
I0615 17:29:07.830539 16419 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0615 17:29:07.830651 16419 net.cpp:150] Setting up relu5_2
I0615 17:29:07.830658 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.830662 16419 net.cpp:165] Memory required for data: 1380514668
I0615 17:29:07.830665 16419 layer_factory.hpp:77] Creating layer conv5_3
I0615 17:29:07.830678 16419 net.cpp:106] Creating Layer conv5_3
I0615 17:29:07.830682 16419 net.cpp:454] conv5_3 <- conv5_2
I0615 17:29:07.830688 16419 net.cpp:411] conv5_3 -> conv5_3
I0615 17:29:07.835145 16419 net.cpp:150] Setting up conv5_3
I0615 17:29:07.835186 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.835188 16419 net.cpp:165] Memory required for data: 1385417580
I0615 17:29:07.835207 16419 layer_factory.hpp:77] Creating layer relu5_3
I0615 17:29:07.835217 16419 net.cpp:106] Creating Layer relu5_3
I0615 17:29:07.835222 16419 net.cpp:454] relu5_3 <- conv5_3
I0615 17:29:07.835229 16419 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0615 17:29:07.835402 16419 net.cpp:150] Setting up relu5_3
I0615 17:29:07.835410 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.835413 16419 net.cpp:165] Memory required for data: 1390320492
I0615 17:29:07.835417 16419 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0615 17:29:07.835422 16419 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0615 17:29:07.835427 16419 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0615 17:29:07.835433 16419 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0615 17:29:07.835440 16419 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0615 17:29:07.835448 16419 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0615 17:29:07.835484 16419 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0615 17:29:07.835489 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.835494 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.835497 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.835501 16419 net.cpp:165] Memory required for data: 1405029228
I0615 17:29:07.835506 16419 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0615 17:29:07.835517 16419 net.cpp:106] Creating Layer rpn_conv/3x3
I0615 17:29:07.835521 16419 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0615 17:29:07.835526 16419 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0615 17:29:07.886384 16419 net.cpp:150] Setting up rpn_conv/3x3
I0615 17:29:07.886402 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.886406 16419 net.cpp:165] Memory required for data: 1409932140
I0615 17:29:07.886415 16419 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0615 17:29:07.886425 16419 net.cpp:106] Creating Layer rpn_relu/3x3
I0615 17:29:07.886442 16419 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0615 17:29:07.886448 16419 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0615 17:29:07.886591 16419 net.cpp:150] Setting up rpn_relu/3x3
I0615 17:29:07.886598 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.886602 16419 net.cpp:165] Memory required for data: 1414835052
I0615 17:29:07.886606 16419 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0615 17:29:07.886612 16419 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0615 17:29:07.886616 16419 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0615 17:29:07.886631 16419 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0615 17:29:07.886638 16419 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0615 17:29:07.886701 16419 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0615 17:29:07.886708 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.886713 16419 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0615 17:29:07.886715 16419 net.cpp:165] Memory required for data: 1424640876
I0615 17:29:07.886729 16419 layer_factory.hpp:77] Creating layer rpn_cls_score
I0615 17:29:07.886749 16419 net.cpp:106] Creating Layer rpn_cls_score
I0615 17:29:07.886752 16419 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0615 17:29:07.886770 16419 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0615 17:29:07.888317 16419 net.cpp:150] Setting up rpn_cls_score
I0615 17:29:07.888326 16419 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0615 17:29:07.888329 16419 net.cpp:165] Memory required for data: 1424928156
I0615 17:29:07.888336 16419 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0615 17:29:07.888343 16419 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0615 17:29:07.888348 16419 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0615 17:29:07.888367 16419 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0615 17:29:07.888382 16419 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0615 17:29:07.888432 16419 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0615 17:29:07.888439 16419 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0615 17:29:07.888443 16419 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0615 17:29:07.888456 16419 net.cpp:165] Memory required for data: 1425502716
I0615 17:29:07.888461 16419 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0615 17:29:07.888470 16419 net.cpp:106] Creating Layer rpn_bbox_pred
I0615 17:29:07.888476 16419 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0615 17:29:07.888491 16419 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0615 17:29:07.890031 16419 net.cpp:150] Setting up rpn_bbox_pred
I0615 17:29:07.890040 16419 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0615 17:29:07.890044 16419 net.cpp:165] Memory required for data: 1426077276
I0615 17:29:07.890066 16419 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0615 17:29:07.890074 16419 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0615 17:29:07.890079 16419 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0615 17:29:07.890084 16419 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0615 17:29:07.890094 16419 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0615 17:29:07.890125 16419 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0615 17:29:07.890141 16419 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0615 17:29:07.890144 16419 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0615 17:29:07.890157 16419 net.cpp:165] Memory required for data: 1427226396
I0615 17:29:07.890161 16419 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0615 17:29:07.890173 16419 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0615 17:29:07.890178 16419 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0615 17:29:07.890185 16419 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0615 17:29:07.890210 16419 net.cpp:150] Setting up rpn_cls_score_reshape
I0615 17:29:07.890216 16419 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0615 17:29:07.890219 16419 net.cpp:165] Memory required for data: 1427513676
I0615 17:29:07.890233 16419 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0615 17:29:07.890238 16419 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0615 17:29:07.890250 16419 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0615 17:29:07.890256 16419 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0615 17:29:07.890274 16419 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0615 17:29:07.890312 16419 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0615 17:29:07.890317 16419 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0615 17:29:07.890321 16419 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0615 17:29:07.890326 16419 net.cpp:165] Memory required for data: 1428088236
I0615 17:29:07.890331 16419 layer_factory.hpp:77] Creating layer rpn-data
I0615 17:29:07.891491 16419 net.cpp:106] Creating Layer rpn-data
I0615 17:29:07.891499 16419 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0615 17:29:07.891507 16419 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0615 17:29:07.891512 16419 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0615 17:29:07.891517 16419 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0615 17:29:07.891526 16419 net.cpp:411] rpn-data -> rpn_labels
I0615 17:29:07.891536 16419 net.cpp:411] rpn-data -> rpn_bbox_targets
I0615 17:29:07.891546 16419 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0615 17:29:07.891554 16419 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0615 17:29:07.892423 16419 net.cpp:150] Setting up rpn-data
I0615 17:29:07.892433 16419 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0615 17:29:07.892438 16419 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0615 17:29:07.892443 16419 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0615 17:29:07.892447 16419 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0615 17:29:07.892452 16419 net.cpp:165] Memory required for data: 1429955556
I0615 17:29:07.892457 16419 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0615 17:29:07.892467 16419 net.cpp:106] Creating Layer rpn_loss_cls
I0615 17:29:07.892473 16419 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0615 17:29:07.892478 16419 net.cpp:454] rpn_loss_cls <- rpn_labels
I0615 17:29:07.892485 16419 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0615 17:29:07.893039 16419 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0615 17:29:07.893745 16419 net.cpp:150] Setting up rpn_loss_cls
I0615 17:29:07.893755 16419 net.cpp:157] Top shape: (1)
I0615 17:29:07.893759 16419 net.cpp:160]     with loss weight 1
I0615 17:29:07.893771 16419 net.cpp:165] Memory required for data: 1429955560
I0615 17:29:07.893775 16419 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0615 17:29:07.893784 16419 net.cpp:106] Creating Layer rpn_loss_bbox
I0615 17:29:07.893788 16419 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0615 17:29:07.893795 16419 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0615 17:29:07.893800 16419 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0615 17:29:07.893805 16419 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0615 17:29:07.893811 16419 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0615 17:29:07.894942 16419 net.cpp:150] Setting up rpn_loss_bbox
I0615 17:29:07.894949 16419 net.cpp:157] Top shape: (1)
I0615 17:29:07.894953 16419 net.cpp:160]     with loss weight 1
I0615 17:29:07.894973 16419 net.cpp:165] Memory required for data: 1429955564
I0615 17:29:07.894979 16419 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0615 17:29:07.894986 16419 net.cpp:106] Creating Layer rpn_cls_prob
I0615 17:29:07.894990 16419 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0615 17:29:07.894997 16419 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0615 17:29:07.895171 16419 net.cpp:150] Setting up rpn_cls_prob
I0615 17:29:07.895179 16419 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0615 17:29:07.895182 16419 net.cpp:165] Memory required for data: 1430242844
I0615 17:29:07.895195 16419 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0615 17:29:07.895207 16419 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0615 17:29:07.895212 16419 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0615 17:29:07.895218 16419 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0615 17:29:07.895254 16419 net.cpp:150] Setting up rpn_cls_prob_reshape
I0615 17:29:07.895262 16419 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0615 17:29:07.895264 16419 net.cpp:165] Memory required for data: 1430530124
I0615 17:29:07.895278 16419 layer_factory.hpp:77] Creating layer proposal
I0615 17:29:07.898000 16419 net.cpp:106] Creating Layer proposal
I0615 17:29:07.898010 16419 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0615 17:29:07.898015 16419 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0615 17:29:07.898020 16419 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0615 17:29:07.898028 16419 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0615 17:29:07.899268 16419 net.cpp:150] Setting up proposal
I0615 17:29:07.899278 16419 net.cpp:157] Top shape: 1 5 (5)
I0615 17:29:07.899282 16419 net.cpp:165] Memory required for data: 1430530144
I0615 17:29:07.899286 16419 layer_factory.hpp:77] Creating layer roi-data
I0615 17:29:07.899864 16419 net.cpp:106] Creating Layer roi-data
I0615 17:29:07.899873 16419 net.cpp:454] roi-data <- rpn_rois
I0615 17:29:07.899878 16419 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0615 17:29:07.899883 16419 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0615 17:29:07.899889 16419 net.cpp:454] roi-data <- seg_mask_inds
I0615 17:29:07.899895 16419 net.cpp:454] roi-data <- flipped
I0615 17:29:07.899905 16419 net.cpp:411] roi-data -> rois
I0615 17:29:07.899915 16419 net.cpp:411] roi-data -> labels
I0615 17:29:07.899925 16419 net.cpp:411] roi-data -> bbox_targets
I0615 17:29:07.899935 16419 net.cpp:411] roi-data -> bbox_inside_weights
I0615 17:29:07.899943 16419 net.cpp:411] roi-data -> bbox_outside_weights
I0615 17:29:07.899955 16419 net.cpp:411] roi-data -> mask_targets
I0615 17:29:07.899962 16419 net.cpp:411] roi-data -> rois_pos
I0615 17:29:07.899968 16419 net.cpp:411] roi-data -> attrArray
I0615 17:29:07.899976 16419 net.cpp:411] roi-data -> attrArrayInd
I0615 17:29:07.899984 16419 net.cpp:411] roi-data -> attrArrayShift
I0615 17:29:07.900291 16419 net.cpp:150] Setting up roi-data
I0615 17:29:07.900300 16419 net.cpp:157] Top shape: 1 5 (5)
I0615 17:29:07.900305 16419 net.cpp:157] Top shape: 1 1 (1)
I0615 17:29:07.900310 16419 net.cpp:157] Top shape: 1 8 (8)
I0615 17:29:07.900315 16419 net.cpp:157] Top shape: 1 8 (8)
I0615 17:29:07.900319 16419 net.cpp:157] Top shape: 1 8 (8)
I0615 17:29:07.900326 16419 net.cpp:157] Top shape: 1 244 244 (59536)
I0615 17:29:07.900332 16419 net.cpp:157] Top shape: 1 5 (5)
I0615 17:29:07.900336 16419 net.cpp:157] Top shape: 1 7 (7)
I0615 17:29:07.900342 16419 net.cpp:157] Top shape: 1 7 (7)
I0615 17:29:07.900346 16419 net.cpp:157] Top shape: 1 7 (7)
I0615 17:29:07.900351 16419 net.cpp:165] Memory required for data: 1430768512
I0615 17:29:07.900355 16419 layer_factory.hpp:77] Creating layer roi_pool5
I0615 17:29:07.900936 16419 net.cpp:106] Creating Layer roi_pool5
I0615 17:29:07.900943 16419 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0615 17:29:07.900948 16419 net.cpp:454] roi_pool5 <- rois
I0615 17:29:07.900954 16419 net.cpp:411] roi_pool5 -> pool5
I0615 17:29:07.900967 16419 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0615 17:29:07.901041 16419 net.cpp:150] Setting up roi_pool5
I0615 17:29:07.901047 16419 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0615 17:29:07.901052 16419 net.cpp:165] Memory required for data: 1430868864
I0615 17:29:07.901057 16419 layer_factory.hpp:77] Creating layer fc6
I0615 17:29:07.901067 16419 net.cpp:106] Creating Layer fc6
I0615 17:29:07.901070 16419 net.cpp:454] fc6 <- pool5
I0615 17:29:07.901077 16419 net.cpp:411] fc6 -> fc6
I0615 17:29:08.054031 16419 net.cpp:150] Setting up fc6
I0615 17:29:08.054055 16419 net.cpp:157] Top shape: 1 4096 (4096)
I0615 17:29:08.054059 16419 net.cpp:165] Memory required for data: 1430885248
I0615 17:29:08.054075 16419 layer_factory.hpp:77] Creating layer relu6
I0615 17:29:08.054096 16419 net.cpp:106] Creating Layer relu6
I0615 17:29:08.054103 16419 net.cpp:454] relu6 <- fc6
I0615 17:29:08.054119 16419 net.cpp:397] relu6 -> fc6 (in-place)
I0615 17:29:08.054332 16419 net.cpp:150] Setting up relu6
I0615 17:29:08.054339 16419 net.cpp:157] Top shape: 1 4096 (4096)
I0615 17:29:08.054342 16419 net.cpp:165] Memory required for data: 1430901632
I0615 17:29:08.054347 16419 layer_factory.hpp:77] Creating layer fc7
I0615 17:29:08.054355 16419 net.cpp:106] Creating Layer fc7
I0615 17:29:08.054360 16419 net.cpp:454] fc7 <- fc6
I0615 17:29:08.054376 16419 net.cpp:411] fc7 -> fc7
I0615 17:29:08.081109 16419 net.cpp:150] Setting up fc7
I0615 17:29:08.081137 16419 net.cpp:157] Top shape: 1 4096 (4096)
I0615 17:29:08.081141 16419 net.cpp:165] Memory required for data: 1430918016
I0615 17:29:08.081152 16419 layer_factory.hpp:77] Creating layer relu7
I0615 17:29:08.081166 16419 net.cpp:106] Creating Layer relu7
I0615 17:29:08.081171 16419 net.cpp:454] relu7 <- fc7
I0615 17:29:08.081178 16419 net.cpp:397] relu7 -> fc7 (in-place)
I0615 17:29:08.081370 16419 net.cpp:150] Setting up relu7
I0615 17:29:08.081379 16419 net.cpp:157] Top shape: 1 4096 (4096)
I0615 17:29:08.081383 16419 net.cpp:165] Memory required for data: 1430934400
I0615 17:29:08.081387 16419 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0615 17:29:08.081395 16419 net.cpp:106] Creating Layer fc7_relu7_0_split
I0615 17:29:08.081398 16419 net.cpp:454] fc7_relu7_0_split <- fc7
I0615 17:29:08.081404 16419 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0615 17:29:08.081430 16419 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0615 17:29:08.081436 16419 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0615 17:29:08.081491 16419 net.cpp:150] Setting up fc7_relu7_0_split
I0615 17:29:08.081498 16419 net.cpp:157] Top shape: 1 4096 (4096)
I0615 17:29:08.081502 16419 net.cpp:157] Top shape: 1 4096 (4096)
I0615 17:29:08.081506 16419 net.cpp:157] Top shape: 1 4096 (4096)
I0615 17:29:08.081509 16419 net.cpp:165] Memory required for data: 1430983552
I0615 17:29:08.081514 16419 layer_factory.hpp:77] Creating layer attr_score
I0615 17:29:08.081523 16419 net.cpp:106] Creating Layer attr_score
I0615 17:29:08.081531 16419 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0615 17:29:08.081540 16419 net.cpp:411] attr_score -> attr_score
I0615 17:29:08.082214 16419 net.cpp:150] Setting up attr_score
I0615 17:29:08.082221 16419 net.cpp:157] Top shape: 1 7 (7)
I0615 17:29:08.082224 16419 net.cpp:165] Memory required for data: 1430983580
I0615 17:29:08.082231 16419 layer_factory.hpp:77] Creating layer attr_score_pos
I0615 17:29:08.082240 16419 net.cpp:106] Creating Layer attr_score_pos
I0615 17:29:08.082254 16419 net.cpp:454] attr_score_pos <- attr_score
I0615 17:29:08.082259 16419 net.cpp:454] attr_score_pos <- attrArrayInd
I0615 17:29:08.082276 16419 net.cpp:411] attr_score_pos -> attr_score_pos
I0615 17:29:08.082301 16419 net.cpp:150] Setting up attr_score_pos
I0615 17:29:08.082306 16419 net.cpp:157] Top shape: 1 7 (7)
I0615 17:29:08.082319 16419 net.cpp:165] Memory required for data: 1430983608
I0615 17:29:08.082322 16419 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0615 17:29:08.082340 16419 net.cpp:106] Creating Layer attr_score_pos_shift
I0615 17:29:08.082345 16419 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0615 17:29:08.082351 16419 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0615 17:29:08.082357 16419 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0615 17:29:08.082378 16419 net.cpp:150] Setting up attr_score_pos_shift
I0615 17:29:08.082384 16419 net.cpp:157] Top shape: 1 7 (7)
I0615 17:29:08.082387 16419 net.cpp:165] Memory required for data: 1430983636
I0615 17:29:08.082392 16419 layer_factory.hpp:77] Creating layer cls_score
I0615 17:29:08.082401 16419 net.cpp:106] Creating Layer cls_score
I0615 17:29:08.082406 16419 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0615 17:29:08.082413 16419 net.cpp:411] cls_score -> cls_score
I0615 17:29:08.082661 16419 net.cpp:150] Setting up cls_score
I0615 17:29:08.082669 16419 net.cpp:157] Top shape: 1 2 (2)
I0615 17:29:08.082671 16419 net.cpp:165] Memory required for data: 1430983644
I0615 17:29:08.082679 16419 layer_factory.hpp:77] Creating layer bbox_pred
I0615 17:29:08.082686 16419 net.cpp:106] Creating Layer bbox_pred
I0615 17:29:08.082691 16419 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0615 17:29:08.082700 16419 net.cpp:411] bbox_pred -> bbox_pred
I0615 17:29:08.083449 16419 net.cpp:150] Setting up bbox_pred
I0615 17:29:08.083456 16419 net.cpp:157] Top shape: 1 8 (8)
I0615 17:29:08.083459 16419 net.cpp:165] Memory required for data: 1430983676
I0615 17:29:08.083467 16419 layer_factory.hpp:77] Creating layer loss_attribute
I0615 17:29:08.083477 16419 net.cpp:106] Creating Layer loss_attribute
I0615 17:29:08.083482 16419 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0615 17:29:08.083487 16419 net.cpp:454] loss_attribute <- attrArray
I0615 17:29:08.083495 16419 net.cpp:411] loss_attribute -> loss_attribute
I0615 17:29:08.083539 16419 net.cpp:150] Setting up loss_attribute
I0615 17:29:08.083545 16419 net.cpp:157] Top shape: (1)
I0615 17:29:08.083549 16419 net.cpp:160]     with loss weight 1
I0615 17:29:08.083560 16419 net.cpp:165] Memory required for data: 1430983680
I0615 17:29:08.083565 16419 layer_factory.hpp:77] Creating layer loss_cls
I0615 17:29:08.083572 16419 net.cpp:106] Creating Layer loss_cls
I0615 17:29:08.083578 16419 net.cpp:454] loss_cls <- cls_score
I0615 17:29:08.083583 16419 net.cpp:454] loss_cls <- labels
I0615 17:29:08.083588 16419 net.cpp:411] loss_cls -> loss_cls
I0615 17:29:08.083597 16419 layer_factory.hpp:77] Creating layer loss_cls
I0615 17:29:08.084257 16419 net.cpp:150] Setting up loss_cls
I0615 17:29:08.084266 16419 net.cpp:157] Top shape: (1)
I0615 17:29:08.084270 16419 net.cpp:160]     with loss weight 3
I0615 17:29:08.084275 16419 net.cpp:165] Memory required for data: 1430983684
I0615 17:29:08.084280 16419 layer_factory.hpp:77] Creating layer loss_bbox
I0615 17:29:08.084295 16419 net.cpp:106] Creating Layer loss_bbox
I0615 17:29:08.084300 16419 net.cpp:454] loss_bbox <- bbox_pred
I0615 17:29:08.084303 16419 net.cpp:454] loss_bbox <- bbox_targets
I0615 17:29:08.084311 16419 net.cpp:454] loss_bbox <- bbox_inside_weights
I0615 17:29:08.084317 16419 net.cpp:454] loss_bbox <- bbox_outside_weights
I0615 17:29:08.084323 16419 net.cpp:411] loss_bbox -> loss_bbox
I0615 17:29:08.084390 16419 net.cpp:150] Setting up loss_bbox
I0615 17:29:08.084396 16419 net.cpp:157] Top shape: (1)
I0615 17:29:08.084399 16419 net.cpp:160]     with loss weight 2
I0615 17:29:08.084406 16419 net.cpp:165] Memory required for data: 1430983688
I0615 17:29:08.084410 16419 layer_factory.hpp:77] Creating layer roi_pool5_2
I0615 17:29:08.084421 16419 net.cpp:106] Creating Layer roi_pool5_2
I0615 17:29:08.084426 16419 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0615 17:29:08.084431 16419 net.cpp:454] roi_pool5_2 <- rois_pos
I0615 17:29:08.084439 16419 net.cpp:411] roi_pool5_2 -> pool5_2
I0615 17:29:08.084448 16419 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0615 17:29:08.084520 16419 net.cpp:150] Setting up roi_pool5_2
I0615 17:29:08.084527 16419 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0615 17:29:08.084529 16419 net.cpp:165] Memory required for data: 1431084040
I0615 17:29:08.084533 16419 layer_factory.hpp:77] Creating layer pool5_2_conv
I0615 17:29:08.084547 16419 net.cpp:106] Creating Layer pool5_2_conv
I0615 17:29:08.084551 16419 net.cpp:454] pool5_2_conv <- pool5_2
I0615 17:29:08.084558 16419 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0615 17:29:08.091261 16419 net.cpp:150] Setting up pool5_2_conv
I0615 17:29:08.091279 16419 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0615 17:29:08.091284 16419 net.cpp:165] Memory required for data: 1431184392
I0615 17:29:08.091302 16419 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0615 17:29:08.091312 16419 net.cpp:106] Creating Layer pool5_2_conv_relu
I0615 17:29:08.091317 16419 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0615 17:29:08.091334 16419 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0615 17:29:08.091513 16419 net.cpp:150] Setting up pool5_2_conv_relu
I0615 17:29:08.091521 16419 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0615 17:29:08.091524 16419 net.cpp:165] Memory required for data: 1431284744
I0615 17:29:08.091537 16419 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0615 17:29:08.091550 16419 net.cpp:106] Creating Layer pool5_2_conv2
I0615 17:29:08.091554 16419 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0615 17:29:08.091570 16419 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0615 17:29:08.143118 16419 net.cpp:150] Setting up pool5_2_conv2
I0615 17:29:08.143138 16419 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0615 17:29:08.143141 16419 net.cpp:165] Memory required for data: 1431385096
I0615 17:29:08.143162 16419 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0615 17:29:08.143172 16419 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0615 17:29:08.143188 16419 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0615 17:29:08.143195 16419 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0615 17:29:08.143353 16419 net.cpp:150] Setting up pool5_2_conv2_relu
I0615 17:29:08.143362 16419 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0615 17:29:08.143365 16419 net.cpp:165] Memory required for data: 1431485448
I0615 17:29:08.143369 16419 layer_factory.hpp:77] Creating layer mask_deconv1
I0615 17:29:08.143388 16419 net.cpp:106] Creating Layer mask_deconv1
I0615 17:29:08.143393 16419 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0615 17:29:08.143409 16419 net.cpp:411] mask_deconv1 -> mask_deconv1
I0615 17:29:08.144243 16419 net.cpp:150] Setting up mask_deconv1
I0615 17:29:08.144251 16419 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0615 17:29:08.144255 16419 net.cpp:165] Memory required for data: 1432407048
I0615 17:29:08.144260 16419 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0615 17:29:08.144270 16419 net.cpp:106] Creating Layer pool5_2_conv3
I0615 17:29:08.144284 16419 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0615 17:29:08.144292 16419 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0615 17:29:08.171092 16419 net.cpp:150] Setting up pool5_2_conv3
I0615 17:29:08.171111 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.171114 16419 net.cpp:165] Memory required for data: 1434250248
I0615 17:29:08.171133 16419 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0615 17:29:08.171144 16419 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0615 17:29:08.171149 16419 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0615 17:29:08.171156 16419 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0615 17:29:08.171329 16419 net.cpp:150] Setting up pool5_2_conv3_relu
I0615 17:29:08.171335 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.171339 16419 net.cpp:165] Memory required for data: 1436093448
I0615 17:29:08.171342 16419 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0615 17:29:08.171363 16419 net.cpp:106] Creating Layer pool5_2_conv4
I0615 17:29:08.171380 16419 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0615 17:29:08.171396 16419 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0615 17:29:08.223150 16419 net.cpp:150] Setting up pool5_2_conv4
I0615 17:29:08.223168 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.223172 16419 net.cpp:165] Memory required for data: 1437936648
I0615 17:29:08.223191 16419 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0615 17:29:08.223210 16419 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0615 17:29:08.223218 16419 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0615 17:29:08.223227 16419 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0615 17:29:08.223420 16419 net.cpp:150] Setting up pool5_2_conv4_relu
I0615 17:29:08.223428 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.223430 16419 net.cpp:165] Memory required for data: 1439779848
I0615 17:29:08.223433 16419 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0615 17:29:08.223450 16419 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0615 17:29:08.223455 16419 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0615 17:29:08.223475 16419 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0615 17:29:08.223491 16419 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0615 17:29:08.223508 16419 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0615 17:29:08.223515 16419 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0615 17:29:08.223573 16419 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0615 17:29:08.223588 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.223592 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.223606 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.223611 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.223614 16419 net.cpp:165] Memory required for data: 1447152648
I0615 17:29:08.223628 16419 layer_factory.hpp:77] Creating layer query_conv
I0615 17:29:08.223641 16419 net.cpp:106] Creating Layer query_conv
I0615 17:29:08.223645 16419 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0615 17:29:08.223652 16419 net.cpp:411] query_conv -> query_conv
I0615 17:29:08.225281 16419 net.cpp:150] Setting up query_conv
I0615 17:29:08.225291 16419 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0615 17:29:08.225293 16419 net.cpp:165] Memory required for data: 1447383048
I0615 17:29:08.225309 16419 layer_factory.hpp:77] Creating layer key_conv
I0615 17:29:08.225323 16419 net.cpp:106] Creating Layer key_conv
I0615 17:29:08.225328 16419 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0615 17:29:08.225338 16419 net.cpp:411] key_conv -> key_conv
I0615 17:29:08.227046 16419 net.cpp:150] Setting up key_conv
I0615 17:29:08.227056 16419 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0615 17:29:08.227058 16419 net.cpp:165] Memory required for data: 1447613448
I0615 17:29:08.227074 16419 layer_factory.hpp:77] Creating layer value_conv
I0615 17:29:08.227088 16419 net.cpp:106] Creating Layer value_conv
I0615 17:29:08.227094 16419 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0615 17:29:08.227102 16419 net.cpp:411] value_conv -> value_conv
I0615 17:29:08.234407 16419 net.cpp:150] Setting up value_conv
I0615 17:29:08.234424 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.234427 16419 net.cpp:165] Memory required for data: 1449456648
I0615 17:29:08.234445 16419 layer_factory.hpp:77] Creating layer query_conv_reshape
I0615 17:29:08.234465 16419 net.cpp:106] Creating Layer query_conv_reshape
I0615 17:29:08.234472 16419 net.cpp:454] query_conv_reshape <- query_conv
I0615 17:29:08.234479 16419 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0615 17:29:08.234539 16419 net.cpp:150] Setting up query_conv_reshape
I0615 17:29:08.234545 16419 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0615 17:29:08.234549 16419 net.cpp:165] Memory required for data: 1449687048
I0615 17:29:08.234552 16419 layer_factory.hpp:77] Creating layer key_conv_reshape
I0615 17:29:08.234570 16419 net.cpp:106] Creating Layer key_conv_reshape
I0615 17:29:08.234577 16419 net.cpp:454] key_conv_reshape <- key_conv
I0615 17:29:08.234592 16419 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0615 17:29:08.234637 16419 net.cpp:150] Setting up key_conv_reshape
I0615 17:29:08.234642 16419 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0615 17:29:08.234644 16419 net.cpp:165] Memory required for data: 1449917448
I0615 17:29:08.234663 16419 layer_factory.hpp:77] Creating layer value_conv_reshape
I0615 17:29:08.234668 16419 net.cpp:106] Creating Layer value_conv_reshape
I0615 17:29:08.234673 16419 net.cpp:454] value_conv_reshape <- value_conv
I0615 17:29:08.234681 16419 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0615 17:29:08.234704 16419 net.cpp:150] Setting up value_conv_reshape
I0615 17:29:08.234709 16419 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0615 17:29:08.234714 16419 net.cpp:165] Memory required for data: 1451760648
I0615 17:29:08.234716 16419 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0615 17:29:08.234735 16419 net.cpp:106] Creating Layer query_conv_reshape_perm
I0615 17:29:08.234748 16419 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0615 17:29:08.234755 16419 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0615 17:29:08.234839 16419 net.cpp:150] Setting up query_conv_reshape_perm
I0615 17:29:08.234844 16419 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0615 17:29:08.234848 16419 net.cpp:165] Memory required for data: 1451991048
I0615 17:29:08.234851 16419 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0615 17:29:08.234869 16419 net.cpp:106] Creating Layer key_conv_reshape_perm
I0615 17:29:08.234874 16419 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0615 17:29:08.234880 16419 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0615 17:29:08.234961 16419 net.cpp:150] Setting up key_conv_reshape_perm
I0615 17:29:08.234967 16419 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0615 17:29:08.234972 16419 net.cpp:165] Memory required for data: 1452221448
I0615 17:29:08.234974 16419 layer_factory.hpp:77] Creating layer energy
I0615 17:29:08.235013 16419 net.cpp:106] Creating Layer energy
I0615 17:29:08.235018 16419 net.cpp:454] energy <- query_conv_reshape_perm
I0615 17:29:08.235033 16419 net.cpp:454] energy <- key_conv_reshape_perm
I0615 17:29:08.235038 16419 net.cpp:411] energy -> energy
I0615 17:29:08.235072 16419 net.cpp:150] Setting up energy
I0615 17:29:08.235080 16419 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0615 17:29:08.235083 16419 net.cpp:165] Memory required for data: 1455461448
I0615 17:29:08.235086 16419 layer_factory.hpp:77] Creating layer attention
I0615 17:29:08.235096 16419 net.cpp:106] Creating Layer attention
I0615 17:29:08.235101 16419 net.cpp:454] attention <- energy
I0615 17:29:08.235107 16419 net.cpp:411] attention -> attention
I0615 17:29:08.235277 16419 net.cpp:150] Setting up attention
I0615 17:29:08.235287 16419 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0615 17:29:08.235291 16419 net.cpp:165] Memory required for data: 1458701448
I0615 17:29:08.235294 16419 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0615 17:29:08.235301 16419 net.cpp:106] Creating Layer value_conv_reshape_perm
I0615 17:29:08.235306 16419 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0615 17:29:08.235313 16419 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0615 17:29:08.235388 16419 net.cpp:150] Setting up value_conv_reshape_perm
I0615 17:29:08.235394 16419 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0615 17:29:08.235396 16419 net.cpp:165] Memory required for data: 1460544648
I0615 17:29:08.235399 16419 layer_factory.hpp:77] Creating layer attention_perm
I0615 17:29:08.235404 16419 net.cpp:106] Creating Layer attention_perm
I0615 17:29:08.235410 16419 net.cpp:454] attention_perm <- attention
I0615 17:29:08.235425 16419 net.cpp:411] attention_perm -> attention_perm
I0615 17:29:08.235515 16419 net.cpp:150] Setting up attention_perm
I0615 17:29:08.235522 16419 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0615 17:29:08.235524 16419 net.cpp:165] Memory required for data: 1463784648
I0615 17:29:08.235527 16419 layer_factory.hpp:77] Creating layer out
I0615 17:29:08.235532 16419 net.cpp:106] Creating Layer out
I0615 17:29:08.235538 16419 net.cpp:454] out <- value_conv_reshape_perm
I0615 17:29:08.235543 16419 net.cpp:454] out <- attention_perm
I0615 17:29:08.235558 16419 net.cpp:411] out -> out
I0615 17:29:08.235589 16419 net.cpp:150] Setting up out
I0615 17:29:08.235594 16419 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0615 17:29:08.235597 16419 net.cpp:165] Memory required for data: 1465627848
I0615 17:29:08.235600 16419 layer_factory.hpp:77] Creating layer out_reshape
I0615 17:29:08.235607 16419 net.cpp:106] Creating Layer out_reshape
I0615 17:29:08.235622 16419 net.cpp:454] out_reshape <- out
I0615 17:29:08.235627 16419 net.cpp:411] out_reshape -> out_reshape
I0615 17:29:08.235649 16419 net.cpp:150] Setting up out_reshape
I0615 17:29:08.235656 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.235658 16419 net.cpp:165] Memory required for data: 1467471048
I0615 17:29:08.235662 16419 layer_factory.hpp:77] Creating layer out_reshape_scale
I0615 17:29:08.236155 16419 net.cpp:106] Creating Layer out_reshape_scale
I0615 17:29:08.236161 16419 net.cpp:454] out_reshape_scale <- out_reshape
I0615 17:29:08.236166 16419 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0615 17:29:08.236234 16419 net.cpp:150] Setting up out_reshape_scale
I0615 17:29:08.236240 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.236243 16419 net.cpp:165] Memory required for data: 1469314248
I0615 17:29:08.236248 16419 layer_factory.hpp:77] Creating layer out_x
I0615 17:29:08.236255 16419 net.cpp:106] Creating Layer out_x
I0615 17:29:08.236260 16419 net.cpp:454] out_x <- out_reshape_scale
I0615 17:29:08.236265 16419 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0615 17:29:08.236272 16419 net.cpp:411] out_x -> out_x
I0615 17:29:08.236295 16419 net.cpp:150] Setting up out_x
I0615 17:29:08.236301 16419 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0615 17:29:08.236304 16419 net.cpp:165] Memory required for data: 1471157448
I0615 17:29:08.236307 16419 layer_factory.hpp:77] Creating layer mask_deconv2
I0615 17:29:08.236317 16419 net.cpp:106] Creating Layer mask_deconv2
I0615 17:29:08.236321 16419 net.cpp:454] mask_deconv2 <- out_x
I0615 17:29:08.236327 16419 net.cpp:411] mask_deconv2 -> mask_deconv2
I0615 17:29:08.237124 16419 net.cpp:150] Setting up mask_deconv2
I0615 17:29:08.237131 16419 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0615 17:29:08.237134 16419 net.cpp:165] Memory required for data: 1486398664
I0615 17:29:08.237141 16419 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0615 17:29:08.237154 16419 net.cpp:106] Creating Layer pool5_2_conv5
I0615 17:29:08.237159 16419 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0615 17:29:08.237165 16419 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0615 17:29:08.263892 16419 net.cpp:150] Setting up pool5_2_conv5
I0615 17:29:08.263912 16419 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0615 17:29:08.263916 16419 net.cpp:165] Memory required for data: 1516881096
I0615 17:29:08.263934 16419 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0615 17:29:08.263944 16419 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0615 17:29:08.263950 16419 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0615 17:29:08.263962 16419 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0615 17:29:08.264117 16419 net.cpp:150] Setting up pool5_2_conv5_relu
I0615 17:29:08.264125 16419 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0615 17:29:08.264128 16419 net.cpp:165] Memory required for data: 1547363528
I0615 17:29:08.264132 16419 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0615 17:29:08.264154 16419 net.cpp:106] Creating Layer pool5_2_conv6
I0615 17:29:08.264158 16419 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0615 17:29:08.264165 16419 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0615 17:29:08.316700 16419 net.cpp:150] Setting up pool5_2_conv6
I0615 17:29:08.316720 16419 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0615 17:29:08.316723 16419 net.cpp:165] Memory required for data: 1577845960
I0615 17:29:08.316756 16419 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0615 17:29:08.316766 16419 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0615 17:29:08.316772 16419 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0615 17:29:08.316781 16419 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0615 17:29:08.317337 16419 net.cpp:150] Setting up pool5_2_conv6_relu
I0615 17:29:08.317345 16419 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0615 17:29:08.317349 16419 net.cpp:165] Memory required for data: 1608328392
I0615 17:29:08.317353 16419 layer_factory.hpp:77] Creating layer mask_deconv3
I0615 17:29:08.317373 16419 net.cpp:106] Creating Layer mask_deconv3
I0615 17:29:08.317378 16419 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0615 17:29:08.317386 16419 net.cpp:411] mask_deconv3 -> mask_deconv3
I0615 17:29:08.317775 16419 net.cpp:150] Setting up mask_deconv3
I0615 17:29:08.317783 16419 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0615 17:29:08.317786 16419 net.cpp:165] Memory required for data: 1669293256
I0615 17:29:08.317802 16419 layer_factory.hpp:77] Creating layer mask_score
I0615 17:29:08.317816 16419 net.cpp:106] Creating Layer mask_score
I0615 17:29:08.317821 16419 net.cpp:454] mask_score <- mask_deconv3
I0615 17:29:08.317839 16419 net.cpp:411] mask_score -> mask_score
I0615 17:29:08.318447 16419 net.cpp:150] Setting up mask_score
I0615 17:29:08.318457 16419 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0615 17:29:08.318460 16419 net.cpp:165] Memory required for data: 1671198408
I0615 17:29:08.318477 16419 layer_factory.hpp:77] Creating layer loss_mask
I0615 17:29:08.318485 16419 net.cpp:106] Creating Layer loss_mask
I0615 17:29:08.318488 16419 net.cpp:454] loss_mask <- mask_score
I0615 17:29:08.318495 16419 net.cpp:454] loss_mask <- mask_targets
I0615 17:29:08.318501 16419 net.cpp:411] loss_mask -> loss_mask
I0615 17:29:08.318511 16419 layer_factory.hpp:77] Creating layer loss_mask
I0615 17:29:08.319793 16419 net.cpp:150] Setting up loss_mask
I0615 17:29:08.319802 16419 net.cpp:157] Top shape: (1)
I0615 17:29:08.319805 16419 net.cpp:160]     with loss weight 3
I0615 17:29:08.319826 16419 net.cpp:165] Memory required for data: 1671198412
I0615 17:29:08.319830 16419 net.cpp:226] loss_mask needs backward computation.
I0615 17:29:08.319834 16419 net.cpp:226] mask_score needs backward computation.
I0615 17:29:08.319839 16419 net.cpp:226] mask_deconv3 needs backward computation.
I0615 17:29:08.319842 16419 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0615 17:29:08.319849 16419 net.cpp:226] pool5_2_conv6 needs backward computation.
I0615 17:29:08.319852 16419 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0615 17:29:08.319857 16419 net.cpp:226] pool5_2_conv5 needs backward computation.
I0615 17:29:08.319860 16419 net.cpp:226] mask_deconv2 needs backward computation.
I0615 17:29:08.319865 16419 net.cpp:226] out_x needs backward computation.
I0615 17:29:08.319871 16419 net.cpp:226] out_reshape_scale needs backward computation.
I0615 17:29:08.319876 16419 net.cpp:226] out_reshape needs backward computation.
I0615 17:29:08.319881 16419 net.cpp:226] out needs backward computation.
I0615 17:29:08.319885 16419 net.cpp:226] attention_perm needs backward computation.
I0615 17:29:08.319888 16419 net.cpp:226] value_conv_reshape_perm needs backward computation.
I0615 17:29:08.319893 16419 net.cpp:226] attention needs backward computation.
I0615 17:29:08.319897 16419 net.cpp:226] energy needs backward computation.
I0615 17:29:08.319902 16419 net.cpp:226] key_conv_reshape_perm needs backward computation.
I0615 17:29:08.319905 16419 net.cpp:226] query_conv_reshape_perm needs backward computation.
I0615 17:29:08.319911 16419 net.cpp:226] value_conv_reshape needs backward computation.
I0615 17:29:08.319914 16419 net.cpp:226] key_conv_reshape needs backward computation.
I0615 17:29:08.319919 16419 net.cpp:226] query_conv_reshape needs backward computation.
I0615 17:29:08.319923 16419 net.cpp:226] value_conv needs backward computation.
I0615 17:29:08.319929 16419 net.cpp:226] key_conv needs backward computation.
I0615 17:29:08.319932 16419 net.cpp:226] query_conv needs backward computation.
I0615 17:29:08.319937 16419 net.cpp:226] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split needs backward computation.
I0615 17:29:08.319941 16419 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0615 17:29:08.319944 16419 net.cpp:226] pool5_2_conv4 needs backward computation.
I0615 17:29:08.319949 16419 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0615 17:29:08.319952 16419 net.cpp:226] pool5_2_conv3 needs backward computation.
I0615 17:29:08.319957 16419 net.cpp:226] mask_deconv1 needs backward computation.
I0615 17:29:08.319962 16419 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0615 17:29:08.319967 16419 net.cpp:226] pool5_2_conv2 needs backward computation.
I0615 17:29:08.319972 16419 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0615 17:29:08.319977 16419 net.cpp:226] pool5_2_conv needs backward computation.
I0615 17:29:08.319979 16419 net.cpp:226] roi_pool5_2 needs backward computation.
I0615 17:29:08.319984 16419 net.cpp:226] loss_bbox needs backward computation.
I0615 17:29:08.319993 16419 net.cpp:226] loss_cls needs backward computation.
I0615 17:29:08.319999 16419 net.cpp:226] loss_attribute needs backward computation.
I0615 17:29:08.320003 16419 net.cpp:226] bbox_pred needs backward computation.
I0615 17:29:08.320008 16419 net.cpp:226] cls_score needs backward computation.
I0615 17:29:08.320013 16419 net.cpp:226] attr_score_pos_shift needs backward computation.
I0615 17:29:08.320016 16419 net.cpp:226] attr_score_pos needs backward computation.
I0615 17:29:08.320021 16419 net.cpp:226] attr_score needs backward computation.
I0615 17:29:08.320025 16419 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0615 17:29:08.320029 16419 net.cpp:226] relu7 needs backward computation.
I0615 17:29:08.320032 16419 net.cpp:226] fc7 needs backward computation.
I0615 17:29:08.320039 16419 net.cpp:226] relu6 needs backward computation.
I0615 17:29:08.320042 16419 net.cpp:226] fc6 needs backward computation.
I0615 17:29:08.320047 16419 net.cpp:226] roi_pool5 needs backward computation.
I0615 17:29:08.320055 16419 net.cpp:226] roi-data needs backward computation.
I0615 17:29:08.320061 16419 net.cpp:226] proposal needs backward computation.
I0615 17:29:08.320068 16419 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0615 17:29:08.320075 16419 net.cpp:226] rpn_cls_prob needs backward computation.
I0615 17:29:08.320077 16419 net.cpp:226] rpn_loss_bbox needs backward computation.
I0615 17:29:08.320086 16419 net.cpp:226] rpn_loss_cls needs backward computation.
I0615 17:29:08.320091 16419 net.cpp:226] rpn-data needs backward computation.
I0615 17:29:08.320098 16419 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0615 17:29:08.320103 16419 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0615 17:29:08.320107 16419 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0615 17:29:08.320112 16419 net.cpp:226] rpn_bbox_pred needs backward computation.
I0615 17:29:08.320116 16419 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0615 17:29:08.320122 16419 net.cpp:226] rpn_cls_score needs backward computation.
I0615 17:29:08.320125 16419 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0615 17:29:08.320132 16419 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0615 17:29:08.320135 16419 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0615 17:29:08.320140 16419 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0615 17:29:08.320144 16419 net.cpp:226] relu5_3 needs backward computation.
I0615 17:29:08.320149 16419 net.cpp:226] conv5_3 needs backward computation.
I0615 17:29:08.320153 16419 net.cpp:226] relu5_2 needs backward computation.
I0615 17:29:08.320158 16419 net.cpp:226] conv5_2 needs backward computation.
I0615 17:29:08.320161 16419 net.cpp:226] relu5_1 needs backward computation.
I0615 17:29:08.320165 16419 net.cpp:226] conv5_1 needs backward computation.
I0615 17:29:08.320169 16419 net.cpp:226] pool4 needs backward computation.
I0615 17:29:08.320185 16419 net.cpp:226] relu4_3 needs backward computation.
I0615 17:29:08.320189 16419 net.cpp:226] conv4_3 needs backward computation.
I0615 17:29:08.320194 16419 net.cpp:226] relu4_2 needs backward computation.
I0615 17:29:08.320197 16419 net.cpp:226] conv4_2 needs backward computation.
I0615 17:29:08.320204 16419 net.cpp:226] relu4_1 needs backward computation.
I0615 17:29:08.320207 16419 net.cpp:226] conv4_1 needs backward computation.
I0615 17:29:08.320212 16419 net.cpp:226] pool3 needs backward computation.
I0615 17:29:08.320226 16419 net.cpp:226] relu3_3 needs backward computation.
I0615 17:29:08.320230 16419 net.cpp:226] conv3_3 needs backward computation.
I0615 17:29:08.320235 16419 net.cpp:226] relu3_2 needs backward computation.
I0615 17:29:08.320250 16419 net.cpp:226] conv3_2 needs backward computation.
I0615 17:29:08.320255 16419 net.cpp:226] relu3_1 needs backward computation.
I0615 17:29:08.320258 16419 net.cpp:226] conv3_1 needs backward computation.
I0615 17:29:08.320263 16419 net.cpp:228] pool2 does not need backward computation.
I0615 17:29:08.320268 16419 net.cpp:228] relu2_2 does not need backward computation.
I0615 17:29:08.320282 16419 net.cpp:228] conv2_2 does not need backward computation.
I0615 17:29:08.320286 16419 net.cpp:228] relu2_1 does not need backward computation.
I0615 17:29:08.320291 16419 net.cpp:228] conv2_1 does not need backward computation.
I0615 17:29:08.320297 16419 net.cpp:228] pool1 does not need backward computation.
I0615 17:29:08.320300 16419 net.cpp:228] relu1_2 does not need backward computation.
I0615 17:29:08.320304 16419 net.cpp:228] conv1_2 does not need backward computation.
I0615 17:29:08.320308 16419 net.cpp:228] relu1_1 does not need backward computation.
I0615 17:29:08.320323 16419 net.cpp:228] conv1_1 does not need backward computation.
I0615 17:29:08.320328 16419 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0615 17:29:08.320334 16419 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0615 17:29:08.320339 16419 net.cpp:228] data_input-data_0_split does not need backward computation.
I0615 17:29:08.320346 16419 net.cpp:228] input-data does not need backward computation.
I0615 17:29:08.320353 16419 net.cpp:270] This network produces output loss_attribute
I0615 17:29:08.320358 16419 net.cpp:270] This network produces output loss_bbox
I0615 17:29:08.320360 16419 net.cpp:270] This network produces output loss_cls
I0615 17:29:08.320364 16419 net.cpp:270] This network produces output loss_mask
I0615 17:29:08.320369 16419 net.cpp:270] This network produces output rpn_cls_loss
I0615 17:29:08.320372 16419 net.cpp:270] This network produces output rpn_loss_bbox
I0615 17:29:08.320430 16419 net.cpp:283] Network initialization done.
I0615 17:29:08.320611 16419 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/vgg16_faster_rcnn_iter_115000_attribute.caffemodel
F0615 17:29:08.322535 16419 io.cpp:54] Check failed: fd != -1 (-1 vs. -1) File not found: data/imagenet_models/vgg16_faster_rcnn_iter_115000_attribute.caffemodel
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 16419 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/vgg16_faster_rcnn_iter_115000_attribute.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
