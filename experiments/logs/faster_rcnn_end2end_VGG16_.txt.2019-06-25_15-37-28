+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_15-37-28
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_15-37-28
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
E0625 15:37:30.810627 30394 common.cpp:104] Cannot create Cublas handle. Cublas won't be available.
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
I0625 15:38:04.304472 30394 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0625 15:38:04.304504 30394 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0625 15:38:04.307790 30394 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "mask_score"
  top: "mask_score_softmax"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "log"
  type: "Log"
  bottom: "mask_score_softmax"
  top: "log"
}
layer {
  name: "mult1"
  type: "Eltwise"
  bottom: "log"
  bottom: "mask_targets"
  top: "mult1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cross_entropy"
  type: "Power"
  bottom: "mult1"
  top: "cross_entropy"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "ce_sum"
  type: "Convolution"
  bottom: "cross_entropy"
  top: "cross_entropy_sum"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 1
    weight_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "ce_mean"
  type: "Reduction"
  bottom: "cross_entropy_sum"
  top: "cross_entropy_mean"
  loss_weight: 1
  reduction_param {
    operation: MEAN
    axis: 0
  }
}
I0625 15:38:04.308298 30394 layer_factory.hpp:77] Creating layer input-data
I0625 15:38:04.447479 30394 net.cpp:106] Creating Layer input-data
I0625 15:38:04.447510 30394 net.cpp:411] input-data -> data
I0625 15:38:04.447614 30394 net.cpp:411] input-data -> im_info
I0625 15:38:04.447630 30394 net.cpp:411] input-data -> gt_boxes
I0625 15:38:04.447638 30394 net.cpp:411] input-data -> seg_mask_inds
I0625 15:38:04.447649 30394 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0625 15:38:04.653857 30394 net.cpp:150] Setting up input-data
I0625 15:38:04.653880 30394 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:38:04.653885 30394 net.cpp:157] Top shape: 1 3 (3)
I0625 15:38:04.653889 30394 net.cpp:157] Top shape: 1 4 (4)
I0625 15:38:04.653892 30394 net.cpp:157] Top shape: 1 2 (2)
I0625 15:38:04.653895 30394 net.cpp:157] Top shape: 1 1 (1)
I0625 15:38:04.653898 30394 net.cpp:165] Memory required for data: 7200040
I0625 15:38:04.653904 30394 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0625 15:38:04.654513 30394 net.cpp:106] Creating Layer data_input-data_0_split
I0625 15:38:04.654531 30394 net.cpp:454] data_input-data_0_split <- data
I0625 15:38:04.654541 30394 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0625 15:38:04.654554 30394 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0625 15:38:04.654600 30394 net.cpp:150] Setting up data_input-data_0_split
I0625 15:38:04.654610 30394 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:38:04.654616 30394 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:38:04.654620 30394 net.cpp:165] Memory required for data: 21600040
I0625 15:38:04.654625 30394 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0625 15:38:04.654633 30394 net.cpp:106] Creating Layer im_info_input-data_1_split
I0625 15:38:04.654637 30394 net.cpp:454] im_info_input-data_1_split <- im_info
I0625 15:38:04.654644 30394 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0625 15:38:04.654650 30394 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0625 15:38:04.654659 30394 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0625 15:38:04.654706 30394 net.cpp:150] Setting up im_info_input-data_1_split
I0625 15:38:04.654713 30394 net.cpp:157] Top shape: 1 3 (3)
I0625 15:38:04.654719 30394 net.cpp:157] Top shape: 1 3 (3)
I0625 15:38:04.654724 30394 net.cpp:157] Top shape: 1 3 (3)
I0625 15:38:04.654728 30394 net.cpp:165] Memory required for data: 21600076
I0625 15:38:04.654732 30394 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0625 15:38:04.654738 30394 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0625 15:38:04.654742 30394 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0625 15:38:04.654749 30394 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0625 15:38:04.654755 30394 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0625 15:38:04.654784 30394 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0625 15:38:04.654790 30394 net.cpp:157] Top shape: 1 4 (4)
I0625 15:38:04.654795 30394 net.cpp:157] Top shape: 1 4 (4)
I0625 15:38:04.654799 30394 net.cpp:165] Memory required for data: 21600108
I0625 15:38:04.654803 30394 layer_factory.hpp:77] Creating layer conv1_1
I0625 15:38:04.654814 30394 net.cpp:106] Creating Layer conv1_1
I0625 15:38:04.654819 30394 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0625 15:38:04.654825 30394 net.cpp:411] conv1_1 -> conv1_1
I0625 15:38:05.450111 30394 net.cpp:150] Setting up conv1_1
I0625 15:38:05.450153 30394 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:38:05.450158 30394 net.cpp:165] Memory required for data: 175200108
I0625 15:38:05.450182 30394 layer_factory.hpp:77] Creating layer relu1_1
I0625 15:38:05.450201 30394 net.cpp:106] Creating Layer relu1_1
I0625 15:38:05.450209 30394 net.cpp:454] relu1_1 <- conv1_1
I0625 15:38:05.450217 30394 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0625 15:38:05.450525 30394 net.cpp:150] Setting up relu1_1
I0625 15:38:05.450537 30394 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:38:05.450542 30394 net.cpp:165] Memory required for data: 328800108
I0625 15:38:05.450546 30394 layer_factory.hpp:77] Creating layer conv1_2
I0625 15:38:05.450561 30394 net.cpp:106] Creating Layer conv1_2
I0625 15:38:05.450567 30394 net.cpp:454] conv1_2 <- conv1_1
I0625 15:38:05.450578 30394 net.cpp:411] conv1_2 -> conv1_2
I0625 15:38:05.455226 30394 net.cpp:150] Setting up conv1_2
I0625 15:38:05.455260 30394 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:38:05.455265 30394 net.cpp:165] Memory required for data: 482400108
I0625 15:38:05.455284 30394 layer_factory.hpp:77] Creating layer relu1_2
I0625 15:38:05.455301 30394 net.cpp:106] Creating Layer relu1_2
I0625 15:38:05.455307 30394 net.cpp:454] relu1_2 <- conv1_2
I0625 15:38:05.455317 30394 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0625 15:38:05.455576 30394 net.cpp:150] Setting up relu1_2
I0625 15:38:05.455590 30394 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:38:05.455595 30394 net.cpp:165] Memory required for data: 636000108
I0625 15:38:05.455600 30394 layer_factory.hpp:77] Creating layer pool1
I0625 15:38:05.455613 30394 net.cpp:106] Creating Layer pool1
I0625 15:38:05.455642 30394 net.cpp:454] pool1 <- conv1_2
I0625 15:38:05.455662 30394 net.cpp:411] pool1 -> pool1
I0625 15:38:05.462739 30394 net.cpp:150] Setting up pool1
I0625 15:38:05.462800 30394 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0625 15:38:05.462811 30394 net.cpp:165] Memory required for data: 674400108
I0625 15:38:05.462818 30394 layer_factory.hpp:77] Creating layer conv2_1
I0625 15:38:05.462839 30394 net.cpp:106] Creating Layer conv2_1
I0625 15:38:05.462847 30394 net.cpp:454] conv2_1 <- pool1
I0625 15:38:05.462857 30394 net.cpp:411] conv2_1 -> conv2_1
I0625 15:38:05.466480 30394 net.cpp:150] Setting up conv2_1
I0625 15:38:05.466511 30394 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:38:05.466516 30394 net.cpp:165] Memory required for data: 751200108
I0625 15:38:05.466534 30394 layer_factory.hpp:77] Creating layer relu2_1
I0625 15:38:05.466547 30394 net.cpp:106] Creating Layer relu2_1
I0625 15:38:05.466553 30394 net.cpp:454] relu2_1 <- conv2_1
I0625 15:38:05.466562 30394 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0625 15:38:05.466796 30394 net.cpp:150] Setting up relu2_1
I0625 15:38:05.466807 30394 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:38:05.466812 30394 net.cpp:165] Memory required for data: 828000108
I0625 15:38:05.466816 30394 layer_factory.hpp:77] Creating layer conv2_2
I0625 15:38:05.466830 30394 net.cpp:106] Creating Layer conv2_2
I0625 15:38:05.466835 30394 net.cpp:454] conv2_2 <- conv2_1
I0625 15:38:05.466843 30394 net.cpp:411] conv2_2 -> conv2_2
I0625 15:38:05.469820 30394 net.cpp:150] Setting up conv2_2
I0625 15:38:05.469849 30394 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:38:05.469854 30394 net.cpp:165] Memory required for data: 904800108
I0625 15:38:05.469868 30394 layer_factory.hpp:77] Creating layer relu2_2
I0625 15:38:05.469884 30394 net.cpp:106] Creating Layer relu2_2
I0625 15:38:05.469892 30394 net.cpp:454] relu2_2 <- conv2_2
I0625 15:38:05.469898 30394 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0625 15:38:05.470832 30394 net.cpp:150] Setting up relu2_2
I0625 15:38:05.470849 30394 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:38:05.470854 30394 net.cpp:165] Memory required for data: 981600108
I0625 15:38:05.470860 30394 layer_factory.hpp:77] Creating layer pool2
I0625 15:38:05.470871 30394 net.cpp:106] Creating Layer pool2
I0625 15:38:05.470877 30394 net.cpp:454] pool2 <- conv2_2
I0625 15:38:05.470885 30394 net.cpp:411] pool2 -> pool2
I0625 15:38:05.470953 30394 net.cpp:150] Setting up pool2
I0625 15:38:05.470959 30394 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0625 15:38:05.470963 30394 net.cpp:165] Memory required for data: 1000800108
I0625 15:38:05.470968 30394 layer_factory.hpp:77] Creating layer conv3_1
I0625 15:38:05.470979 30394 net.cpp:106] Creating Layer conv3_1
I0625 15:38:05.470983 30394 net.cpp:454] conv3_1 <- pool2
I0625 15:38:05.470990 30394 net.cpp:411] conv3_1 -> conv3_1
I0625 15:38:05.475582 30394 net.cpp:150] Setting up conv3_1
I0625 15:38:05.475636 30394 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:38:05.475653 30394 net.cpp:165] Memory required for data: 1039200108
I0625 15:38:05.475687 30394 layer_factory.hpp:77] Creating layer relu3_1
I0625 15:38:05.475713 30394 net.cpp:106] Creating Layer relu3_1
I0625 15:38:05.475733 30394 net.cpp:454] relu3_1 <- conv3_1
I0625 15:38:05.475752 30394 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0625 15:38:05.476037 30394 net.cpp:150] Setting up relu3_1
I0625 15:38:05.476068 30394 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:38:05.476083 30394 net.cpp:165] Memory required for data: 1077600108
I0625 15:38:05.476095 30394 layer_factory.hpp:77] Creating layer conv3_2
I0625 15:38:05.476120 30394 net.cpp:106] Creating Layer conv3_2
I0625 15:38:05.476135 30394 net.cpp:454] conv3_2 <- conv3_1
I0625 15:38:05.476151 30394 net.cpp:411] conv3_2 -> conv3_2
I0625 15:38:05.502451 30394 net.cpp:150] Setting up conv3_2
I0625 15:38:05.502521 30394 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:38:05.502535 30394 net.cpp:165] Memory required for data: 1116000108
I0625 15:38:05.502564 30394 layer_factory.hpp:77] Creating layer relu3_2
I0625 15:38:05.502588 30394 net.cpp:106] Creating Layer relu3_2
I0625 15:38:05.502602 30394 net.cpp:454] relu3_2 <- conv3_2
I0625 15:38:05.502619 30394 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0625 15:38:05.502923 30394 net.cpp:150] Setting up relu3_2
I0625 15:38:05.502948 30394 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:38:05.502961 30394 net.cpp:165] Memory required for data: 1154400108
I0625 15:38:05.502974 30394 layer_factory.hpp:77] Creating layer conv3_3
I0625 15:38:05.502995 30394 net.cpp:106] Creating Layer conv3_3
I0625 15:38:05.503006 30394 net.cpp:454] conv3_3 <- conv3_2
I0625 15:38:05.503022 30394 net.cpp:411] conv3_3 -> conv3_3
I0625 15:38:05.508061 30394 net.cpp:150] Setting up conv3_3
I0625 15:38:05.508134 30394 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:38:05.508152 30394 net.cpp:165] Memory required for data: 1192800108
I0625 15:38:05.508175 30394 layer_factory.hpp:77] Creating layer relu3_3
I0625 15:38:05.508201 30394 net.cpp:106] Creating Layer relu3_3
I0625 15:38:05.508219 30394 net.cpp:454] relu3_3 <- conv3_3
I0625 15:38:05.508239 30394 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0625 15:38:05.508546 30394 net.cpp:150] Setting up relu3_3
I0625 15:38:05.508576 30394 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:38:05.508591 30394 net.cpp:165] Memory required for data: 1231200108
I0625 15:38:05.508605 30394 layer_factory.hpp:77] Creating layer pool3
I0625 15:38:05.508627 30394 net.cpp:106] Creating Layer pool3
I0625 15:38:05.508642 30394 net.cpp:454] pool3 <- conv3_3
I0625 15:38:05.508659 30394 net.cpp:411] pool3 -> pool3
I0625 15:38:05.508759 30394 net.cpp:150] Setting up pool3
I0625 15:38:05.508782 30394 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0625 15:38:05.508796 30394 net.cpp:165] Memory required for data: 1240800108
I0625 15:38:05.508811 30394 layer_factory.hpp:77] Creating layer conv4_1
I0625 15:38:05.508836 30394 net.cpp:106] Creating Layer conv4_1
I0625 15:38:05.508852 30394 net.cpp:454] conv4_1 <- pool3
I0625 15:38:05.508874 30394 net.cpp:411] conv4_1 -> conv4_1
I0625 15:38:05.517868 30394 net.cpp:150] Setting up conv4_1
I0625 15:38:05.517940 30394 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:38:05.517957 30394 net.cpp:165] Memory required for data: 1260000108
I0625 15:38:05.517982 30394 layer_factory.hpp:77] Creating layer relu4_1
I0625 15:38:05.518005 30394 net.cpp:106] Creating Layer relu4_1
I0625 15:38:05.518030 30394 net.cpp:454] relu4_1 <- conv4_1
I0625 15:38:05.518050 30394 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0625 15:38:05.518383 30394 net.cpp:150] Setting up relu4_1
I0625 15:38:05.518412 30394 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:38:05.518429 30394 net.cpp:165] Memory required for data: 1279200108
I0625 15:38:05.518445 30394 layer_factory.hpp:77] Creating layer conv4_2
I0625 15:38:05.518471 30394 net.cpp:106] Creating Layer conv4_2
I0625 15:38:05.518486 30394 net.cpp:454] conv4_2 <- conv4_1
I0625 15:38:05.518507 30394 net.cpp:411] conv4_2 -> conv4_2
I0625 15:38:05.528020 30394 net.cpp:150] Setting up conv4_2
I0625 15:38:05.528096 30394 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:38:05.528115 30394 net.cpp:165] Memory required for data: 1298400108
I0625 15:38:05.528148 30394 layer_factory.hpp:77] Creating layer relu4_2
I0625 15:38:05.528177 30394 net.cpp:106] Creating Layer relu4_2
I0625 15:38:05.528195 30394 net.cpp:454] relu4_2 <- conv4_2
I0625 15:38:05.528214 30394 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0625 15:38:05.528477 30394 net.cpp:150] Setting up relu4_2
I0625 15:38:05.528506 30394 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:38:05.528522 30394 net.cpp:165] Memory required for data: 1317600108
I0625 15:38:05.528537 30394 layer_factory.hpp:77] Creating layer conv4_3
I0625 15:38:05.528563 30394 net.cpp:106] Creating Layer conv4_3
I0625 15:38:05.528580 30394 net.cpp:454] conv4_3 <- conv4_2
I0625 15:38:05.528600 30394 net.cpp:411] conv4_3 -> conv4_3
I0625 15:38:05.537336 30394 net.cpp:150] Setting up conv4_3
I0625 15:38:05.537413 30394 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:38:05.537437 30394 net.cpp:165] Memory required for data: 1336800108
I0625 15:38:05.537465 30394 layer_factory.hpp:77] Creating layer relu4_3
I0625 15:38:05.537492 30394 net.cpp:106] Creating Layer relu4_3
I0625 15:38:05.537510 30394 net.cpp:454] relu4_3 <- conv4_3
I0625 15:38:05.537535 30394 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0625 15:38:05.538730 30394 net.cpp:150] Setting up relu4_3
I0625 15:38:05.538789 30394 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:38:05.538807 30394 net.cpp:165] Memory required for data: 1356000108
I0625 15:38:05.538825 30394 layer_factory.hpp:77] Creating layer pool4
I0625 15:38:05.538861 30394 net.cpp:106] Creating Layer pool4
I0625 15:38:05.538882 30394 net.cpp:454] pool4 <- conv4_3
I0625 15:38:05.538904 30394 net.cpp:411] pool4 -> pool4
I0625 15:38:05.539047 30394 net.cpp:150] Setting up pool4
I0625 15:38:05.539070 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.539083 30394 net.cpp:165] Memory required for data: 1360903020
I0625 15:38:05.539098 30394 layer_factory.hpp:77] Creating layer conv5_1
I0625 15:38:05.539124 30394 net.cpp:106] Creating Layer conv5_1
I0625 15:38:05.539139 30394 net.cpp:454] conv5_1 <- pool4
I0625 15:38:05.539157 30394 net.cpp:411] conv5_1 -> conv5_1
I0625 15:38:05.548954 30394 net.cpp:150] Setting up conv5_1
I0625 15:38:05.549034 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.549062 30394 net.cpp:165] Memory required for data: 1365805932
I0625 15:38:05.549088 30394 layer_factory.hpp:77] Creating layer relu5_1
I0625 15:38:05.549115 30394 net.cpp:106] Creating Layer relu5_1
I0625 15:38:05.549135 30394 net.cpp:454] relu5_1 <- conv5_1
I0625 15:38:05.549160 30394 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0625 15:38:05.549455 30394 net.cpp:150] Setting up relu5_1
I0625 15:38:05.549491 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.549509 30394 net.cpp:165] Memory required for data: 1370708844
I0625 15:38:05.549525 30394 layer_factory.hpp:77] Creating layer conv5_2
I0625 15:38:05.549552 30394 net.cpp:106] Creating Layer conv5_2
I0625 15:38:05.549571 30394 net.cpp:454] conv5_2 <- conv5_1
I0625 15:38:05.549594 30394 net.cpp:411] conv5_2 -> conv5_2
I0625 15:38:05.559152 30394 net.cpp:150] Setting up conv5_2
I0625 15:38:05.559222 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.559242 30394 net.cpp:165] Memory required for data: 1375611756
I0625 15:38:05.559283 30394 layer_factory.hpp:77] Creating layer relu5_2
I0625 15:38:05.559309 30394 net.cpp:106] Creating Layer relu5_2
I0625 15:38:05.559329 30394 net.cpp:454] relu5_2 <- conv5_2
I0625 15:38:05.559353 30394 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0625 15:38:05.559603 30394 net.cpp:150] Setting up relu5_2
I0625 15:38:05.559630 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.559643 30394 net.cpp:165] Memory required for data: 1380514668
I0625 15:38:05.559657 30394 layer_factory.hpp:77] Creating layer conv5_3
I0625 15:38:05.559686 30394 net.cpp:106] Creating Layer conv5_3
I0625 15:38:05.559703 30394 net.cpp:454] conv5_3 <- conv5_2
I0625 15:38:05.559720 30394 net.cpp:411] conv5_3 -> conv5_3
I0625 15:38:05.572780 30394 net.cpp:150] Setting up conv5_3
I0625 15:38:05.572851 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.572875 30394 net.cpp:165] Memory required for data: 1385417580
I0625 15:38:05.572904 30394 layer_factory.hpp:77] Creating layer relu5_3
I0625 15:38:05.572930 30394 net.cpp:106] Creating Layer relu5_3
I0625 15:38:05.572950 30394 net.cpp:454] relu5_3 <- conv5_3
I0625 15:38:05.572974 30394 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0625 15:38:05.573261 30394 net.cpp:150] Setting up relu5_3
I0625 15:38:05.573290 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.573305 30394 net.cpp:165] Memory required for data: 1390320492
I0625 15:38:05.573324 30394 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0625 15:38:05.573344 30394 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0625 15:38:05.573360 30394 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0625 15:38:05.573385 30394 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0625 15:38:05.573407 30394 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0625 15:38:05.573428 30394 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0625 15:38:05.573545 30394 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0625 15:38:05.573568 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.573586 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.573603 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.573618 30394 net.cpp:165] Memory required for data: 1405029228
I0625 15:38:05.573634 30394 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0625 15:38:05.573662 30394 net.cpp:106] Creating Layer rpn_conv/3x3
I0625 15:38:05.573679 30394 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0625 15:38:05.573699 30394 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0625 15:38:05.691644 30394 net.cpp:150] Setting up rpn_conv/3x3
I0625 15:38:05.691712 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.691731 30394 net.cpp:165] Memory required for data: 1409932140
I0625 15:38:05.691761 30394 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0625 15:38:05.691785 30394 net.cpp:106] Creating Layer rpn_relu/3x3
I0625 15:38:05.691803 30394 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0625 15:38:05.691825 30394 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0625 15:38:05.692106 30394 net.cpp:150] Setting up rpn_relu/3x3
I0625 15:38:05.692137 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.692153 30394 net.cpp:165] Memory required for data: 1414835052
I0625 15:38:05.692170 30394 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0625 15:38:05.692189 30394 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0625 15:38:05.692206 30394 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0625 15:38:05.692229 30394 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0625 15:38:05.692252 30394 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0625 15:38:05.692328 30394 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0625 15:38:05.692353 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.692371 30394 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:38:05.692396 30394 net.cpp:165] Memory required for data: 1424640876
I0625 15:38:05.692414 30394 layer_factory.hpp:77] Creating layer rpn_cls_score
I0625 15:38:05.692451 30394 net.cpp:106] Creating Layer rpn_cls_score
I0625 15:38:05.692469 30394 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0625 15:38:05.692492 30394 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0625 15:38:05.699993 30394 net.cpp:150] Setting up rpn_cls_score
I0625 15:38:05.700031 30394 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:38:05.700037 30394 net.cpp:165] Memory required for data: 1424928156
I0625 15:38:05.700049 30394 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0625 15:38:05.700062 30394 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0625 15:38:05.700070 30394 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0625 15:38:05.700083 30394 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0625 15:38:05.700096 30394 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0625 15:38:05.700186 30394 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0625 15:38:05.700194 30394 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:38:05.700201 30394 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:38:05.700204 30394 net.cpp:165] Memory required for data: 1425502716
I0625 15:38:05.700209 30394 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0625 15:38:05.700225 30394 net.cpp:106] Creating Layer rpn_bbox_pred
I0625 15:38:05.700232 30394 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0625 15:38:05.700240 30394 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0625 15:38:05.703665 30394 net.cpp:150] Setting up rpn_bbox_pred
I0625 15:38:05.703739 30394 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:38:05.703755 30394 net.cpp:165] Memory required for data: 1426077276
I0625 15:38:05.703774 30394 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:38:05.703805 30394 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:38:05.703821 30394 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0625 15:38:05.703840 30394 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 15:38:05.703860 30394 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 15:38:05.703932 30394 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:38:05.703950 30394 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:38:05.703972 30394 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:38:05.703989 30394 net.cpp:165] Memory required for data: 1427226396
I0625 15:38:05.704005 30394 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0625 15:38:05.704035 30394 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0625 15:38:05.704141 30394 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0625 15:38:05.704231 30394 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0625 15:38:05.704363 30394 net.cpp:150] Setting up rpn_cls_score_reshape
I0625 15:38:05.704455 30394 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:38:05.704536 30394 net.cpp:165] Memory required for data: 1427513676
I0625 15:38:05.704617 30394 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:38:05.704700 30394 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:38:05.704782 30394 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0625 15:38:05.704874 30394 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 15:38:05.704962 30394 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 15:38:05.705111 30394 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:38:05.705207 30394 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:38:05.705291 30394 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:38:05.705371 30394 net.cpp:165] Memory required for data: 1428088236
I0625 15:38:05.705451 30394 layer_factory.hpp:77] Creating layer rpn-data
I0625 15:38:05.720515 30394 net.cpp:106] Creating Layer rpn-data
I0625 15:38:05.720569 30394 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0625 15:38:05.720589 30394 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0625 15:38:05.720604 30394 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0625 15:38:05.720634 30394 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0625 15:38:05.720654 30394 net.cpp:411] rpn-data -> rpn_labels
I0625 15:38:05.720676 30394 net.cpp:411] rpn-data -> rpn_bbox_targets
I0625 15:38:05.720695 30394 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0625 15:38:05.720712 30394 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0625 15:38:05.724324 30394 net.cpp:150] Setting up rpn-data
I0625 15:38:05.724380 30394 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0625 15:38:05.724396 30394 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:38:05.724411 30394 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:38:05.724424 30394 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:38:05.724436 30394 net.cpp:165] Memory required for data: 1429955556
I0625 15:38:05.724467 30394 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 15:38:05.724491 30394 net.cpp:106] Creating Layer rpn_loss_cls
I0625 15:38:05.724508 30394 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 15:38:05.724524 30394 net.cpp:454] rpn_loss_cls <- rpn_labels
I0625 15:38:05.724545 30394 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0625 15:38:05.725062 30394 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 15:38:05.726548 30394 net.cpp:150] Setting up rpn_loss_cls
I0625 15:38:05.726585 30394 net.cpp:157] Top shape: (1)
I0625 15:38:05.726600 30394 net.cpp:160]     with loss weight 1
I0625 15:38:05.726627 30394 net.cpp:165] Memory required for data: 1429955560
I0625 15:38:05.726642 30394 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0625 15:38:05.726662 30394 net.cpp:106] Creating Layer rpn_loss_bbox
I0625 15:38:05.726683 30394 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 15:38:05.726701 30394 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0625 15:38:05.726716 30394 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0625 15:38:05.726732 30394 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0625 15:38:05.726748 30394 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0625 15:38:05.729491 30394 net.cpp:150] Setting up rpn_loss_bbox
I0625 15:38:05.729545 30394 net.cpp:157] Top shape: (1)
I0625 15:38:05.729576 30394 net.cpp:160]     with loss weight 1
I0625 15:38:05.729602 30394 net.cpp:165] Memory required for data: 1429955564
I0625 15:38:05.729619 30394 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0625 15:38:05.729642 30394 net.cpp:106] Creating Layer rpn_cls_prob
I0625 15:38:05.729660 30394 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 15:38:05.729679 30394 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0625 15:38:05.738553 30394 net.cpp:150] Setting up rpn_cls_prob
I0625 15:38:05.738631 30394 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:38:05.738656 30394 net.cpp:165] Memory required for data: 1430242844
I0625 15:38:05.738677 30394 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0625 15:38:05.738703 30394 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0625 15:38:05.738745 30394 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0625 15:38:05.738775 30394 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0625 15:38:05.738854 30394 net.cpp:150] Setting up rpn_cls_prob_reshape
I0625 15:38:05.738896 30394 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:38:05.738940 30394 net.cpp:165] Memory required for data: 1430530124
I0625 15:38:05.738971 30394 layer_factory.hpp:77] Creating layer proposal
I0625 15:38:05.759620 30394 net.cpp:106] Creating Layer proposal
I0625 15:38:05.759681 30394 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0625 15:38:05.759706 30394 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 15:38:05.759723 30394 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0625 15:38:05.759742 30394 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0625 15:38:05.762367 30394 net.cpp:150] Setting up proposal
I0625 15:38:05.762423 30394 net.cpp:157] Top shape: 1 5 (5)
I0625 15:38:05.762437 30394 net.cpp:165] Memory required for data: 1430530144
I0625 15:38:05.762454 30394 layer_factory.hpp:77] Creating layer roi-data
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_target_layer.py", line 102
    roi_mask_kl = -1 * np.ones((roi_mask.shape[0], roi_mask.shape[1], cfg.TRAIN.CLASS_NUM + 1), dtype=np.float32)
    ^
IndentationError: unexpected indent
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 168, in train_net
    pretrained_model=pretrained_model)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 52, in __init__
    self.solver = caffe.SGDSolver(solver_prototxt)
SystemError: NULL result without error in PyObject_Call
