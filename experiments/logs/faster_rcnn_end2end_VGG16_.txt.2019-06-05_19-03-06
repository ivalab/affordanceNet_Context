+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-05_19-03-06
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-05_19-03-06
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0605 19:03:13.876380 10993 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0605 19:03:13.876415 10993 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0605 19:03:13.877961 10993 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "pool5_2_conv4_relu"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv6_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv6_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv6_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 14884
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 14884
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 14884
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 122
      dim: 122
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv6_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0605 19:03:13.878262 10993 layer_factory.hpp:77] Creating layer input-data
I0605 19:03:13.895589 10993 net.cpp:106] Creating Layer input-data
I0605 19:03:13.895606 10993 net.cpp:411] input-data -> data
I0605 19:03:13.895614 10993 net.cpp:411] input-data -> im_info
I0605 19:03:13.895619 10993 net.cpp:411] input-data -> gt_boxes
I0605 19:03:13.895624 10993 net.cpp:411] input-data -> seg_mask_inds
I0605 19:03:13.895627 10993 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0605 19:03:13.906687 10993 net.cpp:150] Setting up input-data
I0605 19:03:13.906720 10993 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 19:03:13.906723 10993 net.cpp:157] Top shape: 1 3 (3)
I0605 19:03:13.906726 10993 net.cpp:157] Top shape: 1 4 (4)
I0605 19:03:13.906729 10993 net.cpp:157] Top shape: 1 2 (2)
I0605 19:03:13.906731 10993 net.cpp:157] Top shape: 1 1 (1)
I0605 19:03:13.906734 10993 net.cpp:165] Memory required for data: 7200040
I0605 19:03:13.906739 10993 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0605 19:03:13.906754 10993 net.cpp:106] Creating Layer data_input-data_0_split
I0605 19:03:13.906759 10993 net.cpp:454] data_input-data_0_split <- data
I0605 19:03:13.906764 10993 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0605 19:03:13.906772 10993 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0605 19:03:13.906795 10993 net.cpp:150] Setting up data_input-data_0_split
I0605 19:03:13.906808 10993 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 19:03:13.906810 10993 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 19:03:13.906812 10993 net.cpp:165] Memory required for data: 21600040
I0605 19:03:13.906816 10993 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0605 19:03:13.906828 10993 net.cpp:106] Creating Layer im_info_input-data_1_split
I0605 19:03:13.906831 10993 net.cpp:454] im_info_input-data_1_split <- im_info
I0605 19:03:13.906834 10993 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0605 19:03:13.906838 10993 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0605 19:03:13.906842 10993 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0605 19:03:13.906874 10993 net.cpp:150] Setting up im_info_input-data_1_split
I0605 19:03:13.906878 10993 net.cpp:157] Top shape: 1 3 (3)
I0605 19:03:13.906882 10993 net.cpp:157] Top shape: 1 3 (3)
I0605 19:03:13.906896 10993 net.cpp:157] Top shape: 1 3 (3)
I0605 19:03:13.906898 10993 net.cpp:165] Memory required for data: 21600076
I0605 19:03:13.906901 10993 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0605 19:03:13.906913 10993 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0605 19:03:13.906916 10993 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0605 19:03:13.906920 10993 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0605 19:03:13.906934 10993 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0605 19:03:13.906951 10993 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0605 19:03:13.906955 10993 net.cpp:157] Top shape: 1 4 (4)
I0605 19:03:13.906960 10993 net.cpp:157] Top shape: 1 4 (4)
I0605 19:03:13.906965 10993 net.cpp:165] Memory required for data: 21600108
I0605 19:03:13.906967 10993 layer_factory.hpp:77] Creating layer conv1_1
I0605 19:03:13.906977 10993 net.cpp:106] Creating Layer conv1_1
I0605 19:03:13.906981 10993 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0605 19:03:13.906985 10993 net.cpp:411] conv1_1 -> conv1_1
I0605 19:03:14.122918 10993 net.cpp:150] Setting up conv1_1
I0605 19:03:14.122949 10993 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 19:03:14.122952 10993 net.cpp:165] Memory required for data: 175200108
I0605 19:03:14.122965 10993 layer_factory.hpp:77] Creating layer relu1_1
I0605 19:03:14.122985 10993 net.cpp:106] Creating Layer relu1_1
I0605 19:03:14.122992 10993 net.cpp:454] relu1_1 <- conv1_1
I0605 19:03:14.122995 10993 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0605 19:03:14.123124 10993 net.cpp:150] Setting up relu1_1
I0605 19:03:14.123131 10993 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 19:03:14.123143 10993 net.cpp:165] Memory required for data: 328800108
I0605 19:03:14.123147 10993 layer_factory.hpp:77] Creating layer conv1_2
I0605 19:03:14.123153 10993 net.cpp:106] Creating Layer conv1_2
I0605 19:03:14.123157 10993 net.cpp:454] conv1_2 <- conv1_1
I0605 19:03:14.123160 10993 net.cpp:411] conv1_2 -> conv1_2
I0605 19:03:14.125473 10993 net.cpp:150] Setting up conv1_2
I0605 19:03:14.125483 10993 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 19:03:14.125485 10993 net.cpp:165] Memory required for data: 482400108
I0605 19:03:14.125494 10993 layer_factory.hpp:77] Creating layer relu1_2
I0605 19:03:14.125499 10993 net.cpp:106] Creating Layer relu1_2
I0605 19:03:14.125501 10993 net.cpp:454] relu1_2 <- conv1_2
I0605 19:03:14.125504 10993 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0605 19:03:14.125627 10993 net.cpp:150] Setting up relu1_2
I0605 19:03:14.125633 10993 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 19:03:14.125634 10993 net.cpp:165] Memory required for data: 636000108
I0605 19:03:14.125638 10993 layer_factory.hpp:77] Creating layer pool1
I0605 19:03:14.125644 10993 net.cpp:106] Creating Layer pool1
I0605 19:03:14.125646 10993 net.cpp:454] pool1 <- conv1_2
I0605 19:03:14.125650 10993 net.cpp:411] pool1 -> pool1
I0605 19:03:14.125703 10993 net.cpp:150] Setting up pool1
I0605 19:03:14.125707 10993 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0605 19:03:14.125721 10993 net.cpp:165] Memory required for data: 674400108
I0605 19:03:14.125723 10993 layer_factory.hpp:77] Creating layer conv2_1
I0605 19:03:14.125730 10993 net.cpp:106] Creating Layer conv2_1
I0605 19:03:14.125741 10993 net.cpp:454] conv2_1 <- pool1
I0605 19:03:14.125744 10993 net.cpp:411] conv2_1 -> conv2_1
I0605 19:03:14.127622 10993 net.cpp:150] Setting up conv2_1
I0605 19:03:14.127645 10993 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 19:03:14.127647 10993 net.cpp:165] Memory required for data: 751200108
I0605 19:03:14.127655 10993 layer_factory.hpp:77] Creating layer relu2_1
I0605 19:03:14.127660 10993 net.cpp:106] Creating Layer relu2_1
I0605 19:03:14.127663 10993 net.cpp:454] relu2_1 <- conv2_1
I0605 19:03:14.127667 10993 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0605 19:03:14.128147 10993 net.cpp:150] Setting up relu2_1
I0605 19:03:14.128155 10993 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 19:03:14.128168 10993 net.cpp:165] Memory required for data: 828000108
I0605 19:03:14.128171 10993 layer_factory.hpp:77] Creating layer conv2_2
I0605 19:03:14.128178 10993 net.cpp:106] Creating Layer conv2_2
I0605 19:03:14.128180 10993 net.cpp:454] conv2_2 <- conv2_1
I0605 19:03:14.128185 10993 net.cpp:411] conv2_2 -> conv2_2
I0605 19:03:14.129508 10993 net.cpp:150] Setting up conv2_2
I0605 19:03:14.129516 10993 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 19:03:14.129519 10993 net.cpp:165] Memory required for data: 904800108
I0605 19:03:14.129524 10993 layer_factory.hpp:77] Creating layer relu2_2
I0605 19:03:14.129528 10993 net.cpp:106] Creating Layer relu2_2
I0605 19:03:14.129531 10993 net.cpp:454] relu2_2 <- conv2_2
I0605 19:03:14.129534 10993 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0605 19:03:14.129657 10993 net.cpp:150] Setting up relu2_2
I0605 19:03:14.129662 10993 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 19:03:14.129674 10993 net.cpp:165] Memory required for data: 981600108
I0605 19:03:14.129678 10993 layer_factory.hpp:77] Creating layer pool2
I0605 19:03:14.129691 10993 net.cpp:106] Creating Layer pool2
I0605 19:03:14.129693 10993 net.cpp:454] pool2 <- conv2_2
I0605 19:03:14.129698 10993 net.cpp:411] pool2 -> pool2
I0605 19:03:14.129755 10993 net.cpp:150] Setting up pool2
I0605 19:03:14.129770 10993 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0605 19:03:14.129771 10993 net.cpp:165] Memory required for data: 1000800108
I0605 19:03:14.129773 10993 layer_factory.hpp:77] Creating layer conv3_1
I0605 19:03:14.129789 10993 net.cpp:106] Creating Layer conv3_1
I0605 19:03:14.129791 10993 net.cpp:454] conv3_1 <- pool2
I0605 19:03:14.129796 10993 net.cpp:411] conv3_1 -> conv3_1
I0605 19:03:14.131685 10993 net.cpp:150] Setting up conv3_1
I0605 19:03:14.131705 10993 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:03:14.131707 10993 net.cpp:165] Memory required for data: 1039200108
I0605 19:03:14.131716 10993 layer_factory.hpp:77] Creating layer relu3_1
I0605 19:03:14.131732 10993 net.cpp:106] Creating Layer relu3_1
I0605 19:03:14.131736 10993 net.cpp:454] relu3_1 <- conv3_1
I0605 19:03:14.131742 10993 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0605 19:03:14.131882 10993 net.cpp:150] Setting up relu3_1
I0605 19:03:14.131889 10993 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:03:14.131906 10993 net.cpp:165] Memory required for data: 1077600108
I0605 19:03:14.131909 10993 layer_factory.hpp:77] Creating layer conv3_2
I0605 19:03:14.131925 10993 net.cpp:106] Creating Layer conv3_2
I0605 19:03:14.131928 10993 net.cpp:454] conv3_2 <- conv3_1
I0605 19:03:14.131932 10993 net.cpp:411] conv3_2 -> conv3_2
I0605 19:03:14.133908 10993 net.cpp:150] Setting up conv3_2
I0605 19:03:14.133929 10993 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:03:14.133931 10993 net.cpp:165] Memory required for data: 1116000108
I0605 19:03:14.133936 10993 layer_factory.hpp:77] Creating layer relu3_2
I0605 19:03:14.133941 10993 net.cpp:106] Creating Layer relu3_2
I0605 19:03:14.133955 10993 net.cpp:454] relu3_2 <- conv3_2
I0605 19:03:14.133958 10993 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0605 19:03:14.134085 10993 net.cpp:150] Setting up relu3_2
I0605 19:03:14.134090 10993 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:03:14.134104 10993 net.cpp:165] Memory required for data: 1154400108
I0605 19:03:14.134106 10993 layer_factory.hpp:77] Creating layer conv3_3
I0605 19:03:14.134112 10993 net.cpp:106] Creating Layer conv3_3
I0605 19:03:14.134114 10993 net.cpp:454] conv3_3 <- conv3_2
I0605 19:03:14.134129 10993 net.cpp:411] conv3_3 -> conv3_3
I0605 19:03:14.136243 10993 net.cpp:150] Setting up conv3_3
I0605 19:03:14.136255 10993 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:03:14.136256 10993 net.cpp:165] Memory required for data: 1192800108
I0605 19:03:14.136263 10993 layer_factory.hpp:77] Creating layer relu3_3
I0605 19:03:14.136268 10993 net.cpp:106] Creating Layer relu3_3
I0605 19:03:14.136271 10993 net.cpp:454] relu3_3 <- conv3_3
I0605 19:03:14.136276 10993 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0605 19:03:14.136384 10993 net.cpp:150] Setting up relu3_3
I0605 19:03:14.136390 10993 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:03:14.136392 10993 net.cpp:165] Memory required for data: 1231200108
I0605 19:03:14.136394 10993 layer_factory.hpp:77] Creating layer pool3
I0605 19:03:14.136400 10993 net.cpp:106] Creating Layer pool3
I0605 19:03:14.136404 10993 net.cpp:454] pool3 <- conv3_3
I0605 19:03:14.136407 10993 net.cpp:411] pool3 -> pool3
I0605 19:03:14.136433 10993 net.cpp:150] Setting up pool3
I0605 19:03:14.136438 10993 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0605 19:03:14.136440 10993 net.cpp:165] Memory required for data: 1240800108
I0605 19:03:14.136442 10993 layer_factory.hpp:77] Creating layer conv4_1
I0605 19:03:14.136448 10993 net.cpp:106] Creating Layer conv4_1
I0605 19:03:14.136451 10993 net.cpp:454] conv4_1 <- pool3
I0605 19:03:14.136454 10993 net.cpp:411] conv4_1 -> conv4_1
I0605 19:03:14.145661 10993 net.cpp:150] Setting up conv4_1
I0605 19:03:14.145690 10993 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:03:14.145694 10993 net.cpp:165] Memory required for data: 1260000108
I0605 19:03:14.145701 10993 layer_factory.hpp:77] Creating layer relu4_1
I0605 19:03:14.145711 10993 net.cpp:106] Creating Layer relu4_1
I0605 19:03:14.145715 10993 net.cpp:454] relu4_1 <- conv4_1
I0605 19:03:14.145720 10993 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0605 19:03:14.145846 10993 net.cpp:150] Setting up relu4_1
I0605 19:03:14.145853 10993 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:03:14.145865 10993 net.cpp:165] Memory required for data: 1279200108
I0605 19:03:14.145867 10993 layer_factory.hpp:77] Creating layer conv4_2
I0605 19:03:14.145877 10993 net.cpp:106] Creating Layer conv4_2
I0605 19:03:14.145880 10993 net.cpp:454] conv4_2 <- conv4_1
I0605 19:03:14.145884 10993 net.cpp:411] conv4_2 -> conv4_2
I0605 19:03:14.151154 10993 net.cpp:150] Setting up conv4_2
I0605 19:03:14.151175 10993 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:03:14.151177 10993 net.cpp:165] Memory required for data: 1298400108
I0605 19:03:14.151190 10993 layer_factory.hpp:77] Creating layer relu4_2
I0605 19:03:14.151198 10993 net.cpp:106] Creating Layer relu4_2
I0605 19:03:14.151213 10993 net.cpp:454] relu4_2 <- conv4_2
I0605 19:03:14.151218 10993 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0605 19:03:14.151726 10993 net.cpp:150] Setting up relu4_2
I0605 19:03:14.151736 10993 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:03:14.151738 10993 net.cpp:165] Memory required for data: 1317600108
I0605 19:03:14.151741 10993 layer_factory.hpp:77] Creating layer conv4_3
I0605 19:03:14.151749 10993 net.cpp:106] Creating Layer conv4_3
I0605 19:03:14.151752 10993 net.cpp:454] conv4_3 <- conv4_2
I0605 19:03:14.151757 10993 net.cpp:411] conv4_3 -> conv4_3
I0605 19:03:14.156061 10993 net.cpp:150] Setting up conv4_3
I0605 19:03:14.156078 10993 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:03:14.156081 10993 net.cpp:165] Memory required for data: 1336800108
I0605 19:03:14.156088 10993 layer_factory.hpp:77] Creating layer relu4_3
I0605 19:03:14.156096 10993 net.cpp:106] Creating Layer relu4_3
I0605 19:03:14.156100 10993 net.cpp:454] relu4_3 <- conv4_3
I0605 19:03:14.156105 10993 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0605 19:03:14.156232 10993 net.cpp:150] Setting up relu4_3
I0605 19:03:14.156239 10993 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:03:14.156241 10993 net.cpp:165] Memory required for data: 1356000108
I0605 19:03:14.156244 10993 layer_factory.hpp:77] Creating layer pool4
I0605 19:03:14.156250 10993 net.cpp:106] Creating Layer pool4
I0605 19:03:14.156252 10993 net.cpp:454] pool4 <- conv4_3
I0605 19:03:14.156256 10993 net.cpp:411] pool4 -> pool4
I0605 19:03:14.156307 10993 net.cpp:150] Setting up pool4
I0605 19:03:14.156311 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.156324 10993 net.cpp:165] Memory required for data: 1360903020
I0605 19:03:14.156327 10993 layer_factory.hpp:77] Creating layer conv5_1
I0605 19:03:14.156332 10993 net.cpp:106] Creating Layer conv5_1
I0605 19:03:14.156335 10993 net.cpp:454] conv5_1 <- pool4
I0605 19:03:14.156349 10993 net.cpp:411] conv5_1 -> conv5_1
I0605 19:03:14.160632 10993 net.cpp:150] Setting up conv5_1
I0605 19:03:14.160650 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.160653 10993 net.cpp:165] Memory required for data: 1365805932
I0605 19:03:14.160660 10993 layer_factory.hpp:77] Creating layer relu5_1
I0605 19:03:14.160668 10993 net.cpp:106] Creating Layer relu5_1
I0605 19:03:14.160672 10993 net.cpp:454] relu5_1 <- conv5_1
I0605 19:03:14.160676 10993 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0605 19:03:14.160809 10993 net.cpp:150] Setting up relu5_1
I0605 19:03:14.160815 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.160816 10993 net.cpp:165] Memory required for data: 1370708844
I0605 19:03:14.160818 10993 layer_factory.hpp:77] Creating layer conv5_2
I0605 19:03:14.160825 10993 net.cpp:106] Creating Layer conv5_2
I0605 19:03:14.160828 10993 net.cpp:454] conv5_2 <- conv5_1
I0605 19:03:14.160842 10993 net.cpp:411] conv5_2 -> conv5_2
I0605 19:03:14.165251 10993 net.cpp:150] Setting up conv5_2
I0605 19:03:14.165283 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.165287 10993 net.cpp:165] Memory required for data: 1375611756
I0605 19:03:14.165294 10993 layer_factory.hpp:77] Creating layer relu5_2
I0605 19:03:14.165303 10993 net.cpp:106] Creating Layer relu5_2
I0605 19:03:14.165309 10993 net.cpp:454] relu5_2 <- conv5_2
I0605 19:03:14.165315 10993 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0605 19:03:14.165454 10993 net.cpp:150] Setting up relu5_2
I0605 19:03:14.165462 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.165465 10993 net.cpp:165] Memory required for data: 1380514668
I0605 19:03:14.165468 10993 layer_factory.hpp:77] Creating layer conv5_3
I0605 19:03:14.165478 10993 net.cpp:106] Creating Layer conv5_3
I0605 19:03:14.165482 10993 net.cpp:454] conv5_3 <- conv5_2
I0605 19:03:14.165486 10993 net.cpp:411] conv5_3 -> conv5_3
I0605 19:03:14.169845 10993 net.cpp:150] Setting up conv5_3
I0605 19:03:14.169863 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.169867 10993 net.cpp:165] Memory required for data: 1385417580
I0605 19:03:14.169873 10993 layer_factory.hpp:77] Creating layer relu5_3
I0605 19:03:14.169880 10993 net.cpp:106] Creating Layer relu5_3
I0605 19:03:14.169895 10993 net.cpp:454] relu5_3 <- conv5_3
I0605 19:03:14.169900 10993 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0605 19:03:14.170040 10993 net.cpp:150] Setting up relu5_3
I0605 19:03:14.170047 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.170048 10993 net.cpp:165] Memory required for data: 1390320492
I0605 19:03:14.170051 10993 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0605 19:03:14.170055 10993 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0605 19:03:14.170058 10993 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0605 19:03:14.170063 10993 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0605 19:03:14.170078 10993 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0605 19:03:14.170081 10993 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0605 19:03:14.170146 10993 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0605 19:03:14.170150 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.170163 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.170166 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.170168 10993 net.cpp:165] Memory required for data: 1405029228
I0605 19:03:14.170171 10993 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0605 19:03:14.170187 10993 net.cpp:106] Creating Layer rpn_conv/3x3
I0605 19:03:14.170190 10993 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0605 19:03:14.170208 10993 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0605 19:03:14.220527 10993 net.cpp:150] Setting up rpn_conv/3x3
I0605 19:03:14.220546 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.220549 10993 net.cpp:165] Memory required for data: 1409932140
I0605 19:03:14.220557 10993 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0605 19:03:14.220564 10993 net.cpp:106] Creating Layer rpn_relu/3x3
I0605 19:03:14.220569 10993 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0605 19:03:14.220573 10993 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0605 19:03:14.220688 10993 net.cpp:150] Setting up rpn_relu/3x3
I0605 19:03:14.220695 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.220697 10993 net.cpp:165] Memory required for data: 1414835052
I0605 19:03:14.220700 10993 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0605 19:03:14.220705 10993 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0605 19:03:14.220707 10993 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0605 19:03:14.220711 10993 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0605 19:03:14.220715 10993 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0605 19:03:14.220746 10993 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0605 19:03:14.220751 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.220753 10993 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:03:14.220755 10993 net.cpp:165] Memory required for data: 1424640876
I0605 19:03:14.220757 10993 layer_factory.hpp:77] Creating layer rpn_cls_score
I0605 19:03:14.220767 10993 net.cpp:106] Creating Layer rpn_cls_score
I0605 19:03:14.220768 10993 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0605 19:03:14.220772 10993 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0605 19:03:14.222407 10993 net.cpp:150] Setting up rpn_cls_score
I0605 19:03:14.222415 10993 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 19:03:14.222419 10993 net.cpp:165] Memory required for data: 1424928156
I0605 19:03:14.222424 10993 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0605 19:03:14.222429 10993 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0605 19:03:14.222430 10993 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0605 19:03:14.222445 10993 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0605 19:03:14.222450 10993 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0605 19:03:14.222496 10993 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0605 19:03:14.222509 10993 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 19:03:14.222512 10993 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 19:03:14.222514 10993 net.cpp:165] Memory required for data: 1425502716
I0605 19:03:14.222517 10993 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0605 19:03:14.222532 10993 net.cpp:106] Creating Layer rpn_bbox_pred
I0605 19:03:14.222535 10993 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0605 19:03:14.222548 10993 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0605 19:03:14.224035 10993 net.cpp:150] Setting up rpn_bbox_pred
I0605 19:03:14.224042 10993 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:03:14.224045 10993 net.cpp:165] Memory required for data: 1426077276
I0605 19:03:14.224050 10993 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 19:03:14.224053 10993 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 19:03:14.224056 10993 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0605 19:03:14.224061 10993 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0605 19:03:14.224074 10993 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0605 19:03:14.224119 10993 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 19:03:14.224124 10993 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:03:14.224138 10993 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:03:14.224139 10993 net.cpp:165] Memory required for data: 1427226396
I0605 19:03:14.224141 10993 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0605 19:03:14.224146 10993 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0605 19:03:14.224149 10993 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0605 19:03:14.224153 10993 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0605 19:03:14.224169 10993 net.cpp:150] Setting up rpn_cls_score_reshape
I0605 19:03:14.224182 10993 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 19:03:14.224184 10993 net.cpp:165] Memory required for data: 1427513676
I0605 19:03:14.224186 10993 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 19:03:14.224203 10993 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 19:03:14.224205 10993 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0605 19:03:14.224210 10993 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0605 19:03:14.224222 10993 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0605 19:03:14.224261 10993 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 19:03:14.224263 10993 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 19:03:14.224267 10993 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 19:03:14.224268 10993 net.cpp:165] Memory required for data: 1428088236
I0605 19:03:14.224270 10993 layer_factory.hpp:77] Creating layer rpn-data
I0605 19:03:14.224608 10993 net.cpp:106] Creating Layer rpn-data
I0605 19:03:14.224615 10993 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0605 19:03:14.224619 10993 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0605 19:03:14.224623 10993 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0605 19:03:14.224627 10993 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0605 19:03:14.224642 10993 net.cpp:411] rpn-data -> rpn_labels
I0605 19:03:14.224647 10993 net.cpp:411] rpn-data -> rpn_bbox_targets
I0605 19:03:14.224653 10993 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0605 19:03:14.224658 10993 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0605 19:03:14.225533 10993 net.cpp:150] Setting up rpn-data
I0605 19:03:14.225540 10993 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0605 19:03:14.225544 10993 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:03:14.225546 10993 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:03:14.225549 10993 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:03:14.225551 10993 net.cpp:165] Memory required for data: 1429955556
I0605 19:03:14.225554 10993 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0605 19:03:14.225559 10993 net.cpp:106] Creating Layer rpn_loss_cls
I0605 19:03:14.225572 10993 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0605 19:03:14.225579 10993 net.cpp:454] rpn_loss_cls <- rpn_labels
I0605 19:03:14.225581 10993 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0605 19:03:14.225589 10993 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0605 19:03:14.226217 10993 net.cpp:150] Setting up rpn_loss_cls
I0605 19:03:14.226227 10993 net.cpp:157] Top shape: (1)
I0605 19:03:14.226228 10993 net.cpp:160]     with loss weight 1
I0605 19:03:14.226235 10993 net.cpp:165] Memory required for data: 1429955560
I0605 19:03:14.226238 10993 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0605 19:03:14.226243 10993 net.cpp:106] Creating Layer rpn_loss_bbox
I0605 19:03:14.226258 10993 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0605 19:03:14.226261 10993 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0605 19:03:14.226265 10993 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0605 19:03:14.226269 10993 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0605 19:03:14.226272 10993 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0605 19:03:14.227365 10993 net.cpp:150] Setting up rpn_loss_bbox
I0605 19:03:14.227372 10993 net.cpp:157] Top shape: (1)
I0605 19:03:14.227375 10993 net.cpp:160]     with loss weight 1
I0605 19:03:14.227380 10993 net.cpp:165] Memory required for data: 1429955564
I0605 19:03:14.227382 10993 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0605 19:03:14.227386 10993 net.cpp:106] Creating Layer rpn_cls_prob
I0605 19:03:14.227389 10993 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0605 19:03:14.227403 10993 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0605 19:03:14.227560 10993 net.cpp:150] Setting up rpn_cls_prob
I0605 19:03:14.227566 10993 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 19:03:14.227578 10993 net.cpp:165] Memory required for data: 1430242844
I0605 19:03:14.227581 10993 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0605 19:03:14.227586 10993 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0605 19:03:14.227588 10993 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0605 19:03:14.227592 10993 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0605 19:03:14.227619 10993 net.cpp:150] Setting up rpn_cls_prob_reshape
I0605 19:03:14.227623 10993 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 19:03:14.227625 10993 net.cpp:165] Memory required for data: 1430530124
I0605 19:03:14.227627 10993 layer_factory.hpp:77] Creating layer proposal
I0605 19:03:14.228188 10993 net.cpp:106] Creating Layer proposal
I0605 19:03:14.228196 10993 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0605 19:03:14.228209 10993 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0605 19:03:14.228214 10993 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0605 19:03:14.228217 10993 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0605 19:03:14.229113 10993 net.cpp:150] Setting up proposal
I0605 19:03:14.229125 10993 net.cpp:157] Top shape: 1 5 (5)
I0605 19:03:14.229128 10993 net.cpp:165] Memory required for data: 1430530144
I0605 19:03:14.229133 10993 layer_factory.hpp:77] Creating layer roi-data
I0605 19:03:14.229353 10993 net.cpp:106] Creating Layer roi-data
I0605 19:03:14.229362 10993 net.cpp:454] roi-data <- rpn_rois
I0605 19:03:14.229367 10993 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0605 19:03:14.229372 10993 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0605 19:03:14.229379 10993 net.cpp:454] roi-data <- seg_mask_inds
I0605 19:03:14.229383 10993 net.cpp:454] roi-data <- flipped
I0605 19:03:14.229391 10993 net.cpp:411] roi-data -> rois
I0605 19:03:14.229401 10993 net.cpp:411] roi-data -> labels
I0605 19:03:14.229424 10993 net.cpp:411] roi-data -> bbox_targets
I0605 19:03:14.229432 10993 net.cpp:411] roi-data -> bbox_inside_weights
I0605 19:03:14.229439 10993 net.cpp:411] roi-data -> bbox_outside_weights
I0605 19:03:14.229446 10993 net.cpp:411] roi-data -> mask_targets
I0605 19:03:14.229454 10993 net.cpp:411] roi-data -> rois_pos
I0605 19:03:14.229748 10993 net.cpp:150] Setting up roi-data
I0605 19:03:14.229758 10993 net.cpp:157] Top shape: 1 5 (5)
I0605 19:03:14.229763 10993 net.cpp:157] Top shape: 1 1 (1)
I0605 19:03:14.229768 10993 net.cpp:157] Top shape: 1 8 (8)
I0605 19:03:14.229773 10993 net.cpp:157] Top shape: 1 8 (8)
I0605 19:03:14.229777 10993 net.cpp:157] Top shape: 1 8 (8)
I0605 19:03:14.229781 10993 net.cpp:157] Top shape: 1 244 244 (59536)
I0605 19:03:14.229785 10993 net.cpp:157] Top shape: 1 5 (5)
I0605 19:03:14.229789 10993 net.cpp:165] Memory required for data: 1430768428
I0605 19:03:14.229794 10993 layer_factory.hpp:77] Creating layer roi_pool5
I0605 19:03:14.229801 10993 net.cpp:106] Creating Layer roi_pool5
I0605 19:03:14.229806 10993 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0605 19:03:14.229811 10993 net.cpp:454] roi_pool5 <- rois
I0605 19:03:14.229817 10993 net.cpp:411] roi_pool5 -> pool5
I0605 19:03:14.229825 10993 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0605 19:03:14.229895 10993 net.cpp:150] Setting up roi_pool5
I0605 19:03:14.229900 10993 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:03:14.229904 10993 net.cpp:165] Memory required for data: 1430868780
I0605 19:03:14.229908 10993 layer_factory.hpp:77] Creating layer fc6
I0605 19:03:14.229916 10993 net.cpp:106] Creating Layer fc6
I0605 19:03:14.229921 10993 net.cpp:454] fc6 <- pool5
I0605 19:03:14.229928 10993 net.cpp:411] fc6 -> fc6
I0605 19:03:14.371788 10993 net.cpp:150] Setting up fc6
I0605 19:03:14.371811 10993 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:03:14.371816 10993 net.cpp:165] Memory required for data: 1430885164
I0605 19:03:14.371834 10993 layer_factory.hpp:77] Creating layer relu6
I0605 19:03:14.371866 10993 net.cpp:106] Creating Layer relu6
I0605 19:03:14.371873 10993 net.cpp:454] relu6 <- fc6
I0605 19:03:14.371889 10993 net.cpp:397] relu6 -> fc6 (in-place)
I0605 19:03:14.372118 10993 net.cpp:150] Setting up relu6
I0605 19:03:14.372126 10993 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:03:14.372129 10993 net.cpp:165] Memory required for data: 1430901548
I0605 19:03:14.372133 10993 layer_factory.hpp:77] Creating layer fc7
I0605 19:03:14.372143 10993 net.cpp:106] Creating Layer fc7
I0605 19:03:14.372148 10993 net.cpp:454] fc7 <- fc6
I0605 19:03:14.372165 10993 net.cpp:411] fc7 -> fc7
I0605 19:03:14.396006 10993 net.cpp:150] Setting up fc7
I0605 19:03:14.396049 10993 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:03:14.396054 10993 net.cpp:165] Memory required for data: 1430917932
I0605 19:03:14.396075 10993 layer_factory.hpp:77] Creating layer relu7
I0605 19:03:14.396096 10993 net.cpp:106] Creating Layer relu7
I0605 19:03:14.396104 10993 net.cpp:454] relu7 <- fc7
I0605 19:03:14.396122 10993 net.cpp:397] relu7 -> fc7 (in-place)
I0605 19:03:14.396327 10993 net.cpp:150] Setting up relu7
I0605 19:03:14.396337 10993 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:03:14.396340 10993 net.cpp:165] Memory required for data: 1430934316
I0605 19:03:14.396356 10993 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0605 19:03:14.396374 10993 net.cpp:106] Creating Layer fc7_relu7_0_split
I0605 19:03:14.396380 10993 net.cpp:454] fc7_relu7_0_split <- fc7
I0605 19:03:14.396396 10993 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0605 19:03:14.396407 10993 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0605 19:03:14.396469 10993 net.cpp:150] Setting up fc7_relu7_0_split
I0605 19:03:14.396476 10993 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:03:14.396481 10993 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:03:14.396494 10993 net.cpp:165] Memory required for data: 1430967084
I0605 19:03:14.396498 10993 layer_factory.hpp:77] Creating layer cls_score
I0605 19:03:14.396510 10993 net.cpp:106] Creating Layer cls_score
I0605 19:03:14.396515 10993 net.cpp:454] cls_score <- fc7_relu7_0_split_0
I0605 19:03:14.396522 10993 net.cpp:411] cls_score -> cls_score
I0605 19:03:14.396790 10993 net.cpp:150] Setting up cls_score
I0605 19:03:14.396796 10993 net.cpp:157] Top shape: 1 2 (2)
I0605 19:03:14.396800 10993 net.cpp:165] Memory required for data: 1430967092
I0605 19:03:14.396808 10993 layer_factory.hpp:77] Creating layer bbox_pred
I0605 19:03:14.396816 10993 net.cpp:106] Creating Layer bbox_pred
I0605 19:03:14.396819 10993 net.cpp:454] bbox_pred <- fc7_relu7_0_split_1
I0605 19:03:14.396829 10993 net.cpp:411] bbox_pred -> bbox_pred
I0605 19:03:14.397675 10993 net.cpp:150] Setting up bbox_pred
I0605 19:03:14.397683 10993 net.cpp:157] Top shape: 1 8 (8)
I0605 19:03:14.397687 10993 net.cpp:165] Memory required for data: 1430967124
I0605 19:03:14.397704 10993 layer_factory.hpp:77] Creating layer loss_cls
I0605 19:03:14.397716 10993 net.cpp:106] Creating Layer loss_cls
I0605 19:03:14.397722 10993 net.cpp:454] loss_cls <- cls_score
I0605 19:03:14.397728 10993 net.cpp:454] loss_cls <- labels
I0605 19:03:14.397738 10993 net.cpp:411] loss_cls -> loss_cls
I0605 19:03:14.397747 10993 layer_factory.hpp:77] Creating layer loss_cls
I0605 19:03:14.398406 10993 net.cpp:150] Setting up loss_cls
I0605 19:03:14.398416 10993 net.cpp:157] Top shape: (1)
I0605 19:03:14.398419 10993 net.cpp:160]     with loss weight 3
I0605 19:03:14.398433 10993 net.cpp:165] Memory required for data: 1430967128
I0605 19:03:14.398438 10993 layer_factory.hpp:77] Creating layer loss_bbox
I0605 19:03:14.398448 10993 net.cpp:106] Creating Layer loss_bbox
I0605 19:03:14.398452 10993 net.cpp:454] loss_bbox <- bbox_pred
I0605 19:03:14.398458 10993 net.cpp:454] loss_bbox <- bbox_targets
I0605 19:03:14.398463 10993 net.cpp:454] loss_bbox <- bbox_inside_weights
I0605 19:03:14.398468 10993 net.cpp:454] loss_bbox <- bbox_outside_weights
I0605 19:03:14.398475 10993 net.cpp:411] loss_bbox -> loss_bbox
I0605 19:03:14.398555 10993 net.cpp:150] Setting up loss_bbox
I0605 19:03:14.398561 10993 net.cpp:157] Top shape: (1)
I0605 19:03:14.398563 10993 net.cpp:160]     with loss weight 2
I0605 19:03:14.398568 10993 net.cpp:165] Memory required for data: 1430967132
I0605 19:03:14.398582 10993 layer_factory.hpp:77] Creating layer roi_pool5_2
I0605 19:03:14.398591 10993 net.cpp:106] Creating Layer roi_pool5_2
I0605 19:03:14.398599 10993 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0605 19:03:14.398604 10993 net.cpp:454] roi_pool5_2 <- rois_pos
I0605 19:03:14.398610 10993 net.cpp:411] roi_pool5_2 -> pool5_2
I0605 19:03:14.398622 10993 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0605 19:03:14.398703 10993 net.cpp:150] Setting up roi_pool5_2
I0605 19:03:14.398710 10993 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:03:14.398712 10993 net.cpp:165] Memory required for data: 1431067484
I0605 19:03:14.398716 10993 layer_factory.hpp:77] Creating layer pool5_2_conv
I0605 19:03:14.398739 10993 net.cpp:106] Creating Layer pool5_2_conv
I0605 19:03:14.398743 10993 net.cpp:454] pool5_2_conv <- pool5_2
I0605 19:03:14.398751 10993 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0605 19:03:14.405596 10993 net.cpp:150] Setting up pool5_2_conv
I0605 19:03:14.405604 10993 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:03:14.405608 10993 net.cpp:165] Memory required for data: 1431167836
I0605 19:03:14.405616 10993 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0605 19:03:14.405627 10993 net.cpp:106] Creating Layer pool5_2_conv_relu
I0605 19:03:14.405642 10993 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0605 19:03:14.405649 10993 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0605 19:03:14.405797 10993 net.cpp:150] Setting up pool5_2_conv_relu
I0605 19:03:14.405804 10993 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:03:14.405807 10993 net.cpp:165] Memory required for data: 1431268188
I0605 19:03:14.405812 10993 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0605 19:03:14.405827 10993 net.cpp:106] Creating Layer pool5_2_conv2
I0605 19:03:14.405843 10993 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0605 19:03:14.405860 10993 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0605 19:03:14.456548 10993 net.cpp:150] Setting up pool5_2_conv2
I0605 19:03:14.456568 10993 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:03:14.456573 10993 net.cpp:165] Memory required for data: 1431368540
I0605 19:03:14.456583 10993 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0605 19:03:14.456602 10993 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0605 19:03:14.456609 10993 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0605 19:03:14.456616 10993 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0605 19:03:14.456792 10993 net.cpp:150] Setting up pool5_2_conv2_relu
I0605 19:03:14.456800 10993 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:03:14.456804 10993 net.cpp:165] Memory required for data: 1431468892
I0605 19:03:14.456807 10993 layer_factory.hpp:77] Creating layer mask_deconv1
I0605 19:03:14.456820 10993 net.cpp:106] Creating Layer mask_deconv1
I0605 19:03:14.456823 10993 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0605 19:03:14.456840 10993 net.cpp:411] mask_deconv1 -> mask_deconv1
I0605 19:03:14.457629 10993 net.cpp:150] Setting up mask_deconv1
I0605 19:03:14.457635 10993 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0605 19:03:14.457638 10993 net.cpp:165] Memory required for data: 1432390492
I0605 19:03:14.457645 10993 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0605 19:03:14.457656 10993 net.cpp:106] Creating Layer pool5_2_conv3
I0605 19:03:14.457671 10993 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0605 19:03:14.457677 10993 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0605 19:03:14.484441 10993 net.cpp:150] Setting up pool5_2_conv3
I0605 19:03:14.484462 10993 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 19:03:14.484465 10993 net.cpp:165] Memory required for data: 1434233692
I0605 19:03:14.484488 10993 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0605 19:03:14.484508 10993 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0605 19:03:14.484514 10993 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0605 19:03:14.484531 10993 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0605 19:03:14.484727 10993 net.cpp:150] Setting up pool5_2_conv3_relu
I0605 19:03:14.484735 10993 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 19:03:14.484738 10993 net.cpp:165] Memory required for data: 1436076892
I0605 19:03:14.484751 10993 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0605 19:03:14.484779 10993 net.cpp:106] Creating Layer pool5_2_conv4
I0605 19:03:14.484784 10993 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0605 19:03:14.484802 10993 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0605 19:03:14.535454 10993 net.cpp:150] Setting up pool5_2_conv4
I0605 19:03:14.535475 10993 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 19:03:14.535478 10993 net.cpp:165] Memory required for data: 1437920092
I0605 19:03:14.535488 10993 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0605 19:03:14.535498 10993 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0605 19:03:14.535517 10993 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0605 19:03:14.535534 10993 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0605 19:03:14.535692 10993 net.cpp:150] Setting up pool5_2_conv4_relu
I0605 19:03:14.535699 10993 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 19:03:14.535702 10993 net.cpp:165] Memory required for data: 1439763292
I0605 19:03:14.535706 10993 layer_factory.hpp:77] Creating layer mask_deconv2
I0605 19:03:14.535718 10993 net.cpp:106] Creating Layer mask_deconv2
I0605 19:03:14.535723 10993 net.cpp:454] mask_deconv2 <- pool5_2_conv4_relu
I0605 19:03:14.535740 10993 net.cpp:411] mask_deconv2 -> mask_deconv2
I0605 19:03:14.536072 10993 net.cpp:150] Setting up mask_deconv2
I0605 19:03:14.536077 10993 net.cpp:157] Top shape: 1 256 60 60 (921600)
I0605 19:03:14.536080 10993 net.cpp:165] Memory required for data: 1443449692
I0605 19:03:14.536087 10993 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0605 19:03:14.536110 10993 net.cpp:106] Creating Layer pool5_2_conv5
I0605 19:03:14.536116 10993 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0605 19:03:14.536123 10993 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0605 19:03:14.562254 10993 net.cpp:150] Setting up pool5_2_conv5
I0605 19:03:14.562274 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.562278 10993 net.cpp:165] Memory required for data: 1450822492
I0605 19:03:14.562288 10993 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0605 19:03:14.562300 10993 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0605 19:03:14.562309 10993 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0605 19:03:14.562315 10993 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0605 19:03:14.562463 10993 net.cpp:150] Setting up pool5_2_conv5_relu
I0605 19:03:14.562471 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.562474 10993 net.cpp:165] Memory required for data: 1458195292
I0605 19:03:14.562479 10993 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0605 19:03:14.562491 10993 net.cpp:106] Creating Layer pool5_2_conv6
I0605 19:03:14.562496 10993 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0605 19:03:14.562502 10993 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0605 19:03:14.613466 10993 net.cpp:150] Setting up pool5_2_conv6
I0605 19:03:14.613495 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.613499 10993 net.cpp:165] Memory required for data: 1465568092
I0605 19:03:14.613518 10993 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0605 19:03:14.613539 10993 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0605 19:03:14.613546 10993 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0605 19:03:14.613567 10993 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0605 19:03:14.614151 10993 net.cpp:150] Setting up pool5_2_conv6_relu
I0605 19:03:14.614161 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.614166 10993 net.cpp:165] Memory required for data: 1472940892
I0605 19:03:14.614179 10993 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu_pool5_2_conv6_relu_0_split
I0605 19:03:14.614187 10993 net.cpp:106] Creating Layer pool5_2_conv6_relu_pool5_2_conv6_relu_0_split
I0605 19:03:14.614203 10993 net.cpp:454] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split <- pool5_2_conv6_relu
I0605 19:03:14.614213 10993 net.cpp:411] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split -> pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_0
I0605 19:03:14.614221 10993 net.cpp:411] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split -> pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_1
I0605 19:03:14.614229 10993 net.cpp:411] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split -> pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_2
I0605 19:03:14.614235 10993 net.cpp:411] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split -> pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_3
I0605 19:03:14.614296 10993 net.cpp:150] Setting up pool5_2_conv6_relu_pool5_2_conv6_relu_0_split
I0605 19:03:14.614310 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.614315 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.614329 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.614334 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.614339 10993 net.cpp:165] Memory required for data: 1502432092
I0605 19:03:14.614353 10993 layer_factory.hpp:77] Creating layer query_conv
I0605 19:03:14.614377 10993 net.cpp:106] Creating Layer query_conv
I0605 19:03:14.614382 10993 net.cpp:454] query_conv <- pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_0
I0605 19:03:14.614388 10993 net.cpp:411] query_conv -> query_conv
I0605 19:03:14.615967 10993 net.cpp:150] Setting up query_conv
I0605 19:03:14.615976 10993 net.cpp:157] Top shape: 1 64 60 60 (230400)
I0605 19:03:14.615980 10993 net.cpp:165] Memory required for data: 1503353692
I0605 19:03:14.615999 10993 layer_factory.hpp:77] Creating layer key_conv
I0605 19:03:14.616012 10993 net.cpp:106] Creating Layer key_conv
I0605 19:03:14.616019 10993 net.cpp:454] key_conv <- pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_1
I0605 19:03:14.616027 10993 net.cpp:411] key_conv -> key_conv
I0605 19:03:14.617215 10993 net.cpp:150] Setting up key_conv
I0605 19:03:14.617223 10993 net.cpp:157] Top shape: 1 64 60 60 (230400)
I0605 19:03:14.617226 10993 net.cpp:165] Memory required for data: 1504275292
I0605 19:03:14.617233 10993 layer_factory.hpp:77] Creating layer value_conv
I0605 19:03:14.617255 10993 net.cpp:106] Creating Layer value_conv
I0605 19:03:14.617269 10993 net.cpp:454] value_conv <- pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_2
I0605 19:03:14.617280 10993 net.cpp:411] value_conv -> value_conv
I0605 19:03:14.623975 10993 net.cpp:150] Setting up value_conv
I0605 19:03:14.623983 10993 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:03:14.623987 10993 net.cpp:165] Memory required for data: 1511648092
I0605 19:03:14.623994 10993 layer_factory.hpp:77] Creating layer query_conv_reshape
I0605 19:03:14.624004 10993 net.cpp:106] Creating Layer query_conv_reshape
I0605 19:03:14.624022 10993 net.cpp:454] query_conv_reshape <- query_conv
I0605 19:03:14.624027 10993 net.cpp:411] query_conv_reshape -> query_conv_reshape
F0605 19:03:14.624063 10993 reshape_layer.cpp:80] Check failed: 0 == bottom[0]->count() % explicit_count (0 vs. 230400) bottom count (230400) must be divisible by the product of the specified dimensions (952576)
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 10993 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
