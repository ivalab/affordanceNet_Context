+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_15-32-13
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_15-32-13
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0625 15:32:22.007278 17810 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0625 15:32:22.007302 17810 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0625 15:32:22.009027 17810 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "mask_score"
  top: "mask_score_softmax"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "log"
  type: "Log"
  bottom: "mask_score_softmax"
  top: "log"
}
layer {
  name: "mult1"
  type: "Eltwise"
  bottom: "log"
  bottom: "mask_targets"
  top: "mult1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cross_entropy"
  type: "Power"
  bottom: "mult1"
  top: "cross_entropy"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "ce_sum"
  type: "Convolution"
  bottom: "cross_entropy"
  top: "cross_entropy_sum"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 1
    weight_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "ce_mean"
  type: "Reduction"
  bottom: "cross_entropy_sum"
  top: "cross_entropy_mean"
  loss_weight: 1
  reduction_param {
    operation: MEAN
    axis: 0
  }
}
I0625 15:32:22.009418 17810 layer_factory.hpp:77] Creating layer input-data
I0625 15:32:22.120208 17810 net.cpp:106] Creating Layer input-data
I0625 15:32:22.120229 17810 net.cpp:411] input-data -> data
I0625 15:32:22.120240 17810 net.cpp:411] input-data -> im_info
I0625 15:32:22.120247 17810 net.cpp:411] input-data -> gt_boxes
I0625 15:32:22.120254 17810 net.cpp:411] input-data -> seg_mask_inds
I0625 15:32:22.120260 17810 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0625 15:32:22.169348 17810 net.cpp:150] Setting up input-data
I0625 15:32:22.169374 17810 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:32:22.169378 17810 net.cpp:157] Top shape: 1 3 (3)
I0625 15:32:22.169379 17810 net.cpp:157] Top shape: 1 4 (4)
I0625 15:32:22.169381 17810 net.cpp:157] Top shape: 1 2 (2)
I0625 15:32:22.169384 17810 net.cpp:157] Top shape: 1 1 (1)
I0625 15:32:22.169385 17810 net.cpp:165] Memory required for data: 7200040
I0625 15:32:22.169390 17810 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0625 15:32:22.169975 17810 net.cpp:106] Creating Layer data_input-data_0_split
I0625 15:32:22.169982 17810 net.cpp:454] data_input-data_0_split <- data
I0625 15:32:22.169986 17810 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0625 15:32:22.169992 17810 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0625 15:32:22.170019 17810 net.cpp:150] Setting up data_input-data_0_split
I0625 15:32:22.170027 17810 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:32:22.170030 17810 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:32:22.170032 17810 net.cpp:165] Memory required for data: 21600040
I0625 15:32:22.170037 17810 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0625 15:32:22.170042 17810 net.cpp:106] Creating Layer im_info_input-data_1_split
I0625 15:32:22.170045 17810 net.cpp:454] im_info_input-data_1_split <- im_info
I0625 15:32:22.170050 17810 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0625 15:32:22.170055 17810 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0625 15:32:22.170060 17810 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0625 15:32:22.170100 17810 net.cpp:150] Setting up im_info_input-data_1_split
I0625 15:32:22.170109 17810 net.cpp:157] Top shape: 1 3 (3)
I0625 15:32:22.170110 17810 net.cpp:157] Top shape: 1 3 (3)
I0625 15:32:22.170112 17810 net.cpp:157] Top shape: 1 3 (3)
I0625 15:32:22.170114 17810 net.cpp:165] Memory required for data: 21600076
I0625 15:32:22.170116 17810 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0625 15:32:22.170120 17810 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0625 15:32:22.170121 17810 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0625 15:32:22.170125 17810 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0625 15:32:22.170130 17810 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0625 15:32:22.170157 17810 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0625 15:32:22.170161 17810 net.cpp:157] Top shape: 1 4 (4)
I0625 15:32:22.170163 17810 net.cpp:157] Top shape: 1 4 (4)
I0625 15:32:22.170166 17810 net.cpp:165] Memory required for data: 21600108
I0625 15:32:22.170166 17810 layer_factory.hpp:77] Creating layer conv1_1
I0625 15:32:22.170176 17810 net.cpp:106] Creating Layer conv1_1
I0625 15:32:22.170178 17810 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0625 15:32:22.170182 17810 net.cpp:411] conv1_1 -> conv1_1
I0625 15:32:22.653190 17810 net.cpp:150] Setting up conv1_1
I0625 15:32:22.653219 17810 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:32:22.653221 17810 net.cpp:165] Memory required for data: 175200108
I0625 15:32:22.653242 17810 layer_factory.hpp:77] Creating layer relu1_1
I0625 15:32:22.653250 17810 net.cpp:106] Creating Layer relu1_1
I0625 15:32:22.653254 17810 net.cpp:454] relu1_1 <- conv1_1
I0625 15:32:22.653257 17810 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0625 15:32:22.653388 17810 net.cpp:150] Setting up relu1_1
I0625 15:32:22.653394 17810 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:32:22.653406 17810 net.cpp:165] Memory required for data: 328800108
I0625 15:32:22.653409 17810 layer_factory.hpp:77] Creating layer conv1_2
I0625 15:32:22.653414 17810 net.cpp:106] Creating Layer conv1_2
I0625 15:32:22.653425 17810 net.cpp:454] conv1_2 <- conv1_1
I0625 15:32:22.653429 17810 net.cpp:411] conv1_2 -> conv1_2
I0625 15:32:22.655526 17810 net.cpp:150] Setting up conv1_2
I0625 15:32:22.655550 17810 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:32:22.655552 17810 net.cpp:165] Memory required for data: 482400108
I0625 15:32:22.655560 17810 layer_factory.hpp:77] Creating layer relu1_2
I0625 15:32:22.655565 17810 net.cpp:106] Creating Layer relu1_2
I0625 15:32:22.655566 17810 net.cpp:454] relu1_2 <- conv1_2
I0625 15:32:22.655570 17810 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0625 15:32:22.655680 17810 net.cpp:150] Setting up relu1_2
I0625 15:32:22.655685 17810 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:32:22.655697 17810 net.cpp:165] Memory required for data: 636000108
I0625 15:32:22.655699 17810 layer_factory.hpp:77] Creating layer pool1
I0625 15:32:22.655706 17810 net.cpp:106] Creating Layer pool1
I0625 15:32:22.655709 17810 net.cpp:454] pool1 <- conv1_2
I0625 15:32:22.655711 17810 net.cpp:411] pool1 -> pool1
I0625 15:32:22.656352 17810 net.cpp:150] Setting up pool1
I0625 15:32:22.656363 17810 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0625 15:32:22.656366 17810 net.cpp:165] Memory required for data: 674400108
I0625 15:32:22.656380 17810 layer_factory.hpp:77] Creating layer conv2_1
I0625 15:32:22.656389 17810 net.cpp:106] Creating Layer conv2_1
I0625 15:32:22.656394 17810 net.cpp:454] conv2_1 <- pool1
I0625 15:32:22.656400 17810 net.cpp:411] conv2_1 -> conv2_1
I0625 15:32:22.658772 17810 net.cpp:150] Setting up conv2_1
I0625 15:32:22.658784 17810 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:32:22.658787 17810 net.cpp:165] Memory required for data: 751200108
I0625 15:32:22.658807 17810 layer_factory.hpp:77] Creating layer relu2_1
I0625 15:32:22.658825 17810 net.cpp:106] Creating Layer relu2_1
I0625 15:32:22.658830 17810 net.cpp:454] relu2_1 <- conv2_1
I0625 15:32:22.658835 17810 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0625 15:32:22.659497 17810 net.cpp:150] Setting up relu2_1
I0625 15:32:22.659507 17810 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:32:22.659519 17810 net.cpp:165] Memory required for data: 828000108
I0625 15:32:22.659523 17810 layer_factory.hpp:77] Creating layer conv2_2
I0625 15:32:22.659538 17810 net.cpp:106] Creating Layer conv2_2
I0625 15:32:22.659540 17810 net.cpp:454] conv2_2 <- conv2_1
I0625 15:32:22.659544 17810 net.cpp:411] conv2_2 -> conv2_2
I0625 15:32:22.661453 17810 net.cpp:150] Setting up conv2_2
I0625 15:32:22.661463 17810 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:32:22.661465 17810 net.cpp:165] Memory required for data: 904800108
I0625 15:32:22.661470 17810 layer_factory.hpp:77] Creating layer relu2_2
I0625 15:32:22.661475 17810 net.cpp:106] Creating Layer relu2_2
I0625 15:32:22.661478 17810 net.cpp:454] relu2_2 <- conv2_2
I0625 15:32:22.661484 17810 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0625 15:32:22.661603 17810 net.cpp:150] Setting up relu2_2
I0625 15:32:22.661609 17810 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:32:22.661612 17810 net.cpp:165] Memory required for data: 981600108
I0625 15:32:22.661613 17810 layer_factory.hpp:77] Creating layer pool2
I0625 15:32:22.661617 17810 net.cpp:106] Creating Layer pool2
I0625 15:32:22.661619 17810 net.cpp:454] pool2 <- conv2_2
I0625 15:32:22.661623 17810 net.cpp:411] pool2 -> pool2
I0625 15:32:22.661650 17810 net.cpp:150] Setting up pool2
I0625 15:32:22.661654 17810 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0625 15:32:22.661656 17810 net.cpp:165] Memory required for data: 1000800108
I0625 15:32:22.661657 17810 layer_factory.hpp:77] Creating layer conv3_1
I0625 15:32:22.661664 17810 net.cpp:106] Creating Layer conv3_1
I0625 15:32:22.661666 17810 net.cpp:454] conv3_1 <- pool2
I0625 15:32:22.661669 17810 net.cpp:411] conv3_1 -> conv3_1
I0625 15:32:22.664219 17810 net.cpp:150] Setting up conv3_1
I0625 15:32:22.664228 17810 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:32:22.664230 17810 net.cpp:165] Memory required for data: 1039200108
I0625 15:32:22.664238 17810 layer_factory.hpp:77] Creating layer relu3_1
I0625 15:32:22.664242 17810 net.cpp:106] Creating Layer relu3_1
I0625 15:32:22.664245 17810 net.cpp:454] relu3_1 <- conv3_1
I0625 15:32:22.664248 17810 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0625 15:32:22.664369 17810 net.cpp:150] Setting up relu3_1
I0625 15:32:22.664376 17810 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:32:22.664377 17810 net.cpp:165] Memory required for data: 1077600108
I0625 15:32:22.664379 17810 layer_factory.hpp:77] Creating layer conv3_2
I0625 15:32:22.664386 17810 net.cpp:106] Creating Layer conv3_2
I0625 15:32:22.664388 17810 net.cpp:454] conv3_2 <- conv3_1
I0625 15:32:22.664392 17810 net.cpp:411] conv3_2 -> conv3_2
I0625 15:32:22.666615 17810 net.cpp:150] Setting up conv3_2
I0625 15:32:22.666623 17810 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:32:22.666625 17810 net.cpp:165] Memory required for data: 1116000108
I0625 15:32:22.666630 17810 layer_factory.hpp:77] Creating layer relu3_2
I0625 15:32:22.666635 17810 net.cpp:106] Creating Layer relu3_2
I0625 15:32:22.666637 17810 net.cpp:454] relu3_2 <- conv3_2
I0625 15:32:22.666640 17810 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0625 15:32:22.666774 17810 net.cpp:150] Setting up relu3_2
I0625 15:32:22.666780 17810 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:32:22.666782 17810 net.cpp:165] Memory required for data: 1154400108
I0625 15:32:22.666784 17810 layer_factory.hpp:77] Creating layer conv3_3
I0625 15:32:22.666791 17810 net.cpp:106] Creating Layer conv3_3
I0625 15:32:22.666793 17810 net.cpp:454] conv3_3 <- conv3_2
I0625 15:32:22.666797 17810 net.cpp:411] conv3_3 -> conv3_3
I0625 15:32:22.668952 17810 net.cpp:150] Setting up conv3_3
I0625 15:32:22.668961 17810 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:32:22.668962 17810 net.cpp:165] Memory required for data: 1192800108
I0625 15:32:22.668967 17810 layer_factory.hpp:77] Creating layer relu3_3
I0625 15:32:22.668970 17810 net.cpp:106] Creating Layer relu3_3
I0625 15:32:22.668972 17810 net.cpp:454] relu3_3 <- conv3_3
I0625 15:32:22.668977 17810 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0625 15:32:22.669106 17810 net.cpp:150] Setting up relu3_3
I0625 15:32:22.669112 17810 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:32:22.669114 17810 net.cpp:165] Memory required for data: 1231200108
I0625 15:32:22.669116 17810 layer_factory.hpp:77] Creating layer pool3
I0625 15:32:22.669121 17810 net.cpp:106] Creating Layer pool3
I0625 15:32:22.669122 17810 net.cpp:454] pool3 <- conv3_3
I0625 15:32:22.669126 17810 net.cpp:411] pool3 -> pool3
I0625 15:32:22.669173 17810 net.cpp:150] Setting up pool3
I0625 15:32:22.669176 17810 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0625 15:32:22.669178 17810 net.cpp:165] Memory required for data: 1240800108
I0625 15:32:22.669188 17810 layer_factory.hpp:77] Creating layer conv4_1
I0625 15:32:22.669194 17810 net.cpp:106] Creating Layer conv4_1
I0625 15:32:22.669196 17810 net.cpp:454] conv4_1 <- pool3
I0625 15:32:22.669199 17810 net.cpp:411] conv4_1 -> conv4_1
I0625 15:32:22.673326 17810 net.cpp:150] Setting up conv4_1
I0625 15:32:22.673354 17810 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:32:22.673357 17810 net.cpp:165] Memory required for data: 1260000108
I0625 15:32:22.673363 17810 layer_factory.hpp:77] Creating layer relu4_1
I0625 15:32:22.673382 17810 net.cpp:106] Creating Layer relu4_1
I0625 15:32:22.673385 17810 net.cpp:454] relu4_1 <- conv4_1
I0625 15:32:22.673390 17810 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0625 15:32:22.673527 17810 net.cpp:150] Setting up relu4_1
I0625 15:32:22.673532 17810 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:32:22.673544 17810 net.cpp:165] Memory required for data: 1279200108
I0625 15:32:22.673547 17810 layer_factory.hpp:77] Creating layer conv4_2
I0625 15:32:22.673553 17810 net.cpp:106] Creating Layer conv4_2
I0625 15:32:22.673555 17810 net.cpp:454] conv4_2 <- conv4_1
I0625 15:32:22.673559 17810 net.cpp:411] conv4_2 -> conv4_2
I0625 15:32:22.678889 17810 net.cpp:150] Setting up conv4_2
I0625 15:32:22.678918 17810 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:32:22.678925 17810 net.cpp:165] Memory required for data: 1298400108
I0625 15:32:22.678951 17810 layer_factory.hpp:77] Creating layer relu4_2
I0625 15:32:22.678962 17810 net.cpp:106] Creating Layer relu4_2
I0625 15:32:22.678967 17810 net.cpp:454] relu4_2 <- conv4_2
I0625 15:32:22.678972 17810 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0625 15:32:22.679469 17810 net.cpp:150] Setting up relu4_2
I0625 15:32:22.679478 17810 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:32:22.679481 17810 net.cpp:165] Memory required for data: 1317600108
I0625 15:32:22.679482 17810 layer_factory.hpp:77] Creating layer conv4_3
I0625 15:32:22.679489 17810 net.cpp:106] Creating Layer conv4_3
I0625 15:32:22.679492 17810 net.cpp:454] conv4_3 <- conv4_2
I0625 15:32:22.679497 17810 net.cpp:411] conv4_3 -> conv4_3
I0625 15:32:22.683898 17810 net.cpp:150] Setting up conv4_3
I0625 15:32:22.683917 17810 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:32:22.683918 17810 net.cpp:165] Memory required for data: 1336800108
I0625 15:32:22.683934 17810 layer_factory.hpp:77] Creating layer relu4_3
I0625 15:32:22.683941 17810 net.cpp:106] Creating Layer relu4_3
I0625 15:32:22.683956 17810 net.cpp:454] relu4_3 <- conv4_3
I0625 15:32:22.683961 17810 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0625 15:32:22.684096 17810 net.cpp:150] Setting up relu4_3
I0625 15:32:22.684103 17810 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:32:22.684103 17810 net.cpp:165] Memory required for data: 1356000108
I0625 15:32:22.684105 17810 layer_factory.hpp:77] Creating layer pool4
I0625 15:32:22.684120 17810 net.cpp:106] Creating Layer pool4
I0625 15:32:22.684123 17810 net.cpp:454] pool4 <- conv4_3
I0625 15:32:22.684128 17810 net.cpp:411] pool4 -> pool4
I0625 15:32:22.684159 17810 net.cpp:150] Setting up pool4
I0625 15:32:22.684171 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.684173 17810 net.cpp:165] Memory required for data: 1360903020
I0625 15:32:22.684175 17810 layer_factory.hpp:77] Creating layer conv5_1
I0625 15:32:22.684190 17810 net.cpp:106] Creating Layer conv5_1
I0625 15:32:22.684193 17810 net.cpp:454] conv5_1 <- pool4
I0625 15:32:22.684196 17810 net.cpp:411] conv5_1 -> conv5_1
I0625 15:32:22.689481 17810 net.cpp:150] Setting up conv5_1
I0625 15:32:22.689499 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.689502 17810 net.cpp:165] Memory required for data: 1365805932
I0625 15:32:22.689508 17810 layer_factory.hpp:77] Creating layer relu5_1
I0625 15:32:22.689528 17810 net.cpp:106] Creating Layer relu5_1
I0625 15:32:22.689533 17810 net.cpp:454] relu5_1 <- conv5_1
I0625 15:32:22.689538 17810 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0625 15:32:22.689682 17810 net.cpp:150] Setting up relu5_1
I0625 15:32:22.689688 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.689690 17810 net.cpp:165] Memory required for data: 1370708844
I0625 15:32:22.689692 17810 layer_factory.hpp:77] Creating layer conv5_2
I0625 15:32:22.689709 17810 net.cpp:106] Creating Layer conv5_2
I0625 15:32:22.689713 17810 net.cpp:454] conv5_2 <- conv5_1
I0625 15:32:22.689729 17810 net.cpp:411] conv5_2 -> conv5_2
I0625 15:32:22.694900 17810 net.cpp:150] Setting up conv5_2
I0625 15:32:22.694919 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.694921 17810 net.cpp:165] Memory required for data: 1375611756
I0625 15:32:22.694941 17810 layer_factory.hpp:77] Creating layer relu5_2
I0625 15:32:22.694949 17810 net.cpp:106] Creating Layer relu5_2
I0625 15:32:22.694953 17810 net.cpp:454] relu5_2 <- conv5_2
I0625 15:32:22.694959 17810 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0625 15:32:22.695128 17810 net.cpp:150] Setting up relu5_2
I0625 15:32:22.695137 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.695148 17810 net.cpp:165] Memory required for data: 1380514668
I0625 15:32:22.695152 17810 layer_factory.hpp:77] Creating layer conv5_3
I0625 15:32:22.695173 17810 net.cpp:106] Creating Layer conv5_3
I0625 15:32:22.695176 17810 net.cpp:454] conv5_3 <- conv5_2
I0625 15:32:22.695190 17810 net.cpp:411] conv5_3 -> conv5_3
I0625 15:32:22.699786 17810 net.cpp:150] Setting up conv5_3
I0625 15:32:22.699815 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.699818 17810 net.cpp:165] Memory required for data: 1385417580
I0625 15:32:22.699825 17810 layer_factory.hpp:77] Creating layer relu5_3
I0625 15:32:22.699842 17810 net.cpp:106] Creating Layer relu5_3
I0625 15:32:22.699846 17810 net.cpp:454] relu5_3 <- conv5_3
I0625 15:32:22.699851 17810 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0625 15:32:22.699985 17810 net.cpp:150] Setting up relu5_3
I0625 15:32:22.699991 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.700003 17810 net.cpp:165] Memory required for data: 1390320492
I0625 15:32:22.700006 17810 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0625 15:32:22.700008 17810 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0625 15:32:22.700011 17810 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0625 15:32:22.700014 17810 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0625 15:32:22.700018 17810 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0625 15:32:22.700031 17810 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0625 15:32:22.700074 17810 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0625 15:32:22.700078 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.700080 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.700093 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.700093 17810 net.cpp:165] Memory required for data: 1405029228
I0625 15:32:22.700095 17810 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0625 15:32:22.700112 17810 net.cpp:106] Creating Layer rpn_conv/3x3
I0625 15:32:22.700114 17810 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0625 15:32:22.700129 17810 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0625 15:32:22.762219 17810 net.cpp:150] Setting up rpn_conv/3x3
I0625 15:32:22.762254 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.762272 17810 net.cpp:165] Memory required for data: 1409932140
I0625 15:32:22.762284 17810 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0625 15:32:22.762297 17810 net.cpp:106] Creating Layer rpn_relu/3x3
I0625 15:32:22.762302 17810 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0625 15:32:22.762310 17810 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0625 15:32:22.762539 17810 net.cpp:150] Setting up rpn_relu/3x3
I0625 15:32:22.762559 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.762562 17810 net.cpp:165] Memory required for data: 1414835052
I0625 15:32:22.762565 17810 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0625 15:32:22.762580 17810 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0625 15:32:22.762585 17810 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0625 15:32:22.762591 17810 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0625 15:32:22.762599 17810 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0625 15:32:22.762650 17810 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0625 15:32:22.762656 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.762670 17810 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:32:22.762672 17810 net.cpp:165] Memory required for data: 1424640876
I0625 15:32:22.762676 17810 layer_factory.hpp:77] Creating layer rpn_cls_score
I0625 15:32:22.762687 17810 net.cpp:106] Creating Layer rpn_cls_score
I0625 15:32:22.762691 17810 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0625 15:32:22.762696 17810 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0625 15:32:22.765029 17810 net.cpp:150] Setting up rpn_cls_score
I0625 15:32:22.765040 17810 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:32:22.765044 17810 net.cpp:165] Memory required for data: 1424928156
I0625 15:32:22.765051 17810 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0625 15:32:22.765058 17810 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0625 15:32:22.765063 17810 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0625 15:32:22.765069 17810 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0625 15:32:22.765077 17810 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0625 15:32:22.765116 17810 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0625 15:32:22.765121 17810 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:32:22.765126 17810 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:32:22.765130 17810 net.cpp:165] Memory required for data: 1425502716
I0625 15:32:22.765132 17810 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0625 15:32:22.765142 17810 net.cpp:106] Creating Layer rpn_bbox_pred
I0625 15:32:22.765146 17810 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0625 15:32:22.765153 17810 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0625 15:32:22.767424 17810 net.cpp:150] Setting up rpn_bbox_pred
I0625 15:32:22.767446 17810 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:32:22.767449 17810 net.cpp:165] Memory required for data: 1426077276
I0625 15:32:22.767464 17810 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:32:22.767474 17810 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:32:22.767478 17810 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0625 15:32:22.767483 17810 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 15:32:22.767500 17810 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 15:32:22.767565 17810 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:32:22.767571 17810 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:32:22.767576 17810 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:32:22.767580 17810 net.cpp:165] Memory required for data: 1427226396
I0625 15:32:22.767583 17810 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0625 15:32:22.767591 17810 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0625 15:32:22.767596 17810 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0625 15:32:22.767602 17810 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0625 15:32:22.767626 17810 net.cpp:150] Setting up rpn_cls_score_reshape
I0625 15:32:22.767642 17810 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:32:22.767645 17810 net.cpp:165] Memory required for data: 1427513676
I0625 15:32:22.767648 17810 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:32:22.767663 17810 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:32:22.767668 17810 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0625 15:32:22.767673 17810 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 15:32:22.767678 17810 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 15:32:22.767710 17810 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:32:22.767716 17810 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:32:22.767720 17810 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:32:22.767724 17810 net.cpp:165] Memory required for data: 1428088236
I0625 15:32:22.767726 17810 layer_factory.hpp:77] Creating layer rpn-data
I0625 15:32:22.768882 17810 net.cpp:106] Creating Layer rpn-data
I0625 15:32:22.768891 17810 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0625 15:32:22.768898 17810 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0625 15:32:22.768903 17810 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0625 15:32:22.768908 17810 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0625 15:32:22.768914 17810 net.cpp:411] rpn-data -> rpn_labels
I0625 15:32:22.768923 17810 net.cpp:411] rpn-data -> rpn_bbox_targets
I0625 15:32:22.768929 17810 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0625 15:32:22.768935 17810 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0625 15:32:22.770232 17810 net.cpp:150] Setting up rpn-data
I0625 15:32:22.770243 17810 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0625 15:32:22.770248 17810 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:32:22.770253 17810 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:32:22.770272 17810 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:32:22.770277 17810 net.cpp:165] Memory required for data: 1429955556
I0625 15:32:22.770292 17810 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 15:32:22.770298 17810 net.cpp:106] Creating Layer rpn_loss_cls
I0625 15:32:22.770303 17810 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 15:32:22.770308 17810 net.cpp:454] rpn_loss_cls <- rpn_labels
I0625 15:32:22.770313 17810 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0625 15:32:22.770326 17810 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 15:32:22.771734 17810 net.cpp:150] Setting up rpn_loss_cls
I0625 15:32:22.771744 17810 net.cpp:157] Top shape: (1)
I0625 15:32:22.771759 17810 net.cpp:160]     with loss weight 1
I0625 15:32:22.771769 17810 net.cpp:165] Memory required for data: 1429955560
I0625 15:32:22.771771 17810 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0625 15:32:22.771782 17810 net.cpp:106] Creating Layer rpn_loss_bbox
I0625 15:32:22.771786 17810 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 15:32:22.771791 17810 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0625 15:32:22.771796 17810 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0625 15:32:22.771800 17810 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0625 15:32:22.771806 17810 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0625 15:32:22.773499 17810 net.cpp:150] Setting up rpn_loss_bbox
I0625 15:32:22.773509 17810 net.cpp:157] Top shape: (1)
I0625 15:32:22.773522 17810 net.cpp:160]     with loss weight 1
I0625 15:32:22.773530 17810 net.cpp:165] Memory required for data: 1429955564
I0625 15:32:22.773532 17810 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0625 15:32:22.773540 17810 net.cpp:106] Creating Layer rpn_cls_prob
I0625 15:32:22.773543 17810 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 15:32:22.773550 17810 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0625 15:32:22.773787 17810 net.cpp:150] Setting up rpn_cls_prob
I0625 15:32:22.773795 17810 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:32:22.773808 17810 net.cpp:165] Memory required for data: 1430242844
I0625 15:32:22.773811 17810 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0625 15:32:22.773818 17810 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0625 15:32:22.773831 17810 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0625 15:32:22.773838 17810 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0625 15:32:22.773862 17810 net.cpp:150] Setting up rpn_cls_prob_reshape
I0625 15:32:22.773867 17810 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:32:22.773870 17810 net.cpp:165] Memory required for data: 1430530124
I0625 15:32:22.773874 17810 layer_factory.hpp:77] Creating layer proposal
I0625 15:32:22.776624 17810 net.cpp:106] Creating Layer proposal
I0625 15:32:22.776635 17810 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0625 15:32:22.776641 17810 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 15:32:22.776646 17810 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0625 15:32:22.776652 17810 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0625 15:32:22.778139 17810 net.cpp:150] Setting up proposal
I0625 15:32:22.778149 17810 net.cpp:157] Top shape: 1 5 (5)
I0625 15:32:22.778152 17810 net.cpp:165] Memory required for data: 1430530144
I0625 15:32:22.778156 17810 layer_factory.hpp:77] Creating layer roi-data
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_target_layer.py", line 95
    roi_mask_kl = -1 * np.ones((roi_mask.shape[0], roi_mask.shape[1], cfg.TRAIN.CLASS_NUM + 1), dtype=np.float32)
    ^
IndentationError: unexpected indent
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 168, in train_net
    pretrained_model=pretrained_model)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 52, in __init__
    self.solver = caffe.SGDSolver(solver_prototxt)
SystemError: NULL result without error in PyObject_Call
