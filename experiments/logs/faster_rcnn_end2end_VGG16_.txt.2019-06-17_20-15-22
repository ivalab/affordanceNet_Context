+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-17_20-15-22
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-17_20-15-22
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0617 20:15:30.153882 24267 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0617 20:15:30.153913 24267 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0617 20:15:30.172073 24267 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "pool5_2_conv5_2"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5_2"
  top: "pool5_2_conv5_2_relu"
}
layer {
  name: "mask_deconv3_2"
  type: "Deconvolution"
  bottom: "pool5_2_conv5_2_relu"
  top: "mask_deconv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score_2"
  type: "Convolution"
  bottom: "mask_deconv3_2"
  top: "mask_score_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask_2"
  type: "SoftmaxWithLoss"
  bottom: "mask_score_2"
  bottom: "mask_targets"
  top: "loss_mask_2"
  loss_weight: 0.3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0617 20:15:30.172547 24267 layer_factory.hpp:77] Creating layer input-data
I0617 20:15:30.208647 24267 net.cpp:106] Creating Layer input-data
I0617 20:15:30.208672 24267 net.cpp:411] input-data -> data
I0617 20:15:30.208679 24267 net.cpp:411] input-data -> im_info
I0617 20:15:30.208684 24267 net.cpp:411] input-data -> gt_boxes
I0617 20:15:30.208688 24267 net.cpp:411] input-data -> seg_mask_inds
I0617 20:15:30.208703 24267 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0617 20:15:30.237895 24267 net.cpp:150] Setting up input-data
I0617 20:15:30.237910 24267 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0617 20:15:30.237913 24267 net.cpp:157] Top shape: 1 3 (3)
I0617 20:15:30.237916 24267 net.cpp:157] Top shape: 1 4 (4)
I0617 20:15:30.237918 24267 net.cpp:157] Top shape: 1 2 (2)
I0617 20:15:30.237921 24267 net.cpp:157] Top shape: 1 1 (1)
I0617 20:15:30.237926 24267 net.cpp:165] Memory required for data: 7200040
I0617 20:15:30.237934 24267 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0617 20:15:30.237948 24267 net.cpp:106] Creating Layer data_input-data_0_split
I0617 20:15:30.237953 24267 net.cpp:454] data_input-data_0_split <- data
I0617 20:15:30.237958 24267 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0617 20:15:30.237965 24267 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0617 20:15:30.237989 24267 net.cpp:150] Setting up data_input-data_0_split
I0617 20:15:30.237993 24267 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0617 20:15:30.237996 24267 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0617 20:15:30.237998 24267 net.cpp:165] Memory required for data: 21600040
I0617 20:15:30.238000 24267 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0617 20:15:30.238005 24267 net.cpp:106] Creating Layer im_info_input-data_1_split
I0617 20:15:30.238008 24267 net.cpp:454] im_info_input-data_1_split <- im_info
I0617 20:15:30.238010 24267 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0617 20:15:30.238014 24267 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0617 20:15:30.238019 24267 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0617 20:15:30.238044 24267 net.cpp:150] Setting up im_info_input-data_1_split
I0617 20:15:30.238049 24267 net.cpp:157] Top shape: 1 3 (3)
I0617 20:15:30.238052 24267 net.cpp:157] Top shape: 1 3 (3)
I0617 20:15:30.238055 24267 net.cpp:157] Top shape: 1 3 (3)
I0617 20:15:30.238057 24267 net.cpp:165] Memory required for data: 21600076
I0617 20:15:30.238059 24267 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0617 20:15:30.238062 24267 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0617 20:15:30.238065 24267 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0617 20:15:30.238068 24267 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0617 20:15:30.238072 24267 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0617 20:15:30.238090 24267 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0617 20:15:30.238093 24267 net.cpp:157] Top shape: 1 4 (4)
I0617 20:15:30.238095 24267 net.cpp:157] Top shape: 1 4 (4)
I0617 20:15:30.238098 24267 net.cpp:165] Memory required for data: 21600108
I0617 20:15:30.238101 24267 layer_factory.hpp:77] Creating layer conv1_1
I0617 20:15:30.238107 24267 net.cpp:106] Creating Layer conv1_1
I0617 20:15:30.238111 24267 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0617 20:15:30.238114 24267 net.cpp:411] conv1_1 -> conv1_1
I0617 20:15:30.548207 24267 net.cpp:150] Setting up conv1_1
I0617 20:15:30.548234 24267 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0617 20:15:30.548238 24267 net.cpp:165] Memory required for data: 175200108
I0617 20:15:30.548249 24267 layer_factory.hpp:77] Creating layer relu1_1
I0617 20:15:30.548269 24267 net.cpp:106] Creating Layer relu1_1
I0617 20:15:30.548274 24267 net.cpp:454] relu1_1 <- conv1_1
I0617 20:15:30.548277 24267 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0617 20:15:30.548409 24267 net.cpp:150] Setting up relu1_1
I0617 20:15:30.548415 24267 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0617 20:15:30.548427 24267 net.cpp:165] Memory required for data: 328800108
I0617 20:15:30.548430 24267 layer_factory.hpp:77] Creating layer conv1_2
I0617 20:15:30.548439 24267 net.cpp:106] Creating Layer conv1_2
I0617 20:15:30.548450 24267 net.cpp:454] conv1_2 <- conv1_1
I0617 20:15:30.548454 24267 net.cpp:411] conv1_2 -> conv1_2
I0617 20:15:30.550561 24267 net.cpp:150] Setting up conv1_2
I0617 20:15:30.550583 24267 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0617 20:15:30.550585 24267 net.cpp:165] Memory required for data: 482400108
I0617 20:15:30.550592 24267 layer_factory.hpp:77] Creating layer relu1_2
I0617 20:15:30.550598 24267 net.cpp:106] Creating Layer relu1_2
I0617 20:15:30.550602 24267 net.cpp:454] relu1_2 <- conv1_2
I0617 20:15:30.550622 24267 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0617 20:15:30.550782 24267 net.cpp:150] Setting up relu1_2
I0617 20:15:30.550801 24267 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0617 20:15:30.550804 24267 net.cpp:165] Memory required for data: 636000108
I0617 20:15:30.550807 24267 layer_factory.hpp:77] Creating layer pool1
I0617 20:15:30.550819 24267 net.cpp:106] Creating Layer pool1
I0617 20:15:30.550823 24267 net.cpp:454] pool1 <- conv1_2
I0617 20:15:30.550828 24267 net.cpp:411] pool1 -> pool1
I0617 20:15:30.550882 24267 net.cpp:150] Setting up pool1
I0617 20:15:30.550900 24267 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0617 20:15:30.550904 24267 net.cpp:165] Memory required for data: 674400108
I0617 20:15:30.550907 24267 layer_factory.hpp:77] Creating layer conv2_1
I0617 20:15:30.550917 24267 net.cpp:106] Creating Layer conv2_1
I0617 20:15:30.550921 24267 net.cpp:454] conv2_1 <- pool1
I0617 20:15:30.550936 24267 net.cpp:411] conv2_1 -> conv2_1
I0617 20:15:30.553050 24267 net.cpp:150] Setting up conv2_1
I0617 20:15:30.553058 24267 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0617 20:15:30.553071 24267 net.cpp:165] Memory required for data: 751200108
I0617 20:15:30.553078 24267 layer_factory.hpp:77] Creating layer relu2_1
I0617 20:15:30.553082 24267 net.cpp:106] Creating Layer relu2_1
I0617 20:15:30.553097 24267 net.cpp:454] relu2_1 <- conv2_1
I0617 20:15:30.553102 24267 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0617 20:15:30.553599 24267 net.cpp:150] Setting up relu2_1
I0617 20:15:30.553607 24267 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0617 20:15:30.553619 24267 net.cpp:165] Memory required for data: 828000108
I0617 20:15:30.553622 24267 layer_factory.hpp:77] Creating layer conv2_2
I0617 20:15:30.553628 24267 net.cpp:106] Creating Layer conv2_2
I0617 20:15:30.553632 24267 net.cpp:454] conv2_2 <- conv2_1
I0617 20:15:30.553645 24267 net.cpp:411] conv2_2 -> conv2_2
I0617 20:15:30.555035 24267 net.cpp:150] Setting up conv2_2
I0617 20:15:30.555044 24267 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0617 20:15:30.555047 24267 net.cpp:165] Memory required for data: 904800108
I0617 20:15:30.555052 24267 layer_factory.hpp:77] Creating layer relu2_2
I0617 20:15:30.555055 24267 net.cpp:106] Creating Layer relu2_2
I0617 20:15:30.555058 24267 net.cpp:454] relu2_2 <- conv2_2
I0617 20:15:30.555061 24267 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0617 20:15:30.555212 24267 net.cpp:150] Setting up relu2_2
I0617 20:15:30.555218 24267 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0617 20:15:30.555220 24267 net.cpp:165] Memory required for data: 981600108
I0617 20:15:30.555222 24267 layer_factory.hpp:77] Creating layer pool2
I0617 20:15:30.555228 24267 net.cpp:106] Creating Layer pool2
I0617 20:15:30.555230 24267 net.cpp:454] pool2 <- conv2_2
I0617 20:15:30.555233 24267 net.cpp:411] pool2 -> pool2
I0617 20:15:30.555290 24267 net.cpp:150] Setting up pool2
I0617 20:15:30.555294 24267 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0617 20:15:30.555296 24267 net.cpp:165] Memory required for data: 1000800108
I0617 20:15:30.555307 24267 layer_factory.hpp:77] Creating layer conv3_1
I0617 20:15:30.555313 24267 net.cpp:106] Creating Layer conv3_1
I0617 20:15:30.555325 24267 net.cpp:454] conv3_1 <- pool2
I0617 20:15:30.555330 24267 net.cpp:411] conv3_1 -> conv3_1
I0617 20:15:30.557121 24267 net.cpp:150] Setting up conv3_1
I0617 20:15:30.557128 24267 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:15:30.557130 24267 net.cpp:165] Memory required for data: 1039200108
I0617 20:15:30.557137 24267 layer_factory.hpp:77] Creating layer relu3_1
I0617 20:15:30.557142 24267 net.cpp:106] Creating Layer relu3_1
I0617 20:15:30.557144 24267 net.cpp:454] relu3_1 <- conv3_1
I0617 20:15:30.557157 24267 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0617 20:15:30.557276 24267 net.cpp:150] Setting up relu3_1
I0617 20:15:30.557281 24267 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:15:30.557283 24267 net.cpp:165] Memory required for data: 1077600108
I0617 20:15:30.557286 24267 layer_factory.hpp:77] Creating layer conv3_2
I0617 20:15:30.557292 24267 net.cpp:106] Creating Layer conv3_2
I0617 20:15:30.557294 24267 net.cpp:454] conv3_2 <- conv3_1
I0617 20:15:30.557310 24267 net.cpp:411] conv3_2 -> conv3_2
I0617 20:15:30.559491 24267 net.cpp:150] Setting up conv3_2
I0617 20:15:30.559511 24267 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:15:30.559515 24267 net.cpp:165] Memory required for data: 1116000108
I0617 20:15:30.559530 24267 layer_factory.hpp:77] Creating layer relu3_2
I0617 20:15:30.559537 24267 net.cpp:106] Creating Layer relu3_2
I0617 20:15:30.559541 24267 net.cpp:454] relu3_2 <- conv3_2
I0617 20:15:30.559545 24267 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0617 20:15:30.559702 24267 net.cpp:150] Setting up relu3_2
I0617 20:15:30.559708 24267 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:15:30.559721 24267 net.cpp:165] Memory required for data: 1154400108
I0617 20:15:30.559723 24267 layer_factory.hpp:77] Creating layer conv3_3
I0617 20:15:30.559728 24267 net.cpp:106] Creating Layer conv3_3
I0617 20:15:30.559731 24267 net.cpp:454] conv3_3 <- conv3_2
I0617 20:15:30.559746 24267 net.cpp:411] conv3_3 -> conv3_3
I0617 20:15:30.561748 24267 net.cpp:150] Setting up conv3_3
I0617 20:15:30.561756 24267 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:15:30.561769 24267 net.cpp:165] Memory required for data: 1192800108
I0617 20:15:30.561774 24267 layer_factory.hpp:77] Creating layer relu3_3
I0617 20:15:30.561779 24267 net.cpp:106] Creating Layer relu3_3
I0617 20:15:30.561781 24267 net.cpp:454] relu3_3 <- conv3_3
I0617 20:15:30.561785 24267 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0617 20:15:30.561908 24267 net.cpp:150] Setting up relu3_3
I0617 20:15:30.561924 24267 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:15:30.561926 24267 net.cpp:165] Memory required for data: 1231200108
I0617 20:15:30.561929 24267 layer_factory.hpp:77] Creating layer pool3
I0617 20:15:30.561933 24267 net.cpp:106] Creating Layer pool3
I0617 20:15:30.561936 24267 net.cpp:454] pool3 <- conv3_3
I0617 20:15:30.561939 24267 net.cpp:411] pool3 -> pool3
I0617 20:15:30.561977 24267 net.cpp:150] Setting up pool3
I0617 20:15:30.561981 24267 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0617 20:15:30.561993 24267 net.cpp:165] Memory required for data: 1240800108
I0617 20:15:30.561996 24267 layer_factory.hpp:77] Creating layer conv4_1
I0617 20:15:30.562002 24267 net.cpp:106] Creating Layer conv4_1
I0617 20:15:30.562005 24267 net.cpp:454] conv4_1 <- pool3
I0617 20:15:30.562009 24267 net.cpp:411] conv4_1 -> conv4_1
I0617 20:15:30.565889 24267 net.cpp:150] Setting up conv4_1
I0617 20:15:30.565917 24267 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:15:30.565919 24267 net.cpp:165] Memory required for data: 1260000108
I0617 20:15:30.565927 24267 layer_factory.hpp:77] Creating layer relu4_1
I0617 20:15:30.565935 24267 net.cpp:106] Creating Layer relu4_1
I0617 20:15:30.565940 24267 net.cpp:454] relu4_1 <- conv4_1
I0617 20:15:30.565944 24267 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0617 20:15:30.566068 24267 net.cpp:150] Setting up relu4_1
I0617 20:15:30.566074 24267 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:15:30.566087 24267 net.cpp:165] Memory required for data: 1279200108
I0617 20:15:30.566090 24267 layer_factory.hpp:77] Creating layer conv4_2
I0617 20:15:30.566102 24267 net.cpp:106] Creating Layer conv4_2
I0617 20:15:30.566104 24267 net.cpp:454] conv4_2 <- conv4_1
I0617 20:15:30.566109 24267 net.cpp:411] conv4_2 -> conv4_2
I0617 20:15:30.571992 24267 net.cpp:150] Setting up conv4_2
I0617 20:15:30.572010 24267 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:15:30.572013 24267 net.cpp:165] Memory required for data: 1298400108
I0617 20:15:30.572027 24267 layer_factory.hpp:77] Creating layer relu4_2
I0617 20:15:30.572037 24267 net.cpp:106] Creating Layer relu4_2
I0617 20:15:30.572052 24267 net.cpp:454] relu4_2 <- conv4_2
I0617 20:15:30.572058 24267 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0617 20:15:30.574338 24267 net.cpp:150] Setting up relu4_2
I0617 20:15:30.574363 24267 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:15:30.574368 24267 net.cpp:165] Memory required for data: 1317600108
I0617 20:15:30.574373 24267 layer_factory.hpp:77] Creating layer conv4_3
I0617 20:15:30.574385 24267 net.cpp:106] Creating Layer conv4_3
I0617 20:15:30.574390 24267 net.cpp:454] conv4_3 <- conv4_2
I0617 20:15:30.574398 24267 net.cpp:411] conv4_3 -> conv4_3
I0617 20:15:30.581351 24267 net.cpp:150] Setting up conv4_3
I0617 20:15:30.581380 24267 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:15:30.581383 24267 net.cpp:165] Memory required for data: 1336800108
I0617 20:15:30.581391 24267 layer_factory.hpp:77] Creating layer relu4_3
I0617 20:15:30.581434 24267 net.cpp:106] Creating Layer relu4_3
I0617 20:15:30.581442 24267 net.cpp:454] relu4_3 <- conv4_3
I0617 20:15:30.581450 24267 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0617 20:15:30.581591 24267 net.cpp:150] Setting up relu4_3
I0617 20:15:30.581599 24267 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:15:30.581612 24267 net.cpp:165] Memory required for data: 1356000108
I0617 20:15:30.581615 24267 layer_factory.hpp:77] Creating layer pool4
I0617 20:15:30.581622 24267 net.cpp:106] Creating Layer pool4
I0617 20:15:30.581625 24267 net.cpp:454] pool4 <- conv4_3
I0617 20:15:30.581640 24267 net.cpp:411] pool4 -> pool4
I0617 20:15:30.581684 24267 net.cpp:150] Setting up pool4
I0617 20:15:30.581689 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.581691 24267 net.cpp:165] Memory required for data: 1360903020
I0617 20:15:30.581703 24267 layer_factory.hpp:77] Creating layer conv5_1
I0617 20:15:30.581720 24267 net.cpp:106] Creating Layer conv5_1
I0617 20:15:30.581723 24267 net.cpp:454] conv5_1 <- pool4
I0617 20:15:30.581728 24267 net.cpp:411] conv5_1 -> conv5_1
I0617 20:15:30.586326 24267 net.cpp:150] Setting up conv5_1
I0617 20:15:30.586344 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.586346 24267 net.cpp:165] Memory required for data: 1365805932
I0617 20:15:30.586354 24267 layer_factory.hpp:77] Creating layer relu5_1
I0617 20:15:30.586370 24267 net.cpp:106] Creating Layer relu5_1
I0617 20:15:30.586375 24267 net.cpp:454] relu5_1 <- conv5_1
I0617 20:15:30.586381 24267 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0617 20:15:30.586514 24267 net.cpp:150] Setting up relu5_1
I0617 20:15:30.586520 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.586522 24267 net.cpp:165] Memory required for data: 1370708844
I0617 20:15:30.586525 24267 layer_factory.hpp:77] Creating layer conv5_2
I0617 20:15:30.586542 24267 net.cpp:106] Creating Layer conv5_2
I0617 20:15:30.586546 24267 net.cpp:454] conv5_2 <- conv5_1
I0617 20:15:30.586551 24267 net.cpp:411] conv5_2 -> conv5_2
I0617 20:15:30.591257 24267 net.cpp:150] Setting up conv5_2
I0617 20:15:30.591275 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.591279 24267 net.cpp:165] Memory required for data: 1375611756
I0617 20:15:30.591285 24267 layer_factory.hpp:77] Creating layer relu5_2
I0617 20:15:30.591293 24267 net.cpp:106] Creating Layer relu5_2
I0617 20:15:30.591300 24267 net.cpp:454] relu5_2 <- conv5_2
I0617 20:15:30.591317 24267 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0617 20:15:30.591454 24267 net.cpp:150] Setting up relu5_2
I0617 20:15:30.591461 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.591464 24267 net.cpp:165] Memory required for data: 1380514668
I0617 20:15:30.591465 24267 layer_factory.hpp:77] Creating layer conv5_3
I0617 20:15:30.591478 24267 net.cpp:106] Creating Layer conv5_3
I0617 20:15:30.591482 24267 net.cpp:454] conv5_3 <- conv5_2
I0617 20:15:30.591487 24267 net.cpp:411] conv5_3 -> conv5_3
I0617 20:15:30.595830 24267 net.cpp:150] Setting up conv5_3
I0617 20:15:30.595849 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.595851 24267 net.cpp:165] Memory required for data: 1385417580
I0617 20:15:30.595858 24267 layer_factory.hpp:77] Creating layer relu5_3
I0617 20:15:30.595866 24267 net.cpp:106] Creating Layer relu5_3
I0617 20:15:30.595871 24267 net.cpp:454] relu5_3 <- conv5_3
I0617 20:15:30.595890 24267 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0617 20:15:30.596019 24267 net.cpp:150] Setting up relu5_3
I0617 20:15:30.596026 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.596029 24267 net.cpp:165] Memory required for data: 1390320492
I0617 20:15:30.596030 24267 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0617 20:15:30.596035 24267 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0617 20:15:30.596038 24267 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0617 20:15:30.596042 24267 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0617 20:15:30.596060 24267 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0617 20:15:30.596065 24267 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0617 20:15:30.596114 24267 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0617 20:15:30.596119 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.596122 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.596124 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.596125 24267 net.cpp:165] Memory required for data: 1405029228
I0617 20:15:30.596127 24267 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0617 20:15:30.596137 24267 net.cpp:106] Creating Layer rpn_conv/3x3
I0617 20:15:30.596155 24267 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0617 20:15:30.596160 24267 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0617 20:15:30.646629 24267 net.cpp:150] Setting up rpn_conv/3x3
I0617 20:15:30.646648 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.646651 24267 net.cpp:165] Memory required for data: 1409932140
I0617 20:15:30.646658 24267 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0617 20:15:30.646667 24267 net.cpp:106] Creating Layer rpn_relu/3x3
I0617 20:15:30.646672 24267 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0617 20:15:30.646688 24267 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0617 20:15:30.646826 24267 net.cpp:150] Setting up rpn_relu/3x3
I0617 20:15:30.646832 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.646836 24267 net.cpp:165] Memory required for data: 1414835052
I0617 20:15:30.646837 24267 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0617 20:15:30.646842 24267 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0617 20:15:30.646844 24267 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0617 20:15:30.646848 24267 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0617 20:15:30.646854 24267 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0617 20:15:30.646906 24267 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0617 20:15:30.646911 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.646925 24267 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:15:30.646927 24267 net.cpp:165] Memory required for data: 1424640876
I0617 20:15:30.646929 24267 layer_factory.hpp:77] Creating layer rpn_cls_score
I0617 20:15:30.646950 24267 net.cpp:106] Creating Layer rpn_cls_score
I0617 20:15:30.646963 24267 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0617 20:15:30.646968 24267 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0617 20:15:30.648599 24267 net.cpp:150] Setting up rpn_cls_score
I0617 20:15:30.648608 24267 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0617 20:15:30.648612 24267 net.cpp:165] Memory required for data: 1424928156
I0617 20:15:30.648615 24267 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0617 20:15:30.648619 24267 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0617 20:15:30.648622 24267 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0617 20:15:30.648627 24267 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0617 20:15:30.648644 24267 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0617 20:15:30.648684 24267 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0617 20:15:30.648689 24267 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0617 20:15:30.648691 24267 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0617 20:15:30.648703 24267 net.cpp:165] Memory required for data: 1425502716
I0617 20:15:30.648705 24267 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0617 20:15:30.648713 24267 net.cpp:106] Creating Layer rpn_bbox_pred
I0617 20:15:30.648715 24267 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0617 20:15:30.648720 24267 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0617 20:15:30.650211 24267 net.cpp:150] Setting up rpn_bbox_pred
I0617 20:15:30.650220 24267 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:15:30.650223 24267 net.cpp:165] Memory required for data: 1426077276
I0617 20:15:30.650228 24267 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0617 20:15:30.650233 24267 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0617 20:15:30.650235 24267 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0617 20:15:30.650249 24267 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0617 20:15:30.650254 24267 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0617 20:15:30.650290 24267 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0617 20:15:30.650295 24267 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:15:30.650307 24267 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:15:30.650310 24267 net.cpp:165] Memory required for data: 1427226396
I0617 20:15:30.650311 24267 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0617 20:15:30.650321 24267 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0617 20:15:30.650324 24267 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0617 20:15:30.650328 24267 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0617 20:15:30.650358 24267 net.cpp:150] Setting up rpn_cls_score_reshape
I0617 20:15:30.650362 24267 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0617 20:15:30.650374 24267 net.cpp:165] Memory required for data: 1427513676
I0617 20:15:30.650377 24267 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0617 20:15:30.650380 24267 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0617 20:15:30.650383 24267 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0617 20:15:30.650388 24267 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0617 20:15:30.650403 24267 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0617 20:15:30.650429 24267 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0617 20:15:30.650432 24267 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0617 20:15:30.650435 24267 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0617 20:15:30.650437 24267 net.cpp:165] Memory required for data: 1428088236
I0617 20:15:30.650439 24267 layer_factory.hpp:77] Creating layer rpn-data
I0617 20:15:30.651425 24267 net.cpp:106] Creating Layer rpn-data
I0617 20:15:30.651434 24267 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0617 20:15:30.651441 24267 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0617 20:15:30.651446 24267 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0617 20:15:30.651449 24267 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0617 20:15:30.651454 24267 net.cpp:411] rpn-data -> rpn_labels
I0617 20:15:30.651460 24267 net.cpp:411] rpn-data -> rpn_bbox_targets
I0617 20:15:30.651465 24267 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0617 20:15:30.651471 24267 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0617 20:15:30.652348 24267 net.cpp:150] Setting up rpn-data
I0617 20:15:30.652356 24267 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0617 20:15:30.652361 24267 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:15:30.652364 24267 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:15:30.652367 24267 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:15:30.652370 24267 net.cpp:165] Memory required for data: 1429955556
I0617 20:15:30.652374 24267 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0617 20:15:30.652381 24267 net.cpp:106] Creating Layer rpn_loss_cls
I0617 20:15:30.652386 24267 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0617 20:15:30.652391 24267 net.cpp:454] rpn_loss_cls <- rpn_labels
I0617 20:15:30.652397 24267 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0617 20:15:30.652403 24267 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0617 20:15:30.653066 24267 net.cpp:150] Setting up rpn_loss_cls
I0617 20:15:30.653075 24267 net.cpp:157] Top shape: (1)
I0617 20:15:30.653079 24267 net.cpp:160]     with loss weight 1
I0617 20:15:30.653087 24267 net.cpp:165] Memory required for data: 1429955560
I0617 20:15:30.653090 24267 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0617 20:15:30.653098 24267 net.cpp:106] Creating Layer rpn_loss_bbox
I0617 20:15:30.653101 24267 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0617 20:15:30.653105 24267 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0617 20:15:30.653110 24267 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0617 20:15:30.653112 24267 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0617 20:15:30.653118 24267 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0617 20:15:30.654197 24267 net.cpp:150] Setting up rpn_loss_bbox
I0617 20:15:30.654206 24267 net.cpp:157] Top shape: (1)
I0617 20:15:30.654217 24267 net.cpp:160]     with loss weight 1
I0617 20:15:30.654222 24267 net.cpp:165] Memory required for data: 1429955564
I0617 20:15:30.654224 24267 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0617 20:15:30.654228 24267 net.cpp:106] Creating Layer rpn_cls_prob
I0617 20:15:30.654233 24267 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0617 20:15:30.654238 24267 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0617 20:15:30.654393 24267 net.cpp:150] Setting up rpn_cls_prob
I0617 20:15:30.654399 24267 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0617 20:15:30.654402 24267 net.cpp:165] Memory required for data: 1430242844
I0617 20:15:30.654405 24267 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0617 20:15:30.654410 24267 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0617 20:15:30.654414 24267 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0617 20:15:30.654418 24267 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0617 20:15:30.654445 24267 net.cpp:150] Setting up rpn_cls_prob_reshape
I0617 20:15:30.654449 24267 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0617 20:15:30.654451 24267 net.cpp:165] Memory required for data: 1430530124
I0617 20:15:30.654453 24267 layer_factory.hpp:77] Creating layer proposal
I0617 20:15:30.654902 24267 net.cpp:106] Creating Layer proposal
I0617 20:15:30.654911 24267 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0617 20:15:30.654916 24267 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0617 20:15:30.654919 24267 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0617 20:15:30.654923 24267 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0617 20:15:30.655661 24267 net.cpp:150] Setting up proposal
I0617 20:15:30.655669 24267 net.cpp:157] Top shape: 1 5 (5)
I0617 20:15:30.655673 24267 net.cpp:165] Memory required for data: 1430530144
I0617 20:15:30.655674 24267 layer_factory.hpp:77] Creating layer roi-data
I0617 20:15:30.655876 24267 net.cpp:106] Creating Layer roi-data
I0617 20:15:30.655884 24267 net.cpp:454] roi-data <- rpn_rois
I0617 20:15:30.655886 24267 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0617 20:15:30.655889 24267 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0617 20:15:30.655892 24267 net.cpp:454] roi-data <- seg_mask_inds
I0617 20:15:30.655894 24267 net.cpp:454] roi-data <- flipped
I0617 20:15:30.655910 24267 net.cpp:411] roi-data -> rois
I0617 20:15:30.655915 24267 net.cpp:411] roi-data -> labels
I0617 20:15:30.655920 24267 net.cpp:411] roi-data -> bbox_targets
I0617 20:15:30.655925 24267 net.cpp:411] roi-data -> bbox_inside_weights
I0617 20:15:30.655930 24267 net.cpp:411] roi-data -> bbox_outside_weights
I0617 20:15:30.655934 24267 net.cpp:411] roi-data -> mask_targets
I0617 20:15:30.655938 24267 net.cpp:411] roi-data -> rois_pos
I0617 20:15:30.655952 24267 net.cpp:411] roi-data -> attrArray
I0617 20:15:30.655956 24267 net.cpp:411] roi-data -> attrArrayInd
I0617 20:15:30.655973 24267 net.cpp:411] roi-data -> attrArrayShift
I0617 20:15:30.656246 24267 net.cpp:150] Setting up roi-data
I0617 20:15:30.656255 24267 net.cpp:157] Top shape: 1 5 (5)
I0617 20:15:30.656257 24267 net.cpp:157] Top shape: 1 1 (1)
I0617 20:15:30.656260 24267 net.cpp:157] Top shape: 1 8 (8)
I0617 20:15:30.656261 24267 net.cpp:157] Top shape: 1 8 (8)
I0617 20:15:30.656265 24267 net.cpp:157] Top shape: 1 8 (8)
I0617 20:15:30.656266 24267 net.cpp:157] Top shape: 1 244 244 (59536)
I0617 20:15:30.656280 24267 net.cpp:157] Top shape: 1 5 (5)
I0617 20:15:30.656283 24267 net.cpp:157] Top shape: 1 7 (7)
I0617 20:15:30.656286 24267 net.cpp:157] Top shape: 1 7 (7)
I0617 20:15:30.656288 24267 net.cpp:157] Top shape: 1 7 (7)
I0617 20:15:30.656291 24267 net.cpp:165] Memory required for data: 1430768512
I0617 20:15:30.656294 24267 layer_factory.hpp:77] Creating layer mask_targets_roi-data_5_split
I0617 20:15:30.656298 24267 net.cpp:106] Creating Layer mask_targets_roi-data_5_split
I0617 20:15:30.656303 24267 net.cpp:454] mask_targets_roi-data_5_split <- mask_targets
I0617 20:15:30.656307 24267 net.cpp:411] mask_targets_roi-data_5_split -> mask_targets_roi-data_5_split_0
I0617 20:15:30.656312 24267 net.cpp:411] mask_targets_roi-data_5_split -> mask_targets_roi-data_5_split_1
I0617 20:15:30.656342 24267 net.cpp:150] Setting up mask_targets_roi-data_5_split
I0617 20:15:30.656347 24267 net.cpp:157] Top shape: 1 244 244 (59536)
I0617 20:15:30.656349 24267 net.cpp:157] Top shape: 1 244 244 (59536)
I0617 20:15:30.656352 24267 net.cpp:165] Memory required for data: 1431244800
I0617 20:15:30.656353 24267 layer_factory.hpp:77] Creating layer roi_pool5
I0617 20:15:30.656359 24267 net.cpp:106] Creating Layer roi_pool5
I0617 20:15:30.656363 24267 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0617 20:15:30.656365 24267 net.cpp:454] roi_pool5 <- rois
I0617 20:15:30.656369 24267 net.cpp:411] roi_pool5 -> pool5
I0617 20:15:30.656376 24267 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0617 20:15:30.656441 24267 net.cpp:150] Setting up roi_pool5
I0617 20:15:30.656445 24267 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:15:30.656448 24267 net.cpp:165] Memory required for data: 1431345152
I0617 20:15:30.656451 24267 layer_factory.hpp:77] Creating layer fc6
I0617 20:15:30.656455 24267 net.cpp:106] Creating Layer fc6
I0617 20:15:30.656458 24267 net.cpp:454] fc6 <- pool5
I0617 20:15:30.656462 24267 net.cpp:411] fc6 -> fc6
I0617 20:15:30.796643 24267 net.cpp:150] Setting up fc6
I0617 20:15:30.796675 24267 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:15:30.796679 24267 net.cpp:165] Memory required for data: 1431361536
I0617 20:15:30.796694 24267 layer_factory.hpp:77] Creating layer relu6
I0617 20:15:30.796718 24267 net.cpp:106] Creating Layer relu6
I0617 20:15:30.796726 24267 net.cpp:454] relu6 <- fc6
I0617 20:15:30.796741 24267 net.cpp:397] relu6 -> fc6 (in-place)
I0617 20:15:30.796990 24267 net.cpp:150] Setting up relu6
I0617 20:15:30.796999 24267 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:15:30.797011 24267 net.cpp:165] Memory required for data: 1431377920
I0617 20:15:30.797014 24267 layer_factory.hpp:77] Creating layer fc7
I0617 20:15:30.797022 24267 net.cpp:106] Creating Layer fc7
I0617 20:15:30.797035 24267 net.cpp:454] fc7 <- fc6
I0617 20:15:30.797041 24267 net.cpp:411] fc7 -> fc7
I0617 20:15:30.820938 24267 net.cpp:150] Setting up fc7
I0617 20:15:30.820960 24267 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:15:30.820964 24267 net.cpp:165] Memory required for data: 1431394304
I0617 20:15:30.820972 24267 layer_factory.hpp:77] Creating layer relu7
I0617 20:15:30.820981 24267 net.cpp:106] Creating Layer relu7
I0617 20:15:30.820986 24267 net.cpp:454] relu7 <- fc7
I0617 20:15:30.821000 24267 net.cpp:397] relu7 -> fc7 (in-place)
I0617 20:15:30.821193 24267 net.cpp:150] Setting up relu7
I0617 20:15:30.821200 24267 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:15:30.821202 24267 net.cpp:165] Memory required for data: 1431410688
I0617 20:15:30.821205 24267 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0617 20:15:30.821210 24267 net.cpp:106] Creating Layer fc7_relu7_0_split
I0617 20:15:30.821213 24267 net.cpp:454] fc7_relu7_0_split <- fc7
I0617 20:15:30.821218 24267 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0617 20:15:30.821234 24267 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0617 20:15:30.821239 24267 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0617 20:15:30.821287 24267 net.cpp:150] Setting up fc7_relu7_0_split
I0617 20:15:30.821293 24267 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:15:30.821295 24267 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:15:30.821300 24267 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:15:30.821301 24267 net.cpp:165] Memory required for data: 1431459840
I0617 20:15:30.821303 24267 layer_factory.hpp:77] Creating layer attr_score
I0617 20:15:30.821321 24267 net.cpp:106] Creating Layer attr_score
I0617 20:15:30.821326 24267 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0617 20:15:30.821331 24267 net.cpp:411] attr_score -> attr_score
I0617 20:15:30.822036 24267 net.cpp:150] Setting up attr_score
I0617 20:15:30.822042 24267 net.cpp:157] Top shape: 1 7 (7)
I0617 20:15:30.822044 24267 net.cpp:165] Memory required for data: 1431459868
I0617 20:15:30.822058 24267 layer_factory.hpp:77] Creating layer attr_score_pos
I0617 20:15:30.822067 24267 net.cpp:106] Creating Layer attr_score_pos
I0617 20:15:30.822080 24267 net.cpp:454] attr_score_pos <- attr_score
I0617 20:15:30.822083 24267 net.cpp:454] attr_score_pos <- attrArrayInd
I0617 20:15:30.822088 24267 net.cpp:411] attr_score_pos -> attr_score_pos
I0617 20:15:30.822113 24267 net.cpp:150] Setting up attr_score_pos
I0617 20:15:30.822118 24267 net.cpp:157] Top shape: 1 7 (7)
I0617 20:15:30.822119 24267 net.cpp:165] Memory required for data: 1431459896
I0617 20:15:30.822121 24267 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0617 20:15:30.822124 24267 net.cpp:106] Creating Layer attr_score_pos_shift
I0617 20:15:30.822127 24267 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0617 20:15:30.822141 24267 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0617 20:15:30.822145 24267 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0617 20:15:30.822161 24267 net.cpp:150] Setting up attr_score_pos_shift
I0617 20:15:30.822166 24267 net.cpp:157] Top shape: 1 7 (7)
I0617 20:15:30.822177 24267 net.cpp:165] Memory required for data: 1431459924
I0617 20:15:30.822180 24267 layer_factory.hpp:77] Creating layer cls_score
I0617 20:15:30.822185 24267 net.cpp:106] Creating Layer cls_score
I0617 20:15:30.822198 24267 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0617 20:15:30.822203 24267 net.cpp:411] cls_score -> cls_score
I0617 20:15:30.822466 24267 net.cpp:150] Setting up cls_score
I0617 20:15:30.822470 24267 net.cpp:157] Top shape: 1 2 (2)
I0617 20:15:30.822472 24267 net.cpp:165] Memory required for data: 1431459932
I0617 20:15:30.822486 24267 layer_factory.hpp:77] Creating layer bbox_pred
I0617 20:15:30.822492 24267 net.cpp:106] Creating Layer bbox_pred
I0617 20:15:30.822496 24267 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0617 20:15:30.822511 24267 net.cpp:411] bbox_pred -> bbox_pred
I0617 20:15:30.823240 24267 net.cpp:150] Setting up bbox_pred
I0617 20:15:30.823246 24267 net.cpp:157] Top shape: 1 8 (8)
I0617 20:15:30.823247 24267 net.cpp:165] Memory required for data: 1431459964
I0617 20:15:30.823251 24267 layer_factory.hpp:77] Creating layer loss_attribute
I0617 20:15:30.823268 24267 net.cpp:106] Creating Layer loss_attribute
I0617 20:15:30.823273 24267 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0617 20:15:30.823276 24267 net.cpp:454] loss_attribute <- attrArray
I0617 20:15:30.823282 24267 net.cpp:411] loss_attribute -> loss_attribute
I0617 20:15:30.823326 24267 net.cpp:150] Setting up loss_attribute
I0617 20:15:30.823330 24267 net.cpp:157] Top shape: (1)
I0617 20:15:30.823333 24267 net.cpp:160]     with loss weight 1
I0617 20:15:30.823352 24267 net.cpp:165] Memory required for data: 1431459968
I0617 20:15:30.823354 24267 layer_factory.hpp:77] Creating layer loss_cls
I0617 20:15:30.823365 24267 net.cpp:106] Creating Layer loss_cls
I0617 20:15:30.823369 24267 net.cpp:454] loss_cls <- cls_score
I0617 20:15:30.823381 24267 net.cpp:454] loss_cls <- labels
I0617 20:15:30.823385 24267 net.cpp:411] loss_cls -> loss_cls
I0617 20:15:30.823400 24267 layer_factory.hpp:77] Creating layer loss_cls
I0617 20:15:30.824148 24267 net.cpp:150] Setting up loss_cls
I0617 20:15:30.824157 24267 net.cpp:157] Top shape: (1)
I0617 20:15:30.824159 24267 net.cpp:160]     with loss weight 3
I0617 20:15:30.824164 24267 net.cpp:165] Memory required for data: 1431459972
I0617 20:15:30.824177 24267 layer_factory.hpp:77] Creating layer loss_bbox
I0617 20:15:30.824184 24267 net.cpp:106] Creating Layer loss_bbox
I0617 20:15:30.824187 24267 net.cpp:454] loss_bbox <- bbox_pred
I0617 20:15:30.824192 24267 net.cpp:454] loss_bbox <- bbox_targets
I0617 20:15:30.824194 24267 net.cpp:454] loss_bbox <- bbox_inside_weights
I0617 20:15:30.824198 24267 net.cpp:454] loss_bbox <- bbox_outside_weights
I0617 20:15:30.824203 24267 net.cpp:411] loss_bbox -> loss_bbox
I0617 20:15:30.824273 24267 net.cpp:150] Setting up loss_bbox
I0617 20:15:30.824278 24267 net.cpp:157] Top shape: (1)
I0617 20:15:30.824281 24267 net.cpp:160]     with loss weight 2
I0617 20:15:30.824285 24267 net.cpp:165] Memory required for data: 1431459976
I0617 20:15:30.824287 24267 layer_factory.hpp:77] Creating layer roi_pool5_2
I0617 20:15:30.824293 24267 net.cpp:106] Creating Layer roi_pool5_2
I0617 20:15:30.824299 24267 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0617 20:15:30.824306 24267 net.cpp:454] roi_pool5_2 <- rois_pos
I0617 20:15:30.824312 24267 net.cpp:411] roi_pool5_2 -> pool5_2
I0617 20:15:30.824318 24267 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0617 20:15:30.824414 24267 net.cpp:150] Setting up roi_pool5_2
I0617 20:15:30.824421 24267 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:15:30.824425 24267 net.cpp:165] Memory required for data: 1431560328
I0617 20:15:30.824437 24267 layer_factory.hpp:77] Creating layer pool5_2_conv
I0617 20:15:30.824451 24267 net.cpp:106] Creating Layer pool5_2_conv
I0617 20:15:30.824456 24267 net.cpp:454] pool5_2_conv <- pool5_2
I0617 20:15:30.824462 24267 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0617 20:15:30.831347 24267 net.cpp:150] Setting up pool5_2_conv
I0617 20:15:30.831359 24267 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:15:30.831362 24267 net.cpp:165] Memory required for data: 1431660680
I0617 20:15:30.831372 24267 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0617 20:15:30.831379 24267 net.cpp:106] Creating Layer pool5_2_conv_relu
I0617 20:15:30.831385 24267 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0617 20:15:30.831391 24267 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0617 20:15:30.831529 24267 net.cpp:150] Setting up pool5_2_conv_relu
I0617 20:15:30.831537 24267 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:15:30.831540 24267 net.cpp:165] Memory required for data: 1431761032
I0617 20:15:30.831544 24267 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0617 20:15:30.831555 24267 net.cpp:106] Creating Layer pool5_2_conv2
I0617 20:15:30.831560 24267 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0617 20:15:30.831568 24267 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0617 20:15:30.882148 24267 net.cpp:150] Setting up pool5_2_conv2
I0617 20:15:30.882166 24267 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:15:30.882170 24267 net.cpp:165] Memory required for data: 1431861384
I0617 20:15:30.882179 24267 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0617 20:15:30.882189 24267 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0617 20:15:30.882197 24267 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0617 20:15:30.882206 24267 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0617 20:15:30.882356 24267 net.cpp:150] Setting up pool5_2_conv2_relu
I0617 20:15:30.882364 24267 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:15:30.882367 24267 net.cpp:165] Memory required for data: 1431961736
I0617 20:15:30.882371 24267 layer_factory.hpp:77] Creating layer mask_deconv1
I0617 20:15:30.882381 24267 net.cpp:106] Creating Layer mask_deconv1
I0617 20:15:30.882387 24267 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0617 20:15:30.882396 24267 net.cpp:411] mask_deconv1 -> mask_deconv1
I0617 20:15:30.883169 24267 net.cpp:150] Setting up mask_deconv1
I0617 20:15:30.883177 24267 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0617 20:15:30.883179 24267 net.cpp:165] Memory required for data: 1432883336
I0617 20:15:30.883186 24267 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0617 20:15:30.883194 24267 net.cpp:106] Creating Layer pool5_2_conv3
I0617 20:15:30.883200 24267 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0617 20:15:30.883208 24267 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0617 20:15:30.909767 24267 net.cpp:150] Setting up pool5_2_conv3
I0617 20:15:30.909788 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.909802 24267 net.cpp:165] Memory required for data: 1434726536
I0617 20:15:30.909813 24267 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0617 20:15:30.909823 24267 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0617 20:15:30.909831 24267 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0617 20:15:30.909838 24267 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0617 20:15:30.910060 24267 net.cpp:150] Setting up pool5_2_conv3_relu
I0617 20:15:30.910082 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.910085 24267 net.cpp:165] Memory required for data: 1436569736
I0617 20:15:30.910099 24267 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0617 20:15:30.910109 24267 net.cpp:106] Creating Layer pool5_2_conv4
I0617 20:15:30.910112 24267 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0617 20:15:30.910117 24267 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0617 20:15:30.960872 24267 net.cpp:150] Setting up pool5_2_conv4
I0617 20:15:30.960891 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.960893 24267 net.cpp:165] Memory required for data: 1438412936
I0617 20:15:30.960901 24267 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0617 20:15:30.960908 24267 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0617 20:15:30.960923 24267 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0617 20:15:30.960929 24267 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0617 20:15:30.961091 24267 net.cpp:150] Setting up pool5_2_conv4_relu
I0617 20:15:30.961098 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.961100 24267 net.cpp:165] Memory required for data: 1440256136
I0617 20:15:30.961102 24267 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0617 20:15:30.961107 24267 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0617 20:15:30.961110 24267 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0617 20:15:30.961114 24267 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0617 20:15:30.961129 24267 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0617 20:15:30.961134 24267 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0617 20:15:30.961138 24267 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0617 20:15:30.961181 24267 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0617 20:15:30.961194 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.961197 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.961200 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.961203 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.961215 24267 net.cpp:165] Memory required for data: 1447628936
I0617 20:15:30.961218 24267 layer_factory.hpp:77] Creating layer query_conv
I0617 20:15:30.961226 24267 net.cpp:106] Creating Layer query_conv
I0617 20:15:30.961230 24267 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0617 20:15:30.961236 24267 net.cpp:411] query_conv -> query_conv
I0617 20:15:30.962886 24267 net.cpp:150] Setting up query_conv
I0617 20:15:30.962895 24267 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0617 20:15:30.962898 24267 net.cpp:165] Memory required for data: 1447859336
I0617 20:15:30.962913 24267 layer_factory.hpp:77] Creating layer key_conv
I0617 20:15:30.962924 24267 net.cpp:106] Creating Layer key_conv
I0617 20:15:30.962927 24267 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0617 20:15:30.962934 24267 net.cpp:411] key_conv -> key_conv
I0617 20:15:30.964735 24267 net.cpp:150] Setting up key_conv
I0617 20:15:30.964745 24267 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0617 20:15:30.964757 24267 net.cpp:165] Memory required for data: 1448089736
I0617 20:15:30.964762 24267 layer_factory.hpp:77] Creating layer value_conv
I0617 20:15:30.964771 24267 net.cpp:106] Creating Layer value_conv
I0617 20:15:30.964774 24267 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0617 20:15:30.964792 24267 net.cpp:411] value_conv -> value_conv
I0617 20:15:30.972139 24267 net.cpp:150] Setting up value_conv
I0617 20:15:30.972163 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.972167 24267 net.cpp:165] Memory required for data: 1449932936
I0617 20:15:30.972172 24267 layer_factory.hpp:77] Creating layer query_conv_reshape
I0617 20:15:30.972191 24267 net.cpp:106] Creating Layer query_conv_reshape
I0617 20:15:30.972198 24267 net.cpp:454] query_conv_reshape <- query_conv
I0617 20:15:30.972203 24267 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0617 20:15:30.972236 24267 net.cpp:150] Setting up query_conv_reshape
I0617 20:15:30.972250 24267 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0617 20:15:30.972252 24267 net.cpp:165] Memory required for data: 1450163336
I0617 20:15:30.972254 24267 layer_factory.hpp:77] Creating layer key_conv_reshape
I0617 20:15:30.972267 24267 net.cpp:106] Creating Layer key_conv_reshape
I0617 20:15:30.972270 24267 net.cpp:454] key_conv_reshape <- key_conv
I0617 20:15:30.972275 24267 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0617 20:15:30.972301 24267 net.cpp:150] Setting up key_conv_reshape
I0617 20:15:30.972316 24267 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0617 20:15:30.972319 24267 net.cpp:165] Memory required for data: 1450393736
I0617 20:15:30.972332 24267 layer_factory.hpp:77] Creating layer value_conv_reshape
I0617 20:15:30.972338 24267 net.cpp:106] Creating Layer value_conv_reshape
I0617 20:15:30.972342 24267 net.cpp:454] value_conv_reshape <- value_conv
I0617 20:15:30.972348 24267 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0617 20:15:30.972374 24267 net.cpp:150] Setting up value_conv_reshape
I0617 20:15:30.972379 24267 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0617 20:15:30.972383 24267 net.cpp:165] Memory required for data: 1452236936
I0617 20:15:30.972386 24267 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0617 20:15:30.972398 24267 net.cpp:106] Creating Layer query_conv_reshape_perm
I0617 20:15:30.972402 24267 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0617 20:15:30.972410 24267 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0617 20:15:30.972535 24267 net.cpp:150] Setting up query_conv_reshape_perm
I0617 20:15:30.972543 24267 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0617 20:15:30.972546 24267 net.cpp:165] Memory required for data: 1452467336
I0617 20:15:30.972558 24267 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0617 20:15:30.972568 24267 net.cpp:106] Creating Layer key_conv_reshape_perm
I0617 20:15:30.972573 24267 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0617 20:15:30.972580 24267 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0617 20:15:30.972684 24267 net.cpp:150] Setting up key_conv_reshape_perm
I0617 20:15:30.972690 24267 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0617 20:15:30.972693 24267 net.cpp:165] Memory required for data: 1452697736
I0617 20:15:30.972697 24267 layer_factory.hpp:77] Creating layer energy
I0617 20:15:30.972713 24267 net.cpp:106] Creating Layer energy
I0617 20:15:30.972719 24267 net.cpp:454] energy <- query_conv_reshape_perm
I0617 20:15:30.972723 24267 net.cpp:454] energy <- key_conv_reshape_perm
I0617 20:15:30.972729 24267 net.cpp:411] energy -> energy
I0617 20:15:30.972755 24267 net.cpp:150] Setting up energy
I0617 20:15:30.972761 24267 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0617 20:15:30.972764 24267 net.cpp:165] Memory required for data: 1455937736
I0617 20:15:30.972769 24267 layer_factory.hpp:77] Creating layer attention
I0617 20:15:30.972784 24267 net.cpp:106] Creating Layer attention
I0617 20:15:30.972798 24267 net.cpp:454] attention <- energy
I0617 20:15:30.972803 24267 net.cpp:411] attention -> attention
I0617 20:15:30.972990 24267 net.cpp:150] Setting up attention
I0617 20:15:30.972997 24267 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0617 20:15:30.973001 24267 net.cpp:165] Memory required for data: 1459177736
I0617 20:15:30.973003 24267 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0617 20:15:30.973021 24267 net.cpp:106] Creating Layer value_conv_reshape_perm
I0617 20:15:30.973026 24267 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0617 20:15:30.973031 24267 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0617 20:15:30.973121 24267 net.cpp:150] Setting up value_conv_reshape_perm
I0617 20:15:30.973127 24267 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0617 20:15:30.973130 24267 net.cpp:165] Memory required for data: 1461020936
I0617 20:15:30.973134 24267 layer_factory.hpp:77] Creating layer attention_perm
I0617 20:15:30.973148 24267 net.cpp:106] Creating Layer attention_perm
I0617 20:15:30.973152 24267 net.cpp:454] attention_perm <- attention
I0617 20:15:30.973158 24267 net.cpp:411] attention_perm -> attention_perm
I0617 20:15:30.973228 24267 net.cpp:150] Setting up attention_perm
I0617 20:15:30.973233 24267 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0617 20:15:30.973237 24267 net.cpp:165] Memory required for data: 1464260936
I0617 20:15:30.973240 24267 layer_factory.hpp:77] Creating layer out
I0617 20:15:30.973248 24267 net.cpp:106] Creating Layer out
I0617 20:15:30.973251 24267 net.cpp:454] out <- value_conv_reshape_perm
I0617 20:15:30.973256 24267 net.cpp:454] out <- attention_perm
I0617 20:15:30.973261 24267 net.cpp:411] out -> out
I0617 20:15:30.973281 24267 net.cpp:150] Setting up out
I0617 20:15:30.973287 24267 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0617 20:15:30.973289 24267 net.cpp:165] Memory required for data: 1466104136
I0617 20:15:30.973294 24267 layer_factory.hpp:77] Creating layer out_reshape
I0617 20:15:30.973300 24267 net.cpp:106] Creating Layer out_reshape
I0617 20:15:30.973305 24267 net.cpp:454] out_reshape <- out
I0617 20:15:30.973310 24267 net.cpp:411] out_reshape -> out_reshape
I0617 20:15:30.973331 24267 net.cpp:150] Setting up out_reshape
I0617 20:15:30.973336 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.973340 24267 net.cpp:165] Memory required for data: 1467947336
I0617 20:15:30.973343 24267 layer_factory.hpp:77] Creating layer out_reshape_scale
I0617 20:15:30.973353 24267 net.cpp:106] Creating Layer out_reshape_scale
I0617 20:15:30.973357 24267 net.cpp:454] out_reshape_scale <- out_reshape
I0617 20:15:30.973363 24267 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0617 20:15:30.973444 24267 net.cpp:150] Setting up out_reshape_scale
I0617 20:15:30.973451 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.973454 24267 net.cpp:165] Memory required for data: 1469790536
I0617 20:15:30.973459 24267 layer_factory.hpp:77] Creating layer out_x
I0617 20:15:30.973467 24267 net.cpp:106] Creating Layer out_x
I0617 20:15:30.973472 24267 net.cpp:454] out_x <- out_reshape_scale
I0617 20:15:30.973477 24267 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0617 20:15:30.973486 24267 net.cpp:411] out_x -> out_x
I0617 20:15:30.973508 24267 net.cpp:150] Setting up out_x
I0617 20:15:30.973515 24267 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:15:30.973518 24267 net.cpp:165] Memory required for data: 1471633736
I0617 20:15:30.973522 24267 layer_factory.hpp:77] Creating layer mask_deconv2
I0617 20:15:30.973531 24267 net.cpp:106] Creating Layer mask_deconv2
I0617 20:15:30.973536 24267 net.cpp:454] mask_deconv2 <- out_x
I0617 20:15:30.973542 24267 net.cpp:411] mask_deconv2 -> mask_deconv2
I0617 20:15:30.974344 24267 net.cpp:150] Setting up mask_deconv2
I0617 20:15:30.974350 24267 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0617 20:15:30.974354 24267 net.cpp:165] Memory required for data: 1486874952
I0617 20:15:30.974360 24267 layer_factory.hpp:77] Creating layer mask_deconv2_mask_deconv2_0_split
I0617 20:15:30.974367 24267 net.cpp:106] Creating Layer mask_deconv2_mask_deconv2_0_split
I0617 20:15:30.974372 24267 net.cpp:454] mask_deconv2_mask_deconv2_0_split <- mask_deconv2
I0617 20:15:30.974378 24267 net.cpp:411] mask_deconv2_mask_deconv2_0_split -> mask_deconv2_mask_deconv2_0_split_0
I0617 20:15:30.974385 24267 net.cpp:411] mask_deconv2_mask_deconv2_0_split -> mask_deconv2_mask_deconv2_0_split_1
I0617 20:15:30.974418 24267 net.cpp:150] Setting up mask_deconv2_mask_deconv2_0_split
I0617 20:15:30.974423 24267 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0617 20:15:30.974428 24267 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0617 20:15:30.974431 24267 net.cpp:165] Memory required for data: 1517357384
I0617 20:15:30.974436 24267 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0617 20:15:30.974447 24267 net.cpp:106] Creating Layer pool5_2_conv5
I0617 20:15:30.974452 24267 net.cpp:454] pool5_2_conv5 <- mask_deconv2_mask_deconv2_0_split_0
I0617 20:15:30.974460 24267 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0617 20:15:31.003703 24267 net.cpp:150] Setting up pool5_2_conv5
I0617 20:15:31.003726 24267 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:15:31.003739 24267 net.cpp:165] Memory required for data: 1547839816
I0617 20:15:31.003751 24267 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0617 20:15:31.003773 24267 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0617 20:15:31.003815 24267 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0617 20:15:31.003834 24267 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0617 20:15:31.004032 24267 net.cpp:150] Setting up pool5_2_conv5_relu
I0617 20:15:31.004045 24267 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:15:31.004048 24267 net.cpp:165] Memory required for data: 1578322248
I0617 20:15:31.004052 24267 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0617 20:15:31.004079 24267 net.cpp:106] Creating Layer pool5_2_conv6
I0617 20:15:31.004097 24267 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0617 20:15:31.004120 24267 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0617 20:15:31.066705 24267 net.cpp:150] Setting up pool5_2_conv6
I0617 20:15:31.066756 24267 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:15:31.066763 24267 net.cpp:165] Memory required for data: 1608804680
I0617 20:15:31.066823 24267 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0617 20:15:31.066891 24267 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0617 20:15:31.066921 24267 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0617 20:15:31.066953 24267 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0617 20:15:31.068567 24267 net.cpp:150] Setting up pool5_2_conv6_relu
I0617 20:15:31.068590 24267 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:15:31.068608 24267 net.cpp:165] Memory required for data: 1639287112
I0617 20:15:31.068620 24267 layer_factory.hpp:77] Creating layer mask_deconv3
I0617 20:15:31.068678 24267 net.cpp:106] Creating Layer mask_deconv3
I0617 20:15:31.068693 24267 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0617 20:15:31.068735 24267 net.cpp:411] mask_deconv3 -> mask_deconv3
I0617 20:15:31.069794 24267 net.cpp:150] Setting up mask_deconv3
I0617 20:15:31.069824 24267 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0617 20:15:31.069829 24267 net.cpp:165] Memory required for data: 1700251976
I0617 20:15:31.069846 24267 layer_factory.hpp:77] Creating layer mask_score
I0617 20:15:31.069895 24267 net.cpp:106] Creating Layer mask_score
I0617 20:15:31.069912 24267 net.cpp:454] mask_score <- mask_deconv3
I0617 20:15:31.069931 24267 net.cpp:411] mask_score -> mask_score
I0617 20:15:31.071545 24267 net.cpp:150] Setting up mask_score
I0617 20:15:31.071568 24267 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0617 20:15:31.071578 24267 net.cpp:165] Memory required for data: 1702157128
I0617 20:15:31.071599 24267 layer_factory.hpp:77] Creating layer loss_mask
I0617 20:15:31.071621 24267 net.cpp:106] Creating Layer loss_mask
I0617 20:15:31.071630 24267 net.cpp:454] loss_mask <- mask_score
I0617 20:15:31.071646 24267 net.cpp:454] loss_mask <- mask_targets_roi-data_5_split_0
I0617 20:15:31.071666 24267 net.cpp:411] loss_mask -> loss_mask
I0617 20:15:31.071691 24267 layer_factory.hpp:77] Creating layer loss_mask
I0617 20:15:31.074817 24267 net.cpp:150] Setting up loss_mask
I0617 20:15:31.074839 24267 net.cpp:157] Top shape: (1)
I0617 20:15:31.074849 24267 net.cpp:160]     with loss weight 3
I0617 20:15:31.074877 24267 net.cpp:165] Memory required for data: 1702157132
I0617 20:15:31.074890 24267 layer_factory.hpp:77] Creating layer pool5_2_conv5_2
I0617 20:15:31.074923 24267 net.cpp:106] Creating Layer pool5_2_conv5_2
I0617 20:15:31.074939 24267 net.cpp:454] pool5_2_conv5_2 <- mask_deconv2_mask_deconv2_0_split_1
I0617 20:15:31.074959 24267 net.cpp:411] pool5_2_conv5_2 -> pool5_2_conv5_2
I0617 20:15:31.103857 24267 net.cpp:150] Setting up pool5_2_conv5_2
I0617 20:15:31.103876 24267 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:15:31.103879 24267 net.cpp:165] Memory required for data: 1732639564
I0617 20:15:31.103898 24267 layer_factory.hpp:77] Creating layer pool5_2_conv5_2_relu
I0617 20:15:31.103907 24267 net.cpp:106] Creating Layer pool5_2_conv5_2_relu
I0617 20:15:31.103915 24267 net.cpp:454] pool5_2_conv5_2_relu <- pool5_2_conv5_2
I0617 20:15:31.103925 24267 net.cpp:411] pool5_2_conv5_2_relu -> pool5_2_conv5_2_relu
I0617 20:15:31.104151 24267 net.cpp:150] Setting up pool5_2_conv5_2_relu
I0617 20:15:31.104159 24267 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:15:31.104162 24267 net.cpp:165] Memory required for data: 1763121996
I0617 20:15:31.104166 24267 layer_factory.hpp:77] Creating layer mask_deconv3_2
I0617 20:15:31.104171 24267 net.cpp:106] Creating Layer mask_deconv3_2
I0617 20:15:31.104184 24267 net.cpp:454] mask_deconv3_2 <- pool5_2_conv5_2_relu
I0617 20:15:31.104194 24267 net.cpp:411] mask_deconv3_2 -> mask_deconv3_2
I0617 20:15:31.105192 24267 net.cpp:150] Setting up mask_deconv3_2
I0617 20:15:31.105211 24267 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0617 20:15:31.105213 24267 net.cpp:165] Memory required for data: 1824086860
I0617 20:15:31.105218 24267 layer_factory.hpp:77] Creating layer mask_score_2
I0617 20:15:31.105239 24267 net.cpp:106] Creating Layer mask_score_2
I0617 20:15:31.105245 24267 net.cpp:454] mask_score_2 <- mask_deconv3_2
I0617 20:15:31.105254 24267 net.cpp:411] mask_score_2 -> mask_score_2
I0617 20:15:31.106750 24267 net.cpp:150] Setting up mask_score_2
I0617 20:15:31.106761 24267 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0617 20:15:31.106763 24267 net.cpp:165] Memory required for data: 1825992012
I0617 20:15:31.106768 24267 layer_factory.hpp:77] Creating layer loss_mask_2
I0617 20:15:31.106775 24267 net.cpp:106] Creating Layer loss_mask_2
I0617 20:15:31.106777 24267 net.cpp:454] loss_mask_2 <- mask_score_2
I0617 20:15:31.106791 24267 net.cpp:454] loss_mask_2 <- mask_targets_roi-data_5_split_1
I0617 20:15:31.106796 24267 net.cpp:411] loss_mask_2 -> loss_mask_2
I0617 20:15:31.106806 24267 layer_factory.hpp:77] Creating layer loss_mask_2
I0617 20:15:31.107851 24267 net.cpp:150] Setting up loss_mask_2
I0617 20:15:31.107858 24267 net.cpp:157] Top shape: (1)
I0617 20:15:31.107861 24267 net.cpp:160]     with loss weight 0.3
I0617 20:15:31.107868 24267 net.cpp:165] Memory required for data: 1825992016
I0617 20:15:31.107870 24267 net.cpp:226] loss_mask_2 needs backward computation.
I0617 20:15:31.107883 24267 net.cpp:226] mask_score_2 needs backward computation.
I0617 20:15:31.107887 24267 net.cpp:226] mask_deconv3_2 needs backward computation.
I0617 20:15:31.107890 24267 net.cpp:226] pool5_2_conv5_2_relu needs backward computation.
I0617 20:15:31.107905 24267 net.cpp:226] pool5_2_conv5_2 needs backward computation.
I0617 20:15:31.107910 24267 net.cpp:226] loss_mask needs backward computation.
I0617 20:15:31.107915 24267 net.cpp:226] mask_score needs backward computation.
I0617 20:15:31.107921 24267 net.cpp:226] mask_deconv3 needs backward computation.
I0617 20:15:31.107926 24267 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0617 20:15:31.107944 24267 net.cpp:226] pool5_2_conv6 needs backward computation.
I0617 20:15:31.107949 24267 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0617 20:15:31.107954 24267 net.cpp:226] pool5_2_conv5 needs backward computation.
I0617 20:15:31.107969 24267 net.cpp:226] mask_deconv2_mask_deconv2_0_split needs backward computation.
I0617 20:15:31.107976 24267 net.cpp:226] mask_deconv2 needs backward computation.
I0617 20:15:31.107982 24267 net.cpp:226] out_x needs backward computation.
I0617 20:15:31.107990 24267 net.cpp:226] out_reshape_scale needs backward computation.
I0617 20:15:31.107995 24267 net.cpp:226] out_reshape needs backward computation.
I0617 20:15:31.108000 24267 net.cpp:226] out needs backward computation.
I0617 20:15:31.108006 24267 net.cpp:226] attention_perm needs backward computation.
I0617 20:15:31.108008 24267 net.cpp:226] value_conv_reshape_perm needs backward computation.
I0617 20:15:31.108013 24267 net.cpp:226] attention needs backward computation.
I0617 20:15:31.108019 24267 net.cpp:226] energy needs backward computation.
I0617 20:15:31.108026 24267 net.cpp:226] key_conv_reshape_perm needs backward computation.
I0617 20:15:31.108034 24267 net.cpp:226] query_conv_reshape_perm needs backward computation.
I0617 20:15:31.108047 24267 net.cpp:226] value_conv_reshape needs backward computation.
I0617 20:15:31.108052 24267 net.cpp:226] key_conv_reshape needs backward computation.
I0617 20:15:31.108055 24267 net.cpp:226] query_conv_reshape needs backward computation.
I0617 20:15:31.108060 24267 net.cpp:226] value_conv needs backward computation.
I0617 20:15:31.108064 24267 net.cpp:226] key_conv needs backward computation.
I0617 20:15:31.108069 24267 net.cpp:226] query_conv needs backward computation.
I0617 20:15:31.108074 24267 net.cpp:226] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split needs backward computation.
I0617 20:15:31.108078 24267 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0617 20:15:31.108081 24267 net.cpp:226] pool5_2_conv4 needs backward computation.
I0617 20:15:31.108085 24267 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0617 20:15:31.108088 24267 net.cpp:226] pool5_2_conv3 needs backward computation.
I0617 20:15:31.108090 24267 net.cpp:226] mask_deconv1 needs backward computation.
I0617 20:15:31.108093 24267 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0617 20:15:31.108098 24267 net.cpp:226] pool5_2_conv2 needs backward computation.
I0617 20:15:31.108100 24267 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0617 20:15:31.108104 24267 net.cpp:226] pool5_2_conv needs backward computation.
I0617 20:15:31.108106 24267 net.cpp:226] roi_pool5_2 needs backward computation.
I0617 20:15:31.108110 24267 net.cpp:226] loss_bbox needs backward computation.
I0617 20:15:31.108114 24267 net.cpp:226] loss_cls needs backward computation.
I0617 20:15:31.108117 24267 net.cpp:226] loss_attribute needs backward computation.
I0617 20:15:31.108121 24267 net.cpp:226] bbox_pred needs backward computation.
I0617 20:15:31.108125 24267 net.cpp:226] cls_score needs backward computation.
I0617 20:15:31.108129 24267 net.cpp:226] attr_score_pos_shift needs backward computation.
I0617 20:15:31.108132 24267 net.cpp:226] attr_score_pos needs backward computation.
I0617 20:15:31.108135 24267 net.cpp:226] attr_score needs backward computation.
I0617 20:15:31.108139 24267 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0617 20:15:31.108142 24267 net.cpp:226] relu7 needs backward computation.
I0617 20:15:31.108145 24267 net.cpp:226] fc7 needs backward computation.
I0617 20:15:31.108148 24267 net.cpp:226] relu6 needs backward computation.
I0617 20:15:31.108152 24267 net.cpp:226] fc6 needs backward computation.
I0617 20:15:31.108155 24267 net.cpp:226] roi_pool5 needs backward computation.
I0617 20:15:31.108158 24267 net.cpp:228] mask_targets_roi-data_5_split does not need backward computation.
I0617 20:15:31.108162 24267 net.cpp:226] roi-data needs backward computation.
I0617 20:15:31.108178 24267 net.cpp:226] proposal needs backward computation.
I0617 20:15:31.108183 24267 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0617 20:15:31.108186 24267 net.cpp:226] rpn_cls_prob needs backward computation.
I0617 20:15:31.108192 24267 net.cpp:226] rpn_loss_bbox needs backward computation.
I0617 20:15:31.108196 24267 net.cpp:226] rpn_loss_cls needs backward computation.
I0617 20:15:31.108201 24267 net.cpp:226] rpn-data needs backward computation.
I0617 20:15:31.108216 24267 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0617 20:15:31.108218 24267 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0617 20:15:31.108222 24267 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0617 20:15:31.108224 24267 net.cpp:226] rpn_bbox_pred needs backward computation.
I0617 20:15:31.108227 24267 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0617 20:15:31.108230 24267 net.cpp:226] rpn_cls_score needs backward computation.
I0617 20:15:31.108234 24267 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0617 20:15:31.108237 24267 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0617 20:15:31.108240 24267 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0617 20:15:31.108243 24267 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0617 20:15:31.108248 24267 net.cpp:226] relu5_3 needs backward computation.
I0617 20:15:31.108254 24267 net.cpp:226] conv5_3 needs backward computation.
I0617 20:15:31.108258 24267 net.cpp:226] relu5_2 needs backward computation.
I0617 20:15:31.108259 24267 net.cpp:226] conv5_2 needs backward computation.
I0617 20:15:31.108263 24267 net.cpp:226] relu5_1 needs backward computation.
I0617 20:15:31.108266 24267 net.cpp:226] conv5_1 needs backward computation.
I0617 20:15:31.108268 24267 net.cpp:226] pool4 needs backward computation.
I0617 20:15:31.108273 24267 net.cpp:226] relu4_3 needs backward computation.
I0617 20:15:31.108274 24267 net.cpp:226] conv4_3 needs backward computation.
I0617 20:15:31.108278 24267 net.cpp:226] relu4_2 needs backward computation.
I0617 20:15:31.108280 24267 net.cpp:226] conv4_2 needs backward computation.
I0617 20:15:31.108283 24267 net.cpp:226] relu4_1 needs backward computation.
I0617 20:15:31.108285 24267 net.cpp:226] conv4_1 needs backward computation.
I0617 20:15:31.108289 24267 net.cpp:226] pool3 needs backward computation.
I0617 20:15:31.108292 24267 net.cpp:226] relu3_3 needs backward computation.
I0617 20:15:31.108294 24267 net.cpp:226] conv3_3 needs backward computation.
I0617 20:15:31.108299 24267 net.cpp:226] relu3_2 needs backward computation.
I0617 20:15:31.108300 24267 net.cpp:226] conv3_2 needs backward computation.
I0617 20:15:31.108304 24267 net.cpp:226] relu3_1 needs backward computation.
I0617 20:15:31.108306 24267 net.cpp:226] conv3_1 needs backward computation.
I0617 20:15:31.108319 24267 net.cpp:228] pool2 does not need backward computation.
I0617 20:15:31.108323 24267 net.cpp:228] relu2_2 does not need backward computation.
I0617 20:15:31.108326 24267 net.cpp:228] conv2_2 does not need backward computation.
I0617 20:15:31.108328 24267 net.cpp:228] relu2_1 does not need backward computation.
I0617 20:15:31.108332 24267 net.cpp:228] conv2_1 does not need backward computation.
I0617 20:15:31.108335 24267 net.cpp:228] pool1 does not need backward computation.
I0617 20:15:31.108338 24267 net.cpp:228] relu1_2 does not need backward computation.
I0617 20:15:31.108341 24267 net.cpp:228] conv1_2 does not need backward computation.
I0617 20:15:31.108343 24267 net.cpp:228] relu1_1 does not need backward computation.
I0617 20:15:31.108348 24267 net.cpp:228] conv1_1 does not need backward computation.
I0617 20:15:31.108351 24267 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0617 20:15:31.108355 24267 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0617 20:15:31.108359 24267 net.cpp:228] data_input-data_0_split does not need backward computation.
I0617 20:15:31.108364 24267 net.cpp:228] input-data does not need backward computation.
I0617 20:15:31.108367 24267 net.cpp:270] This network produces output loss_attribute
I0617 20:15:31.108371 24267 net.cpp:270] This network produces output loss_bbox
I0617 20:15:31.108379 24267 net.cpp:270] This network produces output loss_cls
I0617 20:15:31.108386 24267 net.cpp:270] This network produces output loss_mask
I0617 20:15:31.108388 24267 net.cpp:270] This network produces output loss_mask_2
I0617 20:15:31.108393 24267 net.cpp:270] This network produces output rpn_cls_loss
I0617 20:15:31.108397 24267 net.cpp:270] This network produces output rpn_loss_bbox
I0617 20:15:31.108471 24267 net.cpp:283] Network initialization done.
I0617 20:15:31.108744 24267 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0617 20:15:38.498231 24267 net.cpp:816] Ignoring source layer pool5
I0617 20:15:38.569583 24267 net.cpp:816] Ignoring source layer drop6
I0617 20:15:38.580693 24267 net.cpp:816] Ignoring source layer drop7
I0617 20:15:38.580731 24267 net.cpp:816] Ignoring source layer fc8
I0617 20:15:38.580736 24267 net.cpp:816] Ignoring source layer prob
Solving...
I0617 20:15:40.745815 24267 solver.cpp:229] Iteration 0, loss = 10.8816
I0617 20:15:40.745859 24267 solver.cpp:245]     Train net output #0: loss_attribute = 0.304792 (* 1 = 0.304792 loss)
I0617 20:15:40.745868 24267 solver.cpp:245]     Train net output #1: loss_bbox = 0.0916567 (* 2 = 0.183313 loss)
I0617 20:15:40.745875 24267 solver.cpp:245]     Train net output #2: loss_cls = 0.947394 (* 3 = 2.84218 loss)
I0617 20:15:40.745882 24267 solver.cpp:245]     Train net output #3: loss_mask = 2.08166 (* 3 = 6.24497 loss)
I0617 20:15:40.745887 24267 solver.cpp:245]     Train net output #4: loss_mask_2 = 2.07725 (* 0.3 = 0.623176 loss)
I0617 20:15:40.745892 24267 solver.cpp:245]     Train net output #5: rpn_cls_loss = 0.73882 (* 1 = 0.73882 loss)
I0617 20:15:40.745899 24267 solver.cpp:245]     Train net output #6: rpn_loss_bbox = 0.0189577 (* 1 = 0.0189577 loss)
I0617 20:15:40.745905 24267 sgd_solver.cpp:106] Iteration 0, lr = 0.001
F0617 20:15:59.922709 24267 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 24267 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
