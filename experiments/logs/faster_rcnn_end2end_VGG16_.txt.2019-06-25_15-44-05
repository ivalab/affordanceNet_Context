+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_15-44-05
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_15-44-05
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0625 15:44:26.728973 13917 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0625 15:44:26.728999 13917 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0625 15:44:26.739110 13917 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "mask_score"
  top: "mask_score_softmax"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "log"
  type: "Log"
  bottom: "mask_score_softmax"
  top: "log"
}
layer {
  name: "mult1"
  type: "Eltwise"
  bottom: "log"
  bottom: "mask_targets"
  top: "mult1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cross_entropy"
  type: "Power"
  bottom: "mult1"
  top: "cross_entropy"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "ce_sum"
  type: "Convolution"
  bottom: "cross_entropy"
  top: "cross_entropy_sum"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 1
    weight_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "ce_mean"
  type: "Reduction"
  bottom: "cross_entropy_sum"
  top: "cross_entropy_mean"
  loss_weight: 1
  reduction_param {
    operation: MEAN
    axis: 0
  }
}
I0625 15:44:26.739588 13917 layer_factory.hpp:77] Creating layer input-data
I0625 15:44:26.865872 13917 net.cpp:106] Creating Layer input-data
I0625 15:44:26.865890 13917 net.cpp:411] input-data -> data
I0625 15:44:26.865905 13917 net.cpp:411] input-data -> im_info
I0625 15:44:26.865909 13917 net.cpp:411] input-data -> gt_boxes
I0625 15:44:26.865913 13917 net.cpp:411] input-data -> seg_mask_inds
I0625 15:44:26.865916 13917 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0625 15:44:26.974576 13917 net.cpp:150] Setting up input-data
I0625 15:44:26.974592 13917 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:44:26.974596 13917 net.cpp:157] Top shape: 1 3 (3)
I0625 15:44:26.974598 13917 net.cpp:157] Top shape: 1 4 (4)
I0625 15:44:26.974601 13917 net.cpp:157] Top shape: 1 2 (2)
I0625 15:44:26.974602 13917 net.cpp:157] Top shape: 1 1 (1)
I0625 15:44:26.974606 13917 net.cpp:165] Memory required for data: 7200040
I0625 15:44:26.974609 13917 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0625 15:44:26.975200 13917 net.cpp:106] Creating Layer data_input-data_0_split
I0625 15:44:26.975205 13917 net.cpp:454] data_input-data_0_split <- data
I0625 15:44:26.975211 13917 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0625 15:44:26.975217 13917 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0625 15:44:26.975242 13917 net.cpp:150] Setting up data_input-data_0_split
I0625 15:44:26.975247 13917 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:44:26.975250 13917 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:44:26.975250 13917 net.cpp:165] Memory required for data: 21600040
I0625 15:44:26.975252 13917 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0625 15:44:26.975256 13917 net.cpp:106] Creating Layer im_info_input-data_1_split
I0625 15:44:26.975257 13917 net.cpp:454] im_info_input-data_1_split <- im_info
I0625 15:44:26.975260 13917 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0625 15:44:26.975263 13917 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0625 15:44:26.975268 13917 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0625 15:44:26.975292 13917 net.cpp:150] Setting up im_info_input-data_1_split
I0625 15:44:26.975296 13917 net.cpp:157] Top shape: 1 3 (3)
I0625 15:44:26.975298 13917 net.cpp:157] Top shape: 1 3 (3)
I0625 15:44:26.975301 13917 net.cpp:157] Top shape: 1 3 (3)
I0625 15:44:26.975301 13917 net.cpp:165] Memory required for data: 21600076
I0625 15:44:26.975303 13917 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0625 15:44:26.975306 13917 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0625 15:44:26.975307 13917 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0625 15:44:26.975311 13917 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0625 15:44:26.975313 13917 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0625 15:44:26.975330 13917 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0625 15:44:26.975333 13917 net.cpp:157] Top shape: 1 4 (4)
I0625 15:44:26.975335 13917 net.cpp:157] Top shape: 1 4 (4)
I0625 15:44:26.975337 13917 net.cpp:165] Memory required for data: 21600108
I0625 15:44:26.975338 13917 layer_factory.hpp:77] Creating layer conv1_1
I0625 15:44:26.975347 13917 net.cpp:106] Creating Layer conv1_1
I0625 15:44:26.975349 13917 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0625 15:44:26.975353 13917 net.cpp:411] conv1_1 -> conv1_1
I0625 15:44:27.493135 13917 net.cpp:150] Setting up conv1_1
I0625 15:44:27.493157 13917 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:44:27.493160 13917 net.cpp:165] Memory required for data: 175200108
I0625 15:44:27.493175 13917 layer_factory.hpp:77] Creating layer relu1_1
I0625 15:44:27.493183 13917 net.cpp:106] Creating Layer relu1_1
I0625 15:44:27.493187 13917 net.cpp:454] relu1_1 <- conv1_1
I0625 15:44:27.493191 13917 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0625 15:44:27.493315 13917 net.cpp:150] Setting up relu1_1
I0625 15:44:27.493324 13917 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:44:27.493325 13917 net.cpp:165] Memory required for data: 328800108
I0625 15:44:27.493327 13917 layer_factory.hpp:77] Creating layer conv1_2
I0625 15:44:27.493335 13917 net.cpp:106] Creating Layer conv1_2
I0625 15:44:27.493337 13917 net.cpp:454] conv1_2 <- conv1_1
I0625 15:44:27.493341 13917 net.cpp:411] conv1_2 -> conv1_2
I0625 15:44:27.496222 13917 net.cpp:150] Setting up conv1_2
I0625 15:44:27.496232 13917 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:44:27.496235 13917 net.cpp:165] Memory required for data: 482400108
I0625 15:44:27.496242 13917 layer_factory.hpp:77] Creating layer relu1_2
I0625 15:44:27.496248 13917 net.cpp:106] Creating Layer relu1_2
I0625 15:44:27.496249 13917 net.cpp:454] relu1_2 <- conv1_2
I0625 15:44:27.496253 13917 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0625 15:44:27.496369 13917 net.cpp:150] Setting up relu1_2
I0625 15:44:27.496376 13917 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:44:27.496377 13917 net.cpp:165] Memory required for data: 636000108
I0625 15:44:27.496379 13917 layer_factory.hpp:77] Creating layer pool1
I0625 15:44:27.496385 13917 net.cpp:106] Creating Layer pool1
I0625 15:44:27.496387 13917 net.cpp:454] pool1 <- conv1_2
I0625 15:44:27.496390 13917 net.cpp:411] pool1 -> pool1
I0625 15:44:27.497061 13917 net.cpp:150] Setting up pool1
I0625 15:44:27.497067 13917 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0625 15:44:27.497069 13917 net.cpp:165] Memory required for data: 674400108
I0625 15:44:27.497071 13917 layer_factory.hpp:77] Creating layer conv2_1
I0625 15:44:27.497076 13917 net.cpp:106] Creating Layer conv2_1
I0625 15:44:27.497079 13917 net.cpp:454] conv2_1 <- pool1
I0625 15:44:27.497082 13917 net.cpp:411] conv2_1 -> conv2_1
I0625 15:44:27.498873 13917 net.cpp:150] Setting up conv2_1
I0625 15:44:27.498883 13917 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:44:27.498884 13917 net.cpp:165] Memory required for data: 751200108
I0625 15:44:27.498890 13917 layer_factory.hpp:77] Creating layer relu2_1
I0625 15:44:27.498894 13917 net.cpp:106] Creating Layer relu2_1
I0625 15:44:27.498896 13917 net.cpp:454] relu2_1 <- conv2_1
I0625 15:44:27.498899 13917 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0625 15:44:27.499332 13917 net.cpp:150] Setting up relu2_1
I0625 15:44:27.499341 13917 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:44:27.499341 13917 net.cpp:165] Memory required for data: 828000108
I0625 15:44:27.499344 13917 layer_factory.hpp:77] Creating layer conv2_2
I0625 15:44:27.499348 13917 net.cpp:106] Creating Layer conv2_2
I0625 15:44:27.499351 13917 net.cpp:454] conv2_2 <- conv2_1
I0625 15:44:27.499354 13917 net.cpp:411] conv2_2 -> conv2_2
I0625 15:44:27.501080 13917 net.cpp:150] Setting up conv2_2
I0625 15:44:27.501088 13917 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:44:27.501091 13917 net.cpp:165] Memory required for data: 904800108
I0625 15:44:27.501094 13917 layer_factory.hpp:77] Creating layer relu2_2
I0625 15:44:27.501098 13917 net.cpp:106] Creating Layer relu2_2
I0625 15:44:27.501101 13917 net.cpp:454] relu2_2 <- conv2_2
I0625 15:44:27.501103 13917 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0625 15:44:27.501238 13917 net.cpp:150] Setting up relu2_2
I0625 15:44:27.501243 13917 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:44:27.501245 13917 net.cpp:165] Memory required for data: 981600108
I0625 15:44:27.501247 13917 layer_factory.hpp:77] Creating layer pool2
I0625 15:44:27.501251 13917 net.cpp:106] Creating Layer pool2
I0625 15:44:27.501253 13917 net.cpp:454] pool2 <- conv2_2
I0625 15:44:27.501256 13917 net.cpp:411] pool2 -> pool2
I0625 15:44:27.501282 13917 net.cpp:150] Setting up pool2
I0625 15:44:27.501286 13917 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0625 15:44:27.501287 13917 net.cpp:165] Memory required for data: 1000800108
I0625 15:44:27.501289 13917 layer_factory.hpp:77] Creating layer conv3_1
I0625 15:44:27.501294 13917 net.cpp:106] Creating Layer conv3_1
I0625 15:44:27.501296 13917 net.cpp:454] conv3_1 <- pool2
I0625 15:44:27.501299 13917 net.cpp:411] conv3_1 -> conv3_1
I0625 15:44:27.505404 13917 net.cpp:150] Setting up conv3_1
I0625 15:44:27.505419 13917 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:44:27.505424 13917 net.cpp:165] Memory required for data: 1039200108
I0625 15:44:27.505437 13917 layer_factory.hpp:77] Creating layer relu3_1
I0625 15:44:27.505446 13917 net.cpp:106] Creating Layer relu3_1
I0625 15:44:27.505451 13917 net.cpp:454] relu3_1 <- conv3_1
I0625 15:44:27.505458 13917 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0625 15:44:27.505580 13917 net.cpp:150] Setting up relu3_1
I0625 15:44:27.505587 13917 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:44:27.505590 13917 net.cpp:165] Memory required for data: 1077600108
I0625 15:44:27.505594 13917 layer_factory.hpp:77] Creating layer conv3_2
I0625 15:44:27.505604 13917 net.cpp:106] Creating Layer conv3_2
I0625 15:44:27.505607 13917 net.cpp:454] conv3_2 <- conv3_1
I0625 15:44:27.505614 13917 net.cpp:411] conv3_2 -> conv3_2
I0625 15:44:27.508105 13917 net.cpp:150] Setting up conv3_2
I0625 15:44:27.508119 13917 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:44:27.508122 13917 net.cpp:165] Memory required for data: 1116000108
I0625 15:44:27.508131 13917 layer_factory.hpp:77] Creating layer relu3_2
I0625 15:44:27.508143 13917 net.cpp:106] Creating Layer relu3_2
I0625 15:44:27.508147 13917 net.cpp:454] relu3_2 <- conv3_2
I0625 15:44:27.508153 13917 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0625 15:44:27.508268 13917 net.cpp:150] Setting up relu3_2
I0625 15:44:27.508276 13917 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:44:27.508280 13917 net.cpp:165] Memory required for data: 1154400108
I0625 15:44:27.508282 13917 layer_factory.hpp:77] Creating layer conv3_3
I0625 15:44:27.508291 13917 net.cpp:106] Creating Layer conv3_3
I0625 15:44:27.508294 13917 net.cpp:454] conv3_3 <- conv3_2
I0625 15:44:27.508301 13917 net.cpp:411] conv3_3 -> conv3_3
I0625 15:44:27.510475 13917 net.cpp:150] Setting up conv3_3
I0625 15:44:27.510486 13917 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:44:27.510490 13917 net.cpp:165] Memory required for data: 1192800108
I0625 15:44:27.510507 13917 layer_factory.hpp:77] Creating layer relu3_3
I0625 15:44:27.510515 13917 net.cpp:106] Creating Layer relu3_3
I0625 15:44:27.510520 13917 net.cpp:454] relu3_3 <- conv3_3
I0625 15:44:27.510525 13917 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0625 15:44:27.510658 13917 net.cpp:150] Setting up relu3_3
I0625 15:44:27.510664 13917 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:44:27.510668 13917 net.cpp:165] Memory required for data: 1231200108
I0625 15:44:27.510679 13917 layer_factory.hpp:77] Creating layer pool3
I0625 15:44:27.510686 13917 net.cpp:106] Creating Layer pool3
I0625 15:44:27.510700 13917 net.cpp:454] pool3 <- conv3_3
I0625 15:44:27.510705 13917 net.cpp:411] pool3 -> pool3
I0625 15:44:27.510736 13917 net.cpp:150] Setting up pool3
I0625 15:44:27.510751 13917 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0625 15:44:27.510753 13917 net.cpp:165] Memory required for data: 1240800108
I0625 15:44:27.510766 13917 layer_factory.hpp:77] Creating layer conv4_1
I0625 15:44:27.510774 13917 net.cpp:106] Creating Layer conv4_1
I0625 15:44:27.510777 13917 net.cpp:454] conv4_1 <- pool3
I0625 15:44:27.510782 13917 net.cpp:411] conv4_1 -> conv4_1
I0625 15:44:27.514979 13917 net.cpp:150] Setting up conv4_1
I0625 15:44:27.514997 13917 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:44:27.515000 13917 net.cpp:165] Memory required for data: 1260000108
I0625 15:44:27.515007 13917 layer_factory.hpp:77] Creating layer relu4_1
I0625 15:44:27.515015 13917 net.cpp:106] Creating Layer relu4_1
I0625 15:44:27.515020 13917 net.cpp:454] relu4_1 <- conv4_1
I0625 15:44:27.515034 13917 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0625 15:44:27.515159 13917 net.cpp:150] Setting up relu4_1
I0625 15:44:27.515166 13917 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:44:27.515167 13917 net.cpp:165] Memory required for data: 1279200108
I0625 15:44:27.515169 13917 layer_factory.hpp:77] Creating layer conv4_2
I0625 15:44:27.515177 13917 net.cpp:106] Creating Layer conv4_2
I0625 15:44:27.515178 13917 net.cpp:454] conv4_2 <- conv4_1
I0625 15:44:27.515182 13917 net.cpp:411] conv4_2 -> conv4_2
I0625 15:44:27.520041 13917 net.cpp:150] Setting up conv4_2
I0625 15:44:27.520071 13917 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:44:27.520073 13917 net.cpp:165] Memory required for data: 1298400108
I0625 15:44:27.520085 13917 layer_factory.hpp:77] Creating layer relu4_2
I0625 15:44:27.520093 13917 net.cpp:106] Creating Layer relu4_2
I0625 15:44:27.520097 13917 net.cpp:454] relu4_2 <- conv4_2
I0625 15:44:27.520102 13917 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0625 15:44:27.520646 13917 net.cpp:150] Setting up relu4_2
I0625 15:44:27.520656 13917 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:44:27.520658 13917 net.cpp:165] Memory required for data: 1317600108
I0625 15:44:27.520661 13917 layer_factory.hpp:77] Creating layer conv4_3
I0625 15:44:27.520670 13917 net.cpp:106] Creating Layer conv4_3
I0625 15:44:27.520674 13917 net.cpp:454] conv4_3 <- conv4_2
I0625 15:44:27.520690 13917 net.cpp:411] conv4_3 -> conv4_3
I0625 15:44:27.525496 13917 net.cpp:150] Setting up conv4_3
I0625 15:44:27.525516 13917 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:44:27.525518 13917 net.cpp:165] Memory required for data: 1336800108
I0625 15:44:27.525527 13917 layer_factory.hpp:77] Creating layer relu4_3
I0625 15:44:27.525545 13917 net.cpp:106] Creating Layer relu4_3
I0625 15:44:27.525549 13917 net.cpp:454] relu4_3 <- conv4_3
I0625 15:44:27.525563 13917 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0625 15:44:27.525698 13917 net.cpp:150] Setting up relu4_3
I0625 15:44:27.525704 13917 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:44:27.525707 13917 net.cpp:165] Memory required for data: 1356000108
I0625 15:44:27.525708 13917 layer_factory.hpp:77] Creating layer pool4
I0625 15:44:27.525714 13917 net.cpp:106] Creating Layer pool4
I0625 15:44:27.525717 13917 net.cpp:454] pool4 <- conv4_3
I0625 15:44:27.525733 13917 net.cpp:411] pool4 -> pool4
I0625 15:44:27.525775 13917 net.cpp:150] Setting up pool4
I0625 15:44:27.525779 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.525781 13917 net.cpp:165] Memory required for data: 1360903020
I0625 15:44:27.525782 13917 layer_factory.hpp:77] Creating layer conv5_1
I0625 15:44:27.525789 13917 net.cpp:106] Creating Layer conv5_1
I0625 15:44:27.525791 13917 net.cpp:454] conv5_1 <- pool4
I0625 15:44:27.525806 13917 net.cpp:411] conv5_1 -> conv5_1
I0625 15:44:27.530428 13917 net.cpp:150] Setting up conv5_1
I0625 15:44:27.530447 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.530449 13917 net.cpp:165] Memory required for data: 1365805932
I0625 15:44:27.530457 13917 layer_factory.hpp:77] Creating layer relu5_1
I0625 15:44:27.530464 13917 net.cpp:106] Creating Layer relu5_1
I0625 15:44:27.530483 13917 net.cpp:454] relu5_1 <- conv5_1
I0625 15:44:27.530488 13917 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0625 15:44:27.530648 13917 net.cpp:150] Setting up relu5_1
I0625 15:44:27.530655 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.530658 13917 net.cpp:165] Memory required for data: 1370708844
I0625 15:44:27.530659 13917 layer_factory.hpp:77] Creating layer conv5_2
I0625 15:44:27.530665 13917 net.cpp:106] Creating Layer conv5_2
I0625 15:44:27.530668 13917 net.cpp:454] conv5_2 <- conv5_1
I0625 15:44:27.530671 13917 net.cpp:411] conv5_2 -> conv5_2
I0625 15:44:27.535928 13917 net.cpp:150] Setting up conv5_2
I0625 15:44:27.535960 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.535965 13917 net.cpp:165] Memory required for data: 1375611756
I0625 15:44:27.535977 13917 layer_factory.hpp:77] Creating layer relu5_2
I0625 15:44:27.535990 13917 net.cpp:106] Creating Layer relu5_2
I0625 15:44:27.535997 13917 net.cpp:454] relu5_2 <- conv5_2
I0625 15:44:27.536006 13917 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0625 15:44:27.536214 13917 net.cpp:150] Setting up relu5_2
I0625 15:44:27.536252 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.536269 13917 net.cpp:165] Memory required for data: 1380514668
I0625 15:44:27.536285 13917 layer_factory.hpp:77] Creating layer conv5_3
I0625 15:44:27.536322 13917 net.cpp:106] Creating Layer conv5_3
I0625 15:44:27.536340 13917 net.cpp:454] conv5_3 <- conv5_2
I0625 15:44:27.536362 13917 net.cpp:411] conv5_3 -> conv5_3
I0625 15:44:27.543962 13917 net.cpp:150] Setting up conv5_3
I0625 15:44:27.543992 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.543998 13917 net.cpp:165] Memory required for data: 1385417580
I0625 15:44:27.544008 13917 layer_factory.hpp:77] Creating layer relu5_3
I0625 15:44:27.544018 13917 net.cpp:106] Creating Layer relu5_3
I0625 15:44:27.544025 13917 net.cpp:454] relu5_3 <- conv5_3
I0625 15:44:27.544042 13917 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0625 15:44:27.544235 13917 net.cpp:150] Setting up relu5_3
I0625 15:44:27.544245 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.544247 13917 net.cpp:165] Memory required for data: 1390320492
I0625 15:44:27.544250 13917 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0625 15:44:27.544256 13917 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0625 15:44:27.544260 13917 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0625 15:44:27.544265 13917 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0625 15:44:27.544272 13917 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0625 15:44:27.544293 13917 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0625 15:44:27.544375 13917 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0625 15:44:27.544384 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.544386 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.544390 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.544392 13917 net.cpp:165] Memory required for data: 1405029228
I0625 15:44:27.544407 13917 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0625 15:44:27.544426 13917 net.cpp:106] Creating Layer rpn_conv/3x3
I0625 15:44:27.544430 13917 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0625 15:44:27.544447 13917 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0625 15:44:27.606062 13917 net.cpp:150] Setting up rpn_conv/3x3
I0625 15:44:27.606082 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.606086 13917 net.cpp:165] Memory required for data: 1409932140
I0625 15:44:27.606093 13917 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0625 15:44:27.606101 13917 net.cpp:106] Creating Layer rpn_relu/3x3
I0625 15:44:27.606106 13917 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0625 15:44:27.606119 13917 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0625 15:44:27.606242 13917 net.cpp:150] Setting up rpn_relu/3x3
I0625 15:44:27.606250 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.606251 13917 net.cpp:165] Memory required for data: 1414835052
I0625 15:44:27.606252 13917 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0625 15:44:27.606261 13917 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0625 15:44:27.606274 13917 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0625 15:44:27.606278 13917 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0625 15:44:27.606293 13917 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0625 15:44:27.606335 13917 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0625 15:44:27.606339 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.606341 13917 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:44:27.606353 13917 net.cpp:165] Memory required for data: 1424640876
I0625 15:44:27.606354 13917 layer_factory.hpp:77] Creating layer rpn_cls_score
I0625 15:44:27.606371 13917 net.cpp:106] Creating Layer rpn_cls_score
I0625 15:44:27.606374 13917 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0625 15:44:27.606376 13917 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0625 15:44:27.608080 13917 net.cpp:150] Setting up rpn_cls_score
I0625 15:44:27.608089 13917 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:44:27.608091 13917 net.cpp:165] Memory required for data: 1424928156
I0625 15:44:27.608106 13917 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0625 15:44:27.608111 13917 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0625 15:44:27.608114 13917 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0625 15:44:27.608119 13917 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0625 15:44:27.608122 13917 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0625 15:44:27.608158 13917 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0625 15:44:27.608162 13917 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:44:27.608165 13917 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:44:27.608166 13917 net.cpp:165] Memory required for data: 1425502716
I0625 15:44:27.608168 13917 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0625 15:44:27.608184 13917 net.cpp:106] Creating Layer rpn_bbox_pred
I0625 15:44:27.608187 13917 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0625 15:44:27.608191 13917 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0625 15:44:27.610293 13917 net.cpp:150] Setting up rpn_bbox_pred
I0625 15:44:27.610304 13917 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:44:27.610306 13917 net.cpp:165] Memory required for data: 1426077276
I0625 15:44:27.610311 13917 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:44:27.610316 13917 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:44:27.610319 13917 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0625 15:44:27.610323 13917 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 15:44:27.610329 13917 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 15:44:27.610357 13917 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:44:27.610361 13917 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:44:27.610364 13917 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:44:27.610366 13917 net.cpp:165] Memory required for data: 1427226396
I0625 15:44:27.610368 13917 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0625 15:44:27.610373 13917 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0625 15:44:27.610378 13917 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0625 15:44:27.610380 13917 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0625 15:44:27.610397 13917 net.cpp:150] Setting up rpn_cls_score_reshape
I0625 15:44:27.610400 13917 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:44:27.610402 13917 net.cpp:165] Memory required for data: 1427513676
I0625 15:44:27.610404 13917 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:44:27.610407 13917 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:44:27.610409 13917 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0625 15:44:27.610412 13917 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 15:44:27.610415 13917 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 15:44:27.610435 13917 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:44:27.610438 13917 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:44:27.610441 13917 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:44:27.610442 13917 net.cpp:165] Memory required for data: 1428088236
I0625 15:44:27.610445 13917 layer_factory.hpp:77] Creating layer rpn-data
I0625 15:44:27.620467 13917 net.cpp:106] Creating Layer rpn-data
I0625 15:44:27.620488 13917 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0625 15:44:27.620496 13917 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0625 15:44:27.620501 13917 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0625 15:44:27.620514 13917 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0625 15:44:27.620520 13917 net.cpp:411] rpn-data -> rpn_labels
I0625 15:44:27.620540 13917 net.cpp:411] rpn-data -> rpn_bbox_targets
I0625 15:44:27.620548 13917 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0625 15:44:27.620551 13917 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0625 15:44:27.623631 13917 net.cpp:150] Setting up rpn-data
I0625 15:44:27.623641 13917 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0625 15:44:27.623644 13917 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:44:27.623646 13917 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:44:27.623648 13917 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:44:27.623651 13917 net.cpp:165] Memory required for data: 1429955556
I0625 15:44:27.623653 13917 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 15:44:27.623661 13917 net.cpp:106] Creating Layer rpn_loss_cls
I0625 15:44:27.623664 13917 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 15:44:27.623668 13917 net.cpp:454] rpn_loss_cls <- rpn_labels
I0625 15:44:27.623672 13917 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0625 15:44:27.623682 13917 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 15:44:27.624982 13917 net.cpp:150] Setting up rpn_loss_cls
I0625 15:44:27.624991 13917 net.cpp:157] Top shape: (1)
I0625 15:44:27.624994 13917 net.cpp:160]     with loss weight 1
I0625 15:44:27.625001 13917 net.cpp:165] Memory required for data: 1429955560
I0625 15:44:27.625005 13917 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0625 15:44:27.625013 13917 net.cpp:106] Creating Layer rpn_loss_bbox
I0625 15:44:27.625016 13917 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 15:44:27.625020 13917 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0625 15:44:27.625022 13917 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0625 15:44:27.625025 13917 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0625 15:44:27.625028 13917 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0625 15:44:27.626125 13917 net.cpp:150] Setting up rpn_loss_bbox
I0625 15:44:27.626132 13917 net.cpp:157] Top shape: (1)
I0625 15:44:27.626134 13917 net.cpp:160]     with loss weight 1
I0625 15:44:27.626137 13917 net.cpp:165] Memory required for data: 1429955564
I0625 15:44:27.626139 13917 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0625 15:44:27.626143 13917 net.cpp:106] Creating Layer rpn_cls_prob
I0625 15:44:27.626145 13917 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 15:44:27.626159 13917 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0625 15:44:27.626376 13917 net.cpp:150] Setting up rpn_cls_prob
I0625 15:44:27.626384 13917 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:44:27.626385 13917 net.cpp:165] Memory required for data: 1430242844
I0625 15:44:27.626387 13917 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0625 15:44:27.626391 13917 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0625 15:44:27.626394 13917 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0625 15:44:27.626397 13917 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0625 15:44:27.626437 13917 net.cpp:150] Setting up rpn_cls_prob_reshape
I0625 15:44:27.626441 13917 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:44:27.626452 13917 net.cpp:165] Memory required for data: 1430530124
I0625 15:44:27.626453 13917 layer_factory.hpp:77] Creating layer proposal
I0625 15:44:27.631242 13917 net.cpp:106] Creating Layer proposal
I0625 15:44:27.631264 13917 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0625 15:44:27.631268 13917 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 15:44:27.631273 13917 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0625 15:44:27.631275 13917 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0625 15:44:27.632756 13917 net.cpp:150] Setting up proposal
I0625 15:44:27.632777 13917 net.cpp:157] Top shape: 1 5 (5)
I0625 15:44:27.632779 13917 net.cpp:165] Memory required for data: 1430530144
I0625 15:44:27.632782 13917 layer_factory.hpp:77] Creating layer roi-data
I0625 15:44:27.638458 13917 net.cpp:106] Creating Layer roi-data
I0625 15:44:27.638473 13917 net.cpp:454] roi-data <- rpn_rois
I0625 15:44:27.638478 13917 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0625 15:44:27.638481 13917 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0625 15:44:27.638484 13917 net.cpp:454] roi-data <- seg_mask_inds
I0625 15:44:27.638486 13917 net.cpp:454] roi-data <- flipped
I0625 15:44:27.638490 13917 net.cpp:411] roi-data -> rois
I0625 15:44:27.638497 13917 net.cpp:411] roi-data -> labels
I0625 15:44:27.638502 13917 net.cpp:411] roi-data -> bbox_targets
I0625 15:44:27.638507 13917 net.cpp:411] roi-data -> bbox_inside_weights
I0625 15:44:27.638514 13917 net.cpp:411] roi-data -> bbox_outside_weights
I0625 15:44:27.638520 13917 net.cpp:411] roi-data -> mask_targets
I0625 15:44:27.638525 13917 net.cpp:411] roi-data -> rois_pos
I0625 15:44:27.638530 13917 net.cpp:411] roi-data -> attrArray
I0625 15:44:27.638536 13917 net.cpp:411] roi-data -> attrArrayInd
I0625 15:44:27.638542 13917 net.cpp:411] roi-data -> attrArrayShift
I0625 15:44:27.638962 13917 net.cpp:150] Setting up roi-data
I0625 15:44:27.638972 13917 net.cpp:157] Top shape: 1 5 (5)
I0625 15:44:27.638988 13917 net.cpp:157] Top shape: 1 1 (1)
I0625 15:44:27.638990 13917 net.cpp:157] Top shape: 1 8 (8)
I0625 15:44:27.638993 13917 net.cpp:157] Top shape: 1 8 (8)
I0625 15:44:27.638995 13917 net.cpp:157] Top shape: 1 8 (8)
I0625 15:44:27.639008 13917 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:44:27.639010 13917 net.cpp:157] Top shape: 1 5 (5)
I0625 15:44:27.639014 13917 net.cpp:157] Top shape: 1 7 (7)
I0625 15:44:27.639026 13917 net.cpp:157] Top shape: 1 7 (7)
I0625 15:44:27.639030 13917 net.cpp:157] Top shape: 1 7 (7)
I0625 15:44:27.639032 13917 net.cpp:165] Memory required for data: 1432435520
I0625 15:44:27.639045 13917 layer_factory.hpp:77] Creating layer roi_pool5
I0625 15:44:27.641950 13917 net.cpp:106] Creating Layer roi_pool5
I0625 15:44:27.641957 13917 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0625 15:44:27.641961 13917 net.cpp:454] roi_pool5 <- rois
I0625 15:44:27.641964 13917 net.cpp:411] roi_pool5 -> pool5
I0625 15:44:27.641970 13917 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 15:44:27.642057 13917 net.cpp:150] Setting up roi_pool5
I0625 15:44:27.642063 13917 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:44:27.642066 13917 net.cpp:165] Memory required for data: 1432535872
I0625 15:44:27.642068 13917 layer_factory.hpp:77] Creating layer fc6
I0625 15:44:27.642074 13917 net.cpp:106] Creating Layer fc6
I0625 15:44:27.642078 13917 net.cpp:454] fc6 <- pool5
I0625 15:44:27.642084 13917 net.cpp:411] fc6 -> fc6
I0625 15:44:27.900843 13917 net.cpp:150] Setting up fc6
I0625 15:44:27.900895 13917 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:44:27.900903 13917 net.cpp:165] Memory required for data: 1432552256
I0625 15:44:27.900933 13917 layer_factory.hpp:77] Creating layer relu6
I0625 15:44:27.900949 13917 net.cpp:106] Creating Layer relu6
I0625 15:44:27.900959 13917 net.cpp:454] relu6 <- fc6
I0625 15:44:27.900967 13917 net.cpp:397] relu6 -> fc6 (in-place)
I0625 15:44:27.901304 13917 net.cpp:150] Setting up relu6
I0625 15:44:27.901337 13917 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:44:27.901345 13917 net.cpp:165] Memory required for data: 1432568640
I0625 15:44:27.901350 13917 layer_factory.hpp:77] Creating layer fc7
I0625 15:44:27.901360 13917 net.cpp:106] Creating Layer fc7
I0625 15:44:27.901365 13917 net.cpp:454] fc7 <- fc6
I0625 15:44:27.901382 13917 net.cpp:411] fc7 -> fc7
I0625 15:44:27.939137 13917 net.cpp:150] Setting up fc7
I0625 15:44:27.939206 13917 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:44:27.939232 13917 net.cpp:165] Memory required for data: 1432585024
I0625 15:44:27.939261 13917 layer_factory.hpp:77] Creating layer relu7
I0625 15:44:27.939283 13917 net.cpp:106] Creating Layer relu7
I0625 15:44:27.939301 13917 net.cpp:454] relu7 <- fc7
I0625 15:44:27.939316 13917 net.cpp:397] relu7 -> fc7 (in-place)
I0625 15:44:27.939699 13917 net.cpp:150] Setting up relu7
I0625 15:44:27.939725 13917 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:44:27.939739 13917 net.cpp:165] Memory required for data: 1432601408
I0625 15:44:27.939754 13917 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0625 15:44:27.939769 13917 net.cpp:106] Creating Layer fc7_relu7_0_split
I0625 15:44:27.939782 13917 net.cpp:454] fc7_relu7_0_split <- fc7
I0625 15:44:27.939796 13917 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0625 15:44:27.939815 13917 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0625 15:44:27.939833 13917 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0625 15:44:27.939936 13917 net.cpp:150] Setting up fc7_relu7_0_split
I0625 15:44:27.939958 13917 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:44:27.939972 13917 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:44:27.939985 13917 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:44:27.939994 13917 net.cpp:165] Memory required for data: 1432650560
I0625 15:44:27.940006 13917 layer_factory.hpp:77] Creating layer attr_score
I0625 15:44:27.940022 13917 net.cpp:106] Creating Layer attr_score
I0625 15:44:27.940035 13917 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0625 15:44:27.940052 13917 net.cpp:411] attr_score -> attr_score
I0625 15:44:27.941074 13917 net.cpp:150] Setting up attr_score
I0625 15:44:27.941112 13917 net.cpp:157] Top shape: 1 7 (7)
I0625 15:44:27.941128 13917 net.cpp:165] Memory required for data: 1432650588
I0625 15:44:27.941149 13917 layer_factory.hpp:77] Creating layer attr_score_pos
I0625 15:44:27.941169 13917 net.cpp:106] Creating Layer attr_score_pos
I0625 15:44:27.941184 13917 net.cpp:454] attr_score_pos <- attr_score
I0625 15:44:27.941198 13917 net.cpp:454] attr_score_pos <- attrArrayInd
I0625 15:44:27.941212 13917 net.cpp:411] attr_score_pos -> attr_score_pos
I0625 15:44:27.941259 13917 net.cpp:150] Setting up attr_score_pos
I0625 15:44:27.941280 13917 net.cpp:157] Top shape: 1 7 (7)
I0625 15:44:27.941293 13917 net.cpp:165] Memory required for data: 1432650616
I0625 15:44:27.941304 13917 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0625 15:44:27.941318 13917 net.cpp:106] Creating Layer attr_score_pos_shift
I0625 15:44:27.941331 13917 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0625 15:44:27.941345 13917 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0625 15:44:27.941361 13917 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0625 15:44:27.941407 13917 net.cpp:150] Setting up attr_score_pos_shift
I0625 15:44:27.941427 13917 net.cpp:157] Top shape: 1 7 (7)
I0625 15:44:27.941439 13917 net.cpp:165] Memory required for data: 1432650644
I0625 15:44:27.941450 13917 layer_factory.hpp:77] Creating layer cls_score
I0625 15:44:27.941467 13917 net.cpp:106] Creating Layer cls_score
I0625 15:44:27.941478 13917 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0625 15:44:27.941493 13917 net.cpp:411] cls_score -> cls_score
I0625 15:44:27.941887 13917 net.cpp:150] Setting up cls_score
I0625 15:44:27.941911 13917 net.cpp:157] Top shape: 1 2 (2)
I0625 15:44:27.941924 13917 net.cpp:165] Memory required for data: 1432650652
I0625 15:44:27.941941 13917 layer_factory.hpp:77] Creating layer bbox_pred
I0625 15:44:27.941956 13917 net.cpp:106] Creating Layer bbox_pred
I0625 15:44:27.941968 13917 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0625 15:44:27.941990 13917 net.cpp:411] bbox_pred -> bbox_pred
I0625 15:44:27.943089 13917 net.cpp:150] Setting up bbox_pred
I0625 15:44:27.943130 13917 net.cpp:157] Top shape: 1 8 (8)
I0625 15:44:27.943145 13917 net.cpp:165] Memory required for data: 1432650684
I0625 15:44:27.943163 13917 layer_factory.hpp:77] Creating layer loss_attribute
I0625 15:44:27.947654 13917 net.cpp:106] Creating Layer loss_attribute
I0625 15:44:27.947703 13917 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0625 15:44:27.947731 13917 net.cpp:454] loss_attribute <- attrArray
I0625 15:44:27.947752 13917 net.cpp:411] loss_attribute -> loss_attribute
I0625 15:44:27.947912 13917 net.cpp:150] Setting up loss_attribute
I0625 15:44:27.947924 13917 net.cpp:157] Top shape: (1)
I0625 15:44:27.947927 13917 net.cpp:160]     with loss weight 1
I0625 15:44:27.947955 13917 net.cpp:165] Memory required for data: 1432650688
I0625 15:44:27.947970 13917 layer_factory.hpp:77] Creating layer loss_cls
I0625 15:44:27.947979 13917 net.cpp:106] Creating Layer loss_cls
I0625 15:44:27.947993 13917 net.cpp:454] loss_cls <- cls_score
I0625 15:44:27.948006 13917 net.cpp:454] loss_cls <- labels
I0625 15:44:27.948021 13917 net.cpp:411] loss_cls -> loss_cls
I0625 15:44:27.948032 13917 layer_factory.hpp:77] Creating layer loss_cls
I0625 15:44:27.948935 13917 net.cpp:150] Setting up loss_cls
I0625 15:44:27.948948 13917 net.cpp:157] Top shape: (1)
I0625 15:44:27.948951 13917 net.cpp:160]     with loss weight 3
I0625 15:44:27.948971 13917 net.cpp:165] Memory required for data: 1432650692
I0625 15:44:27.948990 13917 layer_factory.hpp:77] Creating layer loss_bbox
I0625 15:44:27.949034 13917 net.cpp:106] Creating Layer loss_bbox
I0625 15:44:27.949046 13917 net.cpp:454] loss_bbox <- bbox_pred
I0625 15:44:27.949059 13917 net.cpp:454] loss_bbox <- bbox_targets
I0625 15:44:27.949070 13917 net.cpp:454] loss_bbox <- bbox_inside_weights
I0625 15:44:27.949081 13917 net.cpp:454] loss_bbox <- bbox_outside_weights
I0625 15:44:27.949093 13917 net.cpp:411] loss_bbox -> loss_bbox
I0625 15:44:27.949317 13917 net.cpp:150] Setting up loss_bbox
I0625 15:44:27.949331 13917 net.cpp:157] Top shape: (1)
I0625 15:44:27.949338 13917 net.cpp:160]     with loss weight 2
I0625 15:44:27.949352 13917 net.cpp:165] Memory required for data: 1432650696
I0625 15:44:27.949362 13917 layer_factory.hpp:77] Creating layer roi_pool5_2
I0625 15:44:27.949378 13917 net.cpp:106] Creating Layer roi_pool5_2
I0625 15:44:27.949389 13917 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0625 15:44:27.949400 13917 net.cpp:454] roi_pool5_2 <- rois_pos
I0625 15:44:27.949414 13917 net.cpp:411] roi_pool5_2 -> pool5_2
I0625 15:44:27.949431 13917 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 15:44:27.949671 13917 net.cpp:150] Setting up roi_pool5_2
I0625 15:44:27.949684 13917 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:44:27.949692 13917 net.cpp:165] Memory required for data: 1432751048
I0625 15:44:27.949700 13917 layer_factory.hpp:77] Creating layer pool5_2_conv
I0625 15:44:27.949726 13917 net.cpp:106] Creating Layer pool5_2_conv
I0625 15:44:27.949736 13917 net.cpp:454] pool5_2_conv <- pool5_2
I0625 15:44:27.949749 13917 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0625 15:44:27.957985 13917 net.cpp:150] Setting up pool5_2_conv
I0625 15:44:27.958006 13917 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:44:27.958009 13917 net.cpp:165] Memory required for data: 1432851400
I0625 15:44:27.958017 13917 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0625 15:44:27.958034 13917 net.cpp:106] Creating Layer pool5_2_conv_relu
I0625 15:44:27.958048 13917 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0625 15:44:27.958055 13917 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0625 15:44:27.958221 13917 net.cpp:150] Setting up pool5_2_conv_relu
I0625 15:44:27.958228 13917 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:44:27.958231 13917 net.cpp:165] Memory required for data: 1432951752
I0625 15:44:27.958233 13917 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0625 15:44:27.958245 13917 net.cpp:106] Creating Layer pool5_2_conv2
I0625 15:44:27.958247 13917 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0625 15:44:27.958251 13917 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0625 15:44:28.013881 13917 net.cpp:150] Setting up pool5_2_conv2
I0625 15:44:28.013901 13917 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:44:28.013903 13917 net.cpp:165] Memory required for data: 1433052104
I0625 15:44:28.013911 13917 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0625 15:44:28.013919 13917 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0625 15:44:28.013926 13917 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0625 15:44:28.013932 13917 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0625 15:44:28.014109 13917 net.cpp:150] Setting up pool5_2_conv2_relu
I0625 15:44:28.014118 13917 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:44:28.014122 13917 net.cpp:165] Memory required for data: 1433152456
I0625 15:44:28.014124 13917 layer_factory.hpp:77] Creating layer mask_deconv1
I0625 15:44:28.014134 13917 net.cpp:106] Creating Layer mask_deconv1
I0625 15:44:28.014138 13917 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0625 15:44:28.014145 13917 net.cpp:411] mask_deconv1 -> mask_deconv1
I0625 15:44:28.016578 13917 net.cpp:150] Setting up mask_deconv1
I0625 15:44:28.016594 13917 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0625 15:44:28.016597 13917 net.cpp:165] Memory required for data: 1434074056
I0625 15:44:28.016604 13917 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0625 15:44:28.016618 13917 net.cpp:106] Creating Layer pool5_2_conv3
I0625 15:44:28.016635 13917 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0625 15:44:28.016656 13917 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0625 15:44:28.045267 13917 net.cpp:150] Setting up pool5_2_conv3
I0625 15:44:28.045284 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.045287 13917 net.cpp:165] Memory required for data: 1435917256
I0625 15:44:28.045295 13917 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0625 15:44:28.045302 13917 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0625 15:44:28.045316 13917 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0625 15:44:28.045321 13917 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0625 15:44:28.045511 13917 net.cpp:150] Setting up pool5_2_conv3_relu
I0625 15:44:28.045517 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.045528 13917 net.cpp:165] Memory required for data: 1437760456
I0625 15:44:28.045531 13917 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0625 15:44:28.045538 13917 net.cpp:106] Creating Layer pool5_2_conv4
I0625 15:44:28.045542 13917 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0625 15:44:28.045545 13917 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0625 15:44:28.098098 13917 net.cpp:150] Setting up pool5_2_conv4
I0625 15:44:28.098147 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.098152 13917 net.cpp:165] Memory required for data: 1439603656
I0625 15:44:28.098162 13917 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0625 15:44:28.098172 13917 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0625 15:44:28.098177 13917 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0625 15:44:28.098183 13917 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0625 15:44:28.098346 13917 net.cpp:150] Setting up pool5_2_conv4_relu
I0625 15:44:28.098352 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.098354 13917 net.cpp:165] Memory required for data: 1441446856
I0625 15:44:28.098366 13917 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 15:44:28.098371 13917 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 15:44:28.098373 13917 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0625 15:44:28.098376 13917 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0625 15:44:28.098381 13917 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0625 15:44:28.098383 13917 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0625 15:44:28.098387 13917 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0625 15:44:28.098429 13917 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 15:44:28.098443 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.098444 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.098446 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.098448 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.098449 13917 net.cpp:165] Memory required for data: 1448819656
I0625 15:44:28.098461 13917 layer_factory.hpp:77] Creating layer query_conv
I0625 15:44:28.098469 13917 net.cpp:106] Creating Layer query_conv
I0625 15:44:28.098471 13917 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0625 15:44:28.098475 13917 net.cpp:411] query_conv -> query_conv
I0625 15:44:28.100248 13917 net.cpp:150] Setting up query_conv
I0625 15:44:28.100273 13917 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0625 15:44:28.100275 13917 net.cpp:165] Memory required for data: 1449050056
I0625 15:44:28.100281 13917 layer_factory.hpp:77] Creating layer key_conv
I0625 15:44:28.100292 13917 net.cpp:106] Creating Layer key_conv
I0625 15:44:28.100296 13917 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0625 15:44:28.100301 13917 net.cpp:411] key_conv -> key_conv
I0625 15:44:28.102044 13917 net.cpp:150] Setting up key_conv
I0625 15:44:28.102059 13917 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0625 15:44:28.102062 13917 net.cpp:165] Memory required for data: 1449280456
I0625 15:44:28.102080 13917 layer_factory.hpp:77] Creating layer value_conv
I0625 15:44:28.102094 13917 net.cpp:106] Creating Layer value_conv
I0625 15:44:28.102099 13917 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0625 15:44:28.102107 13917 net.cpp:411] value_conv -> value_conv
I0625 15:44:28.110379 13917 net.cpp:150] Setting up value_conv
I0625 15:44:28.110400 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.110404 13917 net.cpp:165] Memory required for data: 1451123656
I0625 15:44:28.110422 13917 layer_factory.hpp:77] Creating layer query_conv_reshape
I0625 15:44:28.110443 13917 net.cpp:106] Creating Layer query_conv_reshape
I0625 15:44:28.110450 13917 net.cpp:454] query_conv_reshape <- query_conv
I0625 15:44:28.110458 13917 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0625 15:44:28.110488 13917 net.cpp:150] Setting up query_conv_reshape
I0625 15:44:28.110496 13917 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0625 15:44:28.110498 13917 net.cpp:165] Memory required for data: 1451354056
I0625 15:44:28.110502 13917 layer_factory.hpp:77] Creating layer key_conv_reshape
I0625 15:44:28.110507 13917 net.cpp:106] Creating Layer key_conv_reshape
I0625 15:44:28.110512 13917 net.cpp:454] key_conv_reshape <- key_conv
I0625 15:44:28.110517 13917 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0625 15:44:28.110538 13917 net.cpp:150] Setting up key_conv_reshape
I0625 15:44:28.110543 13917 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0625 15:44:28.110555 13917 net.cpp:165] Memory required for data: 1451584456
I0625 15:44:28.110558 13917 layer_factory.hpp:77] Creating layer value_conv_reshape
I0625 15:44:28.110574 13917 net.cpp:106] Creating Layer value_conv_reshape
I0625 15:44:28.110579 13917 net.cpp:454] value_conv_reshape <- value_conv
I0625 15:44:28.110582 13917 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0625 15:44:28.110602 13917 net.cpp:150] Setting up value_conv_reshape
I0625 15:44:28.110608 13917 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0625 15:44:28.110610 13917 net.cpp:165] Memory required for data: 1453427656
I0625 15:44:28.110622 13917 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0625 15:44:28.111078 13917 net.cpp:106] Creating Layer query_conv_reshape_perm
I0625 15:44:28.111083 13917 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0625 15:44:28.111089 13917 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0625 15:44:28.111183 13917 net.cpp:150] Setting up query_conv_reshape_perm
I0625 15:44:28.111191 13917 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0625 15:44:28.111194 13917 net.cpp:165] Memory required for data: 1453658056
I0625 15:44:28.111207 13917 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0625 15:44:28.111212 13917 net.cpp:106] Creating Layer key_conv_reshape_perm
I0625 15:44:28.111215 13917 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0625 15:44:28.111220 13917 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0625 15:44:28.111285 13917 net.cpp:150] Setting up key_conv_reshape_perm
I0625 15:44:28.111291 13917 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0625 15:44:28.111294 13917 net.cpp:165] Memory required for data: 1453888456
I0625 15:44:28.111297 13917 layer_factory.hpp:77] Creating layer energy
I0625 15:44:28.111474 13917 net.cpp:106] Creating Layer energy
I0625 15:44:28.111479 13917 net.cpp:454] energy <- query_conv_reshape_perm
I0625 15:44:28.111482 13917 net.cpp:454] energy <- key_conv_reshape_perm
I0625 15:44:28.111490 13917 net.cpp:411] energy -> energy
I0625 15:44:28.111512 13917 net.cpp:150] Setting up energy
I0625 15:44:28.111518 13917 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 15:44:28.111521 13917 net.cpp:165] Memory required for data: 1457128456
I0625 15:44:28.111523 13917 layer_factory.hpp:77] Creating layer attention
I0625 15:44:28.111529 13917 net.cpp:106] Creating Layer attention
I0625 15:44:28.111533 13917 net.cpp:454] attention <- energy
I0625 15:44:28.111539 13917 net.cpp:411] attention -> attention
I0625 15:44:28.111711 13917 net.cpp:150] Setting up attention
I0625 15:44:28.111718 13917 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 15:44:28.111721 13917 net.cpp:165] Memory required for data: 1460368456
I0625 15:44:28.111724 13917 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0625 15:44:28.111729 13917 net.cpp:106] Creating Layer value_conv_reshape_perm
I0625 15:44:28.111732 13917 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0625 15:44:28.111740 13917 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0625 15:44:28.111812 13917 net.cpp:150] Setting up value_conv_reshape_perm
I0625 15:44:28.111819 13917 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0625 15:44:28.111821 13917 net.cpp:165] Memory required for data: 1462211656
I0625 15:44:28.111824 13917 layer_factory.hpp:77] Creating layer attention_perm
I0625 15:44:28.111829 13917 net.cpp:106] Creating Layer attention_perm
I0625 15:44:28.111833 13917 net.cpp:454] attention_perm <- attention
I0625 15:44:28.111840 13917 net.cpp:411] attention_perm -> attention_perm
I0625 15:44:28.111907 13917 net.cpp:150] Setting up attention_perm
I0625 15:44:28.111912 13917 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 15:44:28.111914 13917 net.cpp:165] Memory required for data: 1465451656
I0625 15:44:28.111917 13917 layer_factory.hpp:77] Creating layer out
I0625 15:44:28.111922 13917 net.cpp:106] Creating Layer out
I0625 15:44:28.111925 13917 net.cpp:454] out <- value_conv_reshape_perm
I0625 15:44:28.111929 13917 net.cpp:454] out <- attention_perm
I0625 15:44:28.111934 13917 net.cpp:411] out -> out
I0625 15:44:28.111954 13917 net.cpp:150] Setting up out
I0625 15:44:28.111959 13917 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0625 15:44:28.111963 13917 net.cpp:165] Memory required for data: 1467294856
I0625 15:44:28.111965 13917 layer_factory.hpp:77] Creating layer out_reshape
I0625 15:44:28.111970 13917 net.cpp:106] Creating Layer out_reshape
I0625 15:44:28.111974 13917 net.cpp:454] out_reshape <- out
I0625 15:44:28.111979 13917 net.cpp:411] out_reshape -> out_reshape
I0625 15:44:28.111997 13917 net.cpp:150] Setting up out_reshape
I0625 15:44:28.112001 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.112004 13917 net.cpp:165] Memory required for data: 1469138056
I0625 15:44:28.112007 13917 layer_factory.hpp:77] Creating layer out_reshape_scale
I0625 15:44:28.112452 13917 net.cpp:106] Creating Layer out_reshape_scale
I0625 15:44:28.112457 13917 net.cpp:454] out_reshape_scale <- out_reshape
I0625 15:44:28.112462 13917 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0625 15:44:28.112529 13917 net.cpp:150] Setting up out_reshape_scale
I0625 15:44:28.112534 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.112537 13917 net.cpp:165] Memory required for data: 1470981256
I0625 15:44:28.112541 13917 layer_factory.hpp:77] Creating layer out_x
I0625 15:44:28.112550 13917 net.cpp:106] Creating Layer out_x
I0625 15:44:28.112555 13917 net.cpp:454] out_x <- out_reshape_scale
I0625 15:44:28.112558 13917 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0625 15:44:28.112565 13917 net.cpp:411] out_x -> out_x
I0625 15:44:28.112586 13917 net.cpp:150] Setting up out_x
I0625 15:44:28.112591 13917 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:44:28.112593 13917 net.cpp:165] Memory required for data: 1472824456
I0625 15:44:28.112596 13917 layer_factory.hpp:77] Creating layer mask_deconv2
I0625 15:44:28.112604 13917 net.cpp:106] Creating Layer mask_deconv2
I0625 15:44:28.112607 13917 net.cpp:454] mask_deconv2 <- out_x
I0625 15:44:28.112613 13917 net.cpp:411] mask_deconv2 -> mask_deconv2
I0625 15:44:28.113420 13917 net.cpp:150] Setting up mask_deconv2
I0625 15:44:28.113427 13917 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0625 15:44:28.113430 13917 net.cpp:165] Memory required for data: 1488065672
I0625 15:44:28.113437 13917 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0625 15:44:28.113447 13917 net.cpp:106] Creating Layer pool5_2_conv5
I0625 15:44:28.113451 13917 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0625 15:44:28.113458 13917 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0625 15:44:28.140229 13917 net.cpp:150] Setting up pool5_2_conv5
I0625 15:44:28.140249 13917 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 15:44:28.140254 13917 net.cpp:165] Memory required for data: 1518548104
I0625 15:44:28.140264 13917 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0625 15:44:28.140285 13917 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0625 15:44:28.140300 13917 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0625 15:44:28.140309 13917 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0625 15:44:28.140483 13917 net.cpp:150] Setting up pool5_2_conv5_relu
I0625 15:44:28.140492 13917 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 15:44:28.140496 13917 net.cpp:165] Memory required for data: 1549030536
I0625 15:44:28.140509 13917 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0625 15:44:28.140530 13917 net.cpp:106] Creating Layer pool5_2_conv6
I0625 15:44:28.140535 13917 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0625 15:44:28.140543 13917 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0625 15:44:28.200178 13917 net.cpp:150] Setting up pool5_2_conv6
I0625 15:44:28.200199 13917 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 15:44:28.200203 13917 net.cpp:165] Memory required for data: 1579512968
I0625 15:44:28.200234 13917 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0625 15:44:28.200254 13917 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0625 15:44:28.200270 13917 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0625 15:44:28.200278 13917 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0625 15:44:28.200842 13917 net.cpp:150] Setting up pool5_2_conv6_relu
I0625 15:44:28.200852 13917 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 15:44:28.200855 13917 net.cpp:165] Memory required for data: 1609995400
I0625 15:44:28.200860 13917 layer_factory.hpp:77] Creating layer mask_deconv3
I0625 15:44:28.200870 13917 net.cpp:106] Creating Layer mask_deconv3
I0625 15:44:28.200887 13917 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0625 15:44:28.200903 13917 net.cpp:411] mask_deconv3 -> mask_deconv3
I0625 15:44:28.201310 13917 net.cpp:150] Setting up mask_deconv3
I0625 15:44:28.201318 13917 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0625 15:44:28.201320 13917 net.cpp:165] Memory required for data: 1670960264
I0625 15:44:28.201325 13917 layer_factory.hpp:77] Creating layer mask_score
I0625 15:44:28.201336 13917 net.cpp:106] Creating Layer mask_score
I0625 15:44:28.201355 13917 net.cpp:454] mask_score <- mask_deconv3
I0625 15:44:28.201361 13917 net.cpp:411] mask_score -> mask_score
I0625 15:44:28.202363 13917 net.cpp:150] Setting up mask_score
I0625 15:44:28.202373 13917 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:44:28.202375 13917 net.cpp:165] Memory required for data: 1672865416
I0625 15:44:28.202381 13917 layer_factory.hpp:77] Creating layer prob
I0625 15:44:28.202389 13917 net.cpp:106] Creating Layer prob
I0625 15:44:28.202404 13917 net.cpp:454] prob <- mask_score
I0625 15:44:28.202422 13917 net.cpp:411] prob -> mask_score_softmax
I0625 15:44:28.203063 13917 net.cpp:150] Setting up prob
I0625 15:44:28.203073 13917 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:44:28.203076 13917 net.cpp:165] Memory required for data: 1674770568
I0625 15:44:28.203080 13917 layer_factory.hpp:77] Creating layer log
I0625 15:44:28.203088 13917 net.cpp:106] Creating Layer log
I0625 15:44:28.203092 13917 net.cpp:454] log <- mask_score_softmax
I0625 15:44:28.203099 13917 net.cpp:411] log -> log
I0625 15:44:28.203505 13917 net.cpp:150] Setting up log
I0625 15:44:28.203512 13917 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:44:28.203516 13917 net.cpp:165] Memory required for data: 1676675720
I0625 15:44:28.203518 13917 layer_factory.hpp:77] Creating layer mult1
I0625 15:44:28.203528 13917 net.cpp:106] Creating Layer mult1
I0625 15:44:28.203531 13917 net.cpp:454] mult1 <- log
I0625 15:44:28.203536 13917 net.cpp:454] mult1 <- mask_targets
I0625 15:44:28.203541 13917 net.cpp:411] mult1 -> mult1
I0625 15:44:28.203564 13917 net.cpp:150] Setting up mult1
I0625 15:44:28.203569 13917 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:44:28.203572 13917 net.cpp:165] Memory required for data: 1678580872
I0625 15:44:28.203575 13917 layer_factory.hpp:77] Creating layer cross_entropy
I0625 15:44:28.203582 13917 net.cpp:106] Creating Layer cross_entropy
I0625 15:44:28.203585 13917 net.cpp:454] cross_entropy <- mult1
I0625 15:44:28.203591 13917 net.cpp:411] cross_entropy -> cross_entropy
I0625 15:44:28.203613 13917 net.cpp:150] Setting up cross_entropy
I0625 15:44:28.203620 13917 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:44:28.203624 13917 net.cpp:165] Memory required for data: 1680486024
I0625 15:44:28.203627 13917 layer_factory.hpp:77] Creating layer ce_sum
I0625 15:44:28.203634 13917 net.cpp:106] Creating Layer ce_sum
I0625 15:44:28.203639 13917 net.cpp:454] ce_sum <- cross_entropy
I0625 15:44:28.203646 13917 net.cpp:411] ce_sum -> cross_entropy_sum
I0625 15:44:28.204962 13917 net.cpp:150] Setting up ce_sum
I0625 15:44:28.204970 13917 net.cpp:157] Top shape: 1 1 244 244 (59536)
I0625 15:44:28.204974 13917 net.cpp:165] Memory required for data: 1680724168
I0625 15:44:28.204989 13917 layer_factory.hpp:77] Creating layer ce_mean
I0625 15:44:28.205497 13917 net.cpp:106] Creating Layer ce_mean
I0625 15:44:28.205502 13917 net.cpp:454] ce_mean <- cross_entropy_sum
I0625 15:44:28.205507 13917 net.cpp:411] ce_mean -> cross_entropy_mean
I0625 15:44:28.206169 13917 net.cpp:150] Setting up ce_mean
I0625 15:44:28.206178 13917 net.cpp:157] Top shape: (1)
I0625 15:44:28.206182 13917 net.cpp:160]     with loss weight 1
I0625 15:44:28.206192 13917 net.cpp:165] Memory required for data: 1680724172
I0625 15:44:28.206197 13917 net.cpp:226] ce_mean needs backward computation.
I0625 15:44:28.206199 13917 net.cpp:226] ce_sum needs backward computation.
I0625 15:44:28.206202 13917 net.cpp:226] cross_entropy needs backward computation.
I0625 15:44:28.206205 13917 net.cpp:226] mult1 needs backward computation.
I0625 15:44:28.206208 13917 net.cpp:226] log needs backward computation.
I0625 15:44:28.206212 13917 net.cpp:226] prob needs backward computation.
I0625 15:44:28.206214 13917 net.cpp:226] mask_score needs backward computation.
I0625 15:44:28.206218 13917 net.cpp:226] mask_deconv3 needs backward computation.
I0625 15:44:28.206220 13917 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0625 15:44:28.206223 13917 net.cpp:226] pool5_2_conv6 needs backward computation.
I0625 15:44:28.206226 13917 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0625 15:44:28.206229 13917 net.cpp:226] pool5_2_conv5 needs backward computation.
I0625 15:44:28.206233 13917 net.cpp:226] mask_deconv2 needs backward computation.
I0625 15:44:28.206236 13917 net.cpp:226] out_x needs backward computation.
I0625 15:44:28.206240 13917 net.cpp:226] out_reshape_scale needs backward computation.
I0625 15:44:28.206243 13917 net.cpp:226] out_reshape needs backward computation.
I0625 15:44:28.206246 13917 net.cpp:226] out needs backward computation.
I0625 15:44:28.206249 13917 net.cpp:226] attention_perm needs backward computation.
I0625 15:44:28.206252 13917 net.cpp:226] value_conv_reshape_perm needs backward computation.
I0625 15:44:28.206270 13917 net.cpp:226] attention needs backward computation.
I0625 15:44:28.206275 13917 net.cpp:226] energy needs backward computation.
I0625 15:44:28.206279 13917 net.cpp:226] key_conv_reshape_perm needs backward computation.
I0625 15:44:28.206284 13917 net.cpp:226] query_conv_reshape_perm needs backward computation.
I0625 15:44:28.206287 13917 net.cpp:226] value_conv_reshape needs backward computation.
I0625 15:44:28.206291 13917 net.cpp:226] key_conv_reshape needs backward computation.
I0625 15:44:28.206295 13917 net.cpp:226] query_conv_reshape needs backward computation.
I0625 15:44:28.206298 13917 net.cpp:226] value_conv needs backward computation.
I0625 15:44:28.206302 13917 net.cpp:226] key_conv needs backward computation.
I0625 15:44:28.206305 13917 net.cpp:226] query_conv needs backward computation.
I0625 15:44:28.206310 13917 net.cpp:226] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split needs backward computation.
I0625 15:44:28.206313 13917 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0625 15:44:28.206316 13917 net.cpp:226] pool5_2_conv4 needs backward computation.
I0625 15:44:28.206320 13917 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0625 15:44:28.206323 13917 net.cpp:226] pool5_2_conv3 needs backward computation.
I0625 15:44:28.206326 13917 net.cpp:226] mask_deconv1 needs backward computation.
I0625 15:44:28.206329 13917 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0625 15:44:28.206333 13917 net.cpp:226] pool5_2_conv2 needs backward computation.
I0625 15:44:28.206336 13917 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0625 15:44:28.206341 13917 net.cpp:226] pool5_2_conv needs backward computation.
I0625 15:44:28.206344 13917 net.cpp:226] roi_pool5_2 needs backward computation.
I0625 15:44:28.206348 13917 net.cpp:226] loss_bbox needs backward computation.
I0625 15:44:28.206353 13917 net.cpp:226] loss_cls needs backward computation.
I0625 15:44:28.206358 13917 net.cpp:226] loss_attribute needs backward computation.
I0625 15:44:28.206363 13917 net.cpp:226] bbox_pred needs backward computation.
I0625 15:44:28.206367 13917 net.cpp:226] cls_score needs backward computation.
I0625 15:44:28.206372 13917 net.cpp:226] attr_score_pos_shift needs backward computation.
I0625 15:44:28.206377 13917 net.cpp:226] attr_score_pos needs backward computation.
I0625 15:44:28.206382 13917 net.cpp:226] attr_score needs backward computation.
I0625 15:44:28.206385 13917 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0625 15:44:28.206390 13917 net.cpp:226] relu7 needs backward computation.
I0625 15:44:28.206394 13917 net.cpp:226] fc7 needs backward computation.
I0625 15:44:28.206398 13917 net.cpp:226] relu6 needs backward computation.
I0625 15:44:28.206401 13917 net.cpp:226] fc6 needs backward computation.
I0625 15:44:28.206405 13917 net.cpp:226] roi_pool5 needs backward computation.
I0625 15:44:28.206409 13917 net.cpp:226] roi-data needs backward computation.
I0625 15:44:28.206418 13917 net.cpp:226] proposal needs backward computation.
I0625 15:44:28.206423 13917 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0625 15:44:28.206427 13917 net.cpp:226] rpn_cls_prob needs backward computation.
I0625 15:44:28.206430 13917 net.cpp:226] rpn_loss_bbox needs backward computation.
I0625 15:44:28.206435 13917 net.cpp:226] rpn_loss_cls needs backward computation.
I0625 15:44:28.206441 13917 net.cpp:226] rpn-data needs backward computation.
I0625 15:44:28.206447 13917 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0625 15:44:28.206451 13917 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0625 15:44:28.206455 13917 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0625 15:44:28.206460 13917 net.cpp:226] rpn_bbox_pred needs backward computation.
I0625 15:44:28.206465 13917 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0625 15:44:28.206470 13917 net.cpp:226] rpn_cls_score needs backward computation.
I0625 15:44:28.206475 13917 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0625 15:44:28.206478 13917 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0625 15:44:28.206482 13917 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0625 15:44:28.206486 13917 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0625 15:44:28.206490 13917 net.cpp:226] relu5_3 needs backward computation.
I0625 15:44:28.206493 13917 net.cpp:226] conv5_3 needs backward computation.
I0625 15:44:28.206496 13917 net.cpp:226] relu5_2 needs backward computation.
I0625 15:44:28.206499 13917 net.cpp:226] conv5_2 needs backward computation.
I0625 15:44:28.206502 13917 net.cpp:226] relu5_1 needs backward computation.
I0625 15:44:28.206506 13917 net.cpp:226] conv5_1 needs backward computation.
I0625 15:44:28.206511 13917 net.cpp:226] pool4 needs backward computation.
I0625 15:44:28.206514 13917 net.cpp:226] relu4_3 needs backward computation.
I0625 15:44:28.206517 13917 net.cpp:226] conv4_3 needs backward computation.
I0625 15:44:28.206522 13917 net.cpp:226] relu4_2 needs backward computation.
I0625 15:44:28.206526 13917 net.cpp:226] conv4_2 needs backward computation.
I0625 15:44:28.206529 13917 net.cpp:226] relu4_1 needs backward computation.
I0625 15:44:28.206532 13917 net.cpp:226] conv4_1 needs backward computation.
I0625 15:44:28.206537 13917 net.cpp:226] pool3 needs backward computation.
I0625 15:44:28.206542 13917 net.cpp:226] relu3_3 needs backward computation.
I0625 15:44:28.206544 13917 net.cpp:226] conv3_3 needs backward computation.
I0625 15:44:28.206547 13917 net.cpp:226] relu3_2 needs backward computation.
I0625 15:44:28.206550 13917 net.cpp:226] conv3_2 needs backward computation.
I0625 15:44:28.206554 13917 net.cpp:226] relu3_1 needs backward computation.
I0625 15:44:28.206557 13917 net.cpp:226] conv3_1 needs backward computation.
I0625 15:44:28.206560 13917 net.cpp:228] pool2 does not need backward computation.
I0625 15:44:28.206569 13917 net.cpp:228] relu2_2 does not need backward computation.
I0625 15:44:28.206573 13917 net.cpp:228] conv2_2 does not need backward computation.
I0625 15:44:28.206576 13917 net.cpp:228] relu2_1 does not need backward computation.
I0625 15:44:28.206579 13917 net.cpp:228] conv2_1 does not need backward computation.
I0625 15:44:28.206583 13917 net.cpp:228] pool1 does not need backward computation.
I0625 15:44:28.206588 13917 net.cpp:228] relu1_2 does not need backward computation.
I0625 15:44:28.206591 13917 net.cpp:228] conv1_2 does not need backward computation.
I0625 15:44:28.206594 13917 net.cpp:228] relu1_1 does not need backward computation.
I0625 15:44:28.206598 13917 net.cpp:228] conv1_1 does not need backward computation.
I0625 15:44:28.206602 13917 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0625 15:44:28.206606 13917 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0625 15:44:28.206611 13917 net.cpp:228] data_input-data_0_split does not need backward computation.
I0625 15:44:28.206616 13917 net.cpp:228] input-data does not need backward computation.
I0625 15:44:28.206619 13917 net.cpp:270] This network produces output cross_entropy_mean
I0625 15:44:28.206624 13917 net.cpp:270] This network produces output loss_attribute
I0625 15:44:28.206626 13917 net.cpp:270] This network produces output loss_bbox
I0625 15:44:28.206630 13917 net.cpp:270] This network produces output loss_cls
I0625 15:44:28.206634 13917 net.cpp:270] This network produces output rpn_cls_loss
I0625 15:44:28.206636 13917 net.cpp:270] This network produces output rpn_loss_bbox
I0625 15:44:28.206701 13917 net.cpp:283] Network initialization done.
I0625 15:44:28.206918 13917 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0625 15:44:34.134749 13917 net.cpp:816] Ignoring source layer pool5
I0625 15:44:34.213254 13917 net.cpp:816] Ignoring source layer drop6
I0625 15:44:34.225556 13917 net.cpp:816] Ignoring source layer drop7
I0625 15:44:34.225574 13917 net.cpp:816] Ignoring source layer fc8
Solving...
F0625 15:44:34.743110 13917 eltwise_layer.cpp:34] Check failed: bottom[i]->shape() == bottom[0]->shape() 
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 13917 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
