+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-11_14-06-30
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-11_14-06-30
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0611 14:06:37.783330 13153 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0611 14:06:37.783360 13153 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0611 14:06:37.784874 13153 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0611 14:06:37.785152 13153 layer_factory.hpp:77] Creating layer input-data
I0611 14:06:37.817665 13153 net.cpp:106] Creating Layer input-data
I0611 14:06:37.817685 13153 net.cpp:411] input-data -> data
I0611 14:06:37.817697 13153 net.cpp:411] input-data -> im_info
I0611 14:06:37.817704 13153 net.cpp:411] input-data -> gt_boxes
I0611 14:06:37.817720 13153 net.cpp:411] input-data -> seg_mask_inds
I0611 14:06:37.817725 13153 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0611 14:06:37.830754 13153 net.cpp:150] Setting up input-data
I0611 14:06:37.830792 13153 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 14:06:37.830796 13153 net.cpp:157] Top shape: 1 3 (3)
I0611 14:06:37.830799 13153 net.cpp:157] Top shape: 1 4 (4)
I0611 14:06:37.830801 13153 net.cpp:157] Top shape: 1 2 (2)
I0611 14:06:37.830804 13153 net.cpp:157] Top shape: 1 1 (1)
I0611 14:06:37.830817 13153 net.cpp:165] Memory required for data: 7200040
I0611 14:06:37.830826 13153 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0611 14:06:37.830857 13153 net.cpp:106] Creating Layer data_input-data_0_split
I0611 14:06:37.830862 13153 net.cpp:454] data_input-data_0_split <- data
I0611 14:06:37.830866 13153 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0611 14:06:37.830873 13153 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0611 14:06:37.830898 13153 net.cpp:150] Setting up data_input-data_0_split
I0611 14:06:37.830902 13153 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 14:06:37.830905 13153 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 14:06:37.830907 13153 net.cpp:165] Memory required for data: 21600040
I0611 14:06:37.830909 13153 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0611 14:06:37.830914 13153 net.cpp:106] Creating Layer im_info_input-data_1_split
I0611 14:06:37.830916 13153 net.cpp:454] im_info_input-data_1_split <- im_info
I0611 14:06:37.830921 13153 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0611 14:06:37.830927 13153 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0611 14:06:37.830935 13153 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0611 14:06:37.830960 13153 net.cpp:150] Setting up im_info_input-data_1_split
I0611 14:06:37.830965 13153 net.cpp:157] Top shape: 1 3 (3)
I0611 14:06:37.830969 13153 net.cpp:157] Top shape: 1 3 (3)
I0611 14:06:37.830976 13153 net.cpp:157] Top shape: 1 3 (3)
I0611 14:06:37.830979 13153 net.cpp:165] Memory required for data: 21600076
I0611 14:06:37.830986 13153 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0611 14:06:37.830991 13153 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0611 14:06:37.831005 13153 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0611 14:06:37.831012 13153 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0611 14:06:37.831017 13153 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0611 14:06:37.831046 13153 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0611 14:06:37.831051 13153 net.cpp:157] Top shape: 1 4 (4)
I0611 14:06:37.831054 13153 net.cpp:157] Top shape: 1 4 (4)
I0611 14:06:37.831059 13153 net.cpp:165] Memory required for data: 21600108
I0611 14:06:37.831063 13153 layer_factory.hpp:77] Creating layer conv1_1
I0611 14:06:37.831076 13153 net.cpp:106] Creating Layer conv1_1
I0611 14:06:37.831080 13153 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0611 14:06:37.831085 13153 net.cpp:411] conv1_1 -> conv1_1
I0611 14:06:38.116127 13153 net.cpp:150] Setting up conv1_1
I0611 14:06:38.116145 13153 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 14:06:38.116147 13153 net.cpp:165] Memory required for data: 175200108
I0611 14:06:38.116174 13153 layer_factory.hpp:77] Creating layer relu1_1
I0611 14:06:38.116183 13153 net.cpp:106] Creating Layer relu1_1
I0611 14:06:38.116197 13153 net.cpp:454] relu1_1 <- conv1_1
I0611 14:06:38.116202 13153 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0611 14:06:38.116338 13153 net.cpp:150] Setting up relu1_1
I0611 14:06:38.116343 13153 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 14:06:38.116346 13153 net.cpp:165] Memory required for data: 328800108
I0611 14:06:38.116348 13153 layer_factory.hpp:77] Creating layer conv1_2
I0611 14:06:38.116355 13153 net.cpp:106] Creating Layer conv1_2
I0611 14:06:38.116358 13153 net.cpp:454] conv1_2 <- conv1_1
I0611 14:06:38.116363 13153 net.cpp:411] conv1_2 -> conv1_2
I0611 14:06:38.118489 13153 net.cpp:150] Setting up conv1_2
I0611 14:06:38.118499 13153 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 14:06:38.118502 13153 net.cpp:165] Memory required for data: 482400108
I0611 14:06:38.118510 13153 layer_factory.hpp:77] Creating layer relu1_2
I0611 14:06:38.118513 13153 net.cpp:106] Creating Layer relu1_2
I0611 14:06:38.118516 13153 net.cpp:454] relu1_2 <- conv1_2
I0611 14:06:38.118521 13153 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0611 14:06:38.118654 13153 net.cpp:150] Setting up relu1_2
I0611 14:06:38.118659 13153 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 14:06:38.118661 13153 net.cpp:165] Memory required for data: 636000108
I0611 14:06:38.118664 13153 layer_factory.hpp:77] Creating layer pool1
I0611 14:06:38.118669 13153 net.cpp:106] Creating Layer pool1
I0611 14:06:38.118672 13153 net.cpp:454] pool1 <- conv1_2
I0611 14:06:38.118676 13153 net.cpp:411] pool1 -> pool1
I0611 14:06:38.118747 13153 net.cpp:150] Setting up pool1
I0611 14:06:38.118752 13153 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0611 14:06:38.118754 13153 net.cpp:165] Memory required for data: 674400108
I0611 14:06:38.118757 13153 layer_factory.hpp:77] Creating layer conv2_1
I0611 14:06:38.118772 13153 net.cpp:106] Creating Layer conv2_1
I0611 14:06:38.118774 13153 net.cpp:454] conv2_1 <- pool1
I0611 14:06:38.118778 13153 net.cpp:411] conv2_1 -> conv2_1
I0611 14:06:38.120559 13153 net.cpp:150] Setting up conv2_1
I0611 14:06:38.120568 13153 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 14:06:38.120570 13153 net.cpp:165] Memory required for data: 751200108
I0611 14:06:38.120576 13153 layer_factory.hpp:77] Creating layer relu2_1
I0611 14:06:38.120581 13153 net.cpp:106] Creating Layer relu2_1
I0611 14:06:38.120584 13153 net.cpp:454] relu2_1 <- conv2_1
I0611 14:06:38.120597 13153 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0611 14:06:38.121064 13153 net.cpp:150] Setting up relu2_1
I0611 14:06:38.121073 13153 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 14:06:38.121074 13153 net.cpp:165] Memory required for data: 828000108
I0611 14:06:38.121078 13153 layer_factory.hpp:77] Creating layer conv2_2
I0611 14:06:38.121083 13153 net.cpp:106] Creating Layer conv2_2
I0611 14:06:38.121085 13153 net.cpp:454] conv2_2 <- conv2_1
I0611 14:06:38.121089 13153 net.cpp:411] conv2_2 -> conv2_2
I0611 14:06:38.122386 13153 net.cpp:150] Setting up conv2_2
I0611 14:06:38.122395 13153 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 14:06:38.122397 13153 net.cpp:165] Memory required for data: 904800108
I0611 14:06:38.122402 13153 layer_factory.hpp:77] Creating layer relu2_2
I0611 14:06:38.122406 13153 net.cpp:106] Creating Layer relu2_2
I0611 14:06:38.122408 13153 net.cpp:454] relu2_2 <- conv2_2
I0611 14:06:38.122412 13153 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0611 14:06:38.122548 13153 net.cpp:150] Setting up relu2_2
I0611 14:06:38.122553 13153 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 14:06:38.122556 13153 net.cpp:165] Memory required for data: 981600108
I0611 14:06:38.122558 13153 layer_factory.hpp:77] Creating layer pool2
I0611 14:06:38.122562 13153 net.cpp:106] Creating Layer pool2
I0611 14:06:38.122565 13153 net.cpp:454] pool2 <- conv2_2
I0611 14:06:38.122568 13153 net.cpp:411] pool2 -> pool2
I0611 14:06:38.122627 13153 net.cpp:150] Setting up pool2
I0611 14:06:38.122630 13153 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0611 14:06:38.122632 13153 net.cpp:165] Memory required for data: 1000800108
I0611 14:06:38.122634 13153 layer_factory.hpp:77] Creating layer conv3_1
I0611 14:06:38.122650 13153 net.cpp:106] Creating Layer conv3_1
I0611 14:06:38.122653 13153 net.cpp:454] conv3_1 <- pool2
I0611 14:06:38.122656 13153 net.cpp:411] conv3_1 -> conv3_1
I0611 14:06:38.124423 13153 net.cpp:150] Setting up conv3_1
I0611 14:06:38.124431 13153 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:38.124434 13153 net.cpp:165] Memory required for data: 1039200108
I0611 14:06:38.124441 13153 layer_factory.hpp:77] Creating layer relu3_1
I0611 14:06:38.124445 13153 net.cpp:106] Creating Layer relu3_1
I0611 14:06:38.124449 13153 net.cpp:454] relu3_1 <- conv3_1
I0611 14:06:38.124461 13153 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0611 14:06:38.124575 13153 net.cpp:150] Setting up relu3_1
I0611 14:06:38.124580 13153 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:38.124583 13153 net.cpp:165] Memory required for data: 1077600108
I0611 14:06:38.124585 13153 layer_factory.hpp:77] Creating layer conv3_2
I0611 14:06:38.124593 13153 net.cpp:106] Creating Layer conv3_2
I0611 14:06:38.124594 13153 net.cpp:454] conv3_2 <- conv3_1
I0611 14:06:38.124598 13153 net.cpp:411] conv3_2 -> conv3_2
I0611 14:06:38.126561 13153 net.cpp:150] Setting up conv3_2
I0611 14:06:38.126570 13153 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:38.126574 13153 net.cpp:165] Memory required for data: 1116000108
I0611 14:06:38.126579 13153 layer_factory.hpp:77] Creating layer relu3_2
I0611 14:06:38.126582 13153 net.cpp:106] Creating Layer relu3_2
I0611 14:06:38.126585 13153 net.cpp:454] relu3_2 <- conv3_2
I0611 14:06:38.126588 13153 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0611 14:06:38.126713 13153 net.cpp:150] Setting up relu3_2
I0611 14:06:38.126719 13153 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:38.126721 13153 net.cpp:165] Memory required for data: 1154400108
I0611 14:06:38.126724 13153 layer_factory.hpp:77] Creating layer conv3_3
I0611 14:06:38.126747 13153 net.cpp:106] Creating Layer conv3_3
I0611 14:06:38.126749 13153 net.cpp:454] conv3_3 <- conv3_2
I0611 14:06:38.126765 13153 net.cpp:411] conv3_3 -> conv3_3
I0611 14:06:38.129163 13153 net.cpp:150] Setting up conv3_3
I0611 14:06:38.129186 13153 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:38.129189 13153 net.cpp:165] Memory required for data: 1192800108
I0611 14:06:38.129195 13153 layer_factory.hpp:77] Creating layer relu3_3
I0611 14:06:38.129202 13153 net.cpp:106] Creating Layer relu3_3
I0611 14:06:38.129205 13153 net.cpp:454] relu3_3 <- conv3_3
I0611 14:06:38.129210 13153 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0611 14:06:38.129323 13153 net.cpp:150] Setting up relu3_3
I0611 14:06:38.129329 13153 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:38.129333 13153 net.cpp:165] Memory required for data: 1231200108
I0611 14:06:38.129336 13153 layer_factory.hpp:77] Creating layer pool3
I0611 14:06:38.129344 13153 net.cpp:106] Creating Layer pool3
I0611 14:06:38.129348 13153 net.cpp:454] pool3 <- conv3_3
I0611 14:06:38.129354 13153 net.cpp:411] pool3 -> pool3
I0611 14:06:38.129406 13153 net.cpp:150] Setting up pool3
I0611 14:06:38.129441 13153 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0611 14:06:38.129456 13153 net.cpp:165] Memory required for data: 1240800108
I0611 14:06:38.129468 13153 layer_factory.hpp:77] Creating layer conv4_1
I0611 14:06:38.129487 13153 net.cpp:106] Creating Layer conv4_1
I0611 14:06:38.129499 13153 net.cpp:454] conv4_1 <- pool3
I0611 14:06:38.129513 13153 net.cpp:411] conv4_1 -> conv4_1
I0611 14:06:38.136365 13153 net.cpp:150] Setting up conv4_1
I0611 14:06:38.136384 13153 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:38.136389 13153 net.cpp:165] Memory required for data: 1260000108
I0611 14:06:38.136399 13153 layer_factory.hpp:77] Creating layer relu4_1
I0611 14:06:38.136409 13153 net.cpp:106] Creating Layer relu4_1
I0611 14:06:38.136430 13153 net.cpp:454] relu4_1 <- conv4_1
I0611 14:06:38.136443 13153 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0611 14:06:38.136591 13153 net.cpp:150] Setting up relu4_1
I0611 14:06:38.136600 13153 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:38.136603 13153 net.cpp:165] Memory required for data: 1279200108
I0611 14:06:38.136607 13153 layer_factory.hpp:77] Creating layer conv4_2
I0611 14:06:38.136618 13153 net.cpp:106] Creating Layer conv4_2
I0611 14:06:38.136633 13153 net.cpp:454] conv4_2 <- conv4_1
I0611 14:06:38.136648 13153 net.cpp:411] conv4_2 -> conv4_2
I0611 14:06:38.143426 13153 net.cpp:150] Setting up conv4_2
I0611 14:06:38.143455 13153 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:38.143457 13153 net.cpp:165] Memory required for data: 1298400108
I0611 14:06:38.143471 13153 layer_factory.hpp:77] Creating layer relu4_2
I0611 14:06:38.143481 13153 net.cpp:106] Creating Layer relu4_2
I0611 14:06:38.143487 13153 net.cpp:454] relu4_2 <- conv4_2
I0611 14:06:38.143492 13153 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0611 14:06:38.144007 13153 net.cpp:150] Setting up relu4_2
I0611 14:06:38.144016 13153 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:38.144018 13153 net.cpp:165] Memory required for data: 1317600108
I0611 14:06:38.144021 13153 layer_factory.hpp:77] Creating layer conv4_3
I0611 14:06:38.144027 13153 net.cpp:106] Creating Layer conv4_3
I0611 14:06:38.144042 13153 net.cpp:454] conv4_3 <- conv4_2
I0611 14:06:38.144047 13153 net.cpp:411] conv4_3 -> conv4_3
I0611 14:06:38.149600 13153 net.cpp:150] Setting up conv4_3
I0611 14:06:38.149628 13153 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:38.149631 13153 net.cpp:165] Memory required for data: 1336800108
I0611 14:06:38.149638 13153 layer_factory.hpp:77] Creating layer relu4_3
I0611 14:06:38.149658 13153 net.cpp:106] Creating Layer relu4_3
I0611 14:06:38.149663 13153 net.cpp:454] relu4_3 <- conv4_3
I0611 14:06:38.149668 13153 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0611 14:06:38.149811 13153 net.cpp:150] Setting up relu4_3
I0611 14:06:38.149816 13153 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:38.149828 13153 net.cpp:165] Memory required for data: 1356000108
I0611 14:06:38.149832 13153 layer_factory.hpp:77] Creating layer pool4
I0611 14:06:38.149837 13153 net.cpp:106] Creating Layer pool4
I0611 14:06:38.149852 13153 net.cpp:454] pool4 <- conv4_3
I0611 14:06:38.149857 13153 net.cpp:411] pool4 -> pool4
I0611 14:06:38.149900 13153 net.cpp:150] Setting up pool4
I0611 14:06:38.149906 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.149909 13153 net.cpp:165] Memory required for data: 1360903020
I0611 14:06:38.149915 13153 layer_factory.hpp:77] Creating layer conv5_1
I0611 14:06:38.149925 13153 net.cpp:106] Creating Layer conv5_1
I0611 14:06:38.149940 13153 net.cpp:454] conv5_1 <- pool4
I0611 14:06:38.149943 13153 net.cpp:411] conv5_1 -> conv5_1
I0611 14:06:38.155222 13153 net.cpp:150] Setting up conv5_1
I0611 14:06:38.155251 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.155253 13153 net.cpp:165] Memory required for data: 1365805932
I0611 14:06:38.155272 13153 layer_factory.hpp:77] Creating layer relu5_1
I0611 14:06:38.155283 13153 net.cpp:106] Creating Layer relu5_1
I0611 14:06:38.155289 13153 net.cpp:454] relu5_1 <- conv5_1
I0611 14:06:38.155305 13153 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0611 14:06:38.155478 13153 net.cpp:150] Setting up relu5_1
I0611 14:06:38.155484 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.155498 13153 net.cpp:165] Memory required for data: 1370708844
I0611 14:06:38.155499 13153 layer_factory.hpp:77] Creating layer conv5_2
I0611 14:06:38.155506 13153 net.cpp:106] Creating Layer conv5_2
I0611 14:06:38.155520 13153 net.cpp:454] conv5_2 <- conv5_1
I0611 14:06:38.155526 13153 net.cpp:411] conv5_2 -> conv5_2
I0611 14:06:38.160017 13153 net.cpp:150] Setting up conv5_2
I0611 14:06:38.160048 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.160051 13153 net.cpp:165] Memory required for data: 1375611756
I0611 14:06:38.160058 13153 layer_factory.hpp:77] Creating layer relu5_2
I0611 14:06:38.160077 13153 net.cpp:106] Creating Layer relu5_2
I0611 14:06:38.160082 13153 net.cpp:454] relu5_2 <- conv5_2
I0611 14:06:38.160089 13153 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0611 14:06:38.160311 13153 net.cpp:150] Setting up relu5_2
I0611 14:06:38.160320 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.160322 13153 net.cpp:165] Memory required for data: 1380514668
I0611 14:06:38.160326 13153 layer_factory.hpp:77] Creating layer conv5_3
I0611 14:06:38.160336 13153 net.cpp:106] Creating Layer conv5_3
I0611 14:06:38.160341 13153 net.cpp:454] conv5_3 <- conv5_2
I0611 14:06:38.160356 13153 net.cpp:411] conv5_3 -> conv5_3
I0611 14:06:38.165526 13153 net.cpp:150] Setting up conv5_3
I0611 14:06:38.165546 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.165549 13153 net.cpp:165] Memory required for data: 1385417580
I0611 14:06:38.165557 13153 layer_factory.hpp:77] Creating layer relu5_3
I0611 14:06:38.165565 13153 net.cpp:106] Creating Layer relu5_3
I0611 14:06:38.165580 13153 net.cpp:454] relu5_3 <- conv5_3
I0611 14:06:38.165585 13153 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0611 14:06:38.165710 13153 net.cpp:150] Setting up relu5_3
I0611 14:06:38.165717 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.165730 13153 net.cpp:165] Memory required for data: 1390320492
I0611 14:06:38.165733 13153 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0611 14:06:38.165740 13153 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0611 14:06:38.165741 13153 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0611 14:06:38.165746 13153 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0611 14:06:38.165750 13153 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0611 14:06:38.165755 13153 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0611 14:06:38.165793 13153 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0611 14:06:38.165797 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.165810 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.165812 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.165814 13153 net.cpp:165] Memory required for data: 1405029228
I0611 14:06:38.165817 13153 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0611 14:06:38.165834 13153 net.cpp:106] Creating Layer rpn_conv/3x3
I0611 14:06:38.165838 13153 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0611 14:06:38.165841 13153 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0611 14:06:38.218185 13153 net.cpp:150] Setting up rpn_conv/3x3
I0611 14:06:38.218202 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.218205 13153 net.cpp:165] Memory required for data: 1409932140
I0611 14:06:38.218223 13153 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0611 14:06:38.218230 13153 net.cpp:106] Creating Layer rpn_relu/3x3
I0611 14:06:38.218246 13153 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0611 14:06:38.218252 13153 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0611 14:06:38.218382 13153 net.cpp:150] Setting up rpn_relu/3x3
I0611 14:06:38.218389 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.218390 13153 net.cpp:165] Memory required for data: 1414835052
I0611 14:06:38.218394 13153 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0611 14:06:38.218410 13153 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0611 14:06:38.218411 13153 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0611 14:06:38.218427 13153 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0611 14:06:38.218431 13153 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0611 14:06:38.218467 13153 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0611 14:06:38.218480 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.218483 13153 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:38.218485 13153 net.cpp:165] Memory required for data: 1424640876
I0611 14:06:38.218487 13153 layer_factory.hpp:77] Creating layer rpn_cls_score
I0611 14:06:38.218505 13153 net.cpp:106] Creating Layer rpn_cls_score
I0611 14:06:38.218509 13153 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0611 14:06:38.218513 13153 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0611 14:06:38.220043 13153 net.cpp:150] Setting up rpn_cls_score
I0611 14:06:38.220052 13153 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 14:06:38.220054 13153 net.cpp:165] Memory required for data: 1424928156
I0611 14:06:38.220059 13153 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0611 14:06:38.220075 13153 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0611 14:06:38.220078 13153 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0611 14:06:38.220082 13153 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0611 14:06:38.220089 13153 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0611 14:06:38.220124 13153 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0611 14:06:38.220129 13153 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 14:06:38.220131 13153 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 14:06:38.220134 13153 net.cpp:165] Memory required for data: 1425502716
I0611 14:06:38.220136 13153 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0611 14:06:38.220155 13153 net.cpp:106] Creating Layer rpn_bbox_pred
I0611 14:06:38.220158 13153 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0611 14:06:38.220162 13153 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0611 14:06:38.221705 13153 net.cpp:150] Setting up rpn_bbox_pred
I0611 14:06:38.221714 13153 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:38.221716 13153 net.cpp:165] Memory required for data: 1426077276
I0611 14:06:38.221731 13153 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 14:06:38.221736 13153 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 14:06:38.221740 13153 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0611 14:06:38.221745 13153 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0611 14:06:38.221750 13153 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0611 14:06:38.221787 13153 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 14:06:38.221792 13153 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:38.221796 13153 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:38.221797 13153 net.cpp:165] Memory required for data: 1427226396
I0611 14:06:38.221809 13153 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0611 14:06:38.221814 13153 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0611 14:06:38.221818 13153 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0611 14:06:38.221822 13153 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0611 14:06:38.221838 13153 net.cpp:150] Setting up rpn_cls_score_reshape
I0611 14:06:38.221851 13153 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 14:06:38.221853 13153 net.cpp:165] Memory required for data: 1427513676
I0611 14:06:38.221856 13153 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 14:06:38.221870 13153 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 14:06:38.221873 13153 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0611 14:06:38.221876 13153 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0611 14:06:38.221884 13153 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0611 14:06:38.221904 13153 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 14:06:38.221907 13153 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 14:06:38.221910 13153 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 14:06:38.221913 13153 net.cpp:165] Memory required for data: 1428088236
I0611 14:06:38.221916 13153 layer_factory.hpp:77] Creating layer rpn-data
I0611 14:06:38.222252 13153 net.cpp:106] Creating Layer rpn-data
I0611 14:06:38.222260 13153 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0611 14:06:38.222265 13153 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0611 14:06:38.222268 13153 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0611 14:06:38.222272 13153 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0611 14:06:38.222277 13153 net.cpp:411] rpn-data -> rpn_labels
I0611 14:06:38.222283 13153 net.cpp:411] rpn-data -> rpn_bbox_targets
I0611 14:06:38.222290 13153 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0611 14:06:38.222296 13153 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0611 14:06:38.223141 13153 net.cpp:150] Setting up rpn-data
I0611 14:06:38.223150 13153 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0611 14:06:38.223152 13153 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:38.223166 13153 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:38.223170 13153 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:38.223172 13153 net.cpp:165] Memory required for data: 1429955556
I0611 14:06:38.223176 13153 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0611 14:06:38.223181 13153 net.cpp:106] Creating Layer rpn_loss_cls
I0611 14:06:38.223186 13153 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0611 14:06:38.223189 13153 net.cpp:454] rpn_loss_cls <- rpn_labels
I0611 14:06:38.223192 13153 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0611 14:06:38.223199 13153 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0611 14:06:38.223866 13153 net.cpp:150] Setting up rpn_loss_cls
I0611 14:06:38.223875 13153 net.cpp:157] Top shape: (1)
I0611 14:06:38.223876 13153 net.cpp:160]     with loss weight 1
I0611 14:06:38.223896 13153 net.cpp:165] Memory required for data: 1429955560
I0611 14:06:38.223898 13153 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0611 14:06:38.223906 13153 net.cpp:106] Creating Layer rpn_loss_bbox
I0611 14:06:38.223909 13153 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0611 14:06:38.223912 13153 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0611 14:06:38.223917 13153 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0611 14:06:38.223922 13153 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0611 14:06:38.223925 13153 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0611 14:06:38.225021 13153 net.cpp:150] Setting up rpn_loss_bbox
I0611 14:06:38.225029 13153 net.cpp:157] Top shape: (1)
I0611 14:06:38.225033 13153 net.cpp:160]     with loss weight 1
I0611 14:06:38.225047 13153 net.cpp:165] Memory required for data: 1429955564
I0611 14:06:38.225050 13153 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0611 14:06:38.225055 13153 net.cpp:106] Creating Layer rpn_cls_prob
I0611 14:06:38.225059 13153 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0611 14:06:38.225064 13153 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0611 14:06:38.225219 13153 net.cpp:150] Setting up rpn_cls_prob
I0611 14:06:38.225225 13153 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 14:06:38.225229 13153 net.cpp:165] Memory required for data: 1430242844
I0611 14:06:38.225232 13153 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0611 14:06:38.225239 13153 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0611 14:06:38.225241 13153 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0611 14:06:38.225245 13153 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0611 14:06:38.225265 13153 net.cpp:150] Setting up rpn_cls_prob_reshape
I0611 14:06:38.225268 13153 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 14:06:38.225270 13153 net.cpp:165] Memory required for data: 1430530124
I0611 14:06:38.225275 13153 layer_factory.hpp:77] Creating layer proposal
I0611 14:06:38.225770 13153 net.cpp:106] Creating Layer proposal
I0611 14:06:38.225778 13153 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0611 14:06:38.225782 13153 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0611 14:06:38.225786 13153 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0611 14:06:38.225791 13153 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0611 14:06:38.226583 13153 net.cpp:150] Setting up proposal
I0611 14:06:38.226590 13153 net.cpp:157] Top shape: 1 5 (5)
I0611 14:06:38.226594 13153 net.cpp:165] Memory required for data: 1430530144
I0611 14:06:38.226608 13153 layer_factory.hpp:77] Creating layer roi-data
I0611 14:06:38.226799 13153 net.cpp:106] Creating Layer roi-data
I0611 14:06:38.226805 13153 net.cpp:454] roi-data <- rpn_rois
I0611 14:06:38.226809 13153 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0611 14:06:38.226824 13153 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0611 14:06:38.226827 13153 net.cpp:454] roi-data <- seg_mask_inds
I0611 14:06:38.226830 13153 net.cpp:454] roi-data <- flipped
I0611 14:06:38.226835 13153 net.cpp:411] roi-data -> rois
I0611 14:06:38.226841 13153 net.cpp:411] roi-data -> labels
I0611 14:06:38.226847 13153 net.cpp:411] roi-data -> bbox_targets
I0611 14:06:38.226852 13153 net.cpp:411] roi-data -> bbox_inside_weights
I0611 14:06:38.226857 13153 net.cpp:411] roi-data -> bbox_outside_weights
I0611 14:06:38.226862 13153 net.cpp:411] roi-data -> mask_targets
I0611 14:06:38.226866 13153 net.cpp:411] roi-data -> rois_pos
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 168, in train_net
    pretrained_model=pretrained_model)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 52, in __init__
    self.solver = caffe.SGDSolver(solver_prototxt)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_target_layer.py", line 80, in setup
    top[7].reshape(1, 10)
IndexError: Index out of range
