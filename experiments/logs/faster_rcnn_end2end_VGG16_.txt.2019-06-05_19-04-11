+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-05_19-04-11
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-05_19-04-11
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0605 19:04:18.837877 12830 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0605 19:04:18.837895 12830 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0605 19:04:18.839181 12830 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "pool5_2_conv4_relu"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv6_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv6_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv6_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 3600
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 3600
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 3600
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 60
      dim: 60
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv6_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0605 19:04:18.839483 12830 layer_factory.hpp:77] Creating layer input-data
I0605 19:04:18.856391 12830 net.cpp:106] Creating Layer input-data
I0605 19:04:18.856407 12830 net.cpp:411] input-data -> data
I0605 19:04:18.856415 12830 net.cpp:411] input-data -> im_info
I0605 19:04:18.856421 12830 net.cpp:411] input-data -> gt_boxes
I0605 19:04:18.856426 12830 net.cpp:411] input-data -> seg_mask_inds
I0605 19:04:18.856439 12830 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0605 19:04:18.868028 12830 net.cpp:150] Setting up input-data
I0605 19:04:18.868064 12830 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 19:04:18.868067 12830 net.cpp:157] Top shape: 1 3 (3)
I0605 19:04:18.868072 12830 net.cpp:157] Top shape: 1 4 (4)
I0605 19:04:18.868073 12830 net.cpp:157] Top shape: 1 2 (2)
I0605 19:04:18.868077 12830 net.cpp:157] Top shape: 1 1 (1)
I0605 19:04:18.868078 12830 net.cpp:165] Memory required for data: 7200040
I0605 19:04:18.868084 12830 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0605 19:04:18.868098 12830 net.cpp:106] Creating Layer data_input-data_0_split
I0605 19:04:18.868103 12830 net.cpp:454] data_input-data_0_split <- data
I0605 19:04:18.868108 12830 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0605 19:04:18.868114 12830 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0605 19:04:18.868145 12830 net.cpp:150] Setting up data_input-data_0_split
I0605 19:04:18.868149 12830 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 19:04:18.868162 12830 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0605 19:04:18.868165 12830 net.cpp:165] Memory required for data: 21600040
I0605 19:04:18.868166 12830 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0605 19:04:18.868171 12830 net.cpp:106] Creating Layer im_info_input-data_1_split
I0605 19:04:18.868182 12830 net.cpp:454] im_info_input-data_1_split <- im_info
I0605 19:04:18.868185 12830 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0605 19:04:18.868189 12830 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0605 19:04:18.868206 12830 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0605 19:04:18.868230 12830 net.cpp:150] Setting up im_info_input-data_1_split
I0605 19:04:18.868234 12830 net.cpp:157] Top shape: 1 3 (3)
I0605 19:04:18.868238 12830 net.cpp:157] Top shape: 1 3 (3)
I0605 19:04:18.868242 12830 net.cpp:157] Top shape: 1 3 (3)
I0605 19:04:18.868244 12830 net.cpp:165] Memory required for data: 21600076
I0605 19:04:18.868247 12830 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0605 19:04:18.868249 12830 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0605 19:04:18.868252 12830 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0605 19:04:18.868257 12830 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0605 19:04:18.868263 12830 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0605 19:04:18.868283 12830 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0605 19:04:18.868286 12830 net.cpp:157] Top shape: 1 4 (4)
I0605 19:04:18.868289 12830 net.cpp:157] Top shape: 1 4 (4)
I0605 19:04:18.868291 12830 net.cpp:165] Memory required for data: 21600108
I0605 19:04:18.868294 12830 layer_factory.hpp:77] Creating layer conv1_1
I0605 19:04:18.868301 12830 net.cpp:106] Creating Layer conv1_1
I0605 19:04:18.868305 12830 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0605 19:04:18.868310 12830 net.cpp:411] conv1_1 -> conv1_1
I0605 19:04:19.063035 12830 net.cpp:150] Setting up conv1_1
I0605 19:04:19.063064 12830 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 19:04:19.063067 12830 net.cpp:165] Memory required for data: 175200108
I0605 19:04:19.063081 12830 layer_factory.hpp:77] Creating layer relu1_1
I0605 19:04:19.063100 12830 net.cpp:106] Creating Layer relu1_1
I0605 19:04:19.063107 12830 net.cpp:454] relu1_1 <- conv1_1
I0605 19:04:19.063112 12830 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0605 19:04:19.063246 12830 net.cpp:150] Setting up relu1_1
I0605 19:04:19.063256 12830 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 19:04:19.063268 12830 net.cpp:165] Memory required for data: 328800108
I0605 19:04:19.063271 12830 layer_factory.hpp:77] Creating layer conv1_2
I0605 19:04:19.063278 12830 net.cpp:106] Creating Layer conv1_2
I0605 19:04:19.063282 12830 net.cpp:454] conv1_2 <- conv1_1
I0605 19:04:19.063287 12830 net.cpp:411] conv1_2 -> conv1_2
I0605 19:04:19.068756 12830 net.cpp:150] Setting up conv1_2
I0605 19:04:19.068781 12830 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 19:04:19.068785 12830 net.cpp:165] Memory required for data: 482400108
I0605 19:04:19.068795 12830 layer_factory.hpp:77] Creating layer relu1_2
I0605 19:04:19.068812 12830 net.cpp:106] Creating Layer relu1_2
I0605 19:04:19.068820 12830 net.cpp:454] relu1_2 <- conv1_2
I0605 19:04:19.068826 12830 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0605 19:04:19.068956 12830 net.cpp:150] Setting up relu1_2
I0605 19:04:19.068964 12830 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0605 19:04:19.068976 12830 net.cpp:165] Memory required for data: 636000108
I0605 19:04:19.068979 12830 layer_factory.hpp:77] Creating layer pool1
I0605 19:04:19.068989 12830 net.cpp:106] Creating Layer pool1
I0605 19:04:19.069001 12830 net.cpp:454] pool1 <- conv1_2
I0605 19:04:19.069007 12830 net.cpp:411] pool1 -> pool1
I0605 19:04:19.069056 12830 net.cpp:150] Setting up pool1
I0605 19:04:19.069062 12830 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0605 19:04:19.069078 12830 net.cpp:165] Memory required for data: 674400108
I0605 19:04:19.069082 12830 layer_factory.hpp:77] Creating layer conv2_1
I0605 19:04:19.069088 12830 net.cpp:106] Creating Layer conv2_1
I0605 19:04:19.069090 12830 net.cpp:454] conv2_1 <- pool1
I0605 19:04:19.069097 12830 net.cpp:411] conv2_1 -> conv2_1
I0605 19:04:19.072486 12830 net.cpp:150] Setting up conv2_1
I0605 19:04:19.072507 12830 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 19:04:19.072510 12830 net.cpp:165] Memory required for data: 751200108
I0605 19:04:19.072518 12830 layer_factory.hpp:77] Creating layer relu2_1
I0605 19:04:19.072535 12830 net.cpp:106] Creating Layer relu2_1
I0605 19:04:19.072540 12830 net.cpp:454] relu2_1 <- conv2_1
I0605 19:04:19.072543 12830 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0605 19:04:19.073024 12830 net.cpp:150] Setting up relu2_1
I0605 19:04:19.073045 12830 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 19:04:19.073046 12830 net.cpp:165] Memory required for data: 828000108
I0605 19:04:19.073050 12830 layer_factory.hpp:77] Creating layer conv2_2
I0605 19:04:19.073056 12830 net.cpp:106] Creating Layer conv2_2
I0605 19:04:19.073060 12830 net.cpp:454] conv2_2 <- conv2_1
I0605 19:04:19.073074 12830 net.cpp:411] conv2_2 -> conv2_2
I0605 19:04:19.074630 12830 net.cpp:150] Setting up conv2_2
I0605 19:04:19.074640 12830 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 19:04:19.074643 12830 net.cpp:165] Memory required for data: 904800108
I0605 19:04:19.074649 12830 layer_factory.hpp:77] Creating layer relu2_2
I0605 19:04:19.074656 12830 net.cpp:106] Creating Layer relu2_2
I0605 19:04:19.074661 12830 net.cpp:454] relu2_2 <- conv2_2
I0605 19:04:19.074664 12830 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0605 19:04:19.074789 12830 net.cpp:150] Setting up relu2_2
I0605 19:04:19.074795 12830 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0605 19:04:19.074808 12830 net.cpp:165] Memory required for data: 981600108
I0605 19:04:19.074810 12830 layer_factory.hpp:77] Creating layer pool2
I0605 19:04:19.074816 12830 net.cpp:106] Creating Layer pool2
I0605 19:04:19.074820 12830 net.cpp:454] pool2 <- conv2_2
I0605 19:04:19.074823 12830 net.cpp:411] pool2 -> pool2
I0605 19:04:19.074864 12830 net.cpp:150] Setting up pool2
I0605 19:04:19.074868 12830 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0605 19:04:19.074882 12830 net.cpp:165] Memory required for data: 1000800108
I0605 19:04:19.074884 12830 layer_factory.hpp:77] Creating layer conv3_1
I0605 19:04:19.074892 12830 net.cpp:106] Creating Layer conv3_1
I0605 19:04:19.074893 12830 net.cpp:454] conv3_1 <- pool2
I0605 19:04:19.074899 12830 net.cpp:411] conv3_1 -> conv3_1
I0605 19:04:19.076774 12830 net.cpp:150] Setting up conv3_1
I0605 19:04:19.076782 12830 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:04:19.076794 12830 net.cpp:165] Memory required for data: 1039200108
I0605 19:04:19.076802 12830 layer_factory.hpp:77] Creating layer relu3_1
I0605 19:04:19.076818 12830 net.cpp:106] Creating Layer relu3_1
I0605 19:04:19.076822 12830 net.cpp:454] relu3_1 <- conv3_1
I0605 19:04:19.076826 12830 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0605 19:04:19.076947 12830 net.cpp:150] Setting up relu3_1
I0605 19:04:19.076953 12830 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:04:19.076956 12830 net.cpp:165] Memory required for data: 1077600108
I0605 19:04:19.076959 12830 layer_factory.hpp:77] Creating layer conv3_2
I0605 19:04:19.076978 12830 net.cpp:106] Creating Layer conv3_2
I0605 19:04:19.076982 12830 net.cpp:454] conv3_2 <- conv3_1
I0605 19:04:19.076987 12830 net.cpp:411] conv3_2 -> conv3_2
I0605 19:04:19.079114 12830 net.cpp:150] Setting up conv3_2
I0605 19:04:19.079123 12830 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:04:19.079125 12830 net.cpp:165] Memory required for data: 1116000108
I0605 19:04:19.079131 12830 layer_factory.hpp:77] Creating layer relu3_2
I0605 19:04:19.079136 12830 net.cpp:106] Creating Layer relu3_2
I0605 19:04:19.079139 12830 net.cpp:454] relu3_2 <- conv3_2
I0605 19:04:19.079143 12830 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0605 19:04:19.079272 12830 net.cpp:150] Setting up relu3_2
I0605 19:04:19.079277 12830 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:04:19.079280 12830 net.cpp:165] Memory required for data: 1154400108
I0605 19:04:19.079282 12830 layer_factory.hpp:77] Creating layer conv3_3
I0605 19:04:19.079288 12830 net.cpp:106] Creating Layer conv3_3
I0605 19:04:19.079290 12830 net.cpp:454] conv3_3 <- conv3_2
I0605 19:04:19.079294 12830 net.cpp:411] conv3_3 -> conv3_3
I0605 19:04:19.081405 12830 net.cpp:150] Setting up conv3_3
I0605 19:04:19.081421 12830 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:04:19.081439 12830 net.cpp:165] Memory required for data: 1192800108
I0605 19:04:19.081446 12830 layer_factory.hpp:77] Creating layer relu3_3
I0605 19:04:19.081451 12830 net.cpp:106] Creating Layer relu3_3
I0605 19:04:19.081454 12830 net.cpp:454] relu3_3 <- conv3_3
I0605 19:04:19.081459 12830 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0605 19:04:19.081596 12830 net.cpp:150] Setting up relu3_3
I0605 19:04:19.081602 12830 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0605 19:04:19.081604 12830 net.cpp:165] Memory required for data: 1231200108
I0605 19:04:19.081607 12830 layer_factory.hpp:77] Creating layer pool3
I0605 19:04:19.081612 12830 net.cpp:106] Creating Layer pool3
I0605 19:04:19.081615 12830 net.cpp:454] pool3 <- conv3_3
I0605 19:04:19.081619 12830 net.cpp:411] pool3 -> pool3
I0605 19:04:19.081665 12830 net.cpp:150] Setting up pool3
I0605 19:04:19.081670 12830 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0605 19:04:19.081682 12830 net.cpp:165] Memory required for data: 1240800108
I0605 19:04:19.081684 12830 layer_factory.hpp:77] Creating layer conv4_1
I0605 19:04:19.081691 12830 net.cpp:106] Creating Layer conv4_1
I0605 19:04:19.081693 12830 net.cpp:454] conv4_1 <- pool3
I0605 19:04:19.081698 12830 net.cpp:411] conv4_1 -> conv4_1
I0605 19:04:19.085347 12830 net.cpp:150] Setting up conv4_1
I0605 19:04:19.085367 12830 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:04:19.085369 12830 net.cpp:165] Memory required for data: 1260000108
I0605 19:04:19.085378 12830 layer_factory.hpp:77] Creating layer relu4_1
I0605 19:04:19.085386 12830 net.cpp:106] Creating Layer relu4_1
I0605 19:04:19.085391 12830 net.cpp:454] relu4_1 <- conv4_1
I0605 19:04:19.085405 12830 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0605 19:04:19.085566 12830 net.cpp:150] Setting up relu4_1
I0605 19:04:19.085573 12830 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:04:19.085577 12830 net.cpp:165] Memory required for data: 1279200108
I0605 19:04:19.085578 12830 layer_factory.hpp:77] Creating layer conv4_2
I0605 19:04:19.085584 12830 net.cpp:106] Creating Layer conv4_2
I0605 19:04:19.085587 12830 net.cpp:454] conv4_2 <- conv4_1
I0605 19:04:19.085592 12830 net.cpp:411] conv4_2 -> conv4_2
I0605 19:04:19.090651 12830 net.cpp:150] Setting up conv4_2
I0605 19:04:19.090679 12830 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:04:19.090692 12830 net.cpp:165] Memory required for data: 1298400108
I0605 19:04:19.090708 12830 layer_factory.hpp:77] Creating layer relu4_2
I0605 19:04:19.090718 12830 net.cpp:106] Creating Layer relu4_2
I0605 19:04:19.090723 12830 net.cpp:454] relu4_2 <- conv4_2
I0605 19:04:19.090730 12830 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0605 19:04:19.091308 12830 net.cpp:150] Setting up relu4_2
I0605 19:04:19.091318 12830 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:04:19.091321 12830 net.cpp:165] Memory required for data: 1317600108
I0605 19:04:19.091325 12830 layer_factory.hpp:77] Creating layer conv4_3
I0605 19:04:19.091346 12830 net.cpp:106] Creating Layer conv4_3
I0605 19:04:19.091351 12830 net.cpp:454] conv4_3 <- conv4_2
I0605 19:04:19.091356 12830 net.cpp:411] conv4_3 -> conv4_3
I0605 19:04:19.095790 12830 net.cpp:150] Setting up conv4_3
I0605 19:04:19.095808 12830 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:04:19.095811 12830 net.cpp:165] Memory required for data: 1336800108
I0605 19:04:19.095819 12830 layer_factory.hpp:77] Creating layer relu4_3
I0605 19:04:19.095837 12830 net.cpp:106] Creating Layer relu4_3
I0605 19:04:19.095841 12830 net.cpp:454] relu4_3 <- conv4_3
I0605 19:04:19.095846 12830 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0605 19:04:19.095973 12830 net.cpp:150] Setting up relu4_3
I0605 19:04:19.095978 12830 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0605 19:04:19.095981 12830 net.cpp:165] Memory required for data: 1356000108
I0605 19:04:19.095983 12830 layer_factory.hpp:77] Creating layer pool4
I0605 19:04:19.096000 12830 net.cpp:106] Creating Layer pool4
I0605 19:04:19.096005 12830 net.cpp:454] pool4 <- conv4_3
I0605 19:04:19.096019 12830 net.cpp:411] pool4 -> pool4
I0605 19:04:19.096071 12830 net.cpp:150] Setting up pool4
I0605 19:04:19.096076 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.096088 12830 net.cpp:165] Memory required for data: 1360903020
I0605 19:04:19.096091 12830 layer_factory.hpp:77] Creating layer conv5_1
I0605 19:04:19.096105 12830 net.cpp:106] Creating Layer conv5_1
I0605 19:04:19.096108 12830 net.cpp:454] conv5_1 <- pool4
I0605 19:04:19.096112 12830 net.cpp:411] conv5_1 -> conv5_1
I0605 19:04:19.100435 12830 net.cpp:150] Setting up conv5_1
I0605 19:04:19.100450 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.100452 12830 net.cpp:165] Memory required for data: 1365805932
I0605 19:04:19.100459 12830 layer_factory.hpp:77] Creating layer relu5_1
I0605 19:04:19.100466 12830 net.cpp:106] Creating Layer relu5_1
I0605 19:04:19.100481 12830 net.cpp:454] relu5_1 <- conv5_1
I0605 19:04:19.100487 12830 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0605 19:04:19.100633 12830 net.cpp:150] Setting up relu5_1
I0605 19:04:19.100639 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.100642 12830 net.cpp:165] Memory required for data: 1370708844
I0605 19:04:19.100644 12830 layer_factory.hpp:77] Creating layer conv5_2
I0605 19:04:19.100651 12830 net.cpp:106] Creating Layer conv5_2
I0605 19:04:19.100654 12830 net.cpp:454] conv5_2 <- conv5_1
I0605 19:04:19.100658 12830 net.cpp:411] conv5_2 -> conv5_2
I0605 19:04:19.105057 12830 net.cpp:150] Setting up conv5_2
I0605 19:04:19.105075 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.105078 12830 net.cpp:165] Memory required for data: 1375611756
I0605 19:04:19.105085 12830 layer_factory.hpp:77] Creating layer relu5_2
I0605 19:04:19.105093 12830 net.cpp:106] Creating Layer relu5_2
I0605 19:04:19.105098 12830 net.cpp:454] relu5_2 <- conv5_2
I0605 19:04:19.105101 12830 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0605 19:04:19.105239 12830 net.cpp:150] Setting up relu5_2
I0605 19:04:19.105247 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.105249 12830 net.cpp:165] Memory required for data: 1380514668
I0605 19:04:19.105252 12830 layer_factory.hpp:77] Creating layer conv5_3
I0605 19:04:19.105262 12830 net.cpp:106] Creating Layer conv5_3
I0605 19:04:19.105264 12830 net.cpp:454] conv5_3 <- conv5_2
I0605 19:04:19.105280 12830 net.cpp:411] conv5_3 -> conv5_3
I0605 19:04:19.110173 12830 net.cpp:150] Setting up conv5_3
I0605 19:04:19.110190 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.110193 12830 net.cpp:165] Memory required for data: 1385417580
I0605 19:04:19.110200 12830 layer_factory.hpp:77] Creating layer relu5_3
I0605 19:04:19.110208 12830 net.cpp:106] Creating Layer relu5_3
I0605 19:04:19.110213 12830 net.cpp:454] relu5_3 <- conv5_3
I0605 19:04:19.110218 12830 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0605 19:04:19.110353 12830 net.cpp:150] Setting up relu5_3
I0605 19:04:19.110363 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.110365 12830 net.cpp:165] Memory required for data: 1390320492
I0605 19:04:19.110368 12830 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0605 19:04:19.110373 12830 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0605 19:04:19.110374 12830 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0605 19:04:19.110378 12830 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0605 19:04:19.110393 12830 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0605 19:04:19.110396 12830 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0605 19:04:19.110442 12830 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0605 19:04:19.110447 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.110460 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.110462 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.110464 12830 net.cpp:165] Memory required for data: 1405029228
I0605 19:04:19.110466 12830 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0605 19:04:19.110484 12830 net.cpp:106] Creating Layer rpn_conv/3x3
I0605 19:04:19.110498 12830 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0605 19:04:19.110503 12830 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0605 19:04:19.160353 12830 net.cpp:150] Setting up rpn_conv/3x3
I0605 19:04:19.160383 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.160387 12830 net.cpp:165] Memory required for data: 1409932140
I0605 19:04:19.160395 12830 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0605 19:04:19.160404 12830 net.cpp:106] Creating Layer rpn_relu/3x3
I0605 19:04:19.160419 12830 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0605 19:04:19.160424 12830 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0605 19:04:19.160563 12830 net.cpp:150] Setting up rpn_relu/3x3
I0605 19:04:19.160570 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.160583 12830 net.cpp:165] Memory required for data: 1414835052
I0605 19:04:19.160586 12830 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0605 19:04:19.160591 12830 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0605 19:04:19.160593 12830 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0605 19:04:19.160598 12830 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0605 19:04:19.160603 12830 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0605 19:04:19.160653 12830 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0605 19:04:19.160657 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.160671 12830 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0605 19:04:19.160673 12830 net.cpp:165] Memory required for data: 1424640876
I0605 19:04:19.160676 12830 layer_factory.hpp:77] Creating layer rpn_cls_score
I0605 19:04:19.160694 12830 net.cpp:106] Creating Layer rpn_cls_score
I0605 19:04:19.160698 12830 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0605 19:04:19.160702 12830 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0605 19:04:19.162427 12830 net.cpp:150] Setting up rpn_cls_score
I0605 19:04:19.162436 12830 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 19:04:19.162439 12830 net.cpp:165] Memory required for data: 1424928156
I0605 19:04:19.162444 12830 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0605 19:04:19.162451 12830 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0605 19:04:19.162453 12830 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0605 19:04:19.162457 12830 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0605 19:04:19.162472 12830 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0605 19:04:19.162508 12830 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0605 19:04:19.162513 12830 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 19:04:19.162525 12830 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 19:04:19.162528 12830 net.cpp:165] Memory required for data: 1425502716
I0605 19:04:19.162529 12830 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0605 19:04:19.162536 12830 net.cpp:106] Creating Layer rpn_bbox_pred
I0605 19:04:19.162549 12830 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0605 19:04:19.162554 12830 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0605 19:04:19.164153 12830 net.cpp:150] Setting up rpn_bbox_pred
I0605 19:04:19.164161 12830 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:04:19.164175 12830 net.cpp:165] Memory required for data: 1426077276
I0605 19:04:19.164180 12830 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 19:04:19.164186 12830 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 19:04:19.164189 12830 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0605 19:04:19.164193 12830 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0605 19:04:19.164198 12830 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0605 19:04:19.164234 12830 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0605 19:04:19.164239 12830 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:04:19.164252 12830 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:04:19.164254 12830 net.cpp:165] Memory required for data: 1427226396
I0605 19:04:19.164256 12830 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0605 19:04:19.164263 12830 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0605 19:04:19.164265 12830 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0605 19:04:19.164269 12830 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0605 19:04:19.164299 12830 net.cpp:150] Setting up rpn_cls_score_reshape
I0605 19:04:19.164311 12830 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 19:04:19.164314 12830 net.cpp:165] Memory required for data: 1427513676
I0605 19:04:19.164315 12830 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 19:04:19.164327 12830 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 19:04:19.164330 12830 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0605 19:04:19.164333 12830 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0605 19:04:19.164347 12830 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0605 19:04:19.164379 12830 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0605 19:04:19.164394 12830 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 19:04:19.164397 12830 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 19:04:19.164398 12830 net.cpp:165] Memory required for data: 1428088236
I0605 19:04:19.164402 12830 layer_factory.hpp:77] Creating layer rpn-data
I0605 19:04:19.164816 12830 net.cpp:106] Creating Layer rpn-data
I0605 19:04:19.164824 12830 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0605 19:04:19.164829 12830 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0605 19:04:19.164831 12830 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0605 19:04:19.164835 12830 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0605 19:04:19.164849 12830 net.cpp:411] rpn-data -> rpn_labels
I0605 19:04:19.164855 12830 net.cpp:411] rpn-data -> rpn_bbox_targets
I0605 19:04:19.164860 12830 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0605 19:04:19.164865 12830 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0605 19:04:19.165695 12830 net.cpp:150] Setting up rpn-data
I0605 19:04:19.165704 12830 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0605 19:04:19.165707 12830 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:04:19.165709 12830 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:04:19.165712 12830 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0605 19:04:19.165714 12830 net.cpp:165] Memory required for data: 1429955556
I0605 19:04:19.165717 12830 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0605 19:04:19.165722 12830 net.cpp:106] Creating Layer rpn_loss_cls
I0605 19:04:19.165725 12830 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0605 19:04:19.165729 12830 net.cpp:454] rpn_loss_cls <- rpn_labels
I0605 19:04:19.165732 12830 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0605 19:04:19.165743 12830 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0605 19:04:19.166359 12830 net.cpp:150] Setting up rpn_loss_cls
I0605 19:04:19.166368 12830 net.cpp:157] Top shape: (1)
I0605 19:04:19.166370 12830 net.cpp:160]     with loss weight 1
I0605 19:04:19.166378 12830 net.cpp:165] Memory required for data: 1429955560
I0605 19:04:19.166379 12830 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0605 19:04:19.166389 12830 net.cpp:106] Creating Layer rpn_loss_bbox
I0605 19:04:19.166393 12830 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0605 19:04:19.166396 12830 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0605 19:04:19.166400 12830 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0605 19:04:19.166404 12830 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0605 19:04:19.166406 12830 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0605 19:04:19.167490 12830 net.cpp:150] Setting up rpn_loss_bbox
I0605 19:04:19.167498 12830 net.cpp:157] Top shape: (1)
I0605 19:04:19.167500 12830 net.cpp:160]     with loss weight 1
I0605 19:04:19.167505 12830 net.cpp:165] Memory required for data: 1429955564
I0605 19:04:19.167507 12830 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0605 19:04:19.167512 12830 net.cpp:106] Creating Layer rpn_cls_prob
I0605 19:04:19.167515 12830 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0605 19:04:19.167520 12830 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0605 19:04:19.167672 12830 net.cpp:150] Setting up rpn_cls_prob
I0605 19:04:19.167678 12830 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0605 19:04:19.167680 12830 net.cpp:165] Memory required for data: 1430242844
I0605 19:04:19.167683 12830 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0605 19:04:19.167688 12830 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0605 19:04:19.167691 12830 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0605 19:04:19.167695 12830 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0605 19:04:19.167711 12830 net.cpp:150] Setting up rpn_cls_prob_reshape
I0605 19:04:19.167716 12830 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0605 19:04:19.167717 12830 net.cpp:165] Memory required for data: 1430530124
I0605 19:04:19.167719 12830 layer_factory.hpp:77] Creating layer proposal
I0605 19:04:19.168174 12830 net.cpp:106] Creating Layer proposal
I0605 19:04:19.168181 12830 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0605 19:04:19.168184 12830 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0605 19:04:19.168187 12830 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0605 19:04:19.168191 12830 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0605 19:04:19.168973 12830 net.cpp:150] Setting up proposal
I0605 19:04:19.168982 12830 net.cpp:157] Top shape: 1 5 (5)
I0605 19:04:19.168994 12830 net.cpp:165] Memory required for data: 1430530144
I0605 19:04:19.168996 12830 layer_factory.hpp:77] Creating layer roi-data
I0605 19:04:19.169193 12830 net.cpp:106] Creating Layer roi-data
I0605 19:04:19.169211 12830 net.cpp:454] roi-data <- rpn_rois
I0605 19:04:19.169215 12830 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0605 19:04:19.169229 12830 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0605 19:04:19.169232 12830 net.cpp:454] roi-data <- seg_mask_inds
I0605 19:04:19.169235 12830 net.cpp:454] roi-data <- flipped
I0605 19:04:19.169239 12830 net.cpp:411] roi-data -> rois
I0605 19:04:19.169253 12830 net.cpp:411] roi-data -> labels
I0605 19:04:19.169260 12830 net.cpp:411] roi-data -> bbox_targets
I0605 19:04:19.169265 12830 net.cpp:411] roi-data -> bbox_inside_weights
I0605 19:04:19.169271 12830 net.cpp:411] roi-data -> bbox_outside_weights
I0605 19:04:19.169276 12830 net.cpp:411] roi-data -> mask_targets
I0605 19:04:19.169281 12830 net.cpp:411] roi-data -> rois_pos
I0605 19:04:19.169584 12830 net.cpp:150] Setting up roi-data
I0605 19:04:19.169591 12830 net.cpp:157] Top shape: 1 5 (5)
I0605 19:04:19.169605 12830 net.cpp:157] Top shape: 1 1 (1)
I0605 19:04:19.169607 12830 net.cpp:157] Top shape: 1 8 (8)
I0605 19:04:19.169610 12830 net.cpp:157] Top shape: 1 8 (8)
I0605 19:04:19.169612 12830 net.cpp:157] Top shape: 1 8 (8)
I0605 19:04:19.169615 12830 net.cpp:157] Top shape: 1 244 244 (59536)
I0605 19:04:19.169620 12830 net.cpp:157] Top shape: 1 5 (5)
I0605 19:04:19.169621 12830 net.cpp:165] Memory required for data: 1430768428
I0605 19:04:19.169626 12830 layer_factory.hpp:77] Creating layer roi_pool5
I0605 19:04:19.169636 12830 net.cpp:106] Creating Layer roi_pool5
I0605 19:04:19.169639 12830 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0605 19:04:19.169652 12830 net.cpp:454] roi_pool5 <- rois
I0605 19:04:19.169656 12830 net.cpp:411] roi_pool5 -> pool5
I0605 19:04:19.169670 12830 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0605 19:04:19.169768 12830 net.cpp:150] Setting up roi_pool5
I0605 19:04:19.169773 12830 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:04:19.169785 12830 net.cpp:165] Memory required for data: 1430868780
I0605 19:04:19.169787 12830 layer_factory.hpp:77] Creating layer fc6
I0605 19:04:19.169806 12830 net.cpp:106] Creating Layer fc6
I0605 19:04:19.169808 12830 net.cpp:454] fc6 <- pool5
I0605 19:04:19.169812 12830 net.cpp:411] fc6 -> fc6
I0605 19:04:19.310887 12830 net.cpp:150] Setting up fc6
I0605 19:04:19.310911 12830 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:04:19.310914 12830 net.cpp:165] Memory required for data: 1430885164
I0605 19:04:19.310930 12830 layer_factory.hpp:77] Creating layer relu6
I0605 19:04:19.310950 12830 net.cpp:106] Creating Layer relu6
I0605 19:04:19.310955 12830 net.cpp:454] relu6 <- fc6
I0605 19:04:19.310969 12830 net.cpp:397] relu6 -> fc6 (in-place)
I0605 19:04:19.311203 12830 net.cpp:150] Setting up relu6
I0605 19:04:19.311210 12830 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:04:19.311213 12830 net.cpp:165] Memory required for data: 1430901548
I0605 19:04:19.311215 12830 layer_factory.hpp:77] Creating layer fc7
I0605 19:04:19.311221 12830 net.cpp:106] Creating Layer fc7
I0605 19:04:19.311223 12830 net.cpp:454] fc7 <- fc6
I0605 19:04:19.311228 12830 net.cpp:411] fc7 -> fc7
I0605 19:04:19.334643 12830 net.cpp:150] Setting up fc7
I0605 19:04:19.334666 12830 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:04:19.334671 12830 net.cpp:165] Memory required for data: 1430917932
I0605 19:04:19.334679 12830 layer_factory.hpp:77] Creating layer relu7
I0605 19:04:19.334698 12830 net.cpp:106] Creating Layer relu7
I0605 19:04:19.334704 12830 net.cpp:454] relu7 <- fc7
I0605 19:04:19.334709 12830 net.cpp:397] relu7 -> fc7 (in-place)
I0605 19:04:19.334942 12830 net.cpp:150] Setting up relu7
I0605 19:04:19.334951 12830 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:04:19.334956 12830 net.cpp:165] Memory required for data: 1430934316
I0605 19:04:19.334959 12830 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0605 19:04:19.334975 12830 net.cpp:106] Creating Layer fc7_relu7_0_split
I0605 19:04:19.334977 12830 net.cpp:454] fc7_relu7_0_split <- fc7
I0605 19:04:19.334982 12830 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0605 19:04:19.334997 12830 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0605 19:04:19.335052 12830 net.cpp:150] Setting up fc7_relu7_0_split
I0605 19:04:19.335067 12830 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:04:19.335070 12830 net.cpp:157] Top shape: 1 4096 (4096)
I0605 19:04:19.335072 12830 net.cpp:165] Memory required for data: 1430967084
I0605 19:04:19.335084 12830 layer_factory.hpp:77] Creating layer cls_score
I0605 19:04:19.335091 12830 net.cpp:106] Creating Layer cls_score
I0605 19:04:19.335108 12830 net.cpp:454] cls_score <- fc7_relu7_0_split_0
I0605 19:04:19.335113 12830 net.cpp:411] cls_score -> cls_score
I0605 19:04:19.335413 12830 net.cpp:150] Setting up cls_score
I0605 19:04:19.335420 12830 net.cpp:157] Top shape: 1 2 (2)
I0605 19:04:19.335422 12830 net.cpp:165] Memory required for data: 1430967092
I0605 19:04:19.335427 12830 layer_factory.hpp:77] Creating layer bbox_pred
I0605 19:04:19.335431 12830 net.cpp:106] Creating Layer bbox_pred
I0605 19:04:19.335434 12830 net.cpp:454] bbox_pred <- fc7_relu7_0_split_1
I0605 19:04:19.335448 12830 net.cpp:411] bbox_pred -> bbox_pred
I0605 19:04:19.336175 12830 net.cpp:150] Setting up bbox_pred
I0605 19:04:19.336180 12830 net.cpp:157] Top shape: 1 8 (8)
I0605 19:04:19.336184 12830 net.cpp:165] Memory required for data: 1430967124
I0605 19:04:19.336186 12830 layer_factory.hpp:77] Creating layer loss_cls
I0605 19:04:19.336192 12830 net.cpp:106] Creating Layer loss_cls
I0605 19:04:19.336194 12830 net.cpp:454] loss_cls <- cls_score
I0605 19:04:19.336199 12830 net.cpp:454] loss_cls <- labels
I0605 19:04:19.336211 12830 net.cpp:411] loss_cls -> loss_cls
I0605 19:04:19.336217 12830 layer_factory.hpp:77] Creating layer loss_cls
I0605 19:04:19.336884 12830 net.cpp:150] Setting up loss_cls
I0605 19:04:19.336892 12830 net.cpp:157] Top shape: (1)
I0605 19:04:19.336895 12830 net.cpp:160]     with loss weight 3
I0605 19:04:19.336902 12830 net.cpp:165] Memory required for data: 1430967128
I0605 19:04:19.336905 12830 layer_factory.hpp:77] Creating layer loss_bbox
I0605 19:04:19.336910 12830 net.cpp:106] Creating Layer loss_bbox
I0605 19:04:19.336925 12830 net.cpp:454] loss_bbox <- bbox_pred
I0605 19:04:19.336930 12830 net.cpp:454] loss_bbox <- bbox_targets
I0605 19:04:19.336933 12830 net.cpp:454] loss_bbox <- bbox_inside_weights
I0605 19:04:19.336938 12830 net.cpp:454] loss_bbox <- bbox_outside_weights
I0605 19:04:19.336942 12830 net.cpp:411] loss_bbox -> loss_bbox
I0605 19:04:19.337013 12830 net.cpp:150] Setting up loss_bbox
I0605 19:04:19.337018 12830 net.cpp:157] Top shape: (1)
I0605 19:04:19.337019 12830 net.cpp:160]     with loss weight 2
I0605 19:04:19.337023 12830 net.cpp:165] Memory required for data: 1430967132
I0605 19:04:19.337024 12830 layer_factory.hpp:77] Creating layer roi_pool5_2
I0605 19:04:19.337030 12830 net.cpp:106] Creating Layer roi_pool5_2
I0605 19:04:19.337033 12830 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0605 19:04:19.337035 12830 net.cpp:454] roi_pool5_2 <- rois_pos
I0605 19:04:19.337051 12830 net.cpp:411] roi_pool5_2 -> pool5_2
I0605 19:04:19.337056 12830 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0605 19:04:19.337131 12830 net.cpp:150] Setting up roi_pool5_2
I0605 19:04:19.337134 12830 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:04:19.337137 12830 net.cpp:165] Memory required for data: 1431067484
I0605 19:04:19.337139 12830 layer_factory.hpp:77] Creating layer pool5_2_conv
I0605 19:04:19.337147 12830 net.cpp:106] Creating Layer pool5_2_conv
I0605 19:04:19.337149 12830 net.cpp:454] pool5_2_conv <- pool5_2
I0605 19:04:19.337153 12830 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0605 19:04:19.344094 12830 net.cpp:150] Setting up pool5_2_conv
I0605 19:04:19.344105 12830 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:04:19.344107 12830 net.cpp:165] Memory required for data: 1431167836
I0605 19:04:19.344122 12830 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0605 19:04:19.344130 12830 net.cpp:106] Creating Layer pool5_2_conv_relu
I0605 19:04:19.344135 12830 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0605 19:04:19.344139 12830 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0605 19:04:19.344285 12830 net.cpp:150] Setting up pool5_2_conv_relu
I0605 19:04:19.344290 12830 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:04:19.344293 12830 net.cpp:165] Memory required for data: 1431268188
I0605 19:04:19.344295 12830 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0605 19:04:19.344307 12830 net.cpp:106] Creating Layer pool5_2_conv2
I0605 19:04:19.344310 12830 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0605 19:04:19.344326 12830 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0605 19:04:19.394335 12830 net.cpp:150] Setting up pool5_2_conv2
I0605 19:04:19.394352 12830 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:04:19.394356 12830 net.cpp:165] Memory required for data: 1431368540
I0605 19:04:19.394363 12830 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0605 19:04:19.394382 12830 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0605 19:04:19.394388 12830 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0605 19:04:19.394393 12830 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0605 19:04:19.394546 12830 net.cpp:150] Setting up pool5_2_conv2_relu
I0605 19:04:19.394553 12830 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0605 19:04:19.394556 12830 net.cpp:165] Memory required for data: 1431468892
I0605 19:04:19.394558 12830 layer_factory.hpp:77] Creating layer mask_deconv1
I0605 19:04:19.394565 12830 net.cpp:106] Creating Layer mask_deconv1
I0605 19:04:19.394580 12830 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0605 19:04:19.394587 12830 net.cpp:411] mask_deconv1 -> mask_deconv1
I0605 19:04:19.395382 12830 net.cpp:150] Setting up mask_deconv1
I0605 19:04:19.395390 12830 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0605 19:04:19.395391 12830 net.cpp:165] Memory required for data: 1432390492
I0605 19:04:19.395396 12830 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0605 19:04:19.395417 12830 net.cpp:106] Creating Layer pool5_2_conv3
I0605 19:04:19.395421 12830 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0605 19:04:19.395426 12830 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0605 19:04:19.422045 12830 net.cpp:150] Setting up pool5_2_conv3
I0605 19:04:19.422062 12830 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 19:04:19.422066 12830 net.cpp:165] Memory required for data: 1434233692
I0605 19:04:19.422075 12830 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0605 19:04:19.422092 12830 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0605 19:04:19.422098 12830 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0605 19:04:19.422104 12830 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0605 19:04:19.422255 12830 net.cpp:150] Setting up pool5_2_conv3_relu
I0605 19:04:19.422261 12830 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 19:04:19.422263 12830 net.cpp:165] Memory required for data: 1436076892
I0605 19:04:19.422266 12830 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0605 19:04:19.422274 12830 net.cpp:106] Creating Layer pool5_2_conv4
I0605 19:04:19.422277 12830 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0605 19:04:19.422282 12830 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0605 19:04:19.472597 12830 net.cpp:150] Setting up pool5_2_conv4
I0605 19:04:19.472616 12830 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 19:04:19.472620 12830 net.cpp:165] Memory required for data: 1437920092
I0605 19:04:19.472627 12830 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0605 19:04:19.472636 12830 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0605 19:04:19.472642 12830 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0605 19:04:19.472658 12830 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0605 19:04:19.472800 12830 net.cpp:150] Setting up pool5_2_conv4_relu
I0605 19:04:19.472807 12830 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0605 19:04:19.472810 12830 net.cpp:165] Memory required for data: 1439763292
I0605 19:04:19.472812 12830 layer_factory.hpp:77] Creating layer mask_deconv2
I0605 19:04:19.472820 12830 net.cpp:106] Creating Layer mask_deconv2
I0605 19:04:19.472821 12830 net.cpp:454] mask_deconv2 <- pool5_2_conv4_relu
I0605 19:04:19.472826 12830 net.cpp:411] mask_deconv2 -> mask_deconv2
I0605 19:04:19.473160 12830 net.cpp:150] Setting up mask_deconv2
I0605 19:04:19.473165 12830 net.cpp:157] Top shape: 1 256 60 60 (921600)
I0605 19:04:19.473168 12830 net.cpp:165] Memory required for data: 1443449692
I0605 19:04:19.473172 12830 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0605 19:04:19.473178 12830 net.cpp:106] Creating Layer pool5_2_conv5
I0605 19:04:19.473181 12830 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0605 19:04:19.473196 12830 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0605 19:04:19.499241 12830 net.cpp:150] Setting up pool5_2_conv5
I0605 19:04:19.499258 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.499263 12830 net.cpp:165] Memory required for data: 1450822492
I0605 19:04:19.499269 12830 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0605 19:04:19.499287 12830 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0605 19:04:19.499292 12830 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0605 19:04:19.499298 12830 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0605 19:04:19.499449 12830 net.cpp:150] Setting up pool5_2_conv5_relu
I0605 19:04:19.499456 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.499459 12830 net.cpp:165] Memory required for data: 1458195292
I0605 19:04:19.499461 12830 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0605 19:04:19.499469 12830 net.cpp:106] Creating Layer pool5_2_conv6
I0605 19:04:19.499472 12830 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0605 19:04:19.499490 12830 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0605 19:04:19.549779 12830 net.cpp:150] Setting up pool5_2_conv6
I0605 19:04:19.549798 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.549801 12830 net.cpp:165] Memory required for data: 1465568092
I0605 19:04:19.549809 12830 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0605 19:04:19.549829 12830 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0605 19:04:19.549834 12830 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0605 19:04:19.549851 12830 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0605 19:04:19.550424 12830 net.cpp:150] Setting up pool5_2_conv6_relu
I0605 19:04:19.550434 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.550436 12830 net.cpp:165] Memory required for data: 1472940892
I0605 19:04:19.550439 12830 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu_pool5_2_conv6_relu_0_split
I0605 19:04:19.550444 12830 net.cpp:106] Creating Layer pool5_2_conv6_relu_pool5_2_conv6_relu_0_split
I0605 19:04:19.550447 12830 net.cpp:454] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split <- pool5_2_conv6_relu
I0605 19:04:19.550452 12830 net.cpp:411] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split -> pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_0
I0605 19:04:19.550467 12830 net.cpp:411] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split -> pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_1
I0605 19:04:19.550472 12830 net.cpp:411] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split -> pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_2
I0605 19:04:19.550488 12830 net.cpp:411] pool5_2_conv6_relu_pool5_2_conv6_relu_0_split -> pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_3
I0605 19:04:19.550549 12830 net.cpp:150] Setting up pool5_2_conv6_relu_pool5_2_conv6_relu_0_split
I0605 19:04:19.550554 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.550556 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.550559 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.550561 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.550563 12830 net.cpp:165] Memory required for data: 1502432092
I0605 19:04:19.550565 12830 layer_factory.hpp:77] Creating layer query_conv
I0605 19:04:19.550585 12830 net.cpp:106] Creating Layer query_conv
I0605 19:04:19.550586 12830 net.cpp:454] query_conv <- pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_0
I0605 19:04:19.550591 12830 net.cpp:411] query_conv -> query_conv
I0605 19:04:19.552191 12830 net.cpp:150] Setting up query_conv
I0605 19:04:19.552199 12830 net.cpp:157] Top shape: 1 64 60 60 (230400)
I0605 19:04:19.552201 12830 net.cpp:165] Memory required for data: 1503353692
I0605 19:04:19.552206 12830 layer_factory.hpp:77] Creating layer key_conv
I0605 19:04:19.552214 12830 net.cpp:106] Creating Layer key_conv
I0605 19:04:19.552217 12830 net.cpp:454] key_conv <- pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_1
I0605 19:04:19.552222 12830 net.cpp:411] key_conv -> key_conv
I0605 19:04:19.553488 12830 net.cpp:150] Setting up key_conv
I0605 19:04:19.553496 12830 net.cpp:157] Top shape: 1 64 60 60 (230400)
I0605 19:04:19.553508 12830 net.cpp:165] Memory required for data: 1504275292
I0605 19:04:19.553514 12830 layer_factory.hpp:77] Creating layer value_conv
I0605 19:04:19.553520 12830 net.cpp:106] Creating Layer value_conv
I0605 19:04:19.553524 12830 net.cpp:454] value_conv <- pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_2
I0605 19:04:19.553539 12830 net.cpp:411] value_conv -> value_conv
I0605 19:04:19.560416 12830 net.cpp:150] Setting up value_conv
I0605 19:04:19.560425 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.560428 12830 net.cpp:165] Memory required for data: 1511648092
I0605 19:04:19.560433 12830 layer_factory.hpp:77] Creating layer query_conv_reshape
I0605 19:04:19.560439 12830 net.cpp:106] Creating Layer query_conv_reshape
I0605 19:04:19.560443 12830 net.cpp:454] query_conv_reshape <- query_conv
I0605 19:04:19.560447 12830 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0605 19:04:19.560488 12830 net.cpp:150] Setting up query_conv_reshape
I0605 19:04:19.560493 12830 net.cpp:157] Top shape: 1 64 3600 1 (230400)
I0605 19:04:19.560505 12830 net.cpp:165] Memory required for data: 1512569692
I0605 19:04:19.560508 12830 layer_factory.hpp:77] Creating layer key_conv_reshape
I0605 19:04:19.560511 12830 net.cpp:106] Creating Layer key_conv_reshape
I0605 19:04:19.560514 12830 net.cpp:454] key_conv_reshape <- key_conv
I0605 19:04:19.560518 12830 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0605 19:04:19.560534 12830 net.cpp:150] Setting up key_conv_reshape
I0605 19:04:19.560539 12830 net.cpp:157] Top shape: 1 64 3600 1 (230400)
I0605 19:04:19.560549 12830 net.cpp:165] Memory required for data: 1513491292
I0605 19:04:19.560552 12830 layer_factory.hpp:77] Creating layer value_conv_reshape
I0605 19:04:19.560555 12830 net.cpp:106] Creating Layer value_conv_reshape
I0605 19:04:19.560569 12830 net.cpp:454] value_conv_reshape <- value_conv
I0605 19:04:19.560571 12830 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0605 19:04:19.560595 12830 net.cpp:150] Setting up value_conv_reshape
I0605 19:04:19.560609 12830 net.cpp:157] Top shape: 1 512 3600 1 (1843200)
I0605 19:04:19.560612 12830 net.cpp:165] Memory required for data: 1520864092
I0605 19:04:19.560614 12830 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0605 19:04:19.560619 12830 net.cpp:106] Creating Layer query_conv_reshape_perm
I0605 19:04:19.560622 12830 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0605 19:04:19.560626 12830 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0605 19:04:19.560712 12830 net.cpp:150] Setting up query_conv_reshape_perm
I0605 19:04:19.560717 12830 net.cpp:157] Top shape: 1 1 3600 64 (230400)
I0605 19:04:19.560719 12830 net.cpp:165] Memory required for data: 1521785692
I0605 19:04:19.560722 12830 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0605 19:04:19.560737 12830 net.cpp:106] Creating Layer key_conv_reshape_perm
I0605 19:04:19.560740 12830 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0605 19:04:19.560746 12830 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0605 19:04:19.560819 12830 net.cpp:150] Setting up key_conv_reshape_perm
I0605 19:04:19.560823 12830 net.cpp:157] Top shape: 1 1 64 3600 (230400)
I0605 19:04:19.560827 12830 net.cpp:165] Memory required for data: 1522707292
I0605 19:04:19.560829 12830 layer_factory.hpp:77] Creating layer energy
I0605 19:04:19.560844 12830 net.cpp:106] Creating Layer energy
I0605 19:04:19.560848 12830 net.cpp:454] energy <- query_conv_reshape_perm
I0605 19:04:19.560851 12830 net.cpp:454] energy <- key_conv_reshape_perm
I0605 19:04:19.560856 12830 net.cpp:411] energy -> energy
I0605 19:04:19.560876 12830 net.cpp:150] Setting up energy
I0605 19:04:19.560890 12830 net.cpp:157] Top shape: 1 1 3600 3600 (12960000)
I0605 19:04:19.560892 12830 net.cpp:165] Memory required for data: 1574547292
I0605 19:04:19.560895 12830 layer_factory.hpp:77] Creating layer attention
I0605 19:04:19.560911 12830 net.cpp:106] Creating Layer attention
I0605 19:04:19.560915 12830 net.cpp:454] attention <- energy
I0605 19:04:19.560920 12830 net.cpp:411] attention -> attention
I0605 19:04:19.561519 12830 net.cpp:150] Setting up attention
I0605 19:04:19.561527 12830 net.cpp:157] Top shape: 1 1 3600 3600 (12960000)
I0605 19:04:19.561530 12830 net.cpp:165] Memory required for data: 1626387292
I0605 19:04:19.561542 12830 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0605 19:04:19.561548 12830 net.cpp:106] Creating Layer value_conv_reshape_perm
I0605 19:04:19.561553 12830 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0605 19:04:19.561558 12830 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0605 19:04:19.561635 12830 net.cpp:150] Setting up value_conv_reshape_perm
I0605 19:04:19.561640 12830 net.cpp:157] Top shape: 1 1 512 3600 (1843200)
I0605 19:04:19.561642 12830 net.cpp:165] Memory required for data: 1633760092
I0605 19:04:19.561645 12830 layer_factory.hpp:77] Creating layer attention_perm
I0605 19:04:19.561658 12830 net.cpp:106] Creating Layer attention_perm
I0605 19:04:19.561661 12830 net.cpp:454] attention_perm <- attention
I0605 19:04:19.561666 12830 net.cpp:411] attention_perm -> attention_perm
I0605 19:04:19.561748 12830 net.cpp:150] Setting up attention_perm
I0605 19:04:19.561753 12830 net.cpp:157] Top shape: 1 1 3600 3600 (12960000)
I0605 19:04:19.561754 12830 net.cpp:165] Memory required for data: 1685600092
I0605 19:04:19.561756 12830 layer_factory.hpp:77] Creating layer out
I0605 19:04:19.561760 12830 net.cpp:106] Creating Layer out
I0605 19:04:19.561772 12830 net.cpp:454] out <- value_conv_reshape_perm
I0605 19:04:19.561775 12830 net.cpp:454] out <- attention_perm
I0605 19:04:19.561780 12830 net.cpp:411] out -> out
I0605 19:04:19.561806 12830 net.cpp:150] Setting up out
I0605 19:04:19.561820 12830 net.cpp:157] Top shape: 1 1 512 3600 (1843200)
I0605 19:04:19.561822 12830 net.cpp:165] Memory required for data: 1692972892
I0605 19:04:19.561825 12830 layer_factory.hpp:77] Creating layer out_reshape
I0605 19:04:19.561838 12830 net.cpp:106] Creating Layer out_reshape
I0605 19:04:19.561841 12830 net.cpp:454] out_reshape <- out
I0605 19:04:19.561846 12830 net.cpp:411] out_reshape -> out_reshape
I0605 19:04:19.561863 12830 net.cpp:150] Setting up out_reshape
I0605 19:04:19.561877 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.561880 12830 net.cpp:165] Memory required for data: 1700345692
I0605 19:04:19.561882 12830 layer_factory.hpp:77] Creating layer out_reshape_scale
I0605 19:04:19.561898 12830 net.cpp:106] Creating Layer out_reshape_scale
I0605 19:04:19.561902 12830 net.cpp:454] out_reshape_scale <- out_reshape
I0605 19:04:19.561915 12830 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0605 19:04:19.562012 12830 net.cpp:150] Setting up out_reshape_scale
I0605 19:04:19.562016 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.562018 12830 net.cpp:165] Memory required for data: 1707718492
I0605 19:04:19.562022 12830 layer_factory.hpp:77] Creating layer out_x
I0605 19:04:19.562037 12830 net.cpp:106] Creating Layer out_x
I0605 19:04:19.562041 12830 net.cpp:454] out_x <- out_reshape_scale
I0605 19:04:19.562043 12830 net.cpp:454] out_x <- pool5_2_conv6_relu_pool5_2_conv6_relu_0_split_3
I0605 19:04:19.562058 12830 net.cpp:411] out_x -> out_x
I0605 19:04:19.562077 12830 net.cpp:150] Setting up out_x
I0605 19:04:19.562081 12830 net.cpp:157] Top shape: 1 512 60 60 (1843200)
I0605 19:04:19.562083 12830 net.cpp:165] Memory required for data: 1715091292
I0605 19:04:19.562086 12830 layer_factory.hpp:77] Creating layer mask_deconv3
I0605 19:04:19.562101 12830 net.cpp:106] Creating Layer mask_deconv3
I0605 19:04:19.562104 12830 net.cpp:454] mask_deconv3 <- out_x
I0605 19:04:19.562119 12830 net.cpp:411] mask_deconv3 -> mask_deconv3
I0605 19:04:19.562988 12830 net.cpp:150] Setting up mask_deconv3
I0605 19:04:19.562994 12830 net.cpp:157] Top shape: 1 256 242 242 (14992384)
I0605 19:04:19.562995 12830 net.cpp:165] Memory required for data: 1775060828
I0605 19:04:19.563007 12830 layer_factory.hpp:77] Creating layer mask_score
I0605 19:04:19.563015 12830 net.cpp:106] Creating Layer mask_score
I0605 19:04:19.563020 12830 net.cpp:454] mask_score <- mask_deconv3
I0605 19:04:19.563026 12830 net.cpp:411] mask_score -> mask_score
I0605 19:04:19.563659 12830 net.cpp:150] Setting up mask_score
I0605 19:04:19.563666 12830 net.cpp:157] Top shape: 1 8 242 242 (468512)
I0605 19:04:19.563669 12830 net.cpp:165] Memory required for data: 1776934876
I0605 19:04:19.563674 12830 layer_factory.hpp:77] Creating layer loss_mask
I0605 19:04:19.563683 12830 net.cpp:106] Creating Layer loss_mask
I0605 19:04:19.563686 12830 net.cpp:454] loss_mask <- mask_score
I0605 19:04:19.563690 12830 net.cpp:454] loss_mask <- mask_targets
I0605 19:04:19.563696 12830 net.cpp:411] loss_mask -> loss_mask
I0605 19:04:19.563706 12830 layer_factory.hpp:77] Creating layer loss_mask
F0605 19:04:19.565096 12830 softmax_loss_layer.cpp:56] Check failed: outer_num_ * inner_num_ == bottom[1]->count() (58564 vs. 59536) Number of labels must match number of predictions; e.g., if softmax axis == 1 and prediction shape is (N, C, H, W), label count (number of labels) must be N*H*W, with integer values in {0, 1, ..., C-1}.
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 12830 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
