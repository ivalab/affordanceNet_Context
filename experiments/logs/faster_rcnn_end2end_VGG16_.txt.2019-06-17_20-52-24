+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-17_20-52-24
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-17_20-52-24
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 16,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0617 20:52:31.155084 24895 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0617 20:52:31.155110 24895 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0617 20:52:31.156515 24895 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "pool5_2_conv5_2"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5_2"
  top: "pool5_2_conv5_2_relu"
}
layer {
  name: "mask_deconv3_2"
  type: "Deconvolution"
  bottom: "pool5_2_conv5_2_relu"
  top: "mask_deconv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score_2"
  type: "Convolution"
  bottom: "mask_deconv3_2"
  top: "mask_score_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask_2"
  type: "SoftmaxWithLoss"
  bottom: "mask_score_2"
  bottom: "mask_targets"
  top: "loss_mask_2"
  loss_weight: 0.3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0617 20:52:31.156906 24895 layer_factory.hpp:77] Creating layer input-data
I0617 20:52:31.169502 24895 net.cpp:106] Creating Layer input-data
I0617 20:52:31.169515 24895 net.cpp:411] input-data -> data
I0617 20:52:31.169523 24895 net.cpp:411] input-data -> im_info
I0617 20:52:31.169526 24895 net.cpp:411] input-data -> gt_boxes
I0617 20:52:31.169530 24895 net.cpp:411] input-data -> seg_mask_inds
I0617 20:52:31.169533 24895 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0617 20:52:31.179780 24895 net.cpp:150] Setting up input-data
I0617 20:52:31.179806 24895 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0617 20:52:31.179811 24895 net.cpp:157] Top shape: 1 3 (3)
I0617 20:52:31.179813 24895 net.cpp:157] Top shape: 1 4 (4)
I0617 20:52:31.179816 24895 net.cpp:157] Top shape: 1 2 (2)
I0617 20:52:31.179819 24895 net.cpp:157] Top shape: 1 1 (1)
I0617 20:52:31.179822 24895 net.cpp:165] Memory required for data: 7200040
I0617 20:52:31.179827 24895 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0617 20:52:31.179842 24895 net.cpp:106] Creating Layer data_input-data_0_split
I0617 20:52:31.179847 24895 net.cpp:454] data_input-data_0_split <- data
I0617 20:52:31.179852 24895 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0617 20:52:31.179859 24895 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0617 20:52:31.179886 24895 net.cpp:150] Setting up data_input-data_0_split
I0617 20:52:31.179893 24895 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0617 20:52:31.179898 24895 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0617 20:52:31.179901 24895 net.cpp:165] Memory required for data: 21600040
I0617 20:52:31.179903 24895 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0617 20:52:31.179909 24895 net.cpp:106] Creating Layer im_info_input-data_1_split
I0617 20:52:31.179913 24895 net.cpp:454] im_info_input-data_1_split <- im_info
I0617 20:52:31.179916 24895 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0617 20:52:31.179924 24895 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0617 20:52:31.179941 24895 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0617 20:52:31.179986 24895 net.cpp:150] Setting up im_info_input-data_1_split
I0617 20:52:31.179991 24895 net.cpp:157] Top shape: 1 3 (3)
I0617 20:52:31.180006 24895 net.cpp:157] Top shape: 1 3 (3)
I0617 20:52:31.180011 24895 net.cpp:157] Top shape: 1 3 (3)
I0617 20:52:31.180013 24895 net.cpp:165] Memory required for data: 21600076
I0617 20:52:31.180018 24895 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0617 20:52:31.180023 24895 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0617 20:52:31.180027 24895 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0617 20:52:31.180032 24895 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0617 20:52:31.180038 24895 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0617 20:52:31.180065 24895 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0617 20:52:31.180071 24895 net.cpp:157] Top shape: 1 4 (4)
I0617 20:52:31.180074 24895 net.cpp:157] Top shape: 1 4 (4)
I0617 20:52:31.180078 24895 net.cpp:165] Memory required for data: 21600108
I0617 20:52:31.180080 24895 layer_factory.hpp:77] Creating layer conv1_1
I0617 20:52:31.180090 24895 net.cpp:106] Creating Layer conv1_1
I0617 20:52:31.180094 24895 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0617 20:52:31.180100 24895 net.cpp:411] conv1_1 -> conv1_1
I0617 20:52:31.333516 24895 net.cpp:150] Setting up conv1_1
I0617 20:52:31.333534 24895 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0617 20:52:31.333537 24895 net.cpp:165] Memory required for data: 175200108
I0617 20:52:31.333547 24895 layer_factory.hpp:77] Creating layer relu1_1
I0617 20:52:31.333565 24895 net.cpp:106] Creating Layer relu1_1
I0617 20:52:31.333568 24895 net.cpp:454] relu1_1 <- conv1_1
I0617 20:52:31.333572 24895 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0617 20:52:31.333703 24895 net.cpp:150] Setting up relu1_1
I0617 20:52:31.333709 24895 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0617 20:52:31.333710 24895 net.cpp:165] Memory required for data: 328800108
I0617 20:52:31.333712 24895 layer_factory.hpp:77] Creating layer conv1_2
I0617 20:52:31.333719 24895 net.cpp:106] Creating Layer conv1_2
I0617 20:52:31.333720 24895 net.cpp:454] conv1_2 <- conv1_1
I0617 20:52:31.333724 24895 net.cpp:411] conv1_2 -> conv1_2
I0617 20:52:31.335700 24895 net.cpp:150] Setting up conv1_2
I0617 20:52:31.335711 24895 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0617 20:52:31.335712 24895 net.cpp:165] Memory required for data: 482400108
I0617 20:52:31.335719 24895 layer_factory.hpp:77] Creating layer relu1_2
I0617 20:52:31.335724 24895 net.cpp:106] Creating Layer relu1_2
I0617 20:52:31.335726 24895 net.cpp:454] relu1_2 <- conv1_2
I0617 20:52:31.335729 24895 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0617 20:52:31.335839 24895 net.cpp:150] Setting up relu1_2
I0617 20:52:31.335845 24895 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0617 20:52:31.335847 24895 net.cpp:165] Memory required for data: 636000108
I0617 20:52:31.335850 24895 layer_factory.hpp:77] Creating layer pool1
I0617 20:52:31.335855 24895 net.cpp:106] Creating Layer pool1
I0617 20:52:31.335856 24895 net.cpp:454] pool1 <- conv1_2
I0617 20:52:31.335861 24895 net.cpp:411] pool1 -> pool1
I0617 20:52:31.335899 24895 net.cpp:150] Setting up pool1
I0617 20:52:31.335904 24895 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0617 20:52:31.335907 24895 net.cpp:165] Memory required for data: 674400108
I0617 20:52:31.335909 24895 layer_factory.hpp:77] Creating layer conv2_1
I0617 20:52:31.335916 24895 net.cpp:106] Creating Layer conv2_1
I0617 20:52:31.335922 24895 net.cpp:454] conv2_1 <- pool1
I0617 20:52:31.335927 24895 net.cpp:411] conv2_1 -> conv2_1
I0617 20:52:31.337560 24895 net.cpp:150] Setting up conv2_1
I0617 20:52:31.337568 24895 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0617 20:52:31.337572 24895 net.cpp:165] Memory required for data: 751200108
I0617 20:52:31.337580 24895 layer_factory.hpp:77] Creating layer relu2_1
I0617 20:52:31.337587 24895 net.cpp:106] Creating Layer relu2_1
I0617 20:52:31.337602 24895 net.cpp:454] relu2_1 <- conv2_1
I0617 20:52:31.337608 24895 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0617 20:52:31.338105 24895 net.cpp:150] Setting up relu2_1
I0617 20:52:31.338112 24895 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0617 20:52:31.338125 24895 net.cpp:165] Memory required for data: 828000108
I0617 20:52:31.338127 24895 layer_factory.hpp:77] Creating layer conv2_2
I0617 20:52:31.338135 24895 net.cpp:106] Creating Layer conv2_2
I0617 20:52:31.338138 24895 net.cpp:454] conv2_2 <- conv2_1
I0617 20:52:31.338153 24895 net.cpp:411] conv2_2 -> conv2_2
I0617 20:52:31.339382 24895 net.cpp:150] Setting up conv2_2
I0617 20:52:31.339390 24895 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0617 20:52:31.339393 24895 net.cpp:165] Memory required for data: 904800108
I0617 20:52:31.339399 24895 layer_factory.hpp:77] Creating layer relu2_2
I0617 20:52:31.339406 24895 net.cpp:106] Creating Layer relu2_2
I0617 20:52:31.339409 24895 net.cpp:454] relu2_2 <- conv2_2
I0617 20:52:31.339413 24895 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0617 20:52:31.339521 24895 net.cpp:150] Setting up relu2_2
I0617 20:52:31.339526 24895 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0617 20:52:31.339529 24895 net.cpp:165] Memory required for data: 981600108
I0617 20:52:31.339532 24895 layer_factory.hpp:77] Creating layer pool2
I0617 20:52:31.339538 24895 net.cpp:106] Creating Layer pool2
I0617 20:52:31.339542 24895 net.cpp:454] pool2 <- conv2_2
I0617 20:52:31.339546 24895 net.cpp:411] pool2 -> pool2
I0617 20:52:31.339576 24895 net.cpp:150] Setting up pool2
I0617 20:52:31.339579 24895 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0617 20:52:31.339581 24895 net.cpp:165] Memory required for data: 1000800108
I0617 20:52:31.339583 24895 layer_factory.hpp:77] Creating layer conv3_1
I0617 20:52:31.339587 24895 net.cpp:106] Creating Layer conv3_1
I0617 20:52:31.339591 24895 net.cpp:454] conv3_1 <- pool2
I0617 20:52:31.339593 24895 net.cpp:411] conv3_1 -> conv3_1
I0617 20:52:31.341289 24895 net.cpp:150] Setting up conv3_1
I0617 20:52:31.341297 24895 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:52:31.341300 24895 net.cpp:165] Memory required for data: 1039200108
I0617 20:52:31.341306 24895 layer_factory.hpp:77] Creating layer relu3_1
I0617 20:52:31.341310 24895 net.cpp:106] Creating Layer relu3_1
I0617 20:52:31.341313 24895 net.cpp:454] relu3_1 <- conv3_1
I0617 20:52:31.341316 24895 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0617 20:52:31.341416 24895 net.cpp:150] Setting up relu3_1
I0617 20:52:31.341421 24895 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:52:31.341423 24895 net.cpp:165] Memory required for data: 1077600108
I0617 20:52:31.341425 24895 layer_factory.hpp:77] Creating layer conv3_2
I0617 20:52:31.341431 24895 net.cpp:106] Creating Layer conv3_2
I0617 20:52:31.341434 24895 net.cpp:454] conv3_2 <- conv3_1
I0617 20:52:31.341437 24895 net.cpp:411] conv3_2 -> conv3_2
I0617 20:52:31.343279 24895 net.cpp:150] Setting up conv3_2
I0617 20:52:31.343287 24895 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:52:31.343289 24895 net.cpp:165] Memory required for data: 1116000108
I0617 20:52:31.343294 24895 layer_factory.hpp:77] Creating layer relu3_2
I0617 20:52:31.343298 24895 net.cpp:106] Creating Layer relu3_2
I0617 20:52:31.343302 24895 net.cpp:454] relu3_2 <- conv3_2
I0617 20:52:31.343304 24895 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0617 20:52:31.343405 24895 net.cpp:150] Setting up relu3_2
I0617 20:52:31.343411 24895 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:52:31.343413 24895 net.cpp:165] Memory required for data: 1154400108
I0617 20:52:31.343415 24895 layer_factory.hpp:77] Creating layer conv3_3
I0617 20:52:31.343420 24895 net.cpp:106] Creating Layer conv3_3
I0617 20:52:31.343422 24895 net.cpp:454] conv3_3 <- conv3_2
I0617 20:52:31.343425 24895 net.cpp:411] conv3_3 -> conv3_3
I0617 20:52:31.345573 24895 net.cpp:150] Setting up conv3_3
I0617 20:52:31.345595 24895 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:52:31.345598 24895 net.cpp:165] Memory required for data: 1192800108
I0617 20:52:31.345603 24895 layer_factory.hpp:77] Creating layer relu3_3
I0617 20:52:31.345608 24895 net.cpp:106] Creating Layer relu3_3
I0617 20:52:31.345611 24895 net.cpp:454] relu3_3 <- conv3_3
I0617 20:52:31.345616 24895 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0617 20:52:31.345744 24895 net.cpp:150] Setting up relu3_3
I0617 20:52:31.345751 24895 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0617 20:52:31.345763 24895 net.cpp:165] Memory required for data: 1231200108
I0617 20:52:31.345765 24895 layer_factory.hpp:77] Creating layer pool3
I0617 20:52:31.345769 24895 net.cpp:106] Creating Layer pool3
I0617 20:52:31.345772 24895 net.cpp:454] pool3 <- conv3_3
I0617 20:52:31.345787 24895 net.cpp:411] pool3 -> pool3
I0617 20:52:31.345839 24895 net.cpp:150] Setting up pool3
I0617 20:52:31.345844 24895 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0617 20:52:31.345845 24895 net.cpp:165] Memory required for data: 1240800108
I0617 20:52:31.345857 24895 layer_factory.hpp:77] Creating layer conv4_1
I0617 20:52:31.345862 24895 net.cpp:106] Creating Layer conv4_1
I0617 20:52:31.345865 24895 net.cpp:454] conv4_1 <- pool3
I0617 20:52:31.345877 24895 net.cpp:411] conv4_1 -> conv4_1
I0617 20:52:31.349843 24895 net.cpp:150] Setting up conv4_1
I0617 20:52:31.349861 24895 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:52:31.349864 24895 net.cpp:165] Memory required for data: 1260000108
I0617 20:52:31.349871 24895 layer_factory.hpp:77] Creating layer relu4_1
I0617 20:52:31.349879 24895 net.cpp:106] Creating Layer relu4_1
I0617 20:52:31.349892 24895 net.cpp:454] relu4_1 <- conv4_1
I0617 20:52:31.349896 24895 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0617 20:52:31.350042 24895 net.cpp:150] Setting up relu4_1
I0617 20:52:31.350049 24895 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:52:31.350050 24895 net.cpp:165] Memory required for data: 1279200108
I0617 20:52:31.350052 24895 layer_factory.hpp:77] Creating layer conv4_2
I0617 20:52:31.350059 24895 net.cpp:106] Creating Layer conv4_2
I0617 20:52:31.350061 24895 net.cpp:454] conv4_2 <- conv4_1
I0617 20:52:31.350064 24895 net.cpp:411] conv4_2 -> conv4_2
I0617 20:52:31.354519 24895 net.cpp:150] Setting up conv4_2
I0617 20:52:31.354539 24895 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:52:31.354542 24895 net.cpp:165] Memory required for data: 1298400108
I0617 20:52:31.354552 24895 layer_factory.hpp:77] Creating layer relu4_2
I0617 20:52:31.354559 24895 net.cpp:106] Creating Layer relu4_2
I0617 20:52:31.354573 24895 net.cpp:454] relu4_2 <- conv4_2
I0617 20:52:31.354578 24895 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0617 20:52:31.355067 24895 net.cpp:150] Setting up relu4_2
I0617 20:52:31.355074 24895 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:52:31.355077 24895 net.cpp:165] Memory required for data: 1317600108
I0617 20:52:31.355078 24895 layer_factory.hpp:77] Creating layer conv4_3
I0617 20:52:31.355084 24895 net.cpp:106] Creating Layer conv4_3
I0617 20:52:31.355087 24895 net.cpp:454] conv4_3 <- conv4_2
I0617 20:52:31.355090 24895 net.cpp:411] conv4_3 -> conv4_3
I0617 20:52:31.359277 24895 net.cpp:150] Setting up conv4_3
I0617 20:52:31.359295 24895 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:52:31.359297 24895 net.cpp:165] Memory required for data: 1336800108
I0617 20:52:31.359304 24895 layer_factory.hpp:77] Creating layer relu4_3
I0617 20:52:31.359313 24895 net.cpp:106] Creating Layer relu4_3
I0617 20:52:31.359326 24895 net.cpp:454] relu4_3 <- conv4_3
I0617 20:52:31.359330 24895 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0617 20:52:31.359475 24895 net.cpp:150] Setting up relu4_3
I0617 20:52:31.359481 24895 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0617 20:52:31.359483 24895 net.cpp:165] Memory required for data: 1356000108
I0617 20:52:31.359484 24895 layer_factory.hpp:77] Creating layer pool4
I0617 20:52:31.359489 24895 net.cpp:106] Creating Layer pool4
I0617 20:52:31.359491 24895 net.cpp:454] pool4 <- conv4_3
I0617 20:52:31.359495 24895 net.cpp:411] pool4 -> pool4
I0617 20:52:31.359545 24895 net.cpp:150] Setting up pool4
I0617 20:52:31.359552 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.359555 24895 net.cpp:165] Memory required for data: 1360903020
I0617 20:52:31.359556 24895 layer_factory.hpp:77] Creating layer conv5_1
I0617 20:52:31.359561 24895 net.cpp:106] Creating Layer conv5_1
I0617 20:52:31.359563 24895 net.cpp:454] conv5_1 <- pool4
I0617 20:52:31.359566 24895 net.cpp:411] conv5_1 -> conv5_1
I0617 20:52:31.364342 24895 net.cpp:150] Setting up conv5_1
I0617 20:52:31.364372 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.364373 24895 net.cpp:165] Memory required for data: 1365805932
I0617 20:52:31.364392 24895 layer_factory.hpp:77] Creating layer relu5_1
I0617 20:52:31.364401 24895 net.cpp:106] Creating Layer relu5_1
I0617 20:52:31.364406 24895 net.cpp:454] relu5_1 <- conv5_1
I0617 20:52:31.364413 24895 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0617 20:52:31.364681 24895 net.cpp:150] Setting up relu5_1
I0617 20:52:31.364687 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.364702 24895 net.cpp:165] Memory required for data: 1370708844
I0617 20:52:31.364704 24895 layer_factory.hpp:77] Creating layer conv5_2
I0617 20:52:31.364722 24895 net.cpp:106] Creating Layer conv5_2
I0617 20:52:31.364725 24895 net.cpp:454] conv5_2 <- conv5_1
I0617 20:52:31.364732 24895 net.cpp:411] conv5_2 -> conv5_2
I0617 20:52:31.369040 24895 net.cpp:150] Setting up conv5_2
I0617 20:52:31.369060 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.369062 24895 net.cpp:165] Memory required for data: 1375611756
I0617 20:52:31.369069 24895 layer_factory.hpp:77] Creating layer relu5_2
I0617 20:52:31.369077 24895 net.cpp:106] Creating Layer relu5_2
I0617 20:52:31.369081 24895 net.cpp:454] relu5_2 <- conv5_2
I0617 20:52:31.369086 24895 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0617 20:52:31.369220 24895 net.cpp:150] Setting up relu5_2
I0617 20:52:31.369226 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.369227 24895 net.cpp:165] Memory required for data: 1380514668
I0617 20:52:31.369230 24895 layer_factory.hpp:77] Creating layer conv5_3
I0617 20:52:31.369238 24895 net.cpp:106] Creating Layer conv5_3
I0617 20:52:31.369252 24895 net.cpp:454] conv5_3 <- conv5_2
I0617 20:52:31.369256 24895 net.cpp:411] conv5_3 -> conv5_3
I0617 20:52:31.377224 24895 net.cpp:150] Setting up conv5_3
I0617 20:52:31.377243 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.377246 24895 net.cpp:165] Memory required for data: 1385417580
I0617 20:52:31.377254 24895 layer_factory.hpp:77] Creating layer relu5_3
I0617 20:52:31.377262 24895 net.cpp:106] Creating Layer relu5_3
I0617 20:52:31.377266 24895 net.cpp:454] relu5_3 <- conv5_3
I0617 20:52:31.377274 24895 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0617 20:52:31.377398 24895 net.cpp:150] Setting up relu5_3
I0617 20:52:31.377405 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.377408 24895 net.cpp:165] Memory required for data: 1390320492
I0617 20:52:31.377409 24895 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0617 20:52:31.377413 24895 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0617 20:52:31.377415 24895 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0617 20:52:31.377420 24895 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0617 20:52:31.377425 24895 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0617 20:52:31.377432 24895 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0617 20:52:31.377476 24895 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0617 20:52:31.377481 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.377485 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.377486 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.377487 24895 net.cpp:165] Memory required for data: 1405029228
I0617 20:52:31.377490 24895 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0617 20:52:31.377497 24895 net.cpp:106] Creating Layer rpn_conv/3x3
I0617 20:52:31.377501 24895 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0617 20:52:31.377504 24895 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0617 20:52:31.429141 24895 net.cpp:150] Setting up rpn_conv/3x3
I0617 20:52:31.429159 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.429162 24895 net.cpp:165] Memory required for data: 1409932140
I0617 20:52:31.429168 24895 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0617 20:52:31.429175 24895 net.cpp:106] Creating Layer rpn_relu/3x3
I0617 20:52:31.429189 24895 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0617 20:52:31.429193 24895 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0617 20:52:31.429316 24895 net.cpp:150] Setting up rpn_relu/3x3
I0617 20:52:31.429322 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.429323 24895 net.cpp:165] Memory required for data: 1414835052
I0617 20:52:31.429325 24895 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0617 20:52:31.429329 24895 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0617 20:52:31.429332 24895 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0617 20:52:31.429334 24895 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0617 20:52:31.429338 24895 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0617 20:52:31.429370 24895 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0617 20:52:31.429374 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.429376 24895 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0617 20:52:31.429378 24895 net.cpp:165] Memory required for data: 1424640876
I0617 20:52:31.429380 24895 layer_factory.hpp:77] Creating layer rpn_cls_score
I0617 20:52:31.429388 24895 net.cpp:106] Creating Layer rpn_cls_score
I0617 20:52:31.429389 24895 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0617 20:52:31.429394 24895 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0617 20:52:31.430871 24895 net.cpp:150] Setting up rpn_cls_score
I0617 20:52:31.430879 24895 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0617 20:52:31.430881 24895 net.cpp:165] Memory required for data: 1424928156
I0617 20:52:31.430886 24895 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0617 20:52:31.430888 24895 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0617 20:52:31.430891 24895 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0617 20:52:31.430893 24895 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0617 20:52:31.430898 24895 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0617 20:52:31.430948 24895 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0617 20:52:31.430953 24895 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0617 20:52:31.430966 24895 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0617 20:52:31.430968 24895 net.cpp:165] Memory required for data: 1425502716
I0617 20:52:31.430969 24895 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0617 20:52:31.430975 24895 net.cpp:106] Creating Layer rpn_bbox_pred
I0617 20:52:31.430977 24895 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0617 20:52:31.430991 24895 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0617 20:52:31.432421 24895 net.cpp:150] Setting up rpn_bbox_pred
I0617 20:52:31.432428 24895 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:52:31.432430 24895 net.cpp:165] Memory required for data: 1426077276
I0617 20:52:31.432435 24895 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0617 20:52:31.432438 24895 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0617 20:52:31.432440 24895 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0617 20:52:31.432443 24895 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0617 20:52:31.432457 24895 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0617 20:52:31.432521 24895 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0617 20:52:31.432526 24895 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:52:31.432529 24895 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:52:31.432530 24895 net.cpp:165] Memory required for data: 1427226396
I0617 20:52:31.432533 24895 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0617 20:52:31.432536 24895 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0617 20:52:31.432538 24895 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0617 20:52:31.432541 24895 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0617 20:52:31.432561 24895 net.cpp:150] Setting up rpn_cls_score_reshape
I0617 20:52:31.432567 24895 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0617 20:52:31.432570 24895 net.cpp:165] Memory required for data: 1427513676
I0617 20:52:31.432572 24895 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0617 20:52:31.432575 24895 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0617 20:52:31.432577 24895 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0617 20:52:31.432579 24895 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0617 20:52:31.432584 24895 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0617 20:52:31.432602 24895 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0617 20:52:31.432606 24895 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0617 20:52:31.432608 24895 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0617 20:52:31.432610 24895 net.cpp:165] Memory required for data: 1428088236
I0617 20:52:31.432611 24895 layer_factory.hpp:77] Creating layer rpn-data
I0617 20:52:31.432905 24895 net.cpp:106] Creating Layer rpn-data
I0617 20:52:31.432912 24895 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0617 20:52:31.432916 24895 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0617 20:52:31.432919 24895 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0617 20:52:31.432921 24895 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0617 20:52:31.432924 24895 net.cpp:411] rpn-data -> rpn_labels
I0617 20:52:31.432929 24895 net.cpp:411] rpn-data -> rpn_bbox_targets
I0617 20:52:31.432934 24895 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0617 20:52:31.432936 24895 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0617 20:52:31.433737 24895 net.cpp:150] Setting up rpn-data
I0617 20:52:31.433744 24895 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0617 20:52:31.433748 24895 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:52:31.433749 24895 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:52:31.433751 24895 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0617 20:52:31.433753 24895 net.cpp:165] Memory required for data: 1429955556
I0617 20:52:31.433755 24895 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0617 20:52:31.433760 24895 net.cpp:106] Creating Layer rpn_loss_cls
I0617 20:52:31.433763 24895 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0617 20:52:31.433765 24895 net.cpp:454] rpn_loss_cls <- rpn_labels
I0617 20:52:31.433768 24895 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0617 20:52:31.433778 24895 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0617 20:52:31.434397 24895 net.cpp:150] Setting up rpn_loss_cls
I0617 20:52:31.434406 24895 net.cpp:157] Top shape: (1)
I0617 20:52:31.434418 24895 net.cpp:160]     with loss weight 1
I0617 20:52:31.434424 24895 net.cpp:165] Memory required for data: 1429955560
I0617 20:52:31.434435 24895 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0617 20:52:31.434454 24895 net.cpp:106] Creating Layer rpn_loss_bbox
I0617 20:52:31.434458 24895 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0617 20:52:31.434460 24895 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0617 20:52:31.434463 24895 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0617 20:52:31.434465 24895 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0617 20:52:31.434468 24895 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0617 20:52:31.435540 24895 net.cpp:150] Setting up rpn_loss_bbox
I0617 20:52:31.435549 24895 net.cpp:157] Top shape: (1)
I0617 20:52:31.435560 24895 net.cpp:160]     with loss weight 1
I0617 20:52:31.435564 24895 net.cpp:165] Memory required for data: 1429955564
I0617 20:52:31.435566 24895 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0617 20:52:31.435570 24895 net.cpp:106] Creating Layer rpn_cls_prob
I0617 20:52:31.435571 24895 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0617 20:52:31.435575 24895 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0617 20:52:31.435745 24895 net.cpp:150] Setting up rpn_cls_prob
I0617 20:52:31.435750 24895 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0617 20:52:31.435762 24895 net.cpp:165] Memory required for data: 1430242844
I0617 20:52:31.435765 24895 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0617 20:52:31.435768 24895 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0617 20:52:31.435770 24895 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0617 20:52:31.435773 24895 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0617 20:52:31.435789 24895 net.cpp:150] Setting up rpn_cls_prob_reshape
I0617 20:52:31.435802 24895 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0617 20:52:31.435803 24895 net.cpp:165] Memory required for data: 1430530124
I0617 20:52:31.435806 24895 layer_factory.hpp:77] Creating layer proposal
I0617 20:52:31.436239 24895 net.cpp:106] Creating Layer proposal
I0617 20:52:31.436245 24895 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0617 20:52:31.436259 24895 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0617 20:52:31.436261 24895 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0617 20:52:31.436264 24895 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0617 20:52:31.437031 24895 net.cpp:150] Setting up proposal
I0617 20:52:31.437039 24895 net.cpp:157] Top shape: 1 5 (5)
I0617 20:52:31.437052 24895 net.cpp:165] Memory required for data: 1430530144
I0617 20:52:31.437053 24895 layer_factory.hpp:77] Creating layer roi-data
I0617 20:52:31.437235 24895 net.cpp:106] Creating Layer roi-data
I0617 20:52:31.437242 24895 net.cpp:454] roi-data <- rpn_rois
I0617 20:52:31.437254 24895 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0617 20:52:31.437258 24895 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0617 20:52:31.437259 24895 net.cpp:454] roi-data <- seg_mask_inds
I0617 20:52:31.437261 24895 net.cpp:454] roi-data <- flipped
I0617 20:52:31.437265 24895 net.cpp:411] roi-data -> rois
I0617 20:52:31.437270 24895 net.cpp:411] roi-data -> labels
I0617 20:52:31.437275 24895 net.cpp:411] roi-data -> bbox_targets
I0617 20:52:31.437279 24895 net.cpp:411] roi-data -> bbox_inside_weights
I0617 20:52:31.437283 24895 net.cpp:411] roi-data -> bbox_outside_weights
I0617 20:52:31.437286 24895 net.cpp:411] roi-data -> mask_targets
I0617 20:52:31.437290 24895 net.cpp:411] roi-data -> rois_pos
I0617 20:52:31.437294 24895 net.cpp:411] roi-data -> attrArray
I0617 20:52:31.437299 24895 net.cpp:411] roi-data -> attrArrayInd
I0617 20:52:31.437302 24895 net.cpp:411] roi-data -> attrArrayShift
I0617 20:52:31.437583 24895 net.cpp:150] Setting up roi-data
I0617 20:52:31.437590 24895 net.cpp:157] Top shape: 1 5 (5)
I0617 20:52:31.437603 24895 net.cpp:157] Top shape: 1 1 (1)
I0617 20:52:31.437605 24895 net.cpp:157] Top shape: 1 8 (8)
I0617 20:52:31.437608 24895 net.cpp:157] Top shape: 1 8 (8)
I0617 20:52:31.437609 24895 net.cpp:157] Top shape: 1 8 (8)
I0617 20:52:31.437611 24895 net.cpp:157] Top shape: 1 244 244 (59536)
I0617 20:52:31.437613 24895 net.cpp:157] Top shape: 1 5 (5)
I0617 20:52:31.437615 24895 net.cpp:157] Top shape: 1 7 (7)
I0617 20:52:31.437618 24895 net.cpp:157] Top shape: 1 7 (7)
I0617 20:52:31.437619 24895 net.cpp:157] Top shape: 1 7 (7)
I0617 20:52:31.437620 24895 net.cpp:165] Memory required for data: 1430768512
I0617 20:52:31.437623 24895 layer_factory.hpp:77] Creating layer mask_targets_roi-data_5_split
I0617 20:52:31.437628 24895 net.cpp:106] Creating Layer mask_targets_roi-data_5_split
I0617 20:52:31.437631 24895 net.cpp:454] mask_targets_roi-data_5_split <- mask_targets
I0617 20:52:31.437634 24895 net.cpp:411] mask_targets_roi-data_5_split -> mask_targets_roi-data_5_split_0
I0617 20:52:31.437639 24895 net.cpp:411] mask_targets_roi-data_5_split -> mask_targets_roi-data_5_split_1
I0617 20:52:31.437666 24895 net.cpp:150] Setting up mask_targets_roi-data_5_split
I0617 20:52:31.437669 24895 net.cpp:157] Top shape: 1 244 244 (59536)
I0617 20:52:31.437672 24895 net.cpp:157] Top shape: 1 244 244 (59536)
I0617 20:52:31.437674 24895 net.cpp:165] Memory required for data: 1431244800
I0617 20:52:31.437675 24895 layer_factory.hpp:77] Creating layer roi_pool5
I0617 20:52:31.437683 24895 net.cpp:106] Creating Layer roi_pool5
I0617 20:52:31.437686 24895 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0617 20:52:31.437688 24895 net.cpp:454] roi_pool5 <- rois
I0617 20:52:31.437692 24895 net.cpp:411] roi_pool5 -> pool5
I0617 20:52:31.437697 24895 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0617 20:52:31.437758 24895 net.cpp:150] Setting up roi_pool5
I0617 20:52:31.437762 24895 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:52:31.437763 24895 net.cpp:165] Memory required for data: 1431345152
I0617 20:52:31.437765 24895 layer_factory.hpp:77] Creating layer fc6
I0617 20:52:31.437772 24895 net.cpp:106] Creating Layer fc6
I0617 20:52:31.437774 24895 net.cpp:454] fc6 <- pool5
I0617 20:52:31.437777 24895 net.cpp:411] fc6 -> fc6
I0617 20:52:31.576328 24895 net.cpp:150] Setting up fc6
I0617 20:52:31.576352 24895 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:52:31.576354 24895 net.cpp:165] Memory required for data: 1431361536
I0617 20:52:31.576367 24895 layer_factory.hpp:77] Creating layer relu6
I0617 20:52:31.576385 24895 net.cpp:106] Creating Layer relu6
I0617 20:52:31.576390 24895 net.cpp:454] relu6 <- fc6
I0617 20:52:31.576393 24895 net.cpp:397] relu6 -> fc6 (in-place)
I0617 20:52:31.576593 24895 net.cpp:150] Setting up relu6
I0617 20:52:31.576599 24895 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:52:31.576601 24895 net.cpp:165] Memory required for data: 1431377920
I0617 20:52:31.576603 24895 layer_factory.hpp:77] Creating layer fc7
I0617 20:52:31.576608 24895 net.cpp:106] Creating Layer fc7
I0617 20:52:31.576611 24895 net.cpp:454] fc7 <- fc6
I0617 20:52:31.576613 24895 net.cpp:411] fc7 -> fc7
I0617 20:52:31.599962 24895 net.cpp:150] Setting up fc7
I0617 20:52:31.599998 24895 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:52:31.600001 24895 net.cpp:165] Memory required for data: 1431394304
I0617 20:52:31.600009 24895 layer_factory.hpp:77] Creating layer relu7
I0617 20:52:31.600028 24895 net.cpp:106] Creating Layer relu7
I0617 20:52:31.600031 24895 net.cpp:454] relu7 <- fc7
I0617 20:52:31.600035 24895 net.cpp:397] relu7 -> fc7 (in-place)
I0617 20:52:31.600215 24895 net.cpp:150] Setting up relu7
I0617 20:52:31.600221 24895 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:52:31.600234 24895 net.cpp:165] Memory required for data: 1431410688
I0617 20:52:31.600235 24895 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0617 20:52:31.600240 24895 net.cpp:106] Creating Layer fc7_relu7_0_split
I0617 20:52:31.600242 24895 net.cpp:454] fc7_relu7_0_split <- fc7
I0617 20:52:31.600255 24895 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0617 20:52:31.600261 24895 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0617 20:52:31.600268 24895 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0617 20:52:31.600327 24895 net.cpp:150] Setting up fc7_relu7_0_split
I0617 20:52:31.600332 24895 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:52:31.600343 24895 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:52:31.600345 24895 net.cpp:157] Top shape: 1 4096 (4096)
I0617 20:52:31.600347 24895 net.cpp:165] Memory required for data: 1431459840
I0617 20:52:31.600349 24895 layer_factory.hpp:77] Creating layer attr_score
I0617 20:52:31.600364 24895 net.cpp:106] Creating Layer attr_score
I0617 20:52:31.600368 24895 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0617 20:52:31.600373 24895 net.cpp:411] attr_score -> attr_score
I0617 20:52:31.601056 24895 net.cpp:150] Setting up attr_score
I0617 20:52:31.601061 24895 net.cpp:157] Top shape: 1 7 (7)
I0617 20:52:31.601073 24895 net.cpp:165] Memory required for data: 1431459868
I0617 20:52:31.601078 24895 layer_factory.hpp:77] Creating layer attr_score_pos
I0617 20:52:31.601083 24895 net.cpp:106] Creating Layer attr_score_pos
I0617 20:52:31.601084 24895 net.cpp:454] attr_score_pos <- attr_score
I0617 20:52:31.601097 24895 net.cpp:454] attr_score_pos <- attrArrayInd
I0617 20:52:31.601100 24895 net.cpp:411] attr_score_pos -> attr_score_pos
I0617 20:52:31.601131 24895 net.cpp:150] Setting up attr_score_pos
I0617 20:52:31.601145 24895 net.cpp:157] Top shape: 1 7 (7)
I0617 20:52:31.601146 24895 net.cpp:165] Memory required for data: 1431459896
I0617 20:52:31.601148 24895 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0617 20:52:31.601162 24895 net.cpp:106] Creating Layer attr_score_pos_shift
I0617 20:52:31.601166 24895 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0617 20:52:31.601168 24895 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0617 20:52:31.601183 24895 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0617 20:52:31.601204 24895 net.cpp:150] Setting up attr_score_pos_shift
I0617 20:52:31.601219 24895 net.cpp:157] Top shape: 1 7 (7)
I0617 20:52:31.601222 24895 net.cpp:165] Memory required for data: 1431459924
I0617 20:52:31.601223 24895 layer_factory.hpp:77] Creating layer cls_score
I0617 20:52:31.601238 24895 net.cpp:106] Creating Layer cls_score
I0617 20:52:31.601239 24895 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0617 20:52:31.601243 24895 net.cpp:411] cls_score -> cls_score
I0617 20:52:31.601502 24895 net.cpp:150] Setting up cls_score
I0617 20:52:31.601506 24895 net.cpp:157] Top shape: 1 2 (2)
I0617 20:52:31.601508 24895 net.cpp:165] Memory required for data: 1431459932
I0617 20:52:31.601511 24895 layer_factory.hpp:77] Creating layer bbox_pred
I0617 20:52:31.601516 24895 net.cpp:106] Creating Layer bbox_pred
I0617 20:52:31.601519 24895 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0617 20:52:31.601524 24895 net.cpp:411] bbox_pred -> bbox_pred
I0617 20:52:31.602308 24895 net.cpp:150] Setting up bbox_pred
I0617 20:52:31.602313 24895 net.cpp:157] Top shape: 1 8 (8)
I0617 20:52:31.602325 24895 net.cpp:165] Memory required for data: 1431459964
I0617 20:52:31.602329 24895 layer_factory.hpp:77] Creating layer loss_attribute
I0617 20:52:31.602334 24895 net.cpp:106] Creating Layer loss_attribute
I0617 20:52:31.602336 24895 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0617 20:52:31.602340 24895 net.cpp:454] loss_attribute <- attrArray
I0617 20:52:31.602344 24895 net.cpp:411] loss_attribute -> loss_attribute
I0617 20:52:31.602396 24895 net.cpp:150] Setting up loss_attribute
I0617 20:52:31.602401 24895 net.cpp:157] Top shape: (1)
I0617 20:52:31.602414 24895 net.cpp:160]     with loss weight 1
I0617 20:52:31.602427 24895 net.cpp:165] Memory required for data: 1431459968
I0617 20:52:31.602432 24895 layer_factory.hpp:77] Creating layer loss_cls
I0617 20:52:31.602443 24895 net.cpp:106] Creating Layer loss_cls
I0617 20:52:31.602447 24895 net.cpp:454] loss_cls <- cls_score
I0617 20:52:31.602463 24895 net.cpp:454] loss_cls <- labels
I0617 20:52:31.602468 24895 net.cpp:411] loss_cls -> loss_cls
I0617 20:52:31.602473 24895 layer_factory.hpp:77] Creating layer loss_cls
I0617 20:52:31.603323 24895 net.cpp:150] Setting up loss_cls
I0617 20:52:31.603343 24895 net.cpp:157] Top shape: (1)
I0617 20:52:31.603348 24895 net.cpp:160]     with loss weight 3
I0617 20:52:31.603353 24895 net.cpp:165] Memory required for data: 1431459972
I0617 20:52:31.603356 24895 layer_factory.hpp:77] Creating layer loss_bbox
I0617 20:52:31.603363 24895 net.cpp:106] Creating Layer loss_bbox
I0617 20:52:31.603368 24895 net.cpp:454] loss_bbox <- bbox_pred
I0617 20:52:31.603372 24895 net.cpp:454] loss_bbox <- bbox_targets
I0617 20:52:31.603376 24895 net.cpp:454] loss_bbox <- bbox_inside_weights
I0617 20:52:31.603379 24895 net.cpp:454] loss_bbox <- bbox_outside_weights
I0617 20:52:31.603384 24895 net.cpp:411] loss_bbox -> loss_bbox
I0617 20:52:31.603456 24895 net.cpp:150] Setting up loss_bbox
I0617 20:52:31.603461 24895 net.cpp:157] Top shape: (1)
I0617 20:52:31.603466 24895 net.cpp:160]     with loss weight 2
I0617 20:52:31.603471 24895 net.cpp:165] Memory required for data: 1431459976
I0617 20:52:31.603473 24895 layer_factory.hpp:77] Creating layer roi_pool5_2
I0617 20:52:31.603480 24895 net.cpp:106] Creating Layer roi_pool5_2
I0617 20:52:31.603484 24895 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0617 20:52:31.603489 24895 net.cpp:454] roi_pool5_2 <- rois_pos
I0617 20:52:31.603494 24895 net.cpp:411] roi_pool5_2 -> pool5_2
I0617 20:52:31.603500 24895 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0617 20:52:31.603583 24895 net.cpp:150] Setting up roi_pool5_2
I0617 20:52:31.603590 24895 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:52:31.603593 24895 net.cpp:165] Memory required for data: 1431560328
I0617 20:52:31.603597 24895 layer_factory.hpp:77] Creating layer pool5_2_conv
I0617 20:52:31.603607 24895 net.cpp:106] Creating Layer pool5_2_conv
I0617 20:52:31.603611 24895 net.cpp:454] pool5_2_conv <- pool5_2
I0617 20:52:31.603617 24895 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0617 20:52:31.610378 24895 net.cpp:150] Setting up pool5_2_conv
I0617 20:52:31.610388 24895 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:52:31.610390 24895 net.cpp:165] Memory required for data: 1431660680
I0617 20:52:31.610395 24895 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0617 20:52:31.610399 24895 net.cpp:106] Creating Layer pool5_2_conv_relu
I0617 20:52:31.610402 24895 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0617 20:52:31.610405 24895 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0617 20:52:31.610532 24895 net.cpp:150] Setting up pool5_2_conv_relu
I0617 20:52:31.610538 24895 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:52:31.610539 24895 net.cpp:165] Memory required for data: 1431761032
I0617 20:52:31.610541 24895 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0617 20:52:31.610548 24895 net.cpp:106] Creating Layer pool5_2_conv2
I0617 20:52:31.610550 24895 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0617 20:52:31.610555 24895 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0617 20:52:31.660864 24895 net.cpp:150] Setting up pool5_2_conv2
I0617 20:52:31.660882 24895 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:52:31.660884 24895 net.cpp:165] Memory required for data: 1431861384
I0617 20:52:31.660892 24895 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0617 20:52:31.660898 24895 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0617 20:52:31.660912 24895 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0617 20:52:31.660917 24895 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0617 20:52:31.661056 24895 net.cpp:150] Setting up pool5_2_conv2_relu
I0617 20:52:31.661063 24895 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0617 20:52:31.661065 24895 net.cpp:165] Memory required for data: 1431961736
I0617 20:52:31.661067 24895 layer_factory.hpp:77] Creating layer mask_deconv1
I0617 20:52:31.661073 24895 net.cpp:106] Creating Layer mask_deconv1
I0617 20:52:31.661075 24895 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0617 20:52:31.661080 24895 net.cpp:411] mask_deconv1 -> mask_deconv1
I0617 20:52:31.661835 24895 net.cpp:150] Setting up mask_deconv1
I0617 20:52:31.661841 24895 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0617 20:52:31.661844 24895 net.cpp:165] Memory required for data: 1432883336
I0617 20:52:31.661847 24895 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0617 20:52:31.661852 24895 net.cpp:106] Creating Layer pool5_2_conv3
I0617 20:52:31.661854 24895 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0617 20:52:31.661857 24895 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0617 20:52:31.687701 24895 net.cpp:150] Setting up pool5_2_conv3
I0617 20:52:31.687719 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.687721 24895 net.cpp:165] Memory required for data: 1434726536
I0617 20:52:31.687727 24895 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0617 20:52:31.687734 24895 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0617 20:52:31.687748 24895 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0617 20:52:31.687752 24895 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0617 20:52:31.687892 24895 net.cpp:150] Setting up pool5_2_conv3_relu
I0617 20:52:31.687898 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.687901 24895 net.cpp:165] Memory required for data: 1436569736
I0617 20:52:31.687902 24895 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0617 20:52:31.687909 24895 net.cpp:106] Creating Layer pool5_2_conv4
I0617 20:52:31.687911 24895 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0617 20:52:31.687916 24895 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0617 20:52:31.740856 24895 net.cpp:150] Setting up pool5_2_conv4
I0617 20:52:31.740895 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.740897 24895 net.cpp:165] Memory required for data: 1438412936
I0617 20:52:31.740914 24895 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0617 20:52:31.740921 24895 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0617 20:52:31.740926 24895 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0617 20:52:31.740932 24895 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0617 20:52:31.741127 24895 net.cpp:150] Setting up pool5_2_conv4_relu
I0617 20:52:31.741133 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.741135 24895 net.cpp:165] Memory required for data: 1440256136
I0617 20:52:31.741137 24895 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0617 20:52:31.741142 24895 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0617 20:52:31.741143 24895 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0617 20:52:31.741147 24895 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0617 20:52:31.741150 24895 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0617 20:52:31.741164 24895 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0617 20:52:31.741183 24895 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0617 20:52:31.741246 24895 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0617 20:52:31.741253 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.741256 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.741258 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.741259 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.741261 24895 net.cpp:165] Memory required for data: 1447628936
I0617 20:52:31.741263 24895 layer_factory.hpp:77] Creating layer query_conv
I0617 20:52:31.741282 24895 net.cpp:106] Creating Layer query_conv
I0617 20:52:31.741286 24895 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0617 20:52:31.741303 24895 net.cpp:411] query_conv -> query_conv
I0617 20:52:31.742857 24895 net.cpp:150] Setting up query_conv
I0617 20:52:31.742866 24895 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0617 20:52:31.742867 24895 net.cpp:165] Memory required for data: 1447859336
I0617 20:52:31.742871 24895 layer_factory.hpp:77] Creating layer key_conv
I0617 20:52:31.742878 24895 net.cpp:106] Creating Layer key_conv
I0617 20:52:31.742880 24895 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0617 20:52:31.742895 24895 net.cpp:411] key_conv -> key_conv
I0617 20:52:31.744412 24895 net.cpp:150] Setting up key_conv
I0617 20:52:31.744421 24895 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0617 20:52:31.744422 24895 net.cpp:165] Memory required for data: 1448089736
I0617 20:52:31.744426 24895 layer_factory.hpp:77] Creating layer value_conv
I0617 20:52:31.744433 24895 net.cpp:106] Creating Layer value_conv
I0617 20:52:31.744436 24895 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0617 20:52:31.744449 24895 net.cpp:411] value_conv -> value_conv
I0617 20:52:31.751013 24895 net.cpp:150] Setting up value_conv
I0617 20:52:31.751022 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.751024 24895 net.cpp:165] Memory required for data: 1449932936
I0617 20:52:31.751029 24895 layer_factory.hpp:77] Creating layer query_conv_reshape
I0617 20:52:31.751034 24895 net.cpp:106] Creating Layer query_conv_reshape
I0617 20:52:31.751036 24895 net.cpp:454] query_conv_reshape <- query_conv
I0617 20:52:31.751039 24895 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0617 20:52:31.751081 24895 net.cpp:150] Setting up query_conv_reshape
I0617 20:52:31.751088 24895 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0617 20:52:31.751091 24895 net.cpp:165] Memory required for data: 1450163336
I0617 20:52:31.751093 24895 layer_factory.hpp:77] Creating layer key_conv_reshape
I0617 20:52:31.751098 24895 net.cpp:106] Creating Layer key_conv_reshape
I0617 20:52:31.751101 24895 net.cpp:454] key_conv_reshape <- key_conv
I0617 20:52:31.751102 24895 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0617 20:52:31.751142 24895 net.cpp:150] Setting up key_conv_reshape
I0617 20:52:31.751147 24895 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0617 20:52:31.751149 24895 net.cpp:165] Memory required for data: 1450393736
I0617 20:52:31.751152 24895 layer_factory.hpp:77] Creating layer value_conv_reshape
I0617 20:52:31.751157 24895 net.cpp:106] Creating Layer value_conv_reshape
I0617 20:52:31.751159 24895 net.cpp:454] value_conv_reshape <- value_conv
I0617 20:52:31.751163 24895 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0617 20:52:31.751200 24895 net.cpp:150] Setting up value_conv_reshape
I0617 20:52:31.751206 24895 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0617 20:52:31.751209 24895 net.cpp:165] Memory required for data: 1452236936
I0617 20:52:31.751211 24895 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0617 20:52:31.751216 24895 net.cpp:106] Creating Layer query_conv_reshape_perm
I0617 20:52:31.751219 24895 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0617 20:52:31.751220 24895 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0617 20:52:31.751312 24895 net.cpp:150] Setting up query_conv_reshape_perm
I0617 20:52:31.751315 24895 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0617 20:52:31.751317 24895 net.cpp:165] Memory required for data: 1452467336
I0617 20:52:31.751318 24895 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0617 20:52:31.751322 24895 net.cpp:106] Creating Layer key_conv_reshape_perm
I0617 20:52:31.751324 24895 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0617 20:52:31.751327 24895 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0617 20:52:31.751410 24895 net.cpp:150] Setting up key_conv_reshape_perm
I0617 20:52:31.751415 24895 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0617 20:52:31.751417 24895 net.cpp:165] Memory required for data: 1452697736
I0617 20:52:31.751430 24895 layer_factory.hpp:77] Creating layer energy
I0617 20:52:31.751433 24895 net.cpp:106] Creating Layer energy
I0617 20:52:31.751435 24895 net.cpp:454] energy <- query_conv_reshape_perm
I0617 20:52:31.751441 24895 net.cpp:454] energy <- key_conv_reshape_perm
I0617 20:52:31.751447 24895 net.cpp:411] energy -> energy
I0617 20:52:31.751477 24895 net.cpp:150] Setting up energy
I0617 20:52:31.751482 24895 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0617 20:52:31.751483 24895 net.cpp:165] Memory required for data: 1455937736
I0617 20:52:31.751497 24895 layer_factory.hpp:77] Creating layer attention
I0617 20:52:31.751499 24895 net.cpp:106] Creating Layer attention
I0617 20:52:31.751502 24895 net.cpp:454] attention <- energy
I0617 20:52:31.751507 24895 net.cpp:411] attention -> attention
I0617 20:52:31.751718 24895 net.cpp:150] Setting up attention
I0617 20:52:31.751725 24895 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0617 20:52:31.751739 24895 net.cpp:165] Memory required for data: 1459177736
I0617 20:52:31.751740 24895 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0617 20:52:31.751744 24895 net.cpp:106] Creating Layer value_conv_reshape_perm
I0617 20:52:31.751749 24895 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0617 20:52:31.751768 24895 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0617 20:52:31.751852 24895 net.cpp:150] Setting up value_conv_reshape_perm
I0617 20:52:31.751857 24895 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0617 20:52:31.751858 24895 net.cpp:165] Memory required for data: 1461020936
I0617 20:52:31.751870 24895 layer_factory.hpp:77] Creating layer attention_perm
I0617 20:52:31.751873 24895 net.cpp:106] Creating Layer attention_perm
I0617 20:52:31.751876 24895 net.cpp:454] attention_perm <- attention
I0617 20:52:31.751881 24895 net.cpp:411] attention_perm -> attention_perm
I0617 20:52:31.751960 24895 net.cpp:150] Setting up attention_perm
I0617 20:52:31.751965 24895 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0617 20:52:31.751966 24895 net.cpp:165] Memory required for data: 1464260936
I0617 20:52:31.751978 24895 layer_factory.hpp:77] Creating layer out
I0617 20:52:31.751981 24895 net.cpp:106] Creating Layer out
I0617 20:52:31.751984 24895 net.cpp:454] out <- value_conv_reshape_perm
I0617 20:52:31.751989 24895 net.cpp:454] out <- attention_perm
I0617 20:52:31.751994 24895 net.cpp:411] out -> out
I0617 20:52:31.752023 24895 net.cpp:150] Setting up out
I0617 20:52:31.752027 24895 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0617 20:52:31.752030 24895 net.cpp:165] Memory required for data: 1466104136
I0617 20:52:31.752034 24895 layer_factory.hpp:77] Creating layer out_reshape
I0617 20:52:31.752040 24895 net.cpp:106] Creating Layer out_reshape
I0617 20:52:31.752054 24895 net.cpp:454] out_reshape <- out
I0617 20:52:31.752060 24895 net.cpp:411] out_reshape -> out_reshape
I0617 20:52:31.752092 24895 net.cpp:150] Setting up out_reshape
I0617 20:52:31.752096 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.752099 24895 net.cpp:165] Memory required for data: 1467947336
I0617 20:52:31.752101 24895 layer_factory.hpp:77] Creating layer out_reshape_scale
I0617 20:52:31.752110 24895 net.cpp:106] Creating Layer out_reshape_scale
I0617 20:52:31.752115 24895 net.cpp:454] out_reshape_scale <- out_reshape
I0617 20:52:31.752120 24895 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0617 20:52:31.752183 24895 net.cpp:150] Setting up out_reshape_scale
I0617 20:52:31.752188 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.752192 24895 net.cpp:165] Memory required for data: 1469790536
I0617 20:52:31.752194 24895 layer_factory.hpp:77] Creating layer out_x
I0617 20:52:31.752202 24895 net.cpp:106] Creating Layer out_x
I0617 20:52:31.752205 24895 net.cpp:454] out_x <- out_reshape_scale
I0617 20:52:31.752210 24895 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0617 20:52:31.752228 24895 net.cpp:411] out_x -> out_x
I0617 20:52:31.752261 24895 net.cpp:150] Setting up out_x
I0617 20:52:31.752265 24895 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0617 20:52:31.752267 24895 net.cpp:165] Memory required for data: 1471633736
I0617 20:52:31.752279 24895 layer_factory.hpp:77] Creating layer mask_deconv2
I0617 20:52:31.752286 24895 net.cpp:106] Creating Layer mask_deconv2
I0617 20:52:31.752290 24895 net.cpp:454] mask_deconv2 <- out_x
I0617 20:52:31.752295 24895 net.cpp:411] mask_deconv2 -> mask_deconv2
I0617 20:52:31.753085 24895 net.cpp:150] Setting up mask_deconv2
I0617 20:52:31.753090 24895 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0617 20:52:31.753093 24895 net.cpp:165] Memory required for data: 1486874952
I0617 20:52:31.753099 24895 layer_factory.hpp:77] Creating layer mask_deconv2_mask_deconv2_0_split
I0617 20:52:31.753104 24895 net.cpp:106] Creating Layer mask_deconv2_mask_deconv2_0_split
I0617 20:52:31.753109 24895 net.cpp:454] mask_deconv2_mask_deconv2_0_split <- mask_deconv2
I0617 20:52:31.753114 24895 net.cpp:411] mask_deconv2_mask_deconv2_0_split -> mask_deconv2_mask_deconv2_0_split_0
I0617 20:52:31.753121 24895 net.cpp:411] mask_deconv2_mask_deconv2_0_split -> mask_deconv2_mask_deconv2_0_split_1
I0617 20:52:31.753155 24895 net.cpp:150] Setting up mask_deconv2_mask_deconv2_0_split
I0617 20:52:31.753159 24895 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0617 20:52:31.753162 24895 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0617 20:52:31.753166 24895 net.cpp:165] Memory required for data: 1517357384
I0617 20:52:31.753170 24895 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0617 20:52:31.753180 24895 net.cpp:106] Creating Layer pool5_2_conv5
I0617 20:52:31.753185 24895 net.cpp:454] pool5_2_conv5 <- mask_deconv2_mask_deconv2_0_split_0
I0617 20:52:31.753192 24895 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0617 20:52:31.779763 24895 net.cpp:150] Setting up pool5_2_conv5
I0617 20:52:31.779791 24895 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:52:31.779794 24895 net.cpp:165] Memory required for data: 1547839816
I0617 20:52:31.779800 24895 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0617 20:52:31.779808 24895 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0617 20:52:31.779814 24895 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0617 20:52:31.779822 24895 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0617 20:52:31.779966 24895 net.cpp:150] Setting up pool5_2_conv5_relu
I0617 20:52:31.779973 24895 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:52:31.779985 24895 net.cpp:165] Memory required for data: 1578322248
I0617 20:52:31.779987 24895 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0617 20:52:31.779996 24895 net.cpp:106] Creating Layer pool5_2_conv6
I0617 20:52:31.780001 24895 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0617 20:52:31.780009 24895 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0617 20:52:31.830528 24895 net.cpp:150] Setting up pool5_2_conv6
I0617 20:52:31.830545 24895 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:52:31.830548 24895 net.cpp:165] Memory required for data: 1608804680
I0617 20:52:31.830571 24895 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0617 20:52:31.830580 24895 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0617 20:52:31.830586 24895 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0617 20:52:31.830595 24895 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0617 20:52:31.831118 24895 net.cpp:150] Setting up pool5_2_conv6_relu
I0617 20:52:31.831125 24895 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:52:31.831127 24895 net.cpp:165] Memory required for data: 1639287112
I0617 20:52:31.831130 24895 layer_factory.hpp:77] Creating layer mask_deconv3
I0617 20:52:31.831136 24895 net.cpp:106] Creating Layer mask_deconv3
I0617 20:52:31.831138 24895 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0617 20:52:31.831152 24895 net.cpp:411] mask_deconv3 -> mask_deconv3
I0617 20:52:31.831516 24895 net.cpp:150] Setting up mask_deconv3
I0617 20:52:31.831521 24895 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0617 20:52:31.831522 24895 net.cpp:165] Memory required for data: 1700251976
I0617 20:52:31.831526 24895 layer_factory.hpp:77] Creating layer mask_score
I0617 20:52:31.831532 24895 net.cpp:106] Creating Layer mask_score
I0617 20:52:31.831534 24895 net.cpp:454] mask_score <- mask_deconv3
I0617 20:52:31.831537 24895 net.cpp:411] mask_score -> mask_score
I0617 20:52:31.832129 24895 net.cpp:150] Setting up mask_score
I0617 20:52:31.832135 24895 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0617 20:52:31.832136 24895 net.cpp:165] Memory required for data: 1702157128
I0617 20:52:31.832140 24895 layer_factory.hpp:77] Creating layer loss_mask
I0617 20:52:31.832145 24895 net.cpp:106] Creating Layer loss_mask
I0617 20:52:31.832147 24895 net.cpp:454] loss_mask <- mask_score
I0617 20:52:31.832150 24895 net.cpp:454] loss_mask <- mask_targets_roi-data_5_split_0
I0617 20:52:31.832163 24895 net.cpp:411] loss_mask -> loss_mask
I0617 20:52:31.832171 24895 layer_factory.hpp:77] Creating layer loss_mask
I0617 20:52:31.833664 24895 net.cpp:150] Setting up loss_mask
I0617 20:52:31.833673 24895 net.cpp:157] Top shape: (1)
I0617 20:52:31.833674 24895 net.cpp:160]     with loss weight 3
I0617 20:52:31.833681 24895 net.cpp:165] Memory required for data: 1702157132
I0617 20:52:31.833683 24895 layer_factory.hpp:77] Creating layer pool5_2_conv5_2
I0617 20:52:31.833700 24895 net.cpp:106] Creating Layer pool5_2_conv5_2
I0617 20:52:31.833703 24895 net.cpp:454] pool5_2_conv5_2 <- mask_deconv2_mask_deconv2_0_split_1
I0617 20:52:31.833709 24895 net.cpp:411] pool5_2_conv5_2 -> pool5_2_conv5_2
I0617 20:52:31.860199 24895 net.cpp:150] Setting up pool5_2_conv5_2
I0617 20:52:31.860215 24895 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:52:31.860218 24895 net.cpp:165] Memory required for data: 1732639564
I0617 20:52:31.860224 24895 layer_factory.hpp:77] Creating layer pool5_2_conv5_2_relu
I0617 20:52:31.860232 24895 net.cpp:106] Creating Layer pool5_2_conv5_2_relu
I0617 20:52:31.860246 24895 net.cpp:454] pool5_2_conv5_2_relu <- pool5_2_conv5_2
I0617 20:52:31.860250 24895 net.cpp:411] pool5_2_conv5_2_relu -> pool5_2_conv5_2_relu
I0617 20:52:31.860419 24895 net.cpp:150] Setting up pool5_2_conv5_2_relu
I0617 20:52:31.860425 24895 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0617 20:52:31.860427 24895 net.cpp:165] Memory required for data: 1763121996
I0617 20:52:31.860430 24895 layer_factory.hpp:77] Creating layer mask_deconv3_2
I0617 20:52:31.860435 24895 net.cpp:106] Creating Layer mask_deconv3_2
I0617 20:52:31.860437 24895 net.cpp:454] mask_deconv3_2 <- pool5_2_conv5_2_relu
I0617 20:52:31.860441 24895 net.cpp:411] mask_deconv3_2 -> mask_deconv3_2
I0617 20:52:31.861284 24895 net.cpp:150] Setting up mask_deconv3_2
I0617 20:52:31.861291 24895 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0617 20:52:31.861294 24895 net.cpp:165] Memory required for data: 1824086860
I0617 20:52:31.861297 24895 layer_factory.hpp:77] Creating layer mask_score_2
I0617 20:52:31.861304 24895 net.cpp:106] Creating Layer mask_score_2
I0617 20:52:31.861305 24895 net.cpp:454] mask_score_2 <- mask_deconv3_2
I0617 20:52:31.861320 24895 net.cpp:411] mask_score_2 -> mask_score_2
I0617 20:52:31.862679 24895 net.cpp:150] Setting up mask_score_2
I0617 20:52:31.862686 24895 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0617 20:52:31.862689 24895 net.cpp:165] Memory required for data: 1825992012
I0617 20:52:31.862692 24895 layer_factory.hpp:77] Creating layer loss_mask_2
I0617 20:52:31.862697 24895 net.cpp:106] Creating Layer loss_mask_2
I0617 20:52:31.862699 24895 net.cpp:454] loss_mask_2 <- mask_score_2
I0617 20:52:31.862702 24895 net.cpp:454] loss_mask_2 <- mask_targets_roi-data_5_split_1
I0617 20:52:31.862716 24895 net.cpp:411] loss_mask_2 -> loss_mask_2
I0617 20:52:31.862725 24895 layer_factory.hpp:77] Creating layer loss_mask_2
I0617 20:52:31.863595 24895 net.cpp:150] Setting up loss_mask_2
I0617 20:52:31.863603 24895 net.cpp:157] Top shape: (1)
I0617 20:52:31.863605 24895 net.cpp:160]     with loss weight 0.3
I0617 20:52:31.863612 24895 net.cpp:165] Memory required for data: 1825992016
I0617 20:52:31.863613 24895 net.cpp:226] loss_mask_2 needs backward computation.
I0617 20:52:31.863616 24895 net.cpp:226] mask_score_2 needs backward computation.
I0617 20:52:31.863617 24895 net.cpp:226] mask_deconv3_2 needs backward computation.
I0617 20:52:31.863620 24895 net.cpp:226] pool5_2_conv5_2_relu needs backward computation.
I0617 20:52:31.863631 24895 net.cpp:226] pool5_2_conv5_2 needs backward computation.
I0617 20:52:31.863632 24895 net.cpp:226] loss_mask needs backward computation.
I0617 20:52:31.863636 24895 net.cpp:226] mask_score needs backward computation.
I0617 20:52:31.863637 24895 net.cpp:226] mask_deconv3 needs backward computation.
I0617 20:52:31.863639 24895 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0617 20:52:31.863654 24895 net.cpp:226] pool5_2_conv6 needs backward computation.
I0617 20:52:31.863658 24895 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0617 20:52:31.863662 24895 net.cpp:226] pool5_2_conv5 needs backward computation.
I0617 20:52:31.863667 24895 net.cpp:226] mask_deconv2_mask_deconv2_0_split needs backward computation.
I0617 20:52:31.863670 24895 net.cpp:226] mask_deconv2 needs backward computation.
I0617 20:52:31.863673 24895 net.cpp:226] out_x needs backward computation.
I0617 20:52:31.863687 24895 net.cpp:226] out_reshape_scale needs backward computation.
I0617 20:52:31.863690 24895 net.cpp:226] out_reshape needs backward computation.
I0617 20:52:31.863705 24895 net.cpp:226] out needs backward computation.
I0617 20:52:31.863709 24895 net.cpp:226] attention_perm needs backward computation.
I0617 20:52:31.863713 24895 net.cpp:226] value_conv_reshape_perm needs backward computation.
I0617 20:52:31.863725 24895 net.cpp:226] attention needs backward computation.
I0617 20:52:31.863728 24895 net.cpp:226] energy needs backward computation.
I0617 20:52:31.863742 24895 net.cpp:226] key_conv_reshape_perm needs backward computation.
I0617 20:52:31.863746 24895 net.cpp:226] query_conv_reshape_perm needs backward computation.
I0617 20:52:31.863750 24895 net.cpp:226] value_conv_reshape needs backward computation.
I0617 20:52:31.863754 24895 net.cpp:226] key_conv_reshape needs backward computation.
I0617 20:52:31.863767 24895 net.cpp:226] query_conv_reshape needs backward computation.
I0617 20:52:31.863771 24895 net.cpp:226] value_conv needs backward computation.
I0617 20:52:31.863776 24895 net.cpp:226] key_conv needs backward computation.
I0617 20:52:31.863780 24895 net.cpp:226] query_conv needs backward computation.
I0617 20:52:31.863783 24895 net.cpp:226] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split needs backward computation.
I0617 20:52:31.863787 24895 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0617 20:52:31.863791 24895 net.cpp:226] pool5_2_conv4 needs backward computation.
I0617 20:52:31.863795 24895 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0617 20:52:31.863799 24895 net.cpp:226] pool5_2_conv3 needs backward computation.
I0617 20:52:31.863803 24895 net.cpp:226] mask_deconv1 needs backward computation.
I0617 20:52:31.863817 24895 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0617 20:52:31.863821 24895 net.cpp:226] pool5_2_conv2 needs backward computation.
I0617 20:52:31.863826 24895 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0617 20:52:31.863829 24895 net.cpp:226] pool5_2_conv needs backward computation.
I0617 20:52:31.863834 24895 net.cpp:226] roi_pool5_2 needs backward computation.
I0617 20:52:31.863838 24895 net.cpp:226] loss_bbox needs backward computation.
I0617 20:52:31.863844 24895 net.cpp:226] loss_cls needs backward computation.
I0617 20:52:31.863848 24895 net.cpp:226] loss_attribute needs backward computation.
I0617 20:52:31.863853 24895 net.cpp:226] bbox_pred needs backward computation.
I0617 20:52:31.863857 24895 net.cpp:226] cls_score needs backward computation.
I0617 20:52:31.863862 24895 net.cpp:226] attr_score_pos_shift needs backward computation.
I0617 20:52:31.863867 24895 net.cpp:226] attr_score_pos needs backward computation.
I0617 20:52:31.863871 24895 net.cpp:226] attr_score needs backward computation.
I0617 20:52:31.863875 24895 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0617 20:52:31.863881 24895 net.cpp:226] relu7 needs backward computation.
I0617 20:52:31.863884 24895 net.cpp:226] fc7 needs backward computation.
I0617 20:52:31.863889 24895 net.cpp:226] relu6 needs backward computation.
I0617 20:52:31.863893 24895 net.cpp:226] fc6 needs backward computation.
I0617 20:52:31.863898 24895 net.cpp:226] roi_pool5 needs backward computation.
I0617 20:52:31.863903 24895 net.cpp:228] mask_targets_roi-data_5_split does not need backward computation.
I0617 20:52:31.863907 24895 net.cpp:226] roi-data needs backward computation.
I0617 20:52:31.863914 24895 net.cpp:226] proposal needs backward computation.
I0617 20:52:31.863919 24895 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0617 20:52:31.863924 24895 net.cpp:226] rpn_cls_prob needs backward computation.
I0617 20:52:31.863929 24895 net.cpp:226] rpn_loss_bbox needs backward computation.
I0617 20:52:31.863934 24895 net.cpp:226] rpn_loss_cls needs backward computation.
I0617 20:52:31.863940 24895 net.cpp:226] rpn-data needs backward computation.
I0617 20:52:31.863946 24895 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0617 20:52:31.863951 24895 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0617 20:52:31.863955 24895 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0617 20:52:31.863960 24895 net.cpp:226] rpn_bbox_pred needs backward computation.
I0617 20:52:31.863965 24895 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0617 20:52:31.863968 24895 net.cpp:226] rpn_cls_score needs backward computation.
I0617 20:52:31.863972 24895 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0617 20:52:31.863976 24895 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0617 20:52:31.863981 24895 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0617 20:52:31.863986 24895 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0617 20:52:31.863989 24895 net.cpp:226] relu5_3 needs backward computation.
I0617 20:52:31.863993 24895 net.cpp:226] conv5_3 needs backward computation.
I0617 20:52:31.863997 24895 net.cpp:226] relu5_2 needs backward computation.
I0617 20:52:31.864001 24895 net.cpp:226] conv5_2 needs backward computation.
I0617 20:52:31.864006 24895 net.cpp:226] relu5_1 needs backward computation.
I0617 20:52:31.864009 24895 net.cpp:226] conv5_1 needs backward computation.
I0617 20:52:31.864013 24895 net.cpp:226] pool4 needs backward computation.
I0617 20:52:31.864017 24895 net.cpp:226] relu4_3 needs backward computation.
I0617 20:52:31.864022 24895 net.cpp:226] conv4_3 needs backward computation.
I0617 20:52:31.864025 24895 net.cpp:226] relu4_2 needs backward computation.
I0617 20:52:31.864029 24895 net.cpp:226] conv4_2 needs backward computation.
I0617 20:52:31.864033 24895 net.cpp:226] relu4_1 needs backward computation.
I0617 20:52:31.864037 24895 net.cpp:226] conv4_1 needs backward computation.
I0617 20:52:31.864042 24895 net.cpp:226] pool3 needs backward computation.
I0617 20:52:31.864045 24895 net.cpp:226] relu3_3 needs backward computation.
I0617 20:52:31.864049 24895 net.cpp:226] conv3_3 needs backward computation.
I0617 20:52:31.864053 24895 net.cpp:226] relu3_2 needs backward computation.
I0617 20:52:31.864058 24895 net.cpp:226] conv3_2 needs backward computation.
I0617 20:52:31.864061 24895 net.cpp:226] relu3_1 needs backward computation.
I0617 20:52:31.864065 24895 net.cpp:226] conv3_1 needs backward computation.
I0617 20:52:31.864069 24895 net.cpp:228] pool2 does not need backward computation.
I0617 20:52:31.864073 24895 net.cpp:228] relu2_2 does not need backward computation.
I0617 20:52:31.864078 24895 net.cpp:228] conv2_2 does not need backward computation.
I0617 20:52:31.864082 24895 net.cpp:228] relu2_1 does not need backward computation.
I0617 20:52:31.864086 24895 net.cpp:228] conv2_1 does not need backward computation.
I0617 20:52:31.864090 24895 net.cpp:228] pool1 does not need backward computation.
I0617 20:52:31.864095 24895 net.cpp:228] relu1_2 does not need backward computation.
I0617 20:52:31.864099 24895 net.cpp:228] conv1_2 does not need backward computation.
I0617 20:52:31.864104 24895 net.cpp:228] relu1_1 does not need backward computation.
I0617 20:52:31.864107 24895 net.cpp:228] conv1_1 does not need backward computation.
I0617 20:52:31.864112 24895 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0617 20:52:31.864116 24895 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0617 20:52:31.864122 24895 net.cpp:228] data_input-data_0_split does not need backward computation.
I0617 20:52:31.864127 24895 net.cpp:228] input-data does not need backward computation.
I0617 20:52:31.864131 24895 net.cpp:270] This network produces output loss_attribute
I0617 20:52:31.864135 24895 net.cpp:270] This network produces output loss_bbox
I0617 20:52:31.864140 24895 net.cpp:270] This network produces output loss_cls
I0617 20:52:31.864143 24895 net.cpp:270] This network produces output loss_mask
I0617 20:52:31.864146 24895 net.cpp:270] This network produces output loss_mask_2
I0617 20:52:31.864151 24895 net.cpp:270] This network produces output rpn_cls_loss
I0617 20:52:31.864154 24895 net.cpp:270] This network produces output rpn_loss_bbox
I0617 20:52:31.864217 24895 net.cpp:283] Network initialization done.
I0617 20:52:31.864400 24895 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0617 20:52:32.387255 24895 net.cpp:816] Ignoring source layer pool5
I0617 20:52:32.449054 24895 net.cpp:816] Ignoring source layer drop6
I0617 20:52:32.459046 24895 net.cpp:816] Ignoring source layer drop7
I0617 20:52:32.459060 24895 net.cpp:816] Ignoring source layer fc8
I0617 20:52:32.459062 24895 net.cpp:816] Ignoring source layer prob
Solving...
I0617 20:52:33.923259 24895 solver.cpp:229] Iteration 0, loss = 11.8755
I0617 20:52:33.923295 24895 solver.cpp:245]     Train net output #0: loss_attribute = 0.914377 (* 1 = 0.914377 loss)
I0617 20:52:33.923300 24895 solver.cpp:245]     Train net output #1: loss_bbox = 0.27497 (* 2 = 0.54994 loss)
I0617 20:52:33.923302 24895 solver.cpp:245]     Train net output #2: loss_cls = 0.89034 (* 3 = 2.67102 loss)
I0617 20:52:33.923316 24895 solver.cpp:245]     Train net output #3: loss_mask = 2.08166 (* 3 = 6.24497 loss)
I0617 20:52:33.923321 24895 solver.cpp:245]     Train net output #4: loss_mask_2 = 2.07725 (* 0.3 = 0.623176 loss)
I0617 20:52:33.923323 24895 solver.cpp:245]     Train net output #5: rpn_cls_loss = 0.73882 (* 1 = 0.73882 loss)
I0617 20:52:33.923327 24895 solver.cpp:245]     Train net output #6: rpn_loss_bbox = 0.0189577 (* 1 = 0.0189577 loss)
I0617 20:52:33.923331 24895 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0617 20:52:54.756753 24895 solver.cpp:229] Iteration 20, loss = 12.1556
I0617 20:52:54.756781 24895 solver.cpp:245]     Train net output #0: loss_attribute = 0.98776 (* 1 = 0.98776 loss)
I0617 20:52:54.756786 24895 solver.cpp:245]     Train net output #1: loss_bbox = 0.387816 (* 2 = 0.775633 loss)
I0617 20:52:54.756790 24895 solver.cpp:245]     Train net output #2: loss_cls = 1.14133 (* 3 = 3.424 loss)
I0617 20:52:54.756793 24895 solver.cpp:245]     Train net output #3: loss_mask = 1.87916 (* 3 = 5.63749 loss)
I0617 20:52:54.756798 24895 solver.cpp:245]     Train net output #4: loss_mask_2 = 2.04543 (* 0.3 = 0.613629 loss)
I0617 20:52:54.756812 24895 solver.cpp:245]     Train net output #5: rpn_cls_loss = 0.299444 (* 1 = 0.299444 loss)
I0617 20:52:54.756816 24895 solver.cpp:245]     Train net output #6: rpn_loss_bbox = 0.00985122 (* 1 = 0.00985122 loss)
I0617 20:52:54.756830 24895 sgd_solver.cpp:106] Iteration 20, lr = 0.001
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:62: RuntimeWarning: overflow encountered in multiply
  pred_w = np.exp(dw) * widths[:, np.newaxis]
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:62: RuntimeWarning: overflow encountered in exp
  pred_w = np.exp(dw) * widths[:, np.newaxis]
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:63: RuntimeWarning: overflow encountered in exp
  pred_h = np.exp(dh) * heights[:, np.newaxis]
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:63: RuntimeWarning: overflow encountered in multiply
  pred_h = np.exp(dh) * heights[:, np.newaxis]
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:83: RuntimeWarning: invalid value encountered in minimum
  boxes[:, 0::4] = np.maximum(np.minimum(boxes[:, 0::4], im_shape[1] - 1), 0)
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:83: RuntimeWarning: invalid value encountered in maximum
  boxes[:, 0::4] = np.maximum(np.minimum(boxes[:, 0::4], im_shape[1] - 1), 0)
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:85: RuntimeWarning: invalid value encountered in minimum
  boxes[:, 1::4] = np.maximum(np.minimum(boxes[:, 1::4], im_shape[0] - 1), 0)
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:85: RuntimeWarning: invalid value encountered in maximum
  boxes[:, 1::4] = np.maximum(np.minimum(boxes[:, 1::4], im_shape[0] - 1), 0)
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:87: RuntimeWarning: invalid value encountered in minimum
  boxes[:, 2::4] = np.maximum(np.minimum(boxes[:, 2::4], im_shape[1] - 1), 0)
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:87: RuntimeWarning: invalid value encountered in maximum
  boxes[:, 2::4] = np.maximum(np.minimum(boxes[:, 2::4], im_shape[1] - 1), 0)
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:89: RuntimeWarning: invalid value encountered in minimum
  boxes[:, 3::4] = np.maximum(np.minimum(boxes[:, 3::4], im_shape[0] - 1), 0)
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/bbox_transform.py:89: RuntimeWarning: invalid value encountered in maximum
  boxes[:, 3::4] = np.maximum(np.minimum(boxes[:, 3::4], im_shape[0] - 1), 0)
/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_layer.py:187: RuntimeWarning: invalid value encountered in greater_equal
  keep = np.where((ws >= min_size) & (hs >= min_size))[0]
---- WARNING: filter_boxes() remove ALL proposal.
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 24895 Floating point exception/usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
