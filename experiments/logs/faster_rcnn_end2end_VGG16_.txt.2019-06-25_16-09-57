+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_16-09-57
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_16-09-57
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0625 16:10:11.431636 13490 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0625 16:10:11.431658 13490 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0625 16:10:11.448417 13490 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "pool5_2_conv4_relu"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "mask_score"
  top: "mask_score_softmax"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "log"
  type: "Log"
  bottom: "mask_score_softmax"
  top: "log"
}
layer {
  name: "mult1"
  type: "Eltwise"
  bottom: "log"
  bottom: "mask_targets"
  top: "mult1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cross_entropy"
  type: "Power"
  bottom: "mult1"
  top: "cross_entropy"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "ce_sum"
  type: "Convolution"
  bottom: "cross_entropy"
  top: "cross_entropy_sum"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 1
    weight_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "ce_mean"
  type: "Reduction"
  bottom: "cross_entropy_sum"
  top: "cross_entropy_mean"
  loss_weight: 1
  reduction_param {
    operation: MEAN
    axis: 0
  }
}
I0625 16:10:11.448776 13490 layer_factory.hpp:77] Creating layer input-data
I0625 16:10:11.490252 13490 net.cpp:106] Creating Layer input-data
I0625 16:10:11.490273 13490 net.cpp:411] input-data -> data
I0625 16:10:11.490293 13490 net.cpp:411] input-data -> im_info
I0625 16:10:11.490299 13490 net.cpp:411] input-data -> gt_boxes
I0625 16:10:11.490305 13490 net.cpp:411] input-data -> seg_mask_inds
I0625 16:10:11.490310 13490 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0625 16:10:11.514052 13490 net.cpp:150] Setting up input-data
I0625 16:10:11.514070 13490 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:10:11.514075 13490 net.cpp:157] Top shape: 1 3 (3)
I0625 16:10:11.514081 13490 net.cpp:157] Top shape: 1 4 (4)
I0625 16:10:11.514086 13490 net.cpp:157] Top shape: 1 2 (2)
I0625 16:10:11.514091 13490 net.cpp:157] Top shape: 1 1 (1)
I0625 16:10:11.514094 13490 net.cpp:165] Memory required for data: 7200040
I0625 16:10:11.514101 13490 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0625 16:10:11.514117 13490 net.cpp:106] Creating Layer data_input-data_0_split
I0625 16:10:11.514122 13490 net.cpp:454] data_input-data_0_split <- data
I0625 16:10:11.514127 13490 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0625 16:10:11.514137 13490 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0625 16:10:11.514161 13490 net.cpp:150] Setting up data_input-data_0_split
I0625 16:10:11.514166 13490 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:10:11.514173 13490 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:10:11.514176 13490 net.cpp:165] Memory required for data: 21600040
I0625 16:10:11.514179 13490 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0625 16:10:11.514186 13490 net.cpp:106] Creating Layer im_info_input-data_1_split
I0625 16:10:11.514190 13490 net.cpp:454] im_info_input-data_1_split <- im_info
I0625 16:10:11.514194 13490 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0625 16:10:11.514201 13490 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0625 16:10:11.514209 13490 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0625 16:10:11.514235 13490 net.cpp:150] Setting up im_info_input-data_1_split
I0625 16:10:11.514240 13490 net.cpp:157] Top shape: 1 3 (3)
I0625 16:10:11.514245 13490 net.cpp:157] Top shape: 1 3 (3)
I0625 16:10:11.514248 13490 net.cpp:157] Top shape: 1 3 (3)
I0625 16:10:11.514252 13490 net.cpp:165] Memory required for data: 21600076
I0625 16:10:11.514273 13490 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0625 16:10:11.514281 13490 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0625 16:10:11.514284 13490 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0625 16:10:11.514291 13490 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0625 16:10:11.514297 13490 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0625 16:10:11.514317 13490 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0625 16:10:11.514322 13490 net.cpp:157] Top shape: 1 4 (4)
I0625 16:10:11.514328 13490 net.cpp:157] Top shape: 1 4 (4)
I0625 16:10:11.514331 13490 net.cpp:165] Memory required for data: 21600108
I0625 16:10:11.514334 13490 layer_factory.hpp:77] Creating layer conv1_1
I0625 16:10:11.514344 13490 net.cpp:106] Creating Layer conv1_1
I0625 16:10:11.514348 13490 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0625 16:10:11.514353 13490 net.cpp:411] conv1_1 -> conv1_1
I0625 16:10:11.717979 13490 net.cpp:150] Setting up conv1_1
I0625 16:10:11.718000 13490 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:10:11.718003 13490 net.cpp:165] Memory required for data: 175200108
I0625 16:10:11.718016 13490 layer_factory.hpp:77] Creating layer relu1_1
I0625 16:10:11.718037 13490 net.cpp:106] Creating Layer relu1_1
I0625 16:10:11.718044 13490 net.cpp:454] relu1_1 <- conv1_1
I0625 16:10:11.718058 13490 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0625 16:10:11.718206 13490 net.cpp:150] Setting up relu1_1
I0625 16:10:11.718214 13490 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:10:11.718216 13490 net.cpp:165] Memory required for data: 328800108
I0625 16:10:11.718220 13490 layer_factory.hpp:77] Creating layer conv1_2
I0625 16:10:11.718228 13490 net.cpp:106] Creating Layer conv1_2
I0625 16:10:11.718232 13490 net.cpp:454] conv1_2 <- conv1_1
I0625 16:10:11.718247 13490 net.cpp:411] conv1_2 -> conv1_2
I0625 16:10:11.720264 13490 net.cpp:150] Setting up conv1_2
I0625 16:10:11.720275 13490 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:10:11.720278 13490 net.cpp:165] Memory required for data: 482400108
I0625 16:10:11.720301 13490 layer_factory.hpp:77] Creating layer relu1_2
I0625 16:10:11.720317 13490 net.cpp:106] Creating Layer relu1_2
I0625 16:10:11.720322 13490 net.cpp:454] relu1_2 <- conv1_2
I0625 16:10:11.720336 13490 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0625 16:10:11.720481 13490 net.cpp:150] Setting up relu1_2
I0625 16:10:11.720489 13490 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:10:11.720491 13490 net.cpp:165] Memory required for data: 636000108
I0625 16:10:11.720494 13490 layer_factory.hpp:77] Creating layer pool1
I0625 16:10:11.720504 13490 net.cpp:106] Creating Layer pool1
I0625 16:10:11.720507 13490 net.cpp:454] pool1 <- conv1_2
I0625 16:10:11.720525 13490 net.cpp:411] pool1 -> pool1
I0625 16:10:11.720597 13490 net.cpp:150] Setting up pool1
I0625 16:10:11.720602 13490 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0625 16:10:11.720605 13490 net.cpp:165] Memory required for data: 674400108
I0625 16:10:11.720616 13490 layer_factory.hpp:77] Creating layer conv2_1
I0625 16:10:11.720633 13490 net.cpp:106] Creating Layer conv2_1
I0625 16:10:11.720636 13490 net.cpp:454] conv2_1 <- pool1
I0625 16:10:11.720641 13490 net.cpp:411] conv2_1 -> conv2_1
I0625 16:10:11.722297 13490 net.cpp:150] Setting up conv2_1
I0625 16:10:11.722307 13490 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:10:11.722311 13490 net.cpp:165] Memory required for data: 751200108
I0625 16:10:11.722319 13490 layer_factory.hpp:77] Creating layer relu2_1
I0625 16:10:11.722326 13490 net.cpp:106] Creating Layer relu2_1
I0625 16:10:11.722339 13490 net.cpp:454] relu2_1 <- conv2_1
I0625 16:10:11.722344 13490 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0625 16:10:11.722784 13490 net.cpp:150] Setting up relu2_1
I0625 16:10:11.722791 13490 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:10:11.722795 13490 net.cpp:165] Memory required for data: 828000108
I0625 16:10:11.722798 13490 layer_factory.hpp:77] Creating layer conv2_2
I0625 16:10:11.722806 13490 net.cpp:106] Creating Layer conv2_2
I0625 16:10:11.722822 13490 net.cpp:454] conv2_2 <- conv2_1
I0625 16:10:11.722828 13490 net.cpp:411] conv2_2 -> conv2_2
I0625 16:10:11.724076 13490 net.cpp:150] Setting up conv2_2
I0625 16:10:11.724086 13490 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:10:11.724088 13490 net.cpp:165] Memory required for data: 904800108
I0625 16:10:11.724095 13490 layer_factory.hpp:77] Creating layer relu2_2
I0625 16:10:11.724102 13490 net.cpp:106] Creating Layer relu2_2
I0625 16:10:11.724104 13490 net.cpp:454] relu2_2 <- conv2_2
I0625 16:10:11.724120 13490 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0625 16:10:11.724254 13490 net.cpp:150] Setting up relu2_2
I0625 16:10:11.724261 13490 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:10:11.724263 13490 net.cpp:165] Memory required for data: 981600108
I0625 16:10:11.724277 13490 layer_factory.hpp:77] Creating layer pool2
I0625 16:10:11.724283 13490 net.cpp:106] Creating Layer pool2
I0625 16:10:11.724300 13490 net.cpp:454] pool2 <- conv2_2
I0625 16:10:11.724305 13490 net.cpp:411] pool2 -> pool2
I0625 16:10:11.724365 13490 net.cpp:150] Setting up pool2
I0625 16:10:11.724380 13490 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0625 16:10:11.724383 13490 net.cpp:165] Memory required for data: 1000800108
I0625 16:10:11.724386 13490 layer_factory.hpp:77] Creating layer conv3_1
I0625 16:10:11.724401 13490 net.cpp:106] Creating Layer conv3_1
I0625 16:10:11.724404 13490 net.cpp:454] conv3_1 <- pool2
I0625 16:10:11.724418 13490 net.cpp:411] conv3_1 -> conv3_1
I0625 16:10:11.726153 13490 net.cpp:150] Setting up conv3_1
I0625 16:10:11.726163 13490 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:10:11.726167 13490 net.cpp:165] Memory required for data: 1039200108
I0625 16:10:11.726176 13490 layer_factory.hpp:77] Creating layer relu3_1
I0625 16:10:11.726181 13490 net.cpp:106] Creating Layer relu3_1
I0625 16:10:11.726195 13490 net.cpp:454] relu3_1 <- conv3_1
I0625 16:10:11.726200 13490 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0625 16:10:11.726327 13490 net.cpp:150] Setting up relu3_1
I0625 16:10:11.726333 13490 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:10:11.726336 13490 net.cpp:165] Memory required for data: 1077600108
I0625 16:10:11.726339 13490 layer_factory.hpp:77] Creating layer conv3_2
I0625 16:10:11.726347 13490 net.cpp:106] Creating Layer conv3_2
I0625 16:10:11.726351 13490 net.cpp:454] conv3_2 <- conv3_1
I0625 16:10:11.726356 13490 net.cpp:411] conv3_2 -> conv3_2
I0625 16:10:11.728217 13490 net.cpp:150] Setting up conv3_2
I0625 16:10:11.728226 13490 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:10:11.728230 13490 net.cpp:165] Memory required for data: 1116000108
I0625 16:10:11.728236 13490 layer_factory.hpp:77] Creating layer relu3_2
I0625 16:10:11.728243 13490 net.cpp:106] Creating Layer relu3_2
I0625 16:10:11.728247 13490 net.cpp:454] relu3_2 <- conv3_2
I0625 16:10:11.728252 13490 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0625 16:10:11.728363 13490 net.cpp:150] Setting up relu3_2
I0625 16:10:11.728368 13490 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:10:11.728371 13490 net.cpp:165] Memory required for data: 1154400108
I0625 16:10:11.728374 13490 layer_factory.hpp:77] Creating layer conv3_3
I0625 16:10:11.728381 13490 net.cpp:106] Creating Layer conv3_3
I0625 16:10:11.728384 13490 net.cpp:454] conv3_3 <- conv3_2
I0625 16:10:11.728389 13490 net.cpp:411] conv3_3 -> conv3_3
I0625 16:10:11.730381 13490 net.cpp:150] Setting up conv3_3
I0625 16:10:11.730427 13490 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:10:11.730440 13490 net.cpp:165] Memory required for data: 1192800108
I0625 16:10:11.730456 13490 layer_factory.hpp:77] Creating layer relu3_3
I0625 16:10:11.730473 13490 net.cpp:106] Creating Layer relu3_3
I0625 16:10:11.730484 13490 net.cpp:454] relu3_3 <- conv3_3
I0625 16:10:11.730497 13490 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0625 16:10:11.730669 13490 net.cpp:150] Setting up relu3_3
I0625 16:10:11.730686 13490 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:10:11.730696 13490 net.cpp:165] Memory required for data: 1231200108
I0625 16:10:11.730706 13490 layer_factory.hpp:77] Creating layer pool3
I0625 16:10:11.730721 13490 net.cpp:106] Creating Layer pool3
I0625 16:10:11.730731 13490 net.cpp:454] pool3 <- conv3_3
I0625 16:10:11.730743 13490 net.cpp:411] pool3 -> pool3
I0625 16:10:11.730794 13490 net.cpp:150] Setting up pool3
I0625 16:10:11.730809 13490 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0625 16:10:11.730819 13490 net.cpp:165] Memory required for data: 1240800108
I0625 16:10:11.730829 13490 layer_factory.hpp:77] Creating layer conv4_1
I0625 16:10:11.730845 13490 net.cpp:106] Creating Layer conv4_1
I0625 16:10:11.730859 13490 net.cpp:454] conv4_1 <- pool3
I0625 16:10:11.730871 13490 net.cpp:411] conv4_1 -> conv4_1
I0625 16:10:11.742624 13490 net.cpp:150] Setting up conv4_1
I0625 16:10:11.742697 13490 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:10:11.742717 13490 net.cpp:165] Memory required for data: 1260000108
I0625 16:10:11.742738 13490 layer_factory.hpp:77] Creating layer relu4_1
I0625 16:10:11.742758 13490 net.cpp:106] Creating Layer relu4_1
I0625 16:10:11.742770 13490 net.cpp:454] relu4_1 <- conv4_1
I0625 16:10:11.742784 13490 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0625 16:10:11.743088 13490 net.cpp:150] Setting up relu4_1
I0625 16:10:11.743100 13490 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:10:11.743103 13490 net.cpp:165] Memory required for data: 1279200108
I0625 16:10:11.743108 13490 layer_factory.hpp:77] Creating layer conv4_2
I0625 16:10:11.743120 13490 net.cpp:106] Creating Layer conv4_2
I0625 16:10:11.743126 13490 net.cpp:454] conv4_2 <- conv4_1
I0625 16:10:11.743135 13490 net.cpp:411] conv4_2 -> conv4_2
I0625 16:10:11.749025 13490 net.cpp:150] Setting up conv4_2
I0625 16:10:11.749047 13490 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:10:11.749050 13490 net.cpp:165] Memory required for data: 1298400108
I0625 16:10:11.749068 13490 layer_factory.hpp:77] Creating layer relu4_2
I0625 16:10:11.749079 13490 net.cpp:106] Creating Layer relu4_2
I0625 16:10:11.749099 13490 net.cpp:454] relu4_2 <- conv4_2
I0625 16:10:11.749106 13490 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0625 16:10:11.749687 13490 net.cpp:150] Setting up relu4_2
I0625 16:10:11.749698 13490 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:10:11.749701 13490 net.cpp:165] Memory required for data: 1317600108
I0625 16:10:11.749706 13490 layer_factory.hpp:77] Creating layer conv4_3
I0625 16:10:11.749729 13490 net.cpp:106] Creating Layer conv4_3
I0625 16:10:11.749742 13490 net.cpp:454] conv4_3 <- conv4_2
I0625 16:10:11.749759 13490 net.cpp:411] conv4_3 -> conv4_3
I0625 16:10:11.755988 13490 net.cpp:150] Setting up conv4_3
I0625 16:10:11.756021 13490 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:10:11.756023 13490 net.cpp:165] Memory required for data: 1336800108
I0625 16:10:11.756033 13490 layer_factory.hpp:77] Creating layer relu4_3
I0625 16:10:11.756044 13490 net.cpp:106] Creating Layer relu4_3
I0625 16:10:11.756052 13490 net.cpp:454] relu4_3 <- conv4_3
I0625 16:10:11.756060 13490 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0625 16:10:11.756219 13490 net.cpp:150] Setting up relu4_3
I0625 16:10:11.756237 13490 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:10:11.756239 13490 net.cpp:165] Memory required for data: 1356000108
I0625 16:10:11.756242 13490 layer_factory.hpp:77] Creating layer pool4
I0625 16:10:11.756250 13490 net.cpp:106] Creating Layer pool4
I0625 16:10:11.756255 13490 net.cpp:454] pool4 <- conv4_3
I0625 16:10:11.756261 13490 net.cpp:411] pool4 -> pool4
I0625 16:10:11.756309 13490 net.cpp:150] Setting up pool4
I0625 16:10:11.756315 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.756319 13490 net.cpp:165] Memory required for data: 1360903020
I0625 16:10:11.756322 13490 layer_factory.hpp:77] Creating layer conv5_1
I0625 16:10:11.756333 13490 net.cpp:106] Creating Layer conv5_1
I0625 16:10:11.756338 13490 net.cpp:454] conv5_1 <- pool4
I0625 16:10:11.756345 13490 net.cpp:411] conv5_1 -> conv5_1
I0625 16:10:11.761013 13490 net.cpp:150] Setting up conv5_1
I0625 16:10:11.761036 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.761040 13490 net.cpp:165] Memory required for data: 1365805932
I0625 16:10:11.761049 13490 layer_factory.hpp:77] Creating layer relu5_1
I0625 16:10:11.761062 13490 net.cpp:106] Creating Layer relu5_1
I0625 16:10:11.761070 13490 net.cpp:454] relu5_1 <- conv5_1
I0625 16:10:11.761077 13490 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0625 16:10:11.761222 13490 net.cpp:150] Setting up relu5_1
I0625 16:10:11.761231 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.761234 13490 net.cpp:165] Memory required for data: 1370708844
I0625 16:10:11.761238 13490 layer_factory.hpp:77] Creating layer conv5_2
I0625 16:10:11.761250 13490 net.cpp:106] Creating Layer conv5_2
I0625 16:10:11.761255 13490 net.cpp:454] conv5_2 <- conv5_1
I0625 16:10:11.761263 13490 net.cpp:411] conv5_2 -> conv5_2
I0625 16:10:11.766028 13490 net.cpp:150] Setting up conv5_2
I0625 16:10:11.766057 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.766060 13490 net.cpp:165] Memory required for data: 1375611756
I0625 16:10:11.766067 13490 layer_factory.hpp:77] Creating layer relu5_2
I0625 16:10:11.766077 13490 net.cpp:106] Creating Layer relu5_2
I0625 16:10:11.766083 13490 net.cpp:454] relu5_2 <- conv5_2
I0625 16:10:11.766093 13490 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0625 16:10:11.766238 13490 net.cpp:150] Setting up relu5_2
I0625 16:10:11.766247 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.766249 13490 net.cpp:165] Memory required for data: 1380514668
I0625 16:10:11.766253 13490 layer_factory.hpp:77] Creating layer conv5_3
I0625 16:10:11.766279 13490 net.cpp:106] Creating Layer conv5_3
I0625 16:10:11.766285 13490 net.cpp:454] conv5_3 <- conv5_2
I0625 16:10:11.766292 13490 net.cpp:411] conv5_3 -> conv5_3
I0625 16:10:11.771241 13490 net.cpp:150] Setting up conv5_3
I0625 16:10:11.771267 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.771272 13490 net.cpp:165] Memory required for data: 1385417580
I0625 16:10:11.771282 13490 layer_factory.hpp:77] Creating layer relu5_3
I0625 16:10:11.771294 13490 net.cpp:106] Creating Layer relu5_3
I0625 16:10:11.771317 13490 net.cpp:454] relu5_3 <- conv5_3
I0625 16:10:11.771335 13490 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0625 16:10:11.771531 13490 net.cpp:150] Setting up relu5_3
I0625 16:10:11.771541 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.771545 13490 net.cpp:165] Memory required for data: 1390320492
I0625 16:10:11.771548 13490 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0625 16:10:11.771567 13490 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0625 16:10:11.771580 13490 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0625 16:10:11.771596 13490 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0625 16:10:11.771613 13490 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0625 16:10:11.771628 13490 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0625 16:10:11.771695 13490 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0625 16:10:11.771703 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.771708 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.771711 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.771723 13490 net.cpp:165] Memory required for data: 1405029228
I0625 16:10:11.771735 13490 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0625 16:10:11.771755 13490 net.cpp:106] Creating Layer rpn_conv/3x3
I0625 16:10:11.771767 13490 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0625 16:10:11.771783 13490 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0625 16:10:11.824156 13490 net.cpp:150] Setting up rpn_conv/3x3
I0625 16:10:11.824187 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.824188 13490 net.cpp:165] Memory required for data: 1409932140
I0625 16:10:11.824198 13490 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0625 16:10:11.824219 13490 net.cpp:106] Creating Layer rpn_relu/3x3
I0625 16:10:11.824225 13490 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0625 16:10:11.824230 13490 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0625 16:10:11.824378 13490 net.cpp:150] Setting up rpn_relu/3x3
I0625 16:10:11.824385 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.824389 13490 net.cpp:165] Memory required for data: 1414835052
I0625 16:10:11.824404 13490 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0625 16:10:11.824412 13490 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0625 16:10:11.824415 13490 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0625 16:10:11.824421 13490 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0625 16:10:11.824429 13490 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0625 16:10:11.824477 13490 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0625 16:10:11.824482 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.824486 13490 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:10:11.824496 13490 net.cpp:165] Memory required for data: 1424640876
I0625 16:10:11.824498 13490 layer_factory.hpp:77] Creating layer rpn_cls_score
I0625 16:10:11.824509 13490 net.cpp:106] Creating Layer rpn_cls_score
I0625 16:10:11.824512 13490 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0625 16:10:11.824517 13490 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0625 16:10:11.826246 13490 net.cpp:150] Setting up rpn_cls_score
I0625 16:10:11.826263 13490 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:10:11.826272 13490 net.cpp:165] Memory required for data: 1424928156
I0625 16:10:11.826277 13490 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0625 16:10:11.826283 13490 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0625 16:10:11.826287 13490 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0625 16:10:11.826290 13490 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0625 16:10:11.826297 13490 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0625 16:10:11.826328 13490 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0625 16:10:11.826333 13490 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:10:11.826339 13490 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:10:11.826341 13490 net.cpp:165] Memory required for data: 1425502716
I0625 16:10:11.826344 13490 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0625 16:10:11.826355 13490 net.cpp:106] Creating Layer rpn_bbox_pred
I0625 16:10:11.826359 13490 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0625 16:10:11.826364 13490 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0625 16:10:11.827934 13490 net.cpp:150] Setting up rpn_bbox_pred
I0625 16:10:11.827944 13490 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:10:11.827945 13490 net.cpp:165] Memory required for data: 1426077276
I0625 16:10:11.827950 13490 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:10:11.827956 13490 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:10:11.827960 13490 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0625 16:10:11.827962 13490 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 16:10:11.827967 13490 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 16:10:11.827997 13490 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:10:11.828001 13490 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:10:11.828004 13490 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:10:11.828006 13490 net.cpp:165] Memory required for data: 1427226396
I0625 16:10:11.828007 13490 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0625 16:10:11.828012 13490 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0625 16:10:11.828014 13490 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0625 16:10:11.828018 13490 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0625 16:10:11.828035 13490 net.cpp:150] Setting up rpn_cls_score_reshape
I0625 16:10:11.828039 13490 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:10:11.828042 13490 net.cpp:165] Memory required for data: 1427513676
I0625 16:10:11.828043 13490 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:10:11.828047 13490 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:10:11.828048 13490 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0625 16:10:11.828052 13490 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 16:10:11.828055 13490 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 16:10:11.828076 13490 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:10:11.828079 13490 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:10:11.828081 13490 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:10:11.828083 13490 net.cpp:165] Memory required for data: 1428088236
I0625 16:10:11.828084 13490 layer_factory.hpp:77] Creating layer rpn-data
I0625 16:10:11.829068 13490 net.cpp:106] Creating Layer rpn-data
I0625 16:10:11.829077 13490 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0625 16:10:11.829080 13490 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0625 16:10:11.829084 13490 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0625 16:10:11.829087 13490 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0625 16:10:11.829090 13490 net.cpp:411] rpn-data -> rpn_labels
I0625 16:10:11.829095 13490 net.cpp:411] rpn-data -> rpn_bbox_targets
I0625 16:10:11.829100 13490 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0625 16:10:11.829104 13490 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0625 16:10:11.829993 13490 net.cpp:150] Setting up rpn-data
I0625 16:10:11.830001 13490 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0625 16:10:11.830004 13490 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:10:11.830006 13490 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:10:11.830008 13490 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:10:11.830010 13490 net.cpp:165] Memory required for data: 1429955556
I0625 16:10:11.830013 13490 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 16:10:11.830018 13490 net.cpp:106] Creating Layer rpn_loss_cls
I0625 16:10:11.830021 13490 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 16:10:11.830024 13490 net.cpp:454] rpn_loss_cls <- rpn_labels
I0625 16:10:11.830027 13490 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0625 16:10:11.830039 13490 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 16:10:11.830693 13490 net.cpp:150] Setting up rpn_loss_cls
I0625 16:10:11.830701 13490 net.cpp:157] Top shape: (1)
I0625 16:10:11.830713 13490 net.cpp:160]     with loss weight 1
I0625 16:10:11.830720 13490 net.cpp:165] Memory required for data: 1429955560
I0625 16:10:11.830723 13490 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0625 16:10:11.830730 13490 net.cpp:106] Creating Layer rpn_loss_bbox
I0625 16:10:11.830734 13490 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 16:10:11.830736 13490 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0625 16:10:11.830740 13490 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0625 16:10:11.830742 13490 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0625 16:10:11.830746 13490 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0625 16:10:11.831925 13490 net.cpp:150] Setting up rpn_loss_bbox
I0625 16:10:11.831933 13490 net.cpp:157] Top shape: (1)
I0625 16:10:11.831935 13490 net.cpp:160]     with loss weight 1
I0625 16:10:11.831939 13490 net.cpp:165] Memory required for data: 1429955564
I0625 16:10:11.831941 13490 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0625 16:10:11.831945 13490 net.cpp:106] Creating Layer rpn_cls_prob
I0625 16:10:11.831948 13490 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 16:10:11.831951 13490 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0625 16:10:11.832114 13490 net.cpp:150] Setting up rpn_cls_prob
I0625 16:10:11.832120 13490 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:10:11.832123 13490 net.cpp:165] Memory required for data: 1430242844
I0625 16:10:11.832124 13490 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0625 16:10:11.832129 13490 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0625 16:10:11.832131 13490 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0625 16:10:11.832135 13490 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0625 16:10:11.832152 13490 net.cpp:150] Setting up rpn_cls_prob_reshape
I0625 16:10:11.832156 13490 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:10:11.832159 13490 net.cpp:165] Memory required for data: 1430530124
I0625 16:10:11.832160 13490 layer_factory.hpp:77] Creating layer proposal
I0625 16:10:11.833441 13490 net.cpp:106] Creating Layer proposal
I0625 16:10:11.833449 13490 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0625 16:10:11.833453 13490 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 16:10:11.833456 13490 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0625 16:10:11.833461 13490 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0625 16:10:11.834311 13490 net.cpp:150] Setting up proposal
I0625 16:10:11.834328 13490 net.cpp:157] Top shape: 1 5 (5)
I0625 16:10:11.834340 13490 net.cpp:165] Memory required for data: 1430530144
I0625 16:10:11.834342 13490 layer_factory.hpp:77] Creating layer roi-data
I0625 16:10:11.836900 13490 net.cpp:106] Creating Layer roi-data
I0625 16:10:11.836910 13490 net.cpp:454] roi-data <- rpn_rois
I0625 16:10:11.836913 13490 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0625 16:10:11.836916 13490 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0625 16:10:11.836920 13490 net.cpp:454] roi-data <- seg_mask_inds
I0625 16:10:11.836922 13490 net.cpp:454] roi-data <- flipped
I0625 16:10:11.836925 13490 net.cpp:411] roi-data -> rois
I0625 16:10:11.836930 13490 net.cpp:411] roi-data -> labels
I0625 16:10:11.836935 13490 net.cpp:411] roi-data -> bbox_targets
I0625 16:10:11.836939 13490 net.cpp:411] roi-data -> bbox_inside_weights
I0625 16:10:11.836943 13490 net.cpp:411] roi-data -> bbox_outside_weights
I0625 16:10:11.836946 13490 net.cpp:411] roi-data -> mask_targets
I0625 16:10:11.836951 13490 net.cpp:411] roi-data -> rois_pos
I0625 16:10:11.837272 13490 net.cpp:150] Setting up roi-data
I0625 16:10:11.837281 13490 net.cpp:157] Top shape: 1 5 (5)
I0625 16:10:11.837285 13490 net.cpp:157] Top shape: 1 1 (1)
I0625 16:10:11.837286 13490 net.cpp:157] Top shape: 1 8 (8)
I0625 16:10:11.837288 13490 net.cpp:157] Top shape: 1 8 (8)
I0625 16:10:11.837291 13490 net.cpp:157] Top shape: 1 8 (8)
I0625 16:10:11.837292 13490 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:10:11.837294 13490 net.cpp:157] Top shape: 1 5 (5)
I0625 16:10:11.837296 13490 net.cpp:165] Memory required for data: 1432435436
I0625 16:10:11.837298 13490 layer_factory.hpp:77] Creating layer roi_pool5
I0625 16:10:11.837306 13490 net.cpp:106] Creating Layer roi_pool5
I0625 16:10:11.837307 13490 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0625 16:10:11.837311 13490 net.cpp:454] roi_pool5 <- rois
I0625 16:10:11.837312 13490 net.cpp:411] roi_pool5 -> pool5
I0625 16:10:11.837317 13490 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 16:10:11.837383 13490 net.cpp:150] Setting up roi_pool5
I0625 16:10:11.837388 13490 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:10:11.837389 13490 net.cpp:165] Memory required for data: 1432535788
I0625 16:10:11.837390 13490 layer_factory.hpp:77] Creating layer fc6
I0625 16:10:11.837395 13490 net.cpp:106] Creating Layer fc6
I0625 16:10:11.837399 13490 net.cpp:454] fc6 <- pool5
I0625 16:10:11.837401 13490 net.cpp:411] fc6 -> fc6
I0625 16:10:11.981895 13490 net.cpp:150] Setting up fc6
I0625 16:10:11.981920 13490 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:10:11.981923 13490 net.cpp:165] Memory required for data: 1432552172
I0625 16:10:11.981935 13490 layer_factory.hpp:77] Creating layer relu6
I0625 16:10:11.981943 13490 net.cpp:106] Creating Layer relu6
I0625 16:10:11.981957 13490 net.cpp:454] relu6 <- fc6
I0625 16:10:11.981962 13490 net.cpp:397] relu6 -> fc6 (in-place)
I0625 16:10:11.982158 13490 net.cpp:150] Setting up relu6
I0625 16:10:11.982164 13490 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:10:11.982167 13490 net.cpp:165] Memory required for data: 1432568556
I0625 16:10:11.982168 13490 layer_factory.hpp:77] Creating layer fc7
I0625 16:10:11.982172 13490 net.cpp:106] Creating Layer fc7
I0625 16:10:11.982174 13490 net.cpp:454] fc7 <- fc6
I0625 16:10:11.982177 13490 net.cpp:411] fc7 -> fc7
I0625 16:10:12.005594 13490 net.cpp:150] Setting up fc7
I0625 16:10:12.005617 13490 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:10:12.005620 13490 net.cpp:165] Memory required for data: 1432584940
I0625 16:10:12.005626 13490 layer_factory.hpp:77] Creating layer relu7
I0625 16:10:12.005633 13490 net.cpp:106] Creating Layer relu7
I0625 16:10:12.005637 13490 net.cpp:454] relu7 <- fc7
I0625 16:10:12.005641 13490 net.cpp:397] relu7 -> fc7 (in-place)
I0625 16:10:12.005818 13490 net.cpp:150] Setting up relu7
I0625 16:10:12.005823 13490 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:10:12.005825 13490 net.cpp:165] Memory required for data: 1432601324
I0625 16:10:12.005826 13490 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0625 16:10:12.005831 13490 net.cpp:106] Creating Layer fc7_relu7_0_split
I0625 16:10:12.005831 13490 net.cpp:454] fc7_relu7_0_split <- fc7
I0625 16:10:12.005836 13490 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0625 16:10:12.005839 13490 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0625 16:10:12.005889 13490 net.cpp:150] Setting up fc7_relu7_0_split
I0625 16:10:12.005893 13490 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:10:12.005905 13490 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:10:12.005908 13490 net.cpp:165] Memory required for data: 1432634092
I0625 16:10:12.005909 13490 layer_factory.hpp:77] Creating layer cls_score
I0625 16:10:12.005928 13490 net.cpp:106] Creating Layer cls_score
I0625 16:10:12.005929 13490 net.cpp:454] cls_score <- fc7_relu7_0_split_0
I0625 16:10:12.005933 13490 net.cpp:411] cls_score -> cls_score
I0625 16:10:12.006184 13490 net.cpp:150] Setting up cls_score
I0625 16:10:12.006188 13490 net.cpp:157] Top shape: 1 2 (2)
I0625 16:10:12.006189 13490 net.cpp:165] Memory required for data: 1432634100
I0625 16:10:12.006193 13490 layer_factory.hpp:77] Creating layer bbox_pred
I0625 16:10:12.006196 13490 net.cpp:106] Creating Layer bbox_pred
I0625 16:10:12.006198 13490 net.cpp:454] bbox_pred <- fc7_relu7_0_split_1
I0625 16:10:12.006201 13490 net.cpp:411] bbox_pred -> bbox_pred
I0625 16:10:12.006963 13490 net.cpp:150] Setting up bbox_pred
I0625 16:10:12.006966 13490 net.cpp:157] Top shape: 1 8 (8)
I0625 16:10:12.006968 13490 net.cpp:165] Memory required for data: 1432634132
I0625 16:10:12.006971 13490 layer_factory.hpp:77] Creating layer loss_cls
I0625 16:10:12.006975 13490 net.cpp:106] Creating Layer loss_cls
I0625 16:10:12.006978 13490 net.cpp:454] loss_cls <- cls_score
I0625 16:10:12.006980 13490 net.cpp:454] loss_cls <- labels
I0625 16:10:12.006983 13490 net.cpp:411] loss_cls -> loss_cls
I0625 16:10:12.006986 13490 layer_factory.hpp:77] Creating layer loss_cls
I0625 16:10:12.007619 13490 net.cpp:150] Setting up loss_cls
I0625 16:10:12.007627 13490 net.cpp:157] Top shape: (1)
I0625 16:10:12.007628 13490 net.cpp:160]     with loss weight 3
I0625 16:10:12.007637 13490 net.cpp:165] Memory required for data: 1432634136
I0625 16:10:12.007638 13490 layer_factory.hpp:77] Creating layer loss_bbox
I0625 16:10:12.007642 13490 net.cpp:106] Creating Layer loss_bbox
I0625 16:10:12.007644 13490 net.cpp:454] loss_bbox <- bbox_pred
I0625 16:10:12.007647 13490 net.cpp:454] loss_bbox <- bbox_targets
I0625 16:10:12.007649 13490 net.cpp:454] loss_bbox <- bbox_inside_weights
I0625 16:10:12.007652 13490 net.cpp:454] loss_bbox <- bbox_outside_weights
I0625 16:10:12.007654 13490 net.cpp:411] loss_bbox -> loss_bbox
I0625 16:10:12.007733 13490 net.cpp:150] Setting up loss_bbox
I0625 16:10:12.007737 13490 net.cpp:157] Top shape: (1)
I0625 16:10:12.007740 13490 net.cpp:160]     with loss weight 2
I0625 16:10:12.007742 13490 net.cpp:165] Memory required for data: 1432634140
I0625 16:10:12.007745 13490 layer_factory.hpp:77] Creating layer roi_pool5_2
I0625 16:10:12.007748 13490 net.cpp:106] Creating Layer roi_pool5_2
I0625 16:10:12.007751 13490 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0625 16:10:12.007753 13490 net.cpp:454] roi_pool5_2 <- rois_pos
I0625 16:10:12.007767 13490 net.cpp:411] roi_pool5_2 -> pool5_2
I0625 16:10:12.007771 13490 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 16:10:12.007839 13490 net.cpp:150] Setting up roi_pool5_2
I0625 16:10:12.007843 13490 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:10:12.007844 13490 net.cpp:165] Memory required for data: 1432734492
I0625 16:10:12.007846 13490 layer_factory.hpp:77] Creating layer pool5_2_conv
I0625 16:10:12.007863 13490 net.cpp:106] Creating Layer pool5_2_conv
I0625 16:10:12.007865 13490 net.cpp:454] pool5_2_conv <- pool5_2
I0625 16:10:12.007869 13490 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0625 16:10:12.014497 13490 net.cpp:150] Setting up pool5_2_conv
I0625 16:10:12.014506 13490 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:10:12.014508 13490 net.cpp:165] Memory required for data: 1432834844
I0625 16:10:12.014513 13490 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0625 16:10:12.014516 13490 net.cpp:106] Creating Layer pool5_2_conv_relu
I0625 16:10:12.014518 13490 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0625 16:10:12.014531 13490 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0625 16:10:12.014681 13490 net.cpp:150] Setting up pool5_2_conv_relu
I0625 16:10:12.014686 13490 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:10:12.014688 13490 net.cpp:165] Memory required for data: 1432935196
I0625 16:10:12.014690 13490 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0625 16:10:12.014712 13490 net.cpp:106] Creating Layer pool5_2_conv2
I0625 16:10:12.014715 13490 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0625 16:10:12.014719 13490 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0625 16:10:12.064707 13490 net.cpp:150] Setting up pool5_2_conv2
I0625 16:10:12.064734 13490 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:10:12.064736 13490 net.cpp:165] Memory required for data: 1433035548
I0625 16:10:12.064743 13490 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0625 16:10:12.064750 13490 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0625 16:10:12.064754 13490 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0625 16:10:12.064769 13490 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0625 16:10:12.064915 13490 net.cpp:150] Setting up pool5_2_conv2_relu
I0625 16:10:12.064921 13490 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:10:12.064934 13490 net.cpp:165] Memory required for data: 1433135900
I0625 16:10:12.064935 13490 layer_factory.hpp:77] Creating layer mask_deconv1
I0625 16:10:12.064941 13490 net.cpp:106] Creating Layer mask_deconv1
I0625 16:10:12.064944 13490 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0625 16:10:12.064946 13490 net.cpp:411] mask_deconv1 -> mask_deconv1
I0625 16:10:12.065807 13490 net.cpp:150] Setting up mask_deconv1
I0625 16:10:12.065812 13490 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0625 16:10:12.065824 13490 net.cpp:165] Memory required for data: 1434057500
I0625 16:10:12.065827 13490 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0625 16:10:12.065834 13490 net.cpp:106] Creating Layer pool5_2_conv3
I0625 16:10:12.065835 13490 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0625 16:10:12.065850 13490 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0625 16:10:12.092236 13490 net.cpp:150] Setting up pool5_2_conv3
I0625 16:10:12.092267 13490 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 16:10:12.092268 13490 net.cpp:165] Memory required for data: 1435900700
I0625 16:10:12.092274 13490 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0625 16:10:12.092293 13490 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0625 16:10:12.092296 13490 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0625 16:10:12.092301 13490 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0625 16:10:12.092450 13490 net.cpp:150] Setting up pool5_2_conv3_relu
I0625 16:10:12.092456 13490 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 16:10:12.092468 13490 net.cpp:165] Memory required for data: 1437743900
I0625 16:10:12.092470 13490 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0625 16:10:12.092479 13490 net.cpp:106] Creating Layer pool5_2_conv4
I0625 16:10:12.092492 13490 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0625 16:10:12.092495 13490 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0625 16:10:12.142784 13490 net.cpp:150] Setting up pool5_2_conv4
I0625 16:10:12.142802 13490 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 16:10:12.142804 13490 net.cpp:165] Memory required for data: 1439587100
I0625 16:10:12.142810 13490 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0625 16:10:12.142819 13490 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0625 16:10:12.142833 13490 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0625 16:10:12.142838 13490 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0625 16:10:12.142968 13490 net.cpp:150] Setting up pool5_2_conv4_relu
I0625 16:10:12.142974 13490 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 16:10:12.142976 13490 net.cpp:165] Memory required for data: 1441430300
I0625 16:10:12.142977 13490 layer_factory.hpp:77] Creating layer mask_deconv2
I0625 16:10:12.142983 13490 net.cpp:106] Creating Layer mask_deconv2
I0625 16:10:12.142985 13490 net.cpp:454] mask_deconv2 <- pool5_2_conv4_relu
I0625 16:10:12.142989 13490 net.cpp:411] mask_deconv2 -> mask_deconv2
I0625 16:10:12.143769 13490 net.cpp:150] Setting up mask_deconv2
I0625 16:10:12.143774 13490 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0625 16:10:12.143775 13490 net.cpp:165] Memory required for data: 1456671516
I0625 16:10:12.143779 13490 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0625 16:10:12.143785 13490 net.cpp:106] Creating Layer pool5_2_conv5
I0625 16:10:12.143787 13490 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0625 16:10:12.143791 13490 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0625 16:10:12.169714 13490 net.cpp:150] Setting up pool5_2_conv5
I0625 16:10:12.169733 13490 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 16:10:12.169734 13490 net.cpp:165] Memory required for data: 1487153948
I0625 16:10:12.169741 13490 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0625 16:10:12.169749 13490 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0625 16:10:12.169752 13490 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0625 16:10:12.169768 13490 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0625 16:10:12.169906 13490 net.cpp:150] Setting up pool5_2_conv5_relu
I0625 16:10:12.169912 13490 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 16:10:12.169914 13490 net.cpp:165] Memory required for data: 1517636380
I0625 16:10:12.169915 13490 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0625 16:10:12.169924 13490 net.cpp:106] Creating Layer pool5_2_conv6
I0625 16:10:12.169925 13490 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0625 16:10:12.169939 13490 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0625 16:10:12.220173 13490 net.cpp:150] Setting up pool5_2_conv6
I0625 16:10:12.220191 13490 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 16:10:12.220193 13490 net.cpp:165] Memory required for data: 1548118812
I0625 16:10:12.220199 13490 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0625 16:10:12.220206 13490 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0625 16:10:12.220211 13490 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0625 16:10:12.220227 13490 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0625 16:10:12.220732 13490 net.cpp:150] Setting up pool5_2_conv6_relu
I0625 16:10:12.220739 13490 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 16:10:12.220741 13490 net.cpp:165] Memory required for data: 1578601244
I0625 16:10:12.220743 13490 layer_factory.hpp:77] Creating layer mask_deconv3
I0625 16:10:12.220751 13490 net.cpp:106] Creating Layer mask_deconv3
I0625 16:10:12.220752 13490 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0625 16:10:12.220757 13490 net.cpp:411] mask_deconv3 -> mask_deconv3
I0625 16:10:12.221117 13490 net.cpp:150] Setting up mask_deconv3
I0625 16:10:12.221122 13490 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0625 16:10:12.221124 13490 net.cpp:165] Memory required for data: 1639566108
I0625 16:10:12.221127 13490 layer_factory.hpp:77] Creating layer mask_score
I0625 16:10:12.221132 13490 net.cpp:106] Creating Layer mask_score
I0625 16:10:12.221134 13490 net.cpp:454] mask_score <- mask_deconv3
I0625 16:10:12.221138 13490 net.cpp:411] mask_score -> mask_score
I0625 16:10:12.222077 13490 net.cpp:150] Setting up mask_score
I0625 16:10:12.222085 13490 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:10:12.222087 13490 net.cpp:165] Memory required for data: 1641471260
I0625 16:10:12.222090 13490 layer_factory.hpp:77] Creating layer prob
I0625 16:10:12.222095 13490 net.cpp:106] Creating Layer prob
I0625 16:10:12.222098 13490 net.cpp:454] prob <- mask_score
I0625 16:10:12.222101 13490 net.cpp:411] prob -> mask_score_softmax
I0625 16:10:12.222304 13490 net.cpp:150] Setting up prob
I0625 16:10:12.222311 13490 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:10:12.222312 13490 net.cpp:165] Memory required for data: 1643376412
I0625 16:10:12.222313 13490 layer_factory.hpp:77] Creating layer log
I0625 16:10:12.222317 13490 net.cpp:106] Creating Layer log
I0625 16:10:12.222319 13490 net.cpp:454] log <- mask_score_softmax
I0625 16:10:12.222322 13490 net.cpp:411] log -> log
I0625 16:10:12.222347 13490 net.cpp:150] Setting up log
I0625 16:10:12.222350 13490 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:10:12.222352 13490 net.cpp:165] Memory required for data: 1645281564
I0625 16:10:12.222352 13490 layer_factory.hpp:77] Creating layer mult1
I0625 16:10:12.222357 13490 net.cpp:106] Creating Layer mult1
I0625 16:10:12.222359 13490 net.cpp:454] mult1 <- log
I0625 16:10:12.222362 13490 net.cpp:454] mult1 <- mask_targets
I0625 16:10:12.222365 13490 net.cpp:411] mult1 -> mult1
I0625 16:10:12.222379 13490 net.cpp:150] Setting up mult1
I0625 16:10:12.222391 13490 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:10:12.222393 13490 net.cpp:165] Memory required for data: 1647186716
I0625 16:10:12.222394 13490 layer_factory.hpp:77] Creating layer cross_entropy
I0625 16:10:12.222399 13490 net.cpp:106] Creating Layer cross_entropy
I0625 16:10:12.222411 13490 net.cpp:454] cross_entropy <- mult1
I0625 16:10:12.222414 13490 net.cpp:411] cross_entropy -> cross_entropy
I0625 16:10:12.222450 13490 net.cpp:150] Setting up cross_entropy
I0625 16:10:12.222453 13490 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:10:12.222455 13490 net.cpp:165] Memory required for data: 1649091868
I0625 16:10:12.222456 13490 layer_factory.hpp:77] Creating layer ce_sum
I0625 16:10:12.222470 13490 net.cpp:106] Creating Layer ce_sum
I0625 16:10:12.222472 13490 net.cpp:454] ce_sum <- cross_entropy
I0625 16:10:12.222476 13490 net.cpp:411] ce_sum -> cross_entropy_sum
I0625 16:10:12.223640 13490 net.cpp:150] Setting up ce_sum
I0625 16:10:12.223649 13490 net.cpp:157] Top shape: 1 1 244 244 (59536)
I0625 16:10:12.223650 13490 net.cpp:165] Memory required for data: 1649330012
I0625 16:10:12.223654 13490 layer_factory.hpp:77] Creating layer ce_mean
I0625 16:10:12.223661 13490 net.cpp:106] Creating Layer ce_mean
I0625 16:10:12.223664 13490 net.cpp:454] ce_mean <- cross_entropy_sum
I0625 16:10:12.223677 13490 net.cpp:411] ce_mean -> cross_entropy_mean
I0625 16:10:12.223763 13490 net.cpp:150] Setting up ce_mean
I0625 16:10:12.223768 13490 net.cpp:157] Top shape: (1)
I0625 16:10:12.223769 13490 net.cpp:160]     with loss weight 1
I0625 16:10:12.223776 13490 net.cpp:165] Memory required for data: 1649330016
I0625 16:10:12.223778 13490 net.cpp:226] ce_mean needs backward computation.
I0625 16:10:12.223779 13490 net.cpp:226] ce_sum needs backward computation.
I0625 16:10:12.223781 13490 net.cpp:226] cross_entropy needs backward computation.
I0625 16:10:12.223783 13490 net.cpp:226] mult1 needs backward computation.
I0625 16:10:12.223784 13490 net.cpp:226] log needs backward computation.
I0625 16:10:12.223786 13490 net.cpp:226] prob needs backward computation.
I0625 16:10:12.223788 13490 net.cpp:226] mask_score needs backward computation.
I0625 16:10:12.223789 13490 net.cpp:226] mask_deconv3 needs backward computation.
I0625 16:10:12.223790 13490 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0625 16:10:12.223793 13490 net.cpp:226] pool5_2_conv6 needs backward computation.
I0625 16:10:12.223793 13490 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0625 16:10:12.223795 13490 net.cpp:226] pool5_2_conv5 needs backward computation.
I0625 16:10:12.223798 13490 net.cpp:226] mask_deconv2 needs backward computation.
I0625 16:10:12.223798 13490 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0625 16:10:12.223800 13490 net.cpp:226] pool5_2_conv4 needs backward computation.
I0625 16:10:12.223803 13490 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0625 16:10:12.223804 13490 net.cpp:226] pool5_2_conv3 needs backward computation.
I0625 16:10:12.223805 13490 net.cpp:226] mask_deconv1 needs backward computation.
I0625 16:10:12.223807 13490 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0625 16:10:12.223809 13490 net.cpp:226] pool5_2_conv2 needs backward computation.
I0625 16:10:12.223811 13490 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0625 16:10:12.223812 13490 net.cpp:226] pool5_2_conv needs backward computation.
I0625 16:10:12.223814 13490 net.cpp:226] roi_pool5_2 needs backward computation.
I0625 16:10:12.223816 13490 net.cpp:226] loss_bbox needs backward computation.
I0625 16:10:12.223819 13490 net.cpp:226] loss_cls needs backward computation.
I0625 16:10:12.223821 13490 net.cpp:226] bbox_pred needs backward computation.
I0625 16:10:12.223824 13490 net.cpp:226] cls_score needs backward computation.
I0625 16:10:12.223825 13490 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0625 16:10:12.223827 13490 net.cpp:226] relu7 needs backward computation.
I0625 16:10:12.223829 13490 net.cpp:226] fc7 needs backward computation.
I0625 16:10:12.223831 13490 net.cpp:226] relu6 needs backward computation.
I0625 16:10:12.223832 13490 net.cpp:226] fc6 needs backward computation.
I0625 16:10:12.223834 13490 net.cpp:226] roi_pool5 needs backward computation.
I0625 16:10:12.223836 13490 net.cpp:226] roi-data needs backward computation.
I0625 16:10:12.223840 13490 net.cpp:226] proposal needs backward computation.
I0625 16:10:12.223843 13490 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0625 16:10:12.223845 13490 net.cpp:226] rpn_cls_prob needs backward computation.
I0625 16:10:12.223847 13490 net.cpp:226] rpn_loss_bbox needs backward computation.
I0625 16:10:12.223851 13490 net.cpp:226] rpn_loss_cls needs backward computation.
I0625 16:10:12.223855 13490 net.cpp:226] rpn-data needs backward computation.
I0625 16:10:12.223858 13490 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0625 16:10:12.223861 13490 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0625 16:10:12.223863 13490 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0625 16:10:12.223865 13490 net.cpp:226] rpn_bbox_pred needs backward computation.
I0625 16:10:12.223867 13490 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0625 16:10:12.223870 13490 net.cpp:226] rpn_cls_score needs backward computation.
I0625 16:10:12.223871 13490 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0625 16:10:12.223873 13490 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0625 16:10:12.223875 13490 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0625 16:10:12.223877 13490 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0625 16:10:12.223879 13490 net.cpp:226] relu5_3 needs backward computation.
I0625 16:10:12.223881 13490 net.cpp:226] conv5_3 needs backward computation.
I0625 16:10:12.223883 13490 net.cpp:226] relu5_2 needs backward computation.
I0625 16:10:12.223886 13490 net.cpp:226] conv5_2 needs backward computation.
I0625 16:10:12.223887 13490 net.cpp:226] relu5_1 needs backward computation.
I0625 16:10:12.223888 13490 net.cpp:226] conv5_1 needs backward computation.
I0625 16:10:12.223891 13490 net.cpp:226] pool4 needs backward computation.
I0625 16:10:12.223892 13490 net.cpp:226] relu4_3 needs backward computation.
I0625 16:10:12.223894 13490 net.cpp:226] conv4_3 needs backward computation.
I0625 16:10:12.223896 13490 net.cpp:226] relu4_2 needs backward computation.
I0625 16:10:12.223897 13490 net.cpp:226] conv4_2 needs backward computation.
I0625 16:10:12.223899 13490 net.cpp:226] relu4_1 needs backward computation.
I0625 16:10:12.223901 13490 net.cpp:226] conv4_1 needs backward computation.
I0625 16:10:12.223902 13490 net.cpp:226] pool3 needs backward computation.
I0625 16:10:12.223904 13490 net.cpp:226] relu3_3 needs backward computation.
I0625 16:10:12.223906 13490 net.cpp:226] conv3_3 needs backward computation.
I0625 16:10:12.223907 13490 net.cpp:226] relu3_2 needs backward computation.
I0625 16:10:12.223909 13490 net.cpp:226] conv3_2 needs backward computation.
I0625 16:10:12.223912 13490 net.cpp:226] relu3_1 needs backward computation.
I0625 16:10:12.223912 13490 net.cpp:226] conv3_1 needs backward computation.
I0625 16:10:12.223914 13490 net.cpp:228] pool2 does not need backward computation.
I0625 16:10:12.223917 13490 net.cpp:228] relu2_2 does not need backward computation.
I0625 16:10:12.223919 13490 net.cpp:228] conv2_2 does not need backward computation.
I0625 16:10:12.223922 13490 net.cpp:228] relu2_1 does not need backward computation.
I0625 16:10:12.223923 13490 net.cpp:228] conv2_1 does not need backward computation.
I0625 16:10:12.223925 13490 net.cpp:228] pool1 does not need backward computation.
I0625 16:10:12.223927 13490 net.cpp:228] relu1_2 does not need backward computation.
I0625 16:10:12.223928 13490 net.cpp:228] conv1_2 does not need backward computation.
I0625 16:10:12.223930 13490 net.cpp:228] relu1_1 does not need backward computation.
I0625 16:10:12.223932 13490 net.cpp:228] conv1_1 does not need backward computation.
I0625 16:10:12.223934 13490 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0625 16:10:12.223937 13490 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0625 16:10:12.223939 13490 net.cpp:228] data_input-data_0_split does not need backward computation.
I0625 16:10:12.223942 13490 net.cpp:228] input-data does not need backward computation.
I0625 16:10:12.223943 13490 net.cpp:270] This network produces output cross_entropy_mean
I0625 16:10:12.223945 13490 net.cpp:270] This network produces output loss_bbox
I0625 16:10:12.223948 13490 net.cpp:270] This network produces output loss_cls
I0625 16:10:12.223949 13490 net.cpp:270] This network produces output rpn_cls_loss
I0625 16:10:12.223951 13490 net.cpp:270] This network produces output rpn_loss_bbox
I0625 16:10:12.223989 13490 net.cpp:283] Network initialization done.
I0625 16:10:12.224125 13490 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0625 16:10:39.203773 13490 net.cpp:816] Ignoring source layer pool5
I0625 16:10:39.277938 13490 net.cpp:816] Ignoring source layer drop6
I0625 16:10:39.290421 13490 net.cpp:816] Ignoring source layer drop7
I0625 16:10:39.290439 13490 net.cpp:816] Ignoring source layer fc8
Solving...
(4, 244, 244, 8)
(4, 244, 244, 8)
(4, 244, 244, 8)
(4, 244, 244, 8)
F0625 16:10:39.939071 13490 eltwise_layer.cpp:34] Check failed: bottom[i]->shape() == bottom[0]->shape() 
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 13490 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
