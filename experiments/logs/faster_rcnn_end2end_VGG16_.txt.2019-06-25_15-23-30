+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_15-23-30
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_15-23-30
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0625 15:23:45.082162 28356 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0625 15:23:45.082187 28356 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0625 15:23:45.083969 28356 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "mask_score"
  top: "mask_score_softmax"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "log"
  type: "Log"
  bottom: "mask_score_softmax"
  top: "log"
}
layer {
  name: "mult1"
  type: "Eltwise"
  bottom: "log"
  bottom: "mask_targets"
  top: "mult1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cross_entropy"
  type: "Power"
  bottom: "mult1"
  top: "cross_entropy"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "ce_sum"
  type: "Convolution"
  bottom: "cross_entropy"
  top: "cross_entropy_sum"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 1
    weight_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "ce_mean"
  type: "Reduction"
  bottom: "cross_entropy_sum"
  top: "cross_entropy_mean"
  loss_weight: 1
  reduction_param {
    operation: MEAN
    axis: 0
  }
}
I0625 15:23:45.084411 28356 layer_factory.hpp:77] Creating layer input-data
I0625 15:23:45.209481 28356 net.cpp:106] Creating Layer input-data
I0625 15:23:45.209498 28356 net.cpp:411] input-data -> data
I0625 15:23:45.209511 28356 net.cpp:411] input-data -> im_info
I0625 15:23:45.209517 28356 net.cpp:411] input-data -> gt_boxes
I0625 15:23:45.209525 28356 net.cpp:411] input-data -> seg_mask_inds
I0625 15:23:45.209532 28356 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0625 15:23:45.291400 28356 net.cpp:150] Setting up input-data
I0625 15:23:45.291419 28356 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:23:45.291424 28356 net.cpp:157] Top shape: 1 3 (3)
I0625 15:23:45.291429 28356 net.cpp:157] Top shape: 1 4 (4)
I0625 15:23:45.291435 28356 net.cpp:157] Top shape: 1 2 (2)
I0625 15:23:45.291440 28356 net.cpp:157] Top shape: 1 1 (1)
I0625 15:23:45.291442 28356 net.cpp:165] Memory required for data: 7200040
I0625 15:23:45.291450 28356 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0625 15:23:45.291465 28356 net.cpp:106] Creating Layer data_input-data_0_split
I0625 15:23:45.291469 28356 net.cpp:454] data_input-data_0_split <- data
I0625 15:23:45.291476 28356 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0625 15:23:45.291486 28356 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0625 15:23:45.291510 28356 net.cpp:150] Setting up data_input-data_0_split
I0625 15:23:45.291517 28356 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:23:45.291522 28356 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 15:23:45.291527 28356 net.cpp:165] Memory required for data: 21600040
I0625 15:23:45.291529 28356 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0625 15:23:45.291535 28356 net.cpp:106] Creating Layer im_info_input-data_1_split
I0625 15:23:45.291538 28356 net.cpp:454] im_info_input-data_1_split <- im_info
I0625 15:23:45.291543 28356 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0625 15:23:45.291550 28356 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0625 15:23:45.291558 28356 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0625 15:23:45.291585 28356 net.cpp:150] Setting up im_info_input-data_1_split
I0625 15:23:45.291591 28356 net.cpp:157] Top shape: 1 3 (3)
I0625 15:23:45.291604 28356 net.cpp:157] Top shape: 1 3 (3)
I0625 15:23:45.291608 28356 net.cpp:157] Top shape: 1 3 (3)
I0625 15:23:45.291611 28356 net.cpp:165] Memory required for data: 21600076
I0625 15:23:45.291615 28356 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0625 15:23:45.291620 28356 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0625 15:23:45.291625 28356 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0625 15:23:45.291630 28356 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0625 15:23:45.291635 28356 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0625 15:23:45.291658 28356 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0625 15:23:45.291664 28356 net.cpp:157] Top shape: 1 4 (4)
I0625 15:23:45.291668 28356 net.cpp:157] Top shape: 1 4 (4)
I0625 15:23:45.291671 28356 net.cpp:165] Memory required for data: 21600108
I0625 15:23:45.291676 28356 layer_factory.hpp:77] Creating layer conv1_1
I0625 15:23:45.291687 28356 net.cpp:106] Creating Layer conv1_1
I0625 15:23:45.291692 28356 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0625 15:23:45.291697 28356 net.cpp:411] conv1_1 -> conv1_1
I0625 15:23:45.510993 28356 net.cpp:150] Setting up conv1_1
I0625 15:23:45.511014 28356 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:23:45.511018 28356 net.cpp:165] Memory required for data: 175200108
I0625 15:23:45.511034 28356 layer_factory.hpp:77] Creating layer relu1_1
I0625 15:23:45.511070 28356 net.cpp:106] Creating Layer relu1_1
I0625 15:23:45.511076 28356 net.cpp:454] relu1_1 <- conv1_1
I0625 15:23:45.511091 28356 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0625 15:23:45.511236 28356 net.cpp:150] Setting up relu1_1
I0625 15:23:45.511243 28356 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:23:45.511246 28356 net.cpp:165] Memory required for data: 328800108
I0625 15:23:45.511250 28356 layer_factory.hpp:77] Creating layer conv1_2
I0625 15:23:45.511260 28356 net.cpp:106] Creating Layer conv1_2
I0625 15:23:45.511263 28356 net.cpp:454] conv1_2 <- conv1_1
I0625 15:23:45.511282 28356 net.cpp:411] conv1_2 -> conv1_2
I0625 15:23:45.513574 28356 net.cpp:150] Setting up conv1_2
I0625 15:23:45.513584 28356 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:23:45.513588 28356 net.cpp:165] Memory required for data: 482400108
I0625 15:23:45.513597 28356 layer_factory.hpp:77] Creating layer relu1_2
I0625 15:23:45.513604 28356 net.cpp:106] Creating Layer relu1_2
I0625 15:23:45.513618 28356 net.cpp:454] relu1_2 <- conv1_2
I0625 15:23:45.513624 28356 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0625 15:23:45.513749 28356 net.cpp:150] Setting up relu1_2
I0625 15:23:45.513757 28356 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 15:23:45.513761 28356 net.cpp:165] Memory required for data: 636000108
I0625 15:23:45.513763 28356 layer_factory.hpp:77] Creating layer pool1
I0625 15:23:45.513772 28356 net.cpp:106] Creating Layer pool1
I0625 15:23:45.513775 28356 net.cpp:454] pool1 <- conv1_2
I0625 15:23:45.513780 28356 net.cpp:411] pool1 -> pool1
I0625 15:23:45.513836 28356 net.cpp:150] Setting up pool1
I0625 15:23:45.513842 28356 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0625 15:23:45.513845 28356 net.cpp:165] Memory required for data: 674400108
I0625 15:23:45.513859 28356 layer_factory.hpp:77] Creating layer conv2_1
I0625 15:23:45.513865 28356 net.cpp:106] Creating Layer conv2_1
I0625 15:23:45.513870 28356 net.cpp:454] conv2_1 <- pool1
I0625 15:23:45.513875 28356 net.cpp:411] conv2_1 -> conv2_1
I0625 15:23:45.515758 28356 net.cpp:150] Setting up conv2_1
I0625 15:23:45.515767 28356 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:23:45.515771 28356 net.cpp:165] Memory required for data: 751200108
I0625 15:23:45.515791 28356 layer_factory.hpp:77] Creating layer relu2_1
I0625 15:23:45.515799 28356 net.cpp:106] Creating Layer relu2_1
I0625 15:23:45.515803 28356 net.cpp:454] relu2_1 <- conv2_1
I0625 15:23:45.515810 28356 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0625 15:23:45.516286 28356 net.cpp:150] Setting up relu2_1
I0625 15:23:45.516294 28356 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:23:45.516299 28356 net.cpp:165] Memory required for data: 828000108
I0625 15:23:45.516311 28356 layer_factory.hpp:77] Creating layer conv2_2
I0625 15:23:45.516320 28356 net.cpp:106] Creating Layer conv2_2
I0625 15:23:45.516324 28356 net.cpp:454] conv2_2 <- conv2_1
I0625 15:23:45.516340 28356 net.cpp:411] conv2_2 -> conv2_2
I0625 15:23:45.517637 28356 net.cpp:150] Setting up conv2_2
I0625 15:23:45.517647 28356 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:23:45.517650 28356 net.cpp:165] Memory required for data: 904800108
I0625 15:23:45.517668 28356 layer_factory.hpp:77] Creating layer relu2_2
I0625 15:23:45.517674 28356 net.cpp:106] Creating Layer relu2_2
I0625 15:23:45.517679 28356 net.cpp:454] relu2_2 <- conv2_2
I0625 15:23:45.517685 28356 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0625 15:23:45.517792 28356 net.cpp:150] Setting up relu2_2
I0625 15:23:45.517799 28356 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 15:23:45.517803 28356 net.cpp:165] Memory required for data: 981600108
I0625 15:23:45.517807 28356 layer_factory.hpp:77] Creating layer pool2
I0625 15:23:45.517813 28356 net.cpp:106] Creating Layer pool2
I0625 15:23:45.517817 28356 net.cpp:454] pool2 <- conv2_2
I0625 15:23:45.517822 28356 net.cpp:411] pool2 -> pool2
I0625 15:23:45.517853 28356 net.cpp:150] Setting up pool2
I0625 15:23:45.517859 28356 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0625 15:23:45.517863 28356 net.cpp:165] Memory required for data: 1000800108
I0625 15:23:45.517865 28356 layer_factory.hpp:77] Creating layer conv3_1
I0625 15:23:45.517872 28356 net.cpp:106] Creating Layer conv3_1
I0625 15:23:45.517876 28356 net.cpp:454] conv3_1 <- pool2
I0625 15:23:45.517882 28356 net.cpp:411] conv3_1 -> conv3_1
I0625 15:23:45.519753 28356 net.cpp:150] Setting up conv3_1
I0625 15:23:45.519762 28356 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:23:45.519765 28356 net.cpp:165] Memory required for data: 1039200108
I0625 15:23:45.519775 28356 layer_factory.hpp:77] Creating layer relu3_1
I0625 15:23:45.519783 28356 net.cpp:106] Creating Layer relu3_1
I0625 15:23:45.519786 28356 net.cpp:454] relu3_1 <- conv3_1
I0625 15:23:45.519793 28356 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0625 15:23:45.519901 28356 net.cpp:150] Setting up relu3_1
I0625 15:23:45.519908 28356 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:23:45.519912 28356 net.cpp:165] Memory required for data: 1077600108
I0625 15:23:45.519915 28356 layer_factory.hpp:77] Creating layer conv3_2
I0625 15:23:45.519924 28356 net.cpp:106] Creating Layer conv3_2
I0625 15:23:45.519928 28356 net.cpp:454] conv3_2 <- conv3_1
I0625 15:23:45.519934 28356 net.cpp:411] conv3_2 -> conv3_2
I0625 15:23:45.522099 28356 net.cpp:150] Setting up conv3_2
I0625 15:23:45.522109 28356 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:23:45.522112 28356 net.cpp:165] Memory required for data: 1116000108
I0625 15:23:45.522130 28356 layer_factory.hpp:77] Creating layer relu3_2
I0625 15:23:45.522137 28356 net.cpp:106] Creating Layer relu3_2
I0625 15:23:45.522141 28356 net.cpp:454] relu3_2 <- conv3_2
I0625 15:23:45.522147 28356 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0625 15:23:45.522291 28356 net.cpp:150] Setting up relu3_2
I0625 15:23:45.522300 28356 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:23:45.522302 28356 net.cpp:165] Memory required for data: 1154400108
I0625 15:23:45.522315 28356 layer_factory.hpp:77] Creating layer conv3_3
I0625 15:23:45.522325 28356 net.cpp:106] Creating Layer conv3_3
I0625 15:23:45.522328 28356 net.cpp:454] conv3_3 <- conv3_2
I0625 15:23:45.522343 28356 net.cpp:411] conv3_3 -> conv3_3
I0625 15:23:45.524263 28356 net.cpp:150] Setting up conv3_3
I0625 15:23:45.524272 28356 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:23:45.524276 28356 net.cpp:165] Memory required for data: 1192800108
I0625 15:23:45.524293 28356 layer_factory.hpp:77] Creating layer relu3_3
I0625 15:23:45.524312 28356 net.cpp:106] Creating Layer relu3_3
I0625 15:23:45.524317 28356 net.cpp:454] relu3_3 <- conv3_3
I0625 15:23:45.524333 28356 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0625 15:23:45.524468 28356 net.cpp:150] Setting up relu3_3
I0625 15:23:45.524475 28356 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 15:23:45.524478 28356 net.cpp:165] Memory required for data: 1231200108
I0625 15:23:45.524492 28356 layer_factory.hpp:77] Creating layer pool3
I0625 15:23:45.524511 28356 net.cpp:106] Creating Layer pool3
I0625 15:23:45.524515 28356 net.cpp:454] pool3 <- conv3_3
I0625 15:23:45.524530 28356 net.cpp:411] pool3 -> pool3
I0625 15:23:45.524571 28356 net.cpp:150] Setting up pool3
I0625 15:23:45.524576 28356 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0625 15:23:45.524580 28356 net.cpp:165] Memory required for data: 1240800108
I0625 15:23:45.524592 28356 layer_factory.hpp:77] Creating layer conv4_1
I0625 15:23:45.524600 28356 net.cpp:106] Creating Layer conv4_1
I0625 15:23:45.524612 28356 net.cpp:454] conv4_1 <- pool3
I0625 15:23:45.524618 28356 net.cpp:411] conv4_1 -> conv4_1
I0625 15:23:45.528405 28356 net.cpp:150] Setting up conv4_1
I0625 15:23:45.528424 28356 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:23:45.528429 28356 net.cpp:165] Memory required for data: 1260000108
I0625 15:23:45.528446 28356 layer_factory.hpp:77] Creating layer relu4_1
I0625 15:23:45.528456 28356 net.cpp:106] Creating Layer relu4_1
I0625 15:23:45.528465 28356 net.cpp:454] relu4_1 <- conv4_1
I0625 15:23:45.528472 28356 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0625 15:23:45.528597 28356 net.cpp:150] Setting up relu4_1
I0625 15:23:45.528604 28356 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:23:45.528607 28356 net.cpp:165] Memory required for data: 1279200108
I0625 15:23:45.528620 28356 layer_factory.hpp:77] Creating layer conv4_2
I0625 15:23:45.528630 28356 net.cpp:106] Creating Layer conv4_2
I0625 15:23:45.528633 28356 net.cpp:454] conv4_2 <- conv4_1
I0625 15:23:45.528640 28356 net.cpp:411] conv4_2 -> conv4_2
I0625 15:23:45.533794 28356 net.cpp:150] Setting up conv4_2
I0625 15:23:45.533814 28356 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:23:45.533818 28356 net.cpp:165] Memory required for data: 1298400108
I0625 15:23:45.533833 28356 layer_factory.hpp:77] Creating layer relu4_2
I0625 15:23:45.533843 28356 net.cpp:106] Creating Layer relu4_2
I0625 15:23:45.533849 28356 net.cpp:454] relu4_2 <- conv4_2
I0625 15:23:45.533855 28356 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0625 15:23:45.534363 28356 net.cpp:150] Setting up relu4_2
I0625 15:23:45.534370 28356 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:23:45.534374 28356 net.cpp:165] Memory required for data: 1317600108
I0625 15:23:45.534377 28356 layer_factory.hpp:77] Creating layer conv4_3
I0625 15:23:45.534396 28356 net.cpp:106] Creating Layer conv4_3
I0625 15:23:45.534400 28356 net.cpp:454] conv4_3 <- conv4_2
I0625 15:23:45.534405 28356 net.cpp:411] conv4_3 -> conv4_3
I0625 15:23:45.538705 28356 net.cpp:150] Setting up conv4_3
I0625 15:23:45.538725 28356 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:23:45.538728 28356 net.cpp:165] Memory required for data: 1336800108
I0625 15:23:45.538748 28356 layer_factory.hpp:77] Creating layer relu4_3
I0625 15:23:45.538756 28356 net.cpp:106] Creating Layer relu4_3
I0625 15:23:45.538763 28356 net.cpp:454] relu4_3 <- conv4_3
I0625 15:23:45.538770 28356 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0625 15:23:45.538887 28356 net.cpp:150] Setting up relu4_3
I0625 15:23:45.538894 28356 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 15:23:45.538897 28356 net.cpp:165] Memory required for data: 1356000108
I0625 15:23:45.538910 28356 layer_factory.hpp:77] Creating layer pool4
I0625 15:23:45.538918 28356 net.cpp:106] Creating Layer pool4
I0625 15:23:45.538921 28356 net.cpp:454] pool4 <- conv4_3
I0625 15:23:45.538926 28356 net.cpp:411] pool4 -> pool4
I0625 15:23:45.538977 28356 net.cpp:150] Setting up pool4
I0625 15:23:45.538982 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.538985 28356 net.cpp:165] Memory required for data: 1360903020
I0625 15:23:45.538998 28356 layer_factory.hpp:77] Creating layer conv5_1
I0625 15:23:45.539008 28356 net.cpp:106] Creating Layer conv5_1
I0625 15:23:45.539012 28356 net.cpp:454] conv5_1 <- pool4
I0625 15:23:45.539026 28356 net.cpp:411] conv5_1 -> conv5_1
I0625 15:23:45.543596 28356 net.cpp:150] Setting up conv5_1
I0625 15:23:45.543617 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.543619 28356 net.cpp:165] Memory required for data: 1365805932
I0625 15:23:45.543629 28356 layer_factory.hpp:77] Creating layer relu5_1
I0625 15:23:45.543638 28356 net.cpp:106] Creating Layer relu5_1
I0625 15:23:45.543653 28356 net.cpp:454] relu5_1 <- conv5_1
I0625 15:23:45.543671 28356 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0625 15:23:45.543793 28356 net.cpp:150] Setting up relu5_1
I0625 15:23:45.543800 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.543803 28356 net.cpp:165] Memory required for data: 1370708844
I0625 15:23:45.543807 28356 layer_factory.hpp:77] Creating layer conv5_2
I0625 15:23:45.543815 28356 net.cpp:106] Creating Layer conv5_2
I0625 15:23:45.543831 28356 net.cpp:454] conv5_2 <- conv5_1
I0625 15:23:45.543846 28356 net.cpp:411] conv5_2 -> conv5_2
I0625 15:23:45.548499 28356 net.cpp:150] Setting up conv5_2
I0625 15:23:45.548519 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.548523 28356 net.cpp:165] Memory required for data: 1375611756
I0625 15:23:45.548532 28356 layer_factory.hpp:77] Creating layer relu5_2
I0625 15:23:45.548542 28356 net.cpp:106] Creating Layer relu5_2
I0625 15:23:45.548547 28356 net.cpp:454] relu5_2 <- conv5_2
I0625 15:23:45.548553 28356 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0625 15:23:45.548671 28356 net.cpp:150] Setting up relu5_2
I0625 15:23:45.548678 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.548681 28356 net.cpp:165] Memory required for data: 1380514668
I0625 15:23:45.548684 28356 layer_factory.hpp:77] Creating layer conv5_3
I0625 15:23:45.548696 28356 net.cpp:106] Creating Layer conv5_3
I0625 15:23:45.548701 28356 net.cpp:454] conv5_3 <- conv5_2
I0625 15:23:45.548707 28356 net.cpp:411] conv5_3 -> conv5_3
I0625 15:23:45.553257 28356 net.cpp:150] Setting up conv5_3
I0625 15:23:45.553279 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.553282 28356 net.cpp:165] Memory required for data: 1385417580
I0625 15:23:45.553292 28356 layer_factory.hpp:77] Creating layer relu5_3
I0625 15:23:45.553300 28356 net.cpp:106] Creating Layer relu5_3
I0625 15:23:45.553315 28356 net.cpp:454] relu5_3 <- conv5_3
I0625 15:23:45.553323 28356 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0625 15:23:45.553442 28356 net.cpp:150] Setting up relu5_3
I0625 15:23:45.553449 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.553452 28356 net.cpp:165] Memory required for data: 1390320492
I0625 15:23:45.553457 28356 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0625 15:23:45.553462 28356 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0625 15:23:45.553465 28356 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0625 15:23:45.553480 28356 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0625 15:23:45.553486 28356 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0625 15:23:45.553493 28356 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0625 15:23:45.553537 28356 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0625 15:23:45.553542 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.553556 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.553560 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.553563 28356 net.cpp:165] Memory required for data: 1405029228
I0625 15:23:45.553576 28356 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0625 15:23:45.553586 28356 net.cpp:106] Creating Layer rpn_conv/3x3
I0625 15:23:45.553591 28356 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0625 15:23:45.553606 28356 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0625 15:23:45.604286 28356 net.cpp:150] Setting up rpn_conv/3x3
I0625 15:23:45.604305 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.604308 28356 net.cpp:165] Memory required for data: 1409932140
I0625 15:23:45.604317 28356 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0625 15:23:45.604336 28356 net.cpp:106] Creating Layer rpn_relu/3x3
I0625 15:23:45.604341 28356 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0625 15:23:45.604359 28356 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0625 15:23:45.604516 28356 net.cpp:150] Setting up rpn_relu/3x3
I0625 15:23:45.604523 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.604526 28356 net.cpp:165] Memory required for data: 1414835052
I0625 15:23:45.604530 28356 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0625 15:23:45.604537 28356 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0625 15:23:45.604554 28356 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0625 15:23:45.604560 28356 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0625 15:23:45.604583 28356 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0625 15:23:45.604630 28356 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0625 15:23:45.604635 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.604650 28356 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 15:23:45.604653 28356 net.cpp:165] Memory required for data: 1424640876
I0625 15:23:45.604656 28356 layer_factory.hpp:77] Creating layer rpn_cls_score
I0625 15:23:45.604677 28356 net.cpp:106] Creating Layer rpn_cls_score
I0625 15:23:45.604681 28356 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0625 15:23:45.604696 28356 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0625 15:23:45.606264 28356 net.cpp:150] Setting up rpn_cls_score
I0625 15:23:45.606284 28356 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:23:45.606287 28356 net.cpp:165] Memory required for data: 1424928156
I0625 15:23:45.606302 28356 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0625 15:23:45.606309 28356 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0625 15:23:45.606323 28356 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0625 15:23:45.606343 28356 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0625 15:23:45.606351 28356 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0625 15:23:45.606411 28356 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0625 15:23:45.606426 28356 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:23:45.606431 28356 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:23:45.606434 28356 net.cpp:165] Memory required for data: 1425502716
I0625 15:23:45.606448 28356 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0625 15:23:45.606472 28356 net.cpp:106] Creating Layer rpn_bbox_pred
I0625 15:23:45.606475 28356 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0625 15:23:45.606482 28356 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0625 15:23:45.607916 28356 net.cpp:150] Setting up rpn_bbox_pred
I0625 15:23:45.607925 28356 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:23:45.607928 28356 net.cpp:165] Memory required for data: 1426077276
I0625 15:23:45.607935 28356 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:23:45.607955 28356 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:23:45.607959 28356 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0625 15:23:45.607965 28356 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 15:23:45.607972 28356 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 15:23:45.608011 28356 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 15:23:45.608016 28356 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:23:45.608021 28356 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:23:45.608023 28356 net.cpp:165] Memory required for data: 1427226396
I0625 15:23:45.608027 28356 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0625 15:23:45.608047 28356 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0625 15:23:45.608049 28356 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0625 15:23:45.608055 28356 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0625 15:23:45.608075 28356 net.cpp:150] Setting up rpn_cls_score_reshape
I0625 15:23:45.608080 28356 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:23:45.608093 28356 net.cpp:165] Memory required for data: 1427513676
I0625 15:23:45.608096 28356 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:23:45.608111 28356 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:23:45.608114 28356 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0625 15:23:45.608119 28356 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 15:23:45.608126 28356 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 15:23:45.608150 28356 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 15:23:45.608163 28356 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:23:45.608168 28356 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:23:45.608181 28356 net.cpp:165] Memory required for data: 1428088236
I0625 15:23:45.608184 28356 layer_factory.hpp:77] Creating layer rpn-data
I0625 15:23:45.609175 28356 net.cpp:106] Creating Layer rpn-data
I0625 15:23:45.609184 28356 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0625 15:23:45.609190 28356 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0625 15:23:45.609194 28356 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0625 15:23:45.609201 28356 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0625 15:23:45.609210 28356 net.cpp:411] rpn-data -> rpn_labels
I0625 15:23:45.609217 28356 net.cpp:411] rpn-data -> rpn_bbox_targets
I0625 15:23:45.609225 28356 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0625 15:23:45.609231 28356 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0625 15:23:45.610076 28356 net.cpp:150] Setting up rpn-data
I0625 15:23:45.610086 28356 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0625 15:23:45.610091 28356 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:23:45.610095 28356 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:23:45.610101 28356 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 15:23:45.610105 28356 net.cpp:165] Memory required for data: 1429955556
I0625 15:23:45.610110 28356 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 15:23:45.610117 28356 net.cpp:106] Creating Layer rpn_loss_cls
I0625 15:23:45.610121 28356 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 15:23:45.610126 28356 net.cpp:454] rpn_loss_cls <- rpn_labels
I0625 15:23:45.610133 28356 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0625 15:23:45.610146 28356 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 15:23:45.610780 28356 net.cpp:150] Setting up rpn_loss_cls
I0625 15:23:45.610788 28356 net.cpp:157] Top shape: (1)
I0625 15:23:45.610792 28356 net.cpp:160]     with loss weight 1
I0625 15:23:45.610802 28356 net.cpp:165] Memory required for data: 1429955560
I0625 15:23:45.610806 28356 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0625 15:23:45.610816 28356 net.cpp:106] Creating Layer rpn_loss_bbox
I0625 15:23:45.610819 28356 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 15:23:45.610824 28356 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0625 15:23:45.610829 28356 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0625 15:23:45.610836 28356 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0625 15:23:45.610841 28356 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0625 15:23:45.611922 28356 net.cpp:150] Setting up rpn_loss_bbox
I0625 15:23:45.611930 28356 net.cpp:157] Top shape: (1)
I0625 15:23:45.611934 28356 net.cpp:160]     with loss weight 1
I0625 15:23:45.611939 28356 net.cpp:165] Memory required for data: 1429955564
I0625 15:23:45.611945 28356 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0625 15:23:45.611951 28356 net.cpp:106] Creating Layer rpn_cls_prob
I0625 15:23:45.611955 28356 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 15:23:45.611960 28356 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0625 15:23:45.612114 28356 net.cpp:150] Setting up rpn_cls_prob
I0625 15:23:45.612123 28356 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 15:23:45.612125 28356 net.cpp:165] Memory required for data: 1430242844
I0625 15:23:45.612128 28356 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0625 15:23:45.612136 28356 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0625 15:23:45.612140 28356 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0625 15:23:45.612145 28356 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0625 15:23:45.612166 28356 net.cpp:150] Setting up rpn_cls_prob_reshape
I0625 15:23:45.612172 28356 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 15:23:45.612176 28356 net.cpp:165] Memory required for data: 1430530124
I0625 15:23:45.612179 28356 layer_factory.hpp:77] Creating layer proposal
I0625 15:23:45.614629 28356 net.cpp:106] Creating Layer proposal
I0625 15:23:45.614639 28356 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0625 15:23:45.614645 28356 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 15:23:45.614648 28356 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0625 15:23:45.614655 28356 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0625 15:23:45.615736 28356 net.cpp:150] Setting up proposal
I0625 15:23:45.615746 28356 net.cpp:157] Top shape: 1 5 (5)
I0625 15:23:45.615749 28356 net.cpp:165] Memory required for data: 1430530144
I0625 15:23:45.615753 28356 layer_factory.hpp:77] Creating layer roi-data
I0625 15:23:45.618795 28356 net.cpp:106] Creating Layer roi-data
I0625 15:23:45.618805 28356 net.cpp:454] roi-data <- rpn_rois
I0625 15:23:45.618813 28356 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0625 15:23:45.618816 28356 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0625 15:23:45.618821 28356 net.cpp:454] roi-data <- seg_mask_inds
I0625 15:23:45.618840 28356 net.cpp:454] roi-data <- flipped
I0625 15:23:45.618849 28356 net.cpp:411] roi-data -> rois
I0625 15:23:45.618858 28356 net.cpp:411] roi-data -> labels
I0625 15:23:45.618865 28356 net.cpp:411] roi-data -> bbox_targets
I0625 15:23:45.618873 28356 net.cpp:411] roi-data -> bbox_inside_weights
I0625 15:23:45.618880 28356 net.cpp:411] roi-data -> bbox_outside_weights
I0625 15:23:45.618888 28356 net.cpp:411] roi-data -> mask_targets
I0625 15:23:45.618894 28356 net.cpp:411] roi-data -> rois_pos
I0625 15:23:45.618901 28356 net.cpp:411] roi-data -> attrArray
I0625 15:23:45.618907 28356 net.cpp:411] roi-data -> attrArrayInd
I0625 15:23:45.618914 28356 net.cpp:411] roi-data -> attrArrayShift
I0625 15:23:45.619258 28356 net.cpp:150] Setting up roi-data
I0625 15:23:45.619268 28356 net.cpp:157] Top shape: 1 5 (5)
I0625 15:23:45.619272 28356 net.cpp:157] Top shape: 1 1 (1)
I0625 15:23:45.619287 28356 net.cpp:157] Top shape: 1 8 (8)
I0625 15:23:45.619292 28356 net.cpp:157] Top shape: 1 8 (8)
I0625 15:23:45.619294 28356 net.cpp:157] Top shape: 1 8 (8)
I0625 15:23:45.619299 28356 net.cpp:157] Top shape: 1 244 244 (59536)
I0625 15:23:45.619304 28356 net.cpp:157] Top shape: 1 5 (5)
I0625 15:23:45.619308 28356 net.cpp:157] Top shape: 1 7 (7)
I0625 15:23:45.619313 28356 net.cpp:157] Top shape: 1 7 (7)
I0625 15:23:45.619316 28356 net.cpp:157] Top shape: 1 7 (7)
I0625 15:23:45.619320 28356 net.cpp:165] Memory required for data: 1430768512
I0625 15:23:45.619324 28356 layer_factory.hpp:77] Creating layer roi_pool5
I0625 15:23:45.619331 28356 net.cpp:106] Creating Layer roi_pool5
I0625 15:23:45.619335 28356 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0625 15:23:45.619340 28356 net.cpp:454] roi_pool5 <- rois
I0625 15:23:45.619345 28356 net.cpp:411] roi_pool5 -> pool5
I0625 15:23:45.619354 28356 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 15:23:45.619426 28356 net.cpp:150] Setting up roi_pool5
I0625 15:23:45.619431 28356 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:23:45.619434 28356 net.cpp:165] Memory required for data: 1430868864
I0625 15:23:45.619437 28356 layer_factory.hpp:77] Creating layer fc6
I0625 15:23:45.619444 28356 net.cpp:106] Creating Layer fc6
I0625 15:23:45.619448 28356 net.cpp:454] fc6 <- pool5
I0625 15:23:45.619453 28356 net.cpp:411] fc6 -> fc6
I0625 15:23:45.781975 28356 net.cpp:150] Setting up fc6
I0625 15:23:45.782013 28356 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:23:45.782021 28356 net.cpp:165] Memory required for data: 1430885248
I0625 15:23:45.782044 28356 layer_factory.hpp:77] Creating layer relu6
I0625 15:23:45.782059 28356 net.cpp:106] Creating Layer relu6
I0625 15:23:45.782066 28356 net.cpp:454] relu6 <- fc6
I0625 15:23:45.782074 28356 net.cpp:397] relu6 -> fc6 (in-place)
I0625 15:23:45.782364 28356 net.cpp:150] Setting up relu6
I0625 15:23:45.782377 28356 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:23:45.782398 28356 net.cpp:165] Memory required for data: 1430901632
I0625 15:23:45.782405 28356 layer_factory.hpp:77] Creating layer fc7
I0625 15:23:45.782414 28356 net.cpp:106] Creating Layer fc7
I0625 15:23:45.782419 28356 net.cpp:454] fc7 <- fc6
I0625 15:23:45.782428 28356 net.cpp:411] fc7 -> fc7
I0625 15:23:45.817322 28356 net.cpp:150] Setting up fc7
I0625 15:23:45.817350 28356 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:23:45.817354 28356 net.cpp:165] Memory required for data: 1430918016
I0625 15:23:45.817366 28356 layer_factory.hpp:77] Creating layer relu7
I0625 15:23:45.817378 28356 net.cpp:106] Creating Layer relu7
I0625 15:23:45.817382 28356 net.cpp:454] relu7 <- fc7
I0625 15:23:45.817389 28356 net.cpp:397] relu7 -> fc7 (in-place)
I0625 15:23:45.817622 28356 net.cpp:150] Setting up relu7
I0625 15:23:45.817631 28356 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:23:45.817633 28356 net.cpp:165] Memory required for data: 1430934400
I0625 15:23:45.817636 28356 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0625 15:23:45.817642 28356 net.cpp:106] Creating Layer fc7_relu7_0_split
I0625 15:23:45.817646 28356 net.cpp:454] fc7_relu7_0_split <- fc7
I0625 15:23:45.817651 28356 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0625 15:23:45.817656 28356 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0625 15:23:45.817662 28356 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0625 15:23:45.817721 28356 net.cpp:150] Setting up fc7_relu7_0_split
I0625 15:23:45.817729 28356 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:23:45.817731 28356 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:23:45.817734 28356 net.cpp:157] Top shape: 1 4096 (4096)
I0625 15:23:45.817735 28356 net.cpp:165] Memory required for data: 1430983552
I0625 15:23:45.817739 28356 layer_factory.hpp:77] Creating layer attr_score
I0625 15:23:45.817746 28356 net.cpp:106] Creating Layer attr_score
I0625 15:23:45.817750 28356 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0625 15:23:45.817756 28356 net.cpp:411] attr_score -> attr_score
I0625 15:23:45.818501 28356 net.cpp:150] Setting up attr_score
I0625 15:23:45.818516 28356 net.cpp:157] Top shape: 1 7 (7)
I0625 15:23:45.818521 28356 net.cpp:165] Memory required for data: 1430983580
I0625 15:23:45.818532 28356 layer_factory.hpp:77] Creating layer attr_score_pos
I0625 15:23:45.818560 28356 net.cpp:106] Creating Layer attr_score_pos
I0625 15:23:45.818579 28356 net.cpp:454] attr_score_pos <- attr_score
I0625 15:23:45.818596 28356 net.cpp:454] attr_score_pos <- attrArrayInd
I0625 15:23:45.818614 28356 net.cpp:411] attr_score_pos -> attr_score_pos
I0625 15:23:45.818681 28356 net.cpp:150] Setting up attr_score_pos
I0625 15:23:45.818703 28356 net.cpp:157] Top shape: 1 7 (7)
I0625 15:23:45.818715 28356 net.cpp:165] Memory required for data: 1430983608
I0625 15:23:45.818727 28356 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0625 15:23:45.818742 28356 net.cpp:106] Creating Layer attr_score_pos_shift
I0625 15:23:45.818754 28356 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0625 15:23:45.818768 28356 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0625 15:23:45.818783 28356 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0625 15:23:45.818832 28356 net.cpp:150] Setting up attr_score_pos_shift
I0625 15:23:45.818840 28356 net.cpp:157] Top shape: 1 7 (7)
I0625 15:23:45.818843 28356 net.cpp:165] Memory required for data: 1430983636
I0625 15:23:45.818847 28356 layer_factory.hpp:77] Creating layer cls_score
I0625 15:23:45.818866 28356 net.cpp:106] Creating Layer cls_score
I0625 15:23:45.818879 28356 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0625 15:23:45.818894 28356 net.cpp:411] cls_score -> cls_score
I0625 15:23:45.819191 28356 net.cpp:150] Setting up cls_score
I0625 15:23:45.819200 28356 net.cpp:157] Top shape: 1 2 (2)
I0625 15:23:45.819203 28356 net.cpp:165] Memory required for data: 1430983644
I0625 15:23:45.819211 28356 layer_factory.hpp:77] Creating layer bbox_pred
I0625 15:23:45.819231 28356 net.cpp:106] Creating Layer bbox_pred
I0625 15:23:45.819242 28356 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0625 15:23:45.819267 28356 net.cpp:411] bbox_pred -> bbox_pred
I0625 15:23:45.820088 28356 net.cpp:150] Setting up bbox_pred
I0625 15:23:45.820101 28356 net.cpp:157] Top shape: 1 8 (8)
I0625 15:23:45.820104 28356 net.cpp:165] Memory required for data: 1430983676
I0625 15:23:45.820112 28356 layer_factory.hpp:77] Creating layer loss_attribute
I0625 15:23:45.820135 28356 net.cpp:106] Creating Layer loss_attribute
I0625 15:23:45.820149 28356 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0625 15:23:45.820163 28356 net.cpp:454] loss_attribute <- attrArray
I0625 15:23:45.820178 28356 net.cpp:411] loss_attribute -> loss_attribute
I0625 15:23:45.820262 28356 net.cpp:150] Setting up loss_attribute
I0625 15:23:45.820271 28356 net.cpp:157] Top shape: (1)
I0625 15:23:45.820274 28356 net.cpp:160]     with loss weight 1
I0625 15:23:45.820299 28356 net.cpp:165] Memory required for data: 1430983680
I0625 15:23:45.820312 28356 layer_factory.hpp:77] Creating layer loss_cls
I0625 15:23:45.820325 28356 net.cpp:106] Creating Layer loss_cls
I0625 15:23:45.820338 28356 net.cpp:454] loss_cls <- cls_score
I0625 15:23:45.820351 28356 net.cpp:454] loss_cls <- labels
I0625 15:23:45.820365 28356 net.cpp:411] loss_cls -> loss_cls
I0625 15:23:45.820384 28356 layer_factory.hpp:77] Creating layer loss_cls
I0625 15:23:45.821207 28356 net.cpp:150] Setting up loss_cls
I0625 15:23:45.821226 28356 net.cpp:157] Top shape: (1)
I0625 15:23:45.821229 28356 net.cpp:160]     with loss weight 3
I0625 15:23:45.821236 28356 net.cpp:165] Memory required for data: 1430983684
I0625 15:23:45.821240 28356 layer_factory.hpp:77] Creating layer loss_bbox
I0625 15:23:45.821255 28356 net.cpp:106] Creating Layer loss_bbox
I0625 15:23:45.821265 28356 net.cpp:454] loss_bbox <- bbox_pred
I0625 15:23:45.821274 28356 net.cpp:454] loss_bbox <- bbox_targets
I0625 15:23:45.821280 28356 net.cpp:454] loss_bbox <- bbox_inside_weights
I0625 15:23:45.821285 28356 net.cpp:454] loss_bbox <- bbox_outside_weights
I0625 15:23:45.821292 28356 net.cpp:411] loss_bbox -> loss_bbox
I0625 15:23:45.821380 28356 net.cpp:150] Setting up loss_bbox
I0625 15:23:45.821386 28356 net.cpp:157] Top shape: (1)
I0625 15:23:45.821390 28356 net.cpp:160]     with loss weight 2
I0625 15:23:45.821398 28356 net.cpp:165] Memory required for data: 1430983688
I0625 15:23:45.821403 28356 layer_factory.hpp:77] Creating layer roi_pool5_2
I0625 15:23:45.821413 28356 net.cpp:106] Creating Layer roi_pool5_2
I0625 15:23:45.821419 28356 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0625 15:23:45.821424 28356 net.cpp:454] roi_pool5_2 <- rois_pos
I0625 15:23:45.821430 28356 net.cpp:411] roi_pool5_2 -> pool5_2
I0625 15:23:45.821439 28356 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 15:23:45.821521 28356 net.cpp:150] Setting up roi_pool5_2
I0625 15:23:45.821527 28356 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:23:45.821530 28356 net.cpp:165] Memory required for data: 1431084040
I0625 15:23:45.821534 28356 layer_factory.hpp:77] Creating layer pool5_2_conv
I0625 15:23:45.821548 28356 net.cpp:106] Creating Layer pool5_2_conv
I0625 15:23:45.821553 28356 net.cpp:454] pool5_2_conv <- pool5_2
I0625 15:23:45.821560 28356 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0625 15:23:45.828588 28356 net.cpp:150] Setting up pool5_2_conv
I0625 15:23:45.828625 28356 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:23:45.828629 28356 net.cpp:165] Memory required for data: 1431184392
I0625 15:23:45.828637 28356 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0625 15:23:45.828647 28356 net.cpp:106] Creating Layer pool5_2_conv_relu
I0625 15:23:45.828663 28356 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0625 15:23:45.828670 28356 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0625 15:23:45.828826 28356 net.cpp:150] Setting up pool5_2_conv_relu
I0625 15:23:45.828835 28356 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:23:45.828838 28356 net.cpp:165] Memory required for data: 1431284744
I0625 15:23:45.828842 28356 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0625 15:23:45.828855 28356 net.cpp:106] Creating Layer pool5_2_conv2
I0625 15:23:45.828860 28356 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0625 15:23:45.828877 28356 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0625 15:23:45.880981 28356 net.cpp:150] Setting up pool5_2_conv2
I0625 15:23:45.881000 28356 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:23:45.881002 28356 net.cpp:165] Memory required for data: 1431385096
I0625 15:23:45.881011 28356 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0625 15:23:45.881028 28356 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0625 15:23:45.881032 28356 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0625 15:23:45.881038 28356 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0625 15:23:45.881189 28356 net.cpp:150] Setting up pool5_2_conv2_relu
I0625 15:23:45.881196 28356 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 15:23:45.881198 28356 net.cpp:165] Memory required for data: 1431485448
I0625 15:23:45.881201 28356 layer_factory.hpp:77] Creating layer mask_deconv1
I0625 15:23:45.881206 28356 net.cpp:106] Creating Layer mask_deconv1
I0625 15:23:45.881220 28356 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0625 15:23:45.881225 28356 net.cpp:411] mask_deconv1 -> mask_deconv1
I0625 15:23:45.881995 28356 net.cpp:150] Setting up mask_deconv1
I0625 15:23:45.882001 28356 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0625 15:23:45.882004 28356 net.cpp:165] Memory required for data: 1432407048
I0625 15:23:45.882007 28356 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0625 15:23:45.882014 28356 net.cpp:106] Creating Layer pool5_2_conv3
I0625 15:23:45.882027 28356 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0625 15:23:45.882032 28356 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0625 15:23:45.914621 28356 net.cpp:150] Setting up pool5_2_conv3
I0625 15:23:45.914644 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.914649 28356 net.cpp:165] Memory required for data: 1434250248
I0625 15:23:45.914669 28356 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0625 15:23:45.914678 28356 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0625 15:23:45.914685 28356 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0625 15:23:45.914692 28356 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0625 15:23:45.914877 28356 net.cpp:150] Setting up pool5_2_conv3_relu
I0625 15:23:45.914886 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.914901 28356 net.cpp:165] Memory required for data: 1436093448
I0625 15:23:45.914904 28356 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0625 15:23:45.914916 28356 net.cpp:106] Creating Layer pool5_2_conv4
I0625 15:23:45.914921 28356 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0625 15:23:45.914927 28356 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0625 15:23:45.968101 28356 net.cpp:150] Setting up pool5_2_conv4
I0625 15:23:45.968118 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.968120 28356 net.cpp:165] Memory required for data: 1437936648
I0625 15:23:45.968137 28356 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0625 15:23:45.968144 28356 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0625 15:23:45.968158 28356 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0625 15:23:45.968163 28356 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0625 15:23:45.968291 28356 net.cpp:150] Setting up pool5_2_conv4_relu
I0625 15:23:45.968297 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.968298 28356 net.cpp:165] Memory required for data: 1439779848
I0625 15:23:45.968300 28356 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 15:23:45.968304 28356 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 15:23:45.968307 28356 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0625 15:23:45.968310 28356 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0625 15:23:45.968314 28356 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0625 15:23:45.968318 28356 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0625 15:23:45.968322 28356 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0625 15:23:45.968358 28356 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 15:23:45.968363 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.968364 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.968366 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.968379 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.968380 28356 net.cpp:165] Memory required for data: 1447152648
I0625 15:23:45.968382 28356 layer_factory.hpp:77] Creating layer query_conv
I0625 15:23:45.968390 28356 net.cpp:106] Creating Layer query_conv
I0625 15:23:45.968394 28356 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0625 15:23:45.968397 28356 net.cpp:411] query_conv -> query_conv
I0625 15:23:45.969926 28356 net.cpp:150] Setting up query_conv
I0625 15:23:45.969934 28356 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0625 15:23:45.969936 28356 net.cpp:165] Memory required for data: 1447383048
I0625 15:23:45.969941 28356 layer_factory.hpp:77] Creating layer key_conv
I0625 15:23:45.969957 28356 net.cpp:106] Creating Layer key_conv
I0625 15:23:45.969960 28356 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0625 15:23:45.969965 28356 net.cpp:411] key_conv -> key_conv
I0625 15:23:45.971490 28356 net.cpp:150] Setting up key_conv
I0625 15:23:45.971498 28356 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0625 15:23:45.971500 28356 net.cpp:165] Memory required for data: 1447613448
I0625 15:23:45.971514 28356 layer_factory.hpp:77] Creating layer value_conv
I0625 15:23:45.971524 28356 net.cpp:106] Creating Layer value_conv
I0625 15:23:45.971526 28356 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0625 15:23:45.971530 28356 net.cpp:411] value_conv -> value_conv
I0625 15:23:45.978286 28356 net.cpp:150] Setting up value_conv
I0625 15:23:45.978315 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.978317 28356 net.cpp:165] Memory required for data: 1449456648
I0625 15:23:45.978322 28356 layer_factory.hpp:77] Creating layer query_conv_reshape
I0625 15:23:45.978338 28356 net.cpp:106] Creating Layer query_conv_reshape
I0625 15:23:45.978341 28356 net.cpp:454] query_conv_reshape <- query_conv
I0625 15:23:45.978346 28356 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0625 15:23:45.978368 28356 net.cpp:150] Setting up query_conv_reshape
I0625 15:23:45.978372 28356 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0625 15:23:45.978374 28356 net.cpp:165] Memory required for data: 1449687048
I0625 15:23:45.978384 28356 layer_factory.hpp:77] Creating layer key_conv_reshape
I0625 15:23:45.978389 28356 net.cpp:106] Creating Layer key_conv_reshape
I0625 15:23:45.978390 28356 net.cpp:454] key_conv_reshape <- key_conv
I0625 15:23:45.978404 28356 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0625 15:23:45.978420 28356 net.cpp:150] Setting up key_conv_reshape
I0625 15:23:45.978422 28356 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0625 15:23:45.978425 28356 net.cpp:165] Memory required for data: 1449917448
I0625 15:23:45.978426 28356 layer_factory.hpp:77] Creating layer value_conv_reshape
I0625 15:23:45.978430 28356 net.cpp:106] Creating Layer value_conv_reshape
I0625 15:23:45.978431 28356 net.cpp:454] value_conv_reshape <- value_conv
I0625 15:23:45.978435 28356 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0625 15:23:45.978448 28356 net.cpp:150] Setting up value_conv_reshape
I0625 15:23:45.978452 28356 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0625 15:23:45.978462 28356 net.cpp:165] Memory required for data: 1451760648
I0625 15:23:45.978464 28356 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0625 15:23:45.994221 28356 net.cpp:106] Creating Layer query_conv_reshape_perm
I0625 15:23:45.994228 28356 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0625 15:23:45.994232 28356 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0625 15:23:45.994325 28356 net.cpp:150] Setting up query_conv_reshape_perm
I0625 15:23:45.994331 28356 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0625 15:23:45.994333 28356 net.cpp:165] Memory required for data: 1451991048
I0625 15:23:45.994335 28356 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0625 15:23:45.994339 28356 net.cpp:106] Creating Layer key_conv_reshape_perm
I0625 15:23:45.994341 28356 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0625 15:23:45.994344 28356 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0625 15:23:45.994410 28356 net.cpp:150] Setting up key_conv_reshape_perm
I0625 15:23:45.994413 28356 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0625 15:23:45.994415 28356 net.cpp:165] Memory required for data: 1452221448
I0625 15:23:45.994417 28356 layer_factory.hpp:77] Creating layer energy
I0625 15:23:45.994421 28356 net.cpp:106] Creating Layer energy
I0625 15:23:45.994422 28356 net.cpp:454] energy <- query_conv_reshape_perm
I0625 15:23:45.994426 28356 net.cpp:454] energy <- key_conv_reshape_perm
I0625 15:23:45.994429 28356 net.cpp:411] energy -> energy
I0625 15:23:45.994444 28356 net.cpp:150] Setting up energy
I0625 15:23:45.994448 28356 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 15:23:45.994449 28356 net.cpp:165] Memory required for data: 1455461448
I0625 15:23:45.994451 28356 layer_factory.hpp:77] Creating layer attention
I0625 15:23:45.994455 28356 net.cpp:106] Creating Layer attention
I0625 15:23:45.994457 28356 net.cpp:454] attention <- energy
I0625 15:23:45.994460 28356 net.cpp:411] attention -> attention
I0625 15:23:45.994637 28356 net.cpp:150] Setting up attention
I0625 15:23:45.994643 28356 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 15:23:45.994647 28356 net.cpp:165] Memory required for data: 1458701448
I0625 15:23:45.994648 28356 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0625 15:23:45.994652 28356 net.cpp:106] Creating Layer value_conv_reshape_perm
I0625 15:23:45.994653 28356 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0625 15:23:45.994657 28356 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0625 15:23:45.994724 28356 net.cpp:150] Setting up value_conv_reshape_perm
I0625 15:23:45.994729 28356 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0625 15:23:45.994730 28356 net.cpp:165] Memory required for data: 1460544648
I0625 15:23:45.994731 28356 layer_factory.hpp:77] Creating layer attention_perm
I0625 15:23:45.994735 28356 net.cpp:106] Creating Layer attention_perm
I0625 15:23:45.994737 28356 net.cpp:454] attention_perm <- attention
I0625 15:23:45.994740 28356 net.cpp:411] attention_perm -> attention_perm
I0625 15:23:45.994805 28356 net.cpp:150] Setting up attention_perm
I0625 15:23:45.994810 28356 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 15:23:45.994812 28356 net.cpp:165] Memory required for data: 1463784648
I0625 15:23:45.994813 28356 layer_factory.hpp:77] Creating layer out
I0625 15:23:45.994817 28356 net.cpp:106] Creating Layer out
I0625 15:23:45.994818 28356 net.cpp:454] out <- value_conv_reshape_perm
I0625 15:23:45.994822 28356 net.cpp:454] out <- attention_perm
I0625 15:23:45.994824 28356 net.cpp:411] out -> out
I0625 15:23:45.994838 28356 net.cpp:150] Setting up out
I0625 15:23:45.994843 28356 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0625 15:23:45.994843 28356 net.cpp:165] Memory required for data: 1465627848
I0625 15:23:45.994845 28356 layer_factory.hpp:77] Creating layer out_reshape
I0625 15:23:45.994850 28356 net.cpp:106] Creating Layer out_reshape
I0625 15:23:45.994851 28356 net.cpp:454] out_reshape <- out
I0625 15:23:45.994855 28356 net.cpp:411] out_reshape -> out_reshape
I0625 15:23:45.994871 28356 net.cpp:150] Setting up out_reshape
I0625 15:23:45.994875 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.994876 28356 net.cpp:165] Memory required for data: 1467471048
I0625 15:23:45.994879 28356 layer_factory.hpp:77] Creating layer out_reshape_scale
I0625 15:23:45.995360 28356 net.cpp:106] Creating Layer out_reshape_scale
I0625 15:23:45.995368 28356 net.cpp:454] out_reshape_scale <- out_reshape
I0625 15:23:45.995373 28356 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0625 15:23:45.995448 28356 net.cpp:150] Setting up out_reshape_scale
I0625 15:23:45.995453 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.995456 28356 net.cpp:165] Memory required for data: 1469314248
I0625 15:23:45.995460 28356 layer_factory.hpp:77] Creating layer out_x
I0625 15:23:45.995466 28356 net.cpp:106] Creating Layer out_x
I0625 15:23:45.995470 28356 net.cpp:454] out_x <- out_reshape_scale
I0625 15:23:45.995472 28356 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0625 15:23:45.995476 28356 net.cpp:411] out_x -> out_x
I0625 15:23:45.995494 28356 net.cpp:150] Setting up out_x
I0625 15:23:45.995498 28356 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 15:23:45.995501 28356 net.cpp:165] Memory required for data: 1471157448
I0625 15:23:45.995501 28356 layer_factory.hpp:77] Creating layer mask_deconv2
I0625 15:23:45.995507 28356 net.cpp:106] Creating Layer mask_deconv2
I0625 15:23:45.995510 28356 net.cpp:454] mask_deconv2 <- out_x
I0625 15:23:45.995514 28356 net.cpp:411] mask_deconv2 -> mask_deconv2
I0625 15:23:45.996347 28356 net.cpp:150] Setting up mask_deconv2
I0625 15:23:45.996352 28356 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0625 15:23:45.996356 28356 net.cpp:165] Memory required for data: 1486398664
I0625 15:23:45.996359 28356 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0625 15:23:45.996366 28356 net.cpp:106] Creating Layer pool5_2_conv5
I0625 15:23:45.996368 28356 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0625 15:23:45.996372 28356 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0625 15:23:46.022367 28356 net.cpp:150] Setting up pool5_2_conv5
I0625 15:23:46.022384 28356 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 15:23:46.022387 28356 net.cpp:165] Memory required for data: 1516881096
I0625 15:23:46.022394 28356 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0625 15:23:46.022403 28356 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0625 15:23:46.022418 28356 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0625 15:23:46.022423 28356 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0625 15:23:46.022578 28356 net.cpp:150] Setting up pool5_2_conv5_relu
I0625 15:23:46.022585 28356 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 15:23:46.022588 28356 net.cpp:165] Memory required for data: 1547363528
I0625 15:23:46.022600 28356 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0625 15:23:46.022609 28356 net.cpp:106] Creating Layer pool5_2_conv6
I0625 15:23:46.022612 28356 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0625 15:23:46.022616 28356 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0625 15:23:46.085026 28356 net.cpp:150] Setting up pool5_2_conv6
I0625 15:23:46.085044 28356 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 15:23:46.085047 28356 net.cpp:165] Memory required for data: 1577845960
I0625 15:23:46.085065 28356 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0625 15:23:46.085083 28356 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0625 15:23:46.085089 28356 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0625 15:23:46.085094 28356 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0625 15:23:46.085651 28356 net.cpp:150] Setting up pool5_2_conv6_relu
I0625 15:23:46.085660 28356 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 15:23:46.085662 28356 net.cpp:165] Memory required for data: 1608328392
I0625 15:23:46.085665 28356 layer_factory.hpp:77] Creating layer mask_deconv3
I0625 15:23:46.085672 28356 net.cpp:106] Creating Layer mask_deconv3
I0625 15:23:46.085686 28356 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0625 15:23:46.085691 28356 net.cpp:411] mask_deconv3 -> mask_deconv3
I0625 15:23:46.086066 28356 net.cpp:150] Setting up mask_deconv3
I0625 15:23:46.086071 28356 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0625 15:23:46.086073 28356 net.cpp:165] Memory required for data: 1669293256
I0625 15:23:46.086077 28356 layer_factory.hpp:77] Creating layer mask_score
I0625 15:23:46.086094 28356 net.cpp:106] Creating Layer mask_score
I0625 15:23:46.086097 28356 net.cpp:454] mask_score <- mask_deconv3
I0625 15:23:46.086104 28356 net.cpp:411] mask_score -> mask_score
I0625 15:23:46.086745 28356 net.cpp:150] Setting up mask_score
I0625 15:23:46.086752 28356 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:23:46.086755 28356 net.cpp:165] Memory required for data: 1671198408
I0625 15:23:46.086769 28356 layer_factory.hpp:77] Creating layer prob
I0625 15:23:46.086774 28356 net.cpp:106] Creating Layer prob
I0625 15:23:46.086777 28356 net.cpp:454] prob <- mask_score
I0625 15:23:46.086781 28356 net.cpp:411] prob -> mask_score_softmax
I0625 15:23:46.087332 28356 net.cpp:150] Setting up prob
I0625 15:23:46.087339 28356 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:23:46.087342 28356 net.cpp:165] Memory required for data: 1673103560
I0625 15:23:46.087353 28356 layer_factory.hpp:77] Creating layer log
I0625 15:23:46.087358 28356 net.cpp:106] Creating Layer log
I0625 15:23:46.087361 28356 net.cpp:454] log <- mask_score_softmax
I0625 15:23:46.087365 28356 net.cpp:411] log -> log
I0625 15:23:46.087405 28356 net.cpp:150] Setting up log
I0625 15:23:46.087409 28356 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 15:23:46.087411 28356 net.cpp:165] Memory required for data: 1675008712
I0625 15:23:46.087414 28356 layer_factory.hpp:77] Creating layer mult1
I0625 15:23:46.087427 28356 net.cpp:106] Creating Layer mult1
I0625 15:23:46.087430 28356 net.cpp:454] mult1 <- log
I0625 15:23:46.087442 28356 net.cpp:454] mult1 <- mask_targets
I0625 15:23:46.087447 28356 net.cpp:411] mult1 -> mult1
F0625 15:23:46.087463 28356 eltwise_layer.cpp:34] Check failed: bottom[i]->shape() == bottom[0]->shape() 
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65: 28356 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
