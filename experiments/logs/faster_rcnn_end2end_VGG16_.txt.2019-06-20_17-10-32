+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-20_17-10-32
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-20_17-10-32
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 16,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0620 17:10:59.689740 27455 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0620 17:10:59.690096 27455 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0620 17:10:59.691751 27455 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 14
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0620 17:10:59.692557 27455 layer_factory.hpp:77] Creating layer input-data
I0620 17:10:59.927835 27455 net.cpp:106] Creating Layer input-data
I0620 17:10:59.927851 27455 net.cpp:411] input-data -> data
I0620 17:10:59.927872 27455 net.cpp:411] input-data -> im_info
I0620 17:10:59.927878 27455 net.cpp:411] input-data -> gt_boxes
I0620 17:10:59.927882 27455 net.cpp:411] input-data -> seg_mask_inds
I0620 17:10:59.927886 27455 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0620 17:11:00.138057 27455 net.cpp:150] Setting up input-data
I0620 17:11:00.138072 27455 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0620 17:11:00.138075 27455 net.cpp:157] Top shape: 1 3 (3)
I0620 17:11:00.138078 27455 net.cpp:157] Top shape: 1 4 (4)
I0620 17:11:00.138082 27455 net.cpp:157] Top shape: 1 2 (2)
I0620 17:11:00.138083 27455 net.cpp:157] Top shape: 1 1 (1)
I0620 17:11:00.138085 27455 net.cpp:165] Memory required for data: 7200040
I0620 17:11:00.138090 27455 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0620 17:11:00.138686 27455 net.cpp:106] Creating Layer data_input-data_0_split
I0620 17:11:00.138694 27455 net.cpp:454] data_input-data_0_split <- data
I0620 17:11:00.138698 27455 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0620 17:11:00.138705 27455 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0620 17:11:00.138729 27455 net.cpp:150] Setting up data_input-data_0_split
I0620 17:11:00.138734 27455 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0620 17:11:00.138736 27455 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0620 17:11:00.138738 27455 net.cpp:165] Memory required for data: 21600040
I0620 17:11:00.138741 27455 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0620 17:11:00.138743 27455 net.cpp:106] Creating Layer im_info_input-data_1_split
I0620 17:11:00.138746 27455 net.cpp:454] im_info_input-data_1_split <- im_info
I0620 17:11:00.138748 27455 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0620 17:11:00.138751 27455 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0620 17:11:00.138756 27455 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0620 17:11:00.138778 27455 net.cpp:150] Setting up im_info_input-data_1_split
I0620 17:11:00.138782 27455 net.cpp:157] Top shape: 1 3 (3)
I0620 17:11:00.138783 27455 net.cpp:157] Top shape: 1 3 (3)
I0620 17:11:00.138785 27455 net.cpp:157] Top shape: 1 3 (3)
I0620 17:11:00.138787 27455 net.cpp:165] Memory required for data: 21600076
I0620 17:11:00.138789 27455 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0620 17:11:00.138792 27455 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0620 17:11:00.138793 27455 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0620 17:11:00.138797 27455 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0620 17:11:00.138798 27455 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0620 17:11:00.138814 27455 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0620 17:11:00.138818 27455 net.cpp:157] Top shape: 1 4 (4)
I0620 17:11:00.138819 27455 net.cpp:157] Top shape: 1 4 (4)
I0620 17:11:00.138821 27455 net.cpp:165] Memory required for data: 21600108
I0620 17:11:00.138823 27455 layer_factory.hpp:77] Creating layer conv1_1
I0620 17:11:00.138831 27455 net.cpp:106] Creating Layer conv1_1
I0620 17:11:00.138833 27455 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0620 17:11:00.138836 27455 net.cpp:411] conv1_1 -> conv1_1
I0620 17:11:01.192745 27455 net.cpp:150] Setting up conv1_1
I0620 17:11:01.193650 27455 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0620 17:11:01.193655 27455 net.cpp:165] Memory required for data: 175200108
I0620 17:11:01.198189 27455 layer_factory.hpp:77] Creating layer relu1_1
I0620 17:11:01.199746 27455 net.cpp:106] Creating Layer relu1_1
I0620 17:11:01.199754 27455 net.cpp:454] relu1_1 <- conv1_1
I0620 17:11:01.199759 27455 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0620 17:11:01.201151 27455 net.cpp:150] Setting up relu1_1
I0620 17:11:01.201164 27455 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0620 17:11:01.201166 27455 net.cpp:165] Memory required for data: 328800108
I0620 17:11:01.201170 27455 layer_factory.hpp:77] Creating layer conv1_2
I0620 17:11:01.201179 27455 net.cpp:106] Creating Layer conv1_2
I0620 17:11:01.201182 27455 net.cpp:454] conv1_2 <- conv1_1
I0620 17:11:01.201187 27455 net.cpp:411] conv1_2 -> conv1_2
I0620 17:11:01.203862 27455 net.cpp:150] Setting up conv1_2
I0620 17:11:01.203876 27455 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0620 17:11:01.203879 27455 net.cpp:165] Memory required for data: 482400108
I0620 17:11:01.203888 27455 layer_factory.hpp:77] Creating layer relu1_2
I0620 17:11:01.203894 27455 net.cpp:106] Creating Layer relu1_2
I0620 17:11:01.203900 27455 net.cpp:454] relu1_2 <- conv1_2
I0620 17:11:01.203905 27455 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0620 17:11:01.204046 27455 net.cpp:150] Setting up relu1_2
I0620 17:11:01.204053 27455 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0620 17:11:01.204066 27455 net.cpp:165] Memory required for data: 636000108
I0620 17:11:01.204067 27455 layer_factory.hpp:77] Creating layer pool1
I0620 17:11:01.204087 27455 net.cpp:106] Creating Layer pool1
I0620 17:11:01.204092 27455 net.cpp:454] pool1 <- conv1_2
I0620 17:11:01.204097 27455 net.cpp:411] pool1 -> pool1
I0620 17:11:01.205729 27455 net.cpp:150] Setting up pool1
I0620 17:11:01.205737 27455 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0620 17:11:01.205739 27455 net.cpp:165] Memory required for data: 674400108
I0620 17:11:01.205741 27455 layer_factory.hpp:77] Creating layer conv2_1
I0620 17:11:01.205749 27455 net.cpp:106] Creating Layer conv2_1
I0620 17:11:01.205751 27455 net.cpp:454] conv2_1 <- pool1
I0620 17:11:01.205756 27455 net.cpp:411] conv2_1 -> conv2_1
I0620 17:11:01.207689 27455 net.cpp:150] Setting up conv2_1
I0620 17:11:01.207697 27455 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0620 17:11:01.207700 27455 net.cpp:165] Memory required for data: 751200108
I0620 17:11:01.207716 27455 layer_factory.hpp:77] Creating layer relu2_1
I0620 17:11:01.207723 27455 net.cpp:106] Creating Layer relu2_1
I0620 17:11:01.207736 27455 net.cpp:454] relu2_1 <- conv2_1
I0620 17:11:01.207741 27455 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0620 17:11:01.208221 27455 net.cpp:150] Setting up relu2_1
I0620 17:11:01.208230 27455 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0620 17:11:01.208241 27455 net.cpp:165] Memory required for data: 828000108
I0620 17:11:01.208243 27455 layer_factory.hpp:77] Creating layer conv2_2
I0620 17:11:01.208261 27455 net.cpp:106] Creating Layer conv2_2
I0620 17:11:01.208266 27455 net.cpp:454] conv2_2 <- conv2_1
I0620 17:11:01.208282 27455 net.cpp:411] conv2_2 -> conv2_2
I0620 17:11:01.209899 27455 net.cpp:150] Setting up conv2_2
I0620 17:11:01.209908 27455 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0620 17:11:01.209910 27455 net.cpp:165] Memory required for data: 904800108
I0620 17:11:01.209925 27455 layer_factory.hpp:77] Creating layer relu2_2
I0620 17:11:01.209931 27455 net.cpp:106] Creating Layer relu2_2
I0620 17:11:01.209935 27455 net.cpp:454] relu2_2 <- conv2_2
I0620 17:11:01.209941 27455 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0620 17:11:01.210101 27455 net.cpp:150] Setting up relu2_2
I0620 17:11:01.210108 27455 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0620 17:11:01.210110 27455 net.cpp:165] Memory required for data: 981600108
I0620 17:11:01.210113 27455 layer_factory.hpp:77] Creating layer pool2
I0620 17:11:01.210119 27455 net.cpp:106] Creating Layer pool2
I0620 17:11:01.210121 27455 net.cpp:454] pool2 <- conv2_2
I0620 17:11:01.210127 27455 net.cpp:411] pool2 -> pool2
I0620 17:11:01.210167 27455 net.cpp:150] Setting up pool2
I0620 17:11:01.210173 27455 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0620 17:11:01.210177 27455 net.cpp:165] Memory required for data: 1000800108
I0620 17:11:01.210180 27455 layer_factory.hpp:77] Creating layer conv3_1
I0620 17:11:01.210189 27455 net.cpp:106] Creating Layer conv3_1
I0620 17:11:01.210194 27455 net.cpp:454] conv3_1 <- pool2
I0620 17:11:01.210201 27455 net.cpp:411] conv3_1 -> conv3_1
I0620 17:11:01.212738 27455 net.cpp:150] Setting up conv3_1
I0620 17:11:01.212749 27455 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0620 17:11:01.212750 27455 net.cpp:165] Memory required for data: 1039200108
I0620 17:11:01.212766 27455 layer_factory.hpp:77] Creating layer relu3_1
I0620 17:11:01.212785 27455 net.cpp:106] Creating Layer relu3_1
I0620 17:11:01.212786 27455 net.cpp:454] relu3_1 <- conv3_1
I0620 17:11:01.212790 27455 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0620 17:11:01.212918 27455 net.cpp:150] Setting up relu3_1
I0620 17:11:01.212924 27455 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0620 17:11:01.212925 27455 net.cpp:165] Memory required for data: 1077600108
I0620 17:11:01.212941 27455 layer_factory.hpp:77] Creating layer conv3_2
I0620 17:11:01.212949 27455 net.cpp:106] Creating Layer conv3_2
I0620 17:11:01.212951 27455 net.cpp:454] conv3_2 <- conv3_1
I0620 17:11:01.212955 27455 net.cpp:411] conv3_2 -> conv3_2
I0620 17:11:01.214933 27455 net.cpp:150] Setting up conv3_2
I0620 17:11:01.214942 27455 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0620 17:11:01.214944 27455 net.cpp:165] Memory required for data: 1116000108
I0620 17:11:01.214949 27455 layer_factory.hpp:77] Creating layer relu3_2
I0620 17:11:01.214952 27455 net.cpp:106] Creating Layer relu3_2
I0620 17:11:01.214956 27455 net.cpp:454] relu3_2 <- conv3_2
I0620 17:11:01.214957 27455 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0620 17:11:01.215090 27455 net.cpp:150] Setting up relu3_2
I0620 17:11:01.215095 27455 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0620 17:11:01.215097 27455 net.cpp:165] Memory required for data: 1154400108
I0620 17:11:01.215099 27455 layer_factory.hpp:77] Creating layer conv3_3
I0620 17:11:01.215104 27455 net.cpp:106] Creating Layer conv3_3
I0620 17:11:01.215106 27455 net.cpp:454] conv3_3 <- conv3_2
I0620 17:11:01.215109 27455 net.cpp:411] conv3_3 -> conv3_3
I0620 17:11:01.217108 27455 net.cpp:150] Setting up conv3_3
I0620 17:11:01.217118 27455 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0620 17:11:01.217119 27455 net.cpp:165] Memory required for data: 1192800108
I0620 17:11:01.217124 27455 layer_factory.hpp:77] Creating layer relu3_3
I0620 17:11:01.217128 27455 net.cpp:106] Creating Layer relu3_3
I0620 17:11:01.217130 27455 net.cpp:454] relu3_3 <- conv3_3
I0620 17:11:01.217144 27455 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0620 17:11:01.217286 27455 net.cpp:150] Setting up relu3_3
I0620 17:11:01.217291 27455 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0620 17:11:01.217303 27455 net.cpp:165] Memory required for data: 1231200108
I0620 17:11:01.217305 27455 layer_factory.hpp:77] Creating layer pool3
I0620 17:11:01.217309 27455 net.cpp:106] Creating Layer pool3
I0620 17:11:01.217312 27455 net.cpp:454] pool3 <- conv3_3
I0620 17:11:01.217315 27455 net.cpp:411] pool3 -> pool3
I0620 17:11:01.217352 27455 net.cpp:150] Setting up pool3
I0620 17:11:01.217355 27455 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0620 17:11:01.217357 27455 net.cpp:165] Memory required for data: 1240800108
I0620 17:11:01.217368 27455 layer_factory.hpp:77] Creating layer conv4_1
I0620 17:11:01.217373 27455 net.cpp:106] Creating Layer conv4_1
I0620 17:11:01.217375 27455 net.cpp:454] conv4_1 <- pool3
I0620 17:11:01.217380 27455 net.cpp:411] conv4_1 -> conv4_1
I0620 17:11:01.221248 27455 net.cpp:150] Setting up conv4_1
I0620 17:11:01.221267 27455 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0620 17:11:01.221269 27455 net.cpp:165] Memory required for data: 1260000108
I0620 17:11:01.221276 27455 layer_factory.hpp:77] Creating layer relu4_1
I0620 17:11:01.221285 27455 net.cpp:106] Creating Layer relu4_1
I0620 17:11:01.221289 27455 net.cpp:454] relu4_1 <- conv4_1
I0620 17:11:01.221302 27455 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0620 17:11:01.221441 27455 net.cpp:150] Setting up relu4_1
I0620 17:11:01.221446 27455 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0620 17:11:01.221447 27455 net.cpp:165] Memory required for data: 1279200108
I0620 17:11:01.221449 27455 layer_factory.hpp:77] Creating layer conv4_2
I0620 17:11:01.221465 27455 net.cpp:106] Creating Layer conv4_2
I0620 17:11:01.221468 27455 net.cpp:454] conv4_2 <- conv4_1
I0620 17:11:01.221472 27455 net.cpp:411] conv4_2 -> conv4_2
I0620 17:11:01.226140 27455 net.cpp:150] Setting up conv4_2
I0620 17:11:01.226168 27455 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0620 17:11:01.226171 27455 net.cpp:165] Memory required for data: 1298400108
I0620 17:11:01.226192 27455 layer_factory.hpp:77] Creating layer relu4_2
I0620 17:11:01.226199 27455 net.cpp:106] Creating Layer relu4_2
I0620 17:11:01.226203 27455 net.cpp:454] relu4_2 <- conv4_2
I0620 17:11:01.226207 27455 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0620 17:11:01.226847 27455 net.cpp:150] Setting up relu4_2
I0620 17:11:01.226858 27455 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0620 17:11:01.226861 27455 net.cpp:165] Memory required for data: 1317600108
I0620 17:11:01.226864 27455 layer_factory.hpp:77] Creating layer conv4_3
I0620 17:11:01.226882 27455 net.cpp:106] Creating Layer conv4_3
I0620 17:11:01.226886 27455 net.cpp:454] conv4_3 <- conv4_2
I0620 17:11:01.226903 27455 net.cpp:411] conv4_3 -> conv4_3
I0620 17:11:01.231293 27455 net.cpp:150] Setting up conv4_3
I0620 17:11:01.231312 27455 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0620 17:11:01.231313 27455 net.cpp:165] Memory required for data: 1336800108
I0620 17:11:01.231320 27455 layer_factory.hpp:77] Creating layer relu4_3
I0620 17:11:01.231330 27455 net.cpp:106] Creating Layer relu4_3
I0620 17:11:01.231344 27455 net.cpp:454] relu4_3 <- conv4_3
I0620 17:11:01.231348 27455 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0620 17:11:01.231487 27455 net.cpp:150] Setting up relu4_3
I0620 17:11:01.231492 27455 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0620 17:11:01.231493 27455 net.cpp:165] Memory required for data: 1356000108
I0620 17:11:01.231495 27455 layer_factory.hpp:77] Creating layer pool4
I0620 17:11:01.231500 27455 net.cpp:106] Creating Layer pool4
I0620 17:11:01.231503 27455 net.cpp:454] pool4 <- conv4_3
I0620 17:11:01.231505 27455 net.cpp:411] pool4 -> pool4
I0620 17:11:01.231550 27455 net.cpp:150] Setting up pool4
I0620 17:11:01.231554 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.231555 27455 net.cpp:165] Memory required for data: 1360903020
I0620 17:11:01.231567 27455 layer_factory.hpp:77] Creating layer conv5_1
I0620 17:11:01.231573 27455 net.cpp:106] Creating Layer conv5_1
I0620 17:11:01.231575 27455 net.cpp:454] conv5_1 <- pool4
I0620 17:11:01.231578 27455 net.cpp:411] conv5_1 -> conv5_1
I0620 17:11:01.235942 27455 net.cpp:150] Setting up conv5_1
I0620 17:11:01.235962 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.235965 27455 net.cpp:165] Memory required for data: 1365805932
I0620 17:11:01.235970 27455 layer_factory.hpp:77] Creating layer relu5_1
I0620 17:11:01.235977 27455 net.cpp:106] Creating Layer relu5_1
I0620 17:11:01.235981 27455 net.cpp:454] relu5_1 <- conv5_1
I0620 17:11:01.235996 27455 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0620 17:11:01.236151 27455 net.cpp:150] Setting up relu5_1
I0620 17:11:01.236160 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.236162 27455 net.cpp:165] Memory required for data: 1370708844
I0620 17:11:01.236166 27455 layer_factory.hpp:77] Creating layer conv5_2
I0620 17:11:01.236176 27455 net.cpp:106] Creating Layer conv5_2
I0620 17:11:01.236191 27455 net.cpp:454] conv5_2 <- conv5_1
I0620 17:11:01.236207 27455 net.cpp:411] conv5_2 -> conv5_2
I0620 17:11:01.243028 27455 net.cpp:150] Setting up conv5_2
I0620 17:11:01.243062 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.243067 27455 net.cpp:165] Memory required for data: 1375611756
I0620 17:11:01.243077 27455 layer_factory.hpp:77] Creating layer relu5_2
I0620 17:11:01.243088 27455 net.cpp:106] Creating Layer relu5_2
I0620 17:11:01.243094 27455 net.cpp:454] relu5_2 <- conv5_2
I0620 17:11:01.243101 27455 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0620 17:11:01.243299 27455 net.cpp:150] Setting up relu5_2
I0620 17:11:01.243306 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.243319 27455 net.cpp:165] Memory required for data: 1380514668
I0620 17:11:01.243321 27455 layer_factory.hpp:77] Creating layer conv5_3
I0620 17:11:01.243336 27455 net.cpp:106] Creating Layer conv5_3
I0620 17:11:01.243340 27455 net.cpp:454] conv5_3 <- conv5_2
I0620 17:11:01.243346 27455 net.cpp:411] conv5_3 -> conv5_3
I0620 17:11:01.251037 27455 net.cpp:150] Setting up conv5_3
I0620 17:11:01.251061 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.251065 27455 net.cpp:165] Memory required for data: 1385417580
I0620 17:11:01.251077 27455 layer_factory.hpp:77] Creating layer relu5_3
I0620 17:11:01.251088 27455 net.cpp:106] Creating Layer relu5_3
I0620 17:11:01.251093 27455 net.cpp:454] relu5_3 <- conv5_3
I0620 17:11:01.251102 27455 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0620 17:11:01.251268 27455 net.cpp:150] Setting up relu5_3
I0620 17:11:01.251278 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.251281 27455 net.cpp:165] Memory required for data: 1390320492
I0620 17:11:01.251286 27455 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0620 17:11:01.251739 27455 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0620 17:11:01.251745 27455 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0620 17:11:01.251750 27455 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0620 17:11:01.251757 27455 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0620 17:11:01.251777 27455 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0620 17:11:01.251865 27455 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0620 17:11:01.251873 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.251878 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.251881 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.251884 27455 net.cpp:165] Memory required for data: 1405029228
I0620 17:11:01.251901 27455 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0620 17:11:01.251914 27455 net.cpp:106] Creating Layer rpn_conv/3x3
I0620 17:11:01.251919 27455 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0620 17:11:01.251926 27455 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0620 17:11:01.307293 27455 net.cpp:150] Setting up rpn_conv/3x3
I0620 17:11:01.307312 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.307314 27455 net.cpp:165] Memory required for data: 1409932140
I0620 17:11:01.307322 27455 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0620 17:11:01.307328 27455 net.cpp:106] Creating Layer rpn_relu/3x3
I0620 17:11:01.307343 27455 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0620 17:11:01.307348 27455 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0620 17:11:01.307494 27455 net.cpp:150] Setting up rpn_relu/3x3
I0620 17:11:01.307500 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.307502 27455 net.cpp:165] Memory required for data: 1414835052
I0620 17:11:01.307504 27455 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0620 17:11:01.307508 27455 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0620 17:11:01.307510 27455 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0620 17:11:01.307528 27455 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0620 17:11:01.307531 27455 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0620 17:11:01.307596 27455 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0620 17:11:01.307600 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.307602 27455 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0620 17:11:01.307603 27455 net.cpp:165] Memory required for data: 1424640876
I0620 17:11:01.307615 27455 layer_factory.hpp:77] Creating layer rpn_cls_score
I0620 17:11:01.307623 27455 net.cpp:106] Creating Layer rpn_cls_score
I0620 17:11:01.307626 27455 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0620 17:11:01.307628 27455 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0620 17:11:01.309298 27455 net.cpp:150] Setting up rpn_cls_score
I0620 17:11:01.309305 27455 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0620 17:11:01.309307 27455 net.cpp:165] Memory required for data: 1424928156
I0620 17:11:01.309312 27455 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0620 17:11:01.309316 27455 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0620 17:11:01.309319 27455 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0620 17:11:01.309321 27455 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0620 17:11:01.309336 27455 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0620 17:11:01.309382 27455 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0620 17:11:01.309396 27455 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0620 17:11:01.309397 27455 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0620 17:11:01.309399 27455 net.cpp:165] Memory required for data: 1425502716
I0620 17:11:01.309401 27455 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0620 17:11:01.309418 27455 net.cpp:106] Creating Layer rpn_bbox_pred
I0620 17:11:01.309420 27455 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0620 17:11:01.309432 27455 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0620 17:11:01.310950 27455 net.cpp:150] Setting up rpn_bbox_pred
I0620 17:11:01.310958 27455 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0620 17:11:01.310961 27455 net.cpp:165] Memory required for data: 1426077276
I0620 17:11:01.310964 27455 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0620 17:11:01.310967 27455 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0620 17:11:01.310969 27455 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0620 17:11:01.310973 27455 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0620 17:11:01.310987 27455 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0620 17:11:01.311038 27455 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0620 17:11:01.311040 27455 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0620 17:11:01.311043 27455 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0620 17:11:01.311054 27455 net.cpp:165] Memory required for data: 1427226396
I0620 17:11:01.311055 27455 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0620 17:11:01.311060 27455 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0620 17:11:01.311062 27455 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0620 17:11:01.311076 27455 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0620 17:11:01.311112 27455 net.cpp:150] Setting up rpn_cls_score_reshape
I0620 17:11:01.311116 27455 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0620 17:11:01.311117 27455 net.cpp:165] Memory required for data: 1427513676
I0620 17:11:01.311120 27455 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0620 17:11:01.311131 27455 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0620 17:11:01.311132 27455 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0620 17:11:01.311136 27455 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0620 17:11:01.311138 27455 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0620 17:11:01.311183 27455 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0620 17:11:01.311197 27455 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0620 17:11:01.311199 27455 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0620 17:11:01.311200 27455 net.cpp:165] Memory required for data: 1428088236
I0620 17:11:01.311203 27455 layer_factory.hpp:77] Creating layer rpn-data
I0620 17:11:01.350921 27455 net.cpp:106] Creating Layer rpn-data
I0620 17:11:01.350934 27455 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0620 17:11:01.350939 27455 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0620 17:11:01.350942 27455 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0620 17:11:01.350945 27455 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0620 17:11:01.350950 27455 net.cpp:411] rpn-data -> rpn_labels
I0620 17:11:01.350955 27455 net.cpp:411] rpn-data -> rpn_bbox_targets
I0620 17:11:01.350958 27455 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0620 17:11:01.350962 27455 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0620 17:11:01.355244 27455 net.cpp:150] Setting up rpn-data
I0620 17:11:01.355269 27455 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0620 17:11:01.355271 27455 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0620 17:11:01.355273 27455 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0620 17:11:01.355275 27455 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0620 17:11:01.355278 27455 net.cpp:165] Memory required for data: 1429955556
I0620 17:11:01.355290 27455 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0620 17:11:01.355298 27455 net.cpp:106] Creating Layer rpn_loss_cls
I0620 17:11:01.355304 27455 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0620 17:11:01.355307 27455 net.cpp:454] rpn_loss_cls <- rpn_labels
I0620 17:11:01.355310 27455 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0620 17:11:01.355891 27455 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0620 17:11:01.359191 27455 net.cpp:150] Setting up rpn_loss_cls
I0620 17:11:01.359201 27455 net.cpp:157] Top shape: (1)
I0620 17:11:01.359215 27455 net.cpp:160]     with loss weight 1
I0620 17:11:01.359889 27455 net.cpp:165] Memory required for data: 1429955560
I0620 17:11:01.359892 27455 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0620 17:11:01.359902 27455 net.cpp:106] Creating Layer rpn_loss_bbox
I0620 17:11:01.359905 27455 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0620 17:11:01.359910 27455 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0620 17:11:01.359911 27455 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0620 17:11:01.359915 27455 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0620 17:11:01.359917 27455 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0620 17:11:01.361061 27455 net.cpp:150] Setting up rpn_loss_bbox
I0620 17:11:01.361070 27455 net.cpp:157] Top shape: (1)
I0620 17:11:01.361073 27455 net.cpp:160]     with loss weight 1
I0620 17:11:01.361076 27455 net.cpp:165] Memory required for data: 1429955564
I0620 17:11:01.361078 27455 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0620 17:11:01.361084 27455 net.cpp:106] Creating Layer rpn_cls_prob
I0620 17:11:01.361088 27455 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0620 17:11:01.361091 27455 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0620 17:11:01.361282 27455 net.cpp:150] Setting up rpn_cls_prob
I0620 17:11:01.361289 27455 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0620 17:11:01.361291 27455 net.cpp:165] Memory required for data: 1430242844
I0620 17:11:01.361294 27455 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0620 17:11:01.361299 27455 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0620 17:11:01.361300 27455 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0620 17:11:01.361304 27455 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0620 17:11:01.361323 27455 net.cpp:150] Setting up rpn_cls_prob_reshape
I0620 17:11:01.361327 27455 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0620 17:11:01.361328 27455 net.cpp:165] Memory required for data: 1430530124
I0620 17:11:01.361330 27455 layer_factory.hpp:77] Creating layer proposal
I0620 17:11:01.443369 27455 net.cpp:106] Creating Layer proposal
I0620 17:11:01.443384 27455 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0620 17:11:01.443389 27455 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0620 17:11:01.443393 27455 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0620 17:11:01.443398 27455 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0620 17:11:01.444847 27455 net.cpp:150] Setting up proposal
I0620 17:11:01.444859 27455 net.cpp:157] Top shape: 1 5 (5)
I0620 17:11:01.444862 27455 net.cpp:165] Memory required for data: 1430530144
I0620 17:11:01.444865 27455 layer_factory.hpp:77] Creating layer roi-data
I0620 17:11:01.455073 27455 net.cpp:106] Creating Layer roi-data
I0620 17:11:01.455085 27455 net.cpp:454] roi-data <- rpn_rois
I0620 17:11:01.455088 27455 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0620 17:11:01.455091 27455 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0620 17:11:01.455094 27455 net.cpp:454] roi-data <- seg_mask_inds
I0620 17:11:01.455096 27455 net.cpp:454] roi-data <- flipped
I0620 17:11:01.455101 27455 net.cpp:411] roi-data -> rois
I0620 17:11:01.455117 27455 net.cpp:411] roi-data -> labels
I0620 17:11:01.455137 27455 net.cpp:411] roi-data -> bbox_targets
I0620 17:11:01.455142 27455 net.cpp:411] roi-data -> bbox_inside_weights
I0620 17:11:01.455145 27455 net.cpp:411] roi-data -> bbox_outside_weights
I0620 17:11:01.455163 27455 net.cpp:411] roi-data -> mask_targets
I0620 17:11:01.455166 27455 net.cpp:411] roi-data -> rois_pos
I0620 17:11:01.455170 27455 net.cpp:411] roi-data -> attrArray
I0620 17:11:01.455191 27455 net.cpp:411] roi-data -> attrArrayInd
I0620 17:11:01.455195 27455 net.cpp:411] roi-data -> attrArrayShift
I0620 17:11:01.455622 27455 net.cpp:150] Setting up roi-data
I0620 17:11:01.455632 27455 net.cpp:157] Top shape: 1 5 (5)
I0620 17:11:01.455634 27455 net.cpp:157] Top shape: 1 1 (1)
I0620 17:11:01.455636 27455 net.cpp:157] Top shape: 1 8 (8)
I0620 17:11:01.455638 27455 net.cpp:157] Top shape: 1 8 (8)
I0620 17:11:01.455641 27455 net.cpp:157] Top shape: 1 8 (8)
I0620 17:11:01.455642 27455 net.cpp:157] Top shape: 1 244 244 (59536)
I0620 17:11:01.455646 27455 net.cpp:157] Top shape: 1 5 (5)
I0620 17:11:01.455647 27455 net.cpp:157] Top shape: 1 14 (14)
I0620 17:11:01.455649 27455 net.cpp:157] Top shape: 1 14 (14)
I0620 17:11:01.455651 27455 net.cpp:157] Top shape: 1 14 (14)
I0620 17:11:01.455652 27455 net.cpp:165] Memory required for data: 1430768596
I0620 17:11:01.455657 27455 layer_factory.hpp:77] Creating layer roi_pool5
I0620 17:11:01.455668 27455 net.cpp:106] Creating Layer roi_pool5
I0620 17:11:01.455672 27455 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0620 17:11:01.455675 27455 net.cpp:454] roi_pool5 <- rois
I0620 17:11:01.455677 27455 net.cpp:411] roi_pool5 -> pool5
I0620 17:11:01.455682 27455 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0620 17:11:01.455755 27455 net.cpp:150] Setting up roi_pool5
I0620 17:11:01.455760 27455 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0620 17:11:01.455762 27455 net.cpp:165] Memory required for data: 1430868948
I0620 17:11:01.455765 27455 layer_factory.hpp:77] Creating layer fc6
I0620 17:11:01.455781 27455 net.cpp:106] Creating Layer fc6
I0620 17:11:01.455783 27455 net.cpp:454] fc6 <- pool5
I0620 17:11:01.455787 27455 net.cpp:411] fc6 -> fc6
I0620 17:11:05.052196 27455 net.cpp:150] Setting up fc6
I0620 17:11:05.056684 27455 net.cpp:157] Top shape: 1 4096 (4096)
I0620 17:11:05.056695 27455 net.cpp:165] Memory required for data: 1430885332
I0620 17:11:05.056718 27455 layer_factory.hpp:77] Creating layer relu6
I0620 17:11:05.059007 27455 net.cpp:106] Creating Layer relu6
I0620 17:11:05.059026 27455 net.cpp:454] relu6 <- fc6
I0620 17:11:05.059036 27455 net.cpp:397] relu6 -> fc6 (in-place)
I0620 17:11:05.152220 27455 net.cpp:150] Setting up relu6
I0620 17:11:05.152243 27455 net.cpp:157] Top shape: 1 4096 (4096)
I0620 17:11:05.152247 27455 net.cpp:165] Memory required for data: 1430901716
I0620 17:11:05.152253 27455 layer_factory.hpp:77] Creating layer fc7
I0620 17:11:05.152266 27455 net.cpp:106] Creating Layer fc7
I0620 17:11:05.152271 27455 net.cpp:454] fc7 <- fc6
I0620 17:11:05.152277 27455 net.cpp:411] fc7 -> fc7
I0620 17:11:05.181289 27455 net.cpp:150] Setting up fc7
I0620 17:11:05.181315 27455 net.cpp:157] Top shape: 1 4096 (4096)
I0620 17:11:05.181319 27455 net.cpp:165] Memory required for data: 1430918100
I0620 17:11:05.181329 27455 layer_factory.hpp:77] Creating layer relu7
I0620 17:11:05.181337 27455 net.cpp:106] Creating Layer relu7
I0620 17:11:05.181342 27455 net.cpp:454] relu7 <- fc7
I0620 17:11:05.181349 27455 net.cpp:397] relu7 -> fc7 (in-place)
I0620 17:11:05.181545 27455 net.cpp:150] Setting up relu7
I0620 17:11:05.181553 27455 net.cpp:157] Top shape: 1 4096 (4096)
I0620 17:11:05.181555 27455 net.cpp:165] Memory required for data: 1430934484
I0620 17:11:05.181557 27455 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0620 17:11:05.181562 27455 net.cpp:106] Creating Layer fc7_relu7_0_split
I0620 17:11:05.181565 27455 net.cpp:454] fc7_relu7_0_split <- fc7
I0620 17:11:05.181569 27455 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0620 17:11:05.181574 27455 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0620 17:11:05.181578 27455 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0620 17:11:05.181624 27455 net.cpp:150] Setting up fc7_relu7_0_split
I0620 17:11:05.181629 27455 net.cpp:157] Top shape: 1 4096 (4096)
I0620 17:11:05.181632 27455 net.cpp:157] Top shape: 1 4096 (4096)
I0620 17:11:05.181633 27455 net.cpp:157] Top shape: 1 4096 (4096)
I0620 17:11:05.181635 27455 net.cpp:165] Memory required for data: 1430983636
I0620 17:11:05.181636 27455 layer_factory.hpp:77] Creating layer attr_score
I0620 17:11:05.181643 27455 net.cpp:106] Creating Layer attr_score
I0620 17:11:05.181645 27455 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0620 17:11:05.181649 27455 net.cpp:411] attr_score -> attr_score
I0620 17:11:05.183014 27455 net.cpp:150] Setting up attr_score
I0620 17:11:05.183022 27455 net.cpp:157] Top shape: 1 14 (14)
I0620 17:11:05.183024 27455 net.cpp:165] Memory required for data: 1430983692
I0620 17:11:05.183028 27455 layer_factory.hpp:77] Creating layer attr_score_pos
I0620 17:11:05.200212 27455 net.cpp:106] Creating Layer attr_score_pos
I0620 17:11:05.200227 27455 net.cpp:454] attr_score_pos <- attr_score
I0620 17:11:05.200230 27455 net.cpp:454] attr_score_pos <- attrArrayInd
I0620 17:11:05.200235 27455 net.cpp:411] attr_score_pos -> attr_score_pos
I0620 17:11:05.200284 27455 net.cpp:150] Setting up attr_score_pos
I0620 17:11:05.200291 27455 net.cpp:157] Top shape: 1 14 (14)
I0620 17:11:05.200292 27455 net.cpp:165] Memory required for data: 1430983748
I0620 17:11:05.200295 27455 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0620 17:11:05.200299 27455 net.cpp:106] Creating Layer attr_score_pos_shift
I0620 17:11:05.200301 27455 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0620 17:11:05.200304 27455 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0620 17:11:05.200307 27455 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0620 17:11:05.200330 27455 net.cpp:150] Setting up attr_score_pos_shift
I0620 17:11:05.200333 27455 net.cpp:157] Top shape: 1 14 (14)
I0620 17:11:05.200335 27455 net.cpp:165] Memory required for data: 1430983804
I0620 17:11:05.200336 27455 layer_factory.hpp:77] Creating layer cls_score
I0620 17:11:05.200341 27455 net.cpp:106] Creating Layer cls_score
I0620 17:11:05.200343 27455 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0620 17:11:05.200347 27455 net.cpp:411] cls_score -> cls_score
I0620 17:11:05.200606 27455 net.cpp:150] Setting up cls_score
I0620 17:11:05.200613 27455 net.cpp:157] Top shape: 1 2 (2)
I0620 17:11:05.200613 27455 net.cpp:165] Memory required for data: 1430983812
I0620 17:11:05.200618 27455 layer_factory.hpp:77] Creating layer bbox_pred
I0620 17:11:05.200623 27455 net.cpp:106] Creating Layer bbox_pred
I0620 17:11:05.200624 27455 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0620 17:11:05.200628 27455 net.cpp:411] bbox_pred -> bbox_pred
I0620 17:11:05.201418 27455 net.cpp:150] Setting up bbox_pred
I0620 17:11:05.201424 27455 net.cpp:157] Top shape: 1 8 (8)
I0620 17:11:05.201426 27455 net.cpp:165] Memory required for data: 1430983844
I0620 17:11:05.201429 27455 layer_factory.hpp:77] Creating layer loss_attribute
I0620 17:11:05.201436 27455 net.cpp:106] Creating Layer loss_attribute
I0620 17:11:05.201437 27455 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0620 17:11:05.201439 27455 net.cpp:454] loss_attribute <- attrArray
I0620 17:11:05.201443 27455 net.cpp:411] loss_attribute -> loss_attribute
I0620 17:11:05.202352 27455 net.cpp:150] Setting up loss_attribute
I0620 17:11:05.202358 27455 net.cpp:157] Top shape: (1)
I0620 17:11:05.202360 27455 net.cpp:160]     with loss weight 1
I0620 17:11:05.203845 27455 net.cpp:165] Memory required for data: 1430983848
I0620 17:11:05.203848 27455 layer_factory.hpp:77] Creating layer loss_cls
I0620 17:11:05.203853 27455 net.cpp:106] Creating Layer loss_cls
I0620 17:11:05.203855 27455 net.cpp:454] loss_cls <- cls_score
I0620 17:11:05.203858 27455 net.cpp:454] loss_cls <- labels
I0620 17:11:05.203861 27455 net.cpp:411] loss_cls -> loss_cls
I0620 17:11:05.203866 27455 layer_factory.hpp:77] Creating layer loss_cls
I0620 17:11:05.204596 27455 net.cpp:150] Setting up loss_cls
I0620 17:11:05.204603 27455 net.cpp:157] Top shape: (1)
I0620 17:11:05.204607 27455 net.cpp:160]     with loss weight 3
I0620 17:11:05.204610 27455 net.cpp:165] Memory required for data: 1430983852
I0620 17:11:05.204612 27455 layer_factory.hpp:77] Creating layer loss_bbox
I0620 17:11:05.205361 27455 net.cpp:106] Creating Layer loss_bbox
I0620 17:11:05.205368 27455 net.cpp:454] loss_bbox <- bbox_pred
I0620 17:11:05.205371 27455 net.cpp:454] loss_bbox <- bbox_targets
I0620 17:11:05.205374 27455 net.cpp:454] loss_bbox <- bbox_inside_weights
I0620 17:11:05.205376 27455 net.cpp:454] loss_bbox <- bbox_outside_weights
I0620 17:11:05.205380 27455 net.cpp:411] loss_bbox -> loss_bbox
I0620 17:11:05.205456 27455 net.cpp:150] Setting up loss_bbox
I0620 17:11:05.205461 27455 net.cpp:157] Top shape: (1)
I0620 17:11:05.205462 27455 net.cpp:160]     with loss weight 2
I0620 17:11:05.205466 27455 net.cpp:165] Memory required for data: 1430983856
I0620 17:11:05.205468 27455 layer_factory.hpp:77] Creating layer roi_pool5_2
I0620 17:11:05.206176 27455 net.cpp:106] Creating Layer roi_pool5_2
I0620 17:11:05.206182 27455 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0620 17:11:05.206184 27455 net.cpp:454] roi_pool5_2 <- rois_pos
I0620 17:11:05.206187 27455 net.cpp:411] roi_pool5_2 -> pool5_2
I0620 17:11:05.206192 27455 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0620 17:11:05.206280 27455 net.cpp:150] Setting up roi_pool5_2
I0620 17:11:05.206285 27455 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0620 17:11:05.206287 27455 net.cpp:165] Memory required for data: 1431084208
I0620 17:11:05.206290 27455 layer_factory.hpp:77] Creating layer pool5_2_conv
I0620 17:11:05.206296 27455 net.cpp:106] Creating Layer pool5_2_conv
I0620 17:11:05.206298 27455 net.cpp:454] pool5_2_conv <- pool5_2
I0620 17:11:05.206302 27455 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0620 17:11:05.219642 27455 net.cpp:150] Setting up pool5_2_conv
I0620 17:11:05.219660 27455 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0620 17:11:05.219662 27455 net.cpp:165] Memory required for data: 1431184560
I0620 17:11:05.219671 27455 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0620 17:11:05.219687 27455 net.cpp:106] Creating Layer pool5_2_conv_relu
I0620 17:11:05.219694 27455 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0620 17:11:05.219700 27455 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0620 17:11:05.219938 27455 net.cpp:150] Setting up pool5_2_conv_relu
I0620 17:11:05.219947 27455 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0620 17:11:05.219949 27455 net.cpp:165] Memory required for data: 1431284912
I0620 17:11:05.219952 27455 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0620 17:11:05.219962 27455 net.cpp:106] Creating Layer pool5_2_conv2
I0620 17:11:05.219966 27455 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0620 17:11:05.219971 27455 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0620 17:11:05.273809 27455 net.cpp:150] Setting up pool5_2_conv2
I0620 17:11:05.273828 27455 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0620 17:11:05.273829 27455 net.cpp:165] Memory required for data: 1431385264
I0620 17:11:05.273836 27455 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0620 17:11:05.273844 27455 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0620 17:11:05.273859 27455 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0620 17:11:05.273862 27455 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0620 17:11:05.274029 27455 net.cpp:150] Setting up pool5_2_conv2_relu
I0620 17:11:05.274036 27455 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0620 17:11:05.274039 27455 net.cpp:165] Memory required for data: 1431485616
I0620 17:11:05.274040 27455 layer_factory.hpp:77] Creating layer mask_deconv1
I0620 17:11:05.274276 27455 net.cpp:106] Creating Layer mask_deconv1
I0620 17:11:05.274302 27455 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0620 17:11:05.274307 27455 net.cpp:411] mask_deconv1 -> mask_deconv1
I0620 17:11:05.275085 27455 net.cpp:150] Setting up mask_deconv1
I0620 17:11:05.275090 27455 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0620 17:11:05.275091 27455 net.cpp:165] Memory required for data: 1432407216
I0620 17:11:05.275095 27455 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0620 17:11:05.275101 27455 net.cpp:106] Creating Layer pool5_2_conv3
I0620 17:11:05.275104 27455 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0620 17:11:05.275107 27455 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0620 17:11:05.302043 27455 net.cpp:150] Setting up pool5_2_conv3
I0620 17:11:05.302062 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.302065 27455 net.cpp:165] Memory required for data: 1434250416
I0620 17:11:05.302073 27455 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0620 17:11:05.302080 27455 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0620 17:11:05.302084 27455 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0620 17:11:05.302090 27455 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0620 17:11:05.302247 27455 net.cpp:150] Setting up pool5_2_conv3_relu
I0620 17:11:05.302253 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.302265 27455 net.cpp:165] Memory required for data: 1436093616
I0620 17:11:05.302268 27455 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0620 17:11:05.302278 27455 net.cpp:106] Creating Layer pool5_2_conv4
I0620 17:11:05.302280 27455 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0620 17:11:05.302284 27455 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0620 17:11:05.352625 27455 net.cpp:150] Setting up pool5_2_conv4
I0620 17:11:05.352653 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.352655 27455 net.cpp:165] Memory required for data: 1437936816
I0620 17:11:05.352663 27455 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0620 17:11:05.352679 27455 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0620 17:11:05.352684 27455 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0620 17:11:05.352689 27455 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0620 17:11:05.352841 27455 net.cpp:150] Setting up pool5_2_conv4_relu
I0620 17:11:05.352849 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.352859 27455 net.cpp:165] Memory required for data: 1439780016
I0620 17:11:05.352861 27455 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0620 17:11:05.352865 27455 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0620 17:11:05.352869 27455 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0620 17:11:05.352872 27455 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0620 17:11:05.352886 27455 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0620 17:11:05.352890 27455 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0620 17:11:05.352893 27455 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0620 17:11:05.352955 27455 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0620 17:11:05.352959 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.352960 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.352973 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.352974 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.352977 27455 net.cpp:165] Memory required for data: 1447152816
I0620 17:11:05.352978 27455 layer_factory.hpp:77] Creating layer query_conv
I0620 17:11:05.352995 27455 net.cpp:106] Creating Layer query_conv
I0620 17:11:05.352998 27455 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0620 17:11:05.353001 27455 net.cpp:411] query_conv -> query_conv
I0620 17:11:05.354652 27455 net.cpp:150] Setting up query_conv
I0620 17:11:05.354660 27455 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0620 17:11:05.354672 27455 net.cpp:165] Memory required for data: 1447383216
I0620 17:11:05.354676 27455 layer_factory.hpp:77] Creating layer key_conv
I0620 17:11:05.354696 27455 net.cpp:106] Creating Layer key_conv
I0620 17:11:05.354698 27455 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0620 17:11:05.354703 27455 net.cpp:411] key_conv -> key_conv
I0620 17:11:05.356278 27455 net.cpp:150] Setting up key_conv
I0620 17:11:05.356287 27455 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0620 17:11:05.356298 27455 net.cpp:165] Memory required for data: 1447613616
I0620 17:11:05.356302 27455 layer_factory.hpp:77] Creating layer value_conv
I0620 17:11:05.356320 27455 net.cpp:106] Creating Layer value_conv
I0620 17:11:05.356323 27455 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0620 17:11:05.356328 27455 net.cpp:411] value_conv -> value_conv
I0620 17:11:05.362922 27455 net.cpp:150] Setting up value_conv
I0620 17:11:05.362931 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.362933 27455 net.cpp:165] Memory required for data: 1449456816
I0620 17:11:05.362937 27455 layer_factory.hpp:77] Creating layer query_conv_reshape
I0620 17:11:05.363406 27455 net.cpp:106] Creating Layer query_conv_reshape
I0620 17:11:05.363412 27455 net.cpp:454] query_conv_reshape <- query_conv
I0620 17:11:05.363426 27455 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0620 17:11:05.363471 27455 net.cpp:150] Setting up query_conv_reshape
I0620 17:11:05.363476 27455 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0620 17:11:05.363477 27455 net.cpp:165] Memory required for data: 1449687216
I0620 17:11:05.363488 27455 layer_factory.hpp:77] Creating layer key_conv_reshape
I0620 17:11:05.363492 27455 net.cpp:106] Creating Layer key_conv_reshape
I0620 17:11:05.363494 27455 net.cpp:454] key_conv_reshape <- key_conv
I0620 17:11:05.363507 27455 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0620 17:11:05.363533 27455 net.cpp:150] Setting up key_conv_reshape
I0620 17:11:05.363536 27455 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0620 17:11:05.363538 27455 net.cpp:165] Memory required for data: 1449917616
I0620 17:11:05.363538 27455 layer_factory.hpp:77] Creating layer value_conv_reshape
I0620 17:11:05.363543 27455 net.cpp:106] Creating Layer value_conv_reshape
I0620 17:11:05.363544 27455 net.cpp:454] value_conv_reshape <- value_conv
I0620 17:11:05.363548 27455 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0620 17:11:05.363561 27455 net.cpp:150] Setting up value_conv_reshape
I0620 17:11:05.363564 27455 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0620 17:11:05.363565 27455 net.cpp:165] Memory required for data: 1451760816
I0620 17:11:05.363576 27455 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0620 17:11:05.363581 27455 net.cpp:106] Creating Layer query_conv_reshape_perm
I0620 17:11:05.363584 27455 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0620 17:11:05.363595 27455 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0620 17:11:05.363713 27455 net.cpp:150] Setting up query_conv_reshape_perm
I0620 17:11:05.363718 27455 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0620 17:11:05.363719 27455 net.cpp:165] Memory required for data: 1451991216
I0620 17:11:05.363729 27455 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0620 17:11:05.363734 27455 net.cpp:106] Creating Layer key_conv_reshape_perm
I0620 17:11:05.363736 27455 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0620 17:11:05.363749 27455 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0620 17:11:05.363843 27455 net.cpp:150] Setting up key_conv_reshape_perm
I0620 17:11:05.363847 27455 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0620 17:11:05.363849 27455 net.cpp:165] Memory required for data: 1452221616
I0620 17:11:05.363850 27455 layer_factory.hpp:77] Creating layer energy
I0620 17:11:05.363853 27455 net.cpp:106] Creating Layer energy
I0620 17:11:05.363855 27455 net.cpp:454] energy <- query_conv_reshape_perm
I0620 17:11:05.363858 27455 net.cpp:454] energy <- key_conv_reshape_perm
I0620 17:11:05.363860 27455 net.cpp:411] energy -> energy
I0620 17:11:05.363876 27455 net.cpp:150] Setting up energy
I0620 17:11:05.363879 27455 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0620 17:11:05.363881 27455 net.cpp:165] Memory required for data: 1455461616
I0620 17:11:05.363883 27455 layer_factory.hpp:77] Creating layer attention
I0620 17:11:05.363886 27455 net.cpp:106] Creating Layer attention
I0620 17:11:05.363888 27455 net.cpp:454] attention <- energy
I0620 17:11:05.363890 27455 net.cpp:411] attention -> attention
I0620 17:11:05.364059 27455 net.cpp:150] Setting up attention
I0620 17:11:05.364066 27455 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0620 17:11:05.364068 27455 net.cpp:165] Memory required for data: 1458701616
I0620 17:11:05.364070 27455 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0620 17:11:05.364073 27455 net.cpp:106] Creating Layer value_conv_reshape_perm
I0620 17:11:05.364076 27455 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0620 17:11:05.364079 27455 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0620 17:11:05.364147 27455 net.cpp:150] Setting up value_conv_reshape_perm
I0620 17:11:05.364151 27455 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0620 17:11:05.364152 27455 net.cpp:165] Memory required for data: 1460544816
I0620 17:11:05.364156 27455 layer_factory.hpp:77] Creating layer attention_perm
I0620 17:11:05.364158 27455 net.cpp:106] Creating Layer attention_perm
I0620 17:11:05.364161 27455 net.cpp:454] attention_perm <- attention
I0620 17:11:05.364164 27455 net.cpp:411] attention_perm -> attention_perm
I0620 17:11:05.364229 27455 net.cpp:150] Setting up attention_perm
I0620 17:11:05.364233 27455 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0620 17:11:05.364234 27455 net.cpp:165] Memory required for data: 1463784816
I0620 17:11:05.364238 27455 layer_factory.hpp:77] Creating layer out
I0620 17:11:05.364239 27455 net.cpp:106] Creating Layer out
I0620 17:11:05.364243 27455 net.cpp:454] out <- value_conv_reshape_perm
I0620 17:11:05.364244 27455 net.cpp:454] out <- attention_perm
I0620 17:11:05.364248 27455 net.cpp:411] out -> out
I0620 17:11:05.364262 27455 net.cpp:150] Setting up out
I0620 17:11:05.364265 27455 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0620 17:11:05.364267 27455 net.cpp:165] Memory required for data: 1465628016
I0620 17:11:05.364269 27455 layer_factory.hpp:77] Creating layer out_reshape
I0620 17:11:05.364274 27455 net.cpp:106] Creating Layer out_reshape
I0620 17:11:05.364275 27455 net.cpp:454] out_reshape <- out
I0620 17:11:05.364279 27455 net.cpp:411] out_reshape -> out_reshape
I0620 17:11:05.364293 27455 net.cpp:150] Setting up out_reshape
I0620 17:11:05.364297 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.364298 27455 net.cpp:165] Memory required for data: 1467471216
I0620 17:11:05.364301 27455 layer_factory.hpp:77] Creating layer out_reshape_scale
I0620 17:11:05.364308 27455 net.cpp:106] Creating Layer out_reshape_scale
I0620 17:11:05.364310 27455 net.cpp:454] out_reshape_scale <- out_reshape
I0620 17:11:05.364313 27455 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0620 17:11:05.364374 27455 net.cpp:150] Setting up out_reshape_scale
I0620 17:11:05.364378 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.364380 27455 net.cpp:165] Memory required for data: 1469314416
I0620 17:11:05.364382 27455 layer_factory.hpp:77] Creating layer out_x
I0620 17:11:05.364388 27455 net.cpp:106] Creating Layer out_x
I0620 17:11:05.364392 27455 net.cpp:454] out_x <- out_reshape_scale
I0620 17:11:05.364396 27455 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0620 17:11:05.364400 27455 net.cpp:411] out_x -> out_x
I0620 17:11:05.364419 27455 net.cpp:150] Setting up out_x
I0620 17:11:05.364423 27455 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0620 17:11:05.364425 27455 net.cpp:165] Memory required for data: 1471157616
I0620 17:11:05.364426 27455 layer_factory.hpp:77] Creating layer mask_deconv2
I0620 17:11:05.364434 27455 net.cpp:106] Creating Layer mask_deconv2
I0620 17:11:05.364437 27455 net.cpp:454] mask_deconv2 <- out_x
I0620 17:11:05.364440 27455 net.cpp:411] mask_deconv2 -> mask_deconv2
I0620 17:11:05.365286 27455 net.cpp:150] Setting up mask_deconv2
I0620 17:11:05.365293 27455 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0620 17:11:05.365295 27455 net.cpp:165] Memory required for data: 1486398832
I0620 17:11:05.365299 27455 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0620 17:11:05.365309 27455 net.cpp:106] Creating Layer pool5_2_conv5
I0620 17:11:05.365311 27455 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0620 17:11:05.365315 27455 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0620 17:11:05.394367 27455 net.cpp:150] Setting up pool5_2_conv5
I0620 17:11:05.394384 27455 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0620 17:11:05.394387 27455 net.cpp:165] Memory required for data: 1516881264
I0620 17:11:05.394394 27455 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0620 17:11:05.394412 27455 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0620 17:11:05.394417 27455 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0620 17:11:05.394433 27455 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0620 17:11:05.394606 27455 net.cpp:150] Setting up pool5_2_conv5_relu
I0620 17:11:05.394613 27455 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0620 17:11:05.394625 27455 net.cpp:165] Memory required for data: 1547363696
I0620 17:11:05.394628 27455 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0620 17:11:05.394646 27455 net.cpp:106] Creating Layer pool5_2_conv6
I0620 17:11:05.394649 27455 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0620 17:11:05.394665 27455 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0620 17:11:05.446137 27455 net.cpp:150] Setting up pool5_2_conv6
I0620 17:11:05.446156 27455 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0620 17:11:05.446159 27455 net.cpp:165] Memory required for data: 1577846128
I0620 17:11:05.446185 27455 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0620 17:11:05.446203 27455 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0620 17:11:05.446208 27455 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0620 17:11:05.446213 27455 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0620 17:11:05.446805 27455 net.cpp:150] Setting up pool5_2_conv6_relu
I0620 17:11:05.446815 27455 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0620 17:11:05.446816 27455 net.cpp:165] Memory required for data: 1608328560
I0620 17:11:05.446818 27455 layer_factory.hpp:77] Creating layer mask_deconv3
I0620 17:11:05.446825 27455 net.cpp:106] Creating Layer mask_deconv3
I0620 17:11:05.446828 27455 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0620 17:11:05.446843 27455 net.cpp:411] mask_deconv3 -> mask_deconv3
I0620 17:11:05.447244 27455 net.cpp:150] Setting up mask_deconv3
I0620 17:11:05.447250 27455 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0620 17:11:05.447252 27455 net.cpp:165] Memory required for data: 1669293424
I0620 17:11:05.447255 27455 layer_factory.hpp:77] Creating layer mask_score
I0620 17:11:05.447263 27455 net.cpp:106] Creating Layer mask_score
I0620 17:11:05.447264 27455 net.cpp:454] mask_score <- mask_deconv3
I0620 17:11:05.447279 27455 net.cpp:411] mask_score -> mask_score
I0620 17:11:05.522361 27455 net.cpp:150] Setting up mask_score
I0620 17:11:05.522382 27455 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0620 17:11:05.522384 27455 net.cpp:165] Memory required for data: 1671198576
I0620 17:11:05.522392 27455 layer_factory.hpp:77] Creating layer loss_mask
I0620 17:11:05.522403 27455 net.cpp:106] Creating Layer loss_mask
I0620 17:11:05.522406 27455 net.cpp:454] loss_mask <- mask_score
I0620 17:11:05.522410 27455 net.cpp:454] loss_mask <- mask_targets
I0620 17:11:05.522414 27455 net.cpp:411] loss_mask -> loss_mask
I0620 17:11:05.522423 27455 layer_factory.hpp:77] Creating layer loss_mask
I0620 17:11:05.523905 27455 net.cpp:150] Setting up loss_mask
I0620 17:11:05.523913 27455 net.cpp:157] Top shape: (1)
I0620 17:11:05.523914 27455 net.cpp:160]     with loss weight 3
I0620 17:11:05.523922 27455 net.cpp:165] Memory required for data: 1671198580
I0620 17:11:05.523923 27455 net.cpp:226] loss_mask needs backward computation.
I0620 17:11:05.523926 27455 net.cpp:226] mask_score needs backward computation.
I0620 17:11:05.523928 27455 net.cpp:226] mask_deconv3 needs backward computation.
I0620 17:11:05.523931 27455 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0620 17:11:05.523932 27455 net.cpp:226] pool5_2_conv6 needs backward computation.
I0620 17:11:05.523934 27455 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0620 17:11:05.523936 27455 net.cpp:226] pool5_2_conv5 needs backward computation.
I0620 17:11:05.523937 27455 net.cpp:226] mask_deconv2 needs backward computation.
I0620 17:11:05.523939 27455 net.cpp:226] out_x needs backward computation.
I0620 17:11:05.523942 27455 net.cpp:226] out_reshape_scale needs backward computation.
I0620 17:11:05.523946 27455 net.cpp:226] out_reshape needs backward computation.
I0620 17:11:05.523947 27455 net.cpp:226] out needs backward computation.
I0620 17:11:05.523949 27455 net.cpp:226] attention_perm needs backward computation.
I0620 17:11:05.523952 27455 net.cpp:226] value_conv_reshape_perm needs backward computation.
I0620 17:11:05.523953 27455 net.cpp:226] attention needs backward computation.
I0620 17:11:05.523955 27455 net.cpp:226] energy needs backward computation.
I0620 17:11:05.523957 27455 net.cpp:226] key_conv_reshape_perm needs backward computation.
I0620 17:11:05.523959 27455 net.cpp:226] query_conv_reshape_perm needs backward computation.
I0620 17:11:05.523962 27455 net.cpp:226] value_conv_reshape needs backward computation.
I0620 17:11:05.523963 27455 net.cpp:226] key_conv_reshape needs backward computation.
I0620 17:11:05.523965 27455 net.cpp:226] query_conv_reshape needs backward computation.
I0620 17:11:05.523968 27455 net.cpp:226] value_conv needs backward computation.
I0620 17:11:05.523972 27455 net.cpp:226] key_conv needs backward computation.
I0620 17:11:05.523973 27455 net.cpp:226] query_conv needs backward computation.
I0620 17:11:05.523975 27455 net.cpp:226] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split needs backward computation.
I0620 17:11:05.523977 27455 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0620 17:11:05.523979 27455 net.cpp:226] pool5_2_conv4 needs backward computation.
I0620 17:11:05.523982 27455 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0620 17:11:05.523983 27455 net.cpp:226] pool5_2_conv3 needs backward computation.
I0620 17:11:05.523985 27455 net.cpp:226] mask_deconv1 needs backward computation.
I0620 17:11:05.523988 27455 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0620 17:11:05.523989 27455 net.cpp:226] pool5_2_conv2 needs backward computation.
I0620 17:11:05.523991 27455 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0620 17:11:05.523994 27455 net.cpp:226] pool5_2_conv needs backward computation.
I0620 17:11:05.523996 27455 net.cpp:226] roi_pool5_2 needs backward computation.
I0620 17:11:05.523998 27455 net.cpp:226] loss_bbox needs backward computation.
I0620 17:11:05.524003 27455 net.cpp:226] loss_cls needs backward computation.
I0620 17:11:05.524005 27455 net.cpp:226] loss_attribute needs backward computation.
I0620 17:11:05.524008 27455 net.cpp:226] bbox_pred needs backward computation.
I0620 17:11:05.524010 27455 net.cpp:226] cls_score needs backward computation.
I0620 17:11:05.524013 27455 net.cpp:226] attr_score_pos_shift needs backward computation.
I0620 17:11:05.524014 27455 net.cpp:226] attr_score_pos needs backward computation.
I0620 17:11:05.524017 27455 net.cpp:226] attr_score needs backward computation.
I0620 17:11:05.524019 27455 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0620 17:11:05.524021 27455 net.cpp:226] relu7 needs backward computation.
I0620 17:11:05.524024 27455 net.cpp:226] fc7 needs backward computation.
I0620 17:11:05.524025 27455 net.cpp:226] relu6 needs backward computation.
I0620 17:11:05.524027 27455 net.cpp:226] fc6 needs backward computation.
I0620 17:11:05.524029 27455 net.cpp:226] roi_pool5 needs backward computation.
I0620 17:11:05.524031 27455 net.cpp:226] roi-data needs backward computation.
I0620 17:11:05.524035 27455 net.cpp:226] proposal needs backward computation.
I0620 17:11:05.524039 27455 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0620 17:11:05.524041 27455 net.cpp:226] rpn_cls_prob needs backward computation.
I0620 17:11:05.524044 27455 net.cpp:226] rpn_loss_bbox needs backward computation.
I0620 17:11:05.524047 27455 net.cpp:226] rpn_loss_cls needs backward computation.
I0620 17:11:05.524050 27455 net.cpp:226] rpn-data needs backward computation.
I0620 17:11:05.524055 27455 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0620 17:11:05.524057 27455 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0620 17:11:05.524060 27455 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0620 17:11:05.524062 27455 net.cpp:226] rpn_bbox_pred needs backward computation.
I0620 17:11:05.524065 27455 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0620 17:11:05.524066 27455 net.cpp:226] rpn_cls_score needs backward computation.
I0620 17:11:05.524070 27455 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0620 17:11:05.524071 27455 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0620 17:11:05.524073 27455 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0620 17:11:05.524075 27455 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0620 17:11:05.524077 27455 net.cpp:226] relu5_3 needs backward computation.
I0620 17:11:05.524080 27455 net.cpp:226] conv5_3 needs backward computation.
I0620 17:11:05.524081 27455 net.cpp:226] relu5_2 needs backward computation.
I0620 17:11:05.524085 27455 net.cpp:226] conv5_2 needs backward computation.
I0620 17:11:05.524086 27455 net.cpp:226] relu5_1 needs backward computation.
I0620 17:11:05.524088 27455 net.cpp:226] conv5_1 needs backward computation.
I0620 17:11:05.524091 27455 net.cpp:226] pool4 needs backward computation.
I0620 17:11:05.524092 27455 net.cpp:226] relu4_3 needs backward computation.
I0620 17:11:05.524094 27455 net.cpp:226] conv4_3 needs backward computation.
I0620 17:11:05.524096 27455 net.cpp:226] relu4_2 needs backward computation.
I0620 17:11:05.524097 27455 net.cpp:226] conv4_2 needs backward computation.
I0620 17:11:05.524099 27455 net.cpp:226] relu4_1 needs backward computation.
I0620 17:11:05.524101 27455 net.cpp:226] conv4_1 needs backward computation.
I0620 17:11:05.524103 27455 net.cpp:226] pool3 needs backward computation.
I0620 17:11:05.524104 27455 net.cpp:226] relu3_3 needs backward computation.
I0620 17:11:05.524106 27455 net.cpp:226] conv3_3 needs backward computation.
I0620 17:11:05.524108 27455 net.cpp:226] relu3_2 needs backward computation.
I0620 17:11:05.524111 27455 net.cpp:226] conv3_2 needs backward computation.
I0620 17:11:05.524112 27455 net.cpp:226] relu3_1 needs backward computation.
I0620 17:11:05.524114 27455 net.cpp:226] conv3_1 needs backward computation.
I0620 17:11:05.524116 27455 net.cpp:228] pool2 does not need backward computation.
I0620 17:11:05.524118 27455 net.cpp:228] relu2_2 does not need backward computation.
I0620 17:11:05.524121 27455 net.cpp:228] conv2_2 does not need backward computation.
I0620 17:11:05.524122 27455 net.cpp:228] relu2_1 does not need backward computation.
I0620 17:11:05.524124 27455 net.cpp:228] conv2_1 does not need backward computation.
I0620 17:11:05.524127 27455 net.cpp:228] pool1 does not need backward computation.
I0620 17:11:05.524129 27455 net.cpp:228] relu1_2 does not need backward computation.
I0620 17:11:05.524132 27455 net.cpp:228] conv1_2 does not need backward computation.
I0620 17:11:05.524133 27455 net.cpp:228] relu1_1 does not need backward computation.
I0620 17:11:05.524135 27455 net.cpp:228] conv1_1 does not need backward computation.
I0620 17:11:05.524137 27455 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0620 17:11:05.524142 27455 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0620 17:11:05.524144 27455 net.cpp:228] data_input-data_0_split does not need backward computation.
I0620 17:11:05.524147 27455 net.cpp:228] input-data does not need backward computation.
I0620 17:11:05.524149 27455 net.cpp:270] This network produces output loss_attribute
I0620 17:11:05.524152 27455 net.cpp:270] This network produces output loss_bbox
I0620 17:11:05.524154 27455 net.cpp:270] This network produces output loss_cls
I0620 17:11:05.524157 27455 net.cpp:270] This network produces output loss_mask
I0620 17:11:05.524158 27455 net.cpp:270] This network produces output rpn_cls_loss
I0620 17:11:05.524160 27455 net.cpp:270] This network produces output rpn_loss_bbox
I0620 17:11:05.524211 27455 net.cpp:283] Network initialization done.
I0620 17:11:05.619560 27455 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0620 17:11:46.854161 27455 net.cpp:816] Ignoring source layer pool5
I0620 17:11:46.927943 27455 net.cpp:816] Ignoring source layer drop6
I0620 17:11:46.940980 27455 net.cpp:816] Ignoring source layer drop7
I0620 17:11:46.940999 27455 net.cpp:816] Ignoring source layer fc8
I0620 17:11:46.941004 27455 net.cpp:816] Ignoring source layer prob
Solving...
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 171, in train_net
    model_paths = sw.train_model(max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 110, in train_model
    self.solver.step(1)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_target_layer.py", line 465, in forward
    attr = obj2attrDict['mallet_wm']
KeyError: 'mallet_wm'
