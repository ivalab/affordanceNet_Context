+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_17-42-09
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_17-42-09
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0625 17:42:23.697701  6741 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0625 17:42:23.697721  6741 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0625 17:42:23.699203  6741 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "mask_score"
  top: "mask_score_softmax"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "log"
  type: "Log"
  bottom: "mask_score_softmax"
  top: "log"
}
layer {
  name: "mult1"
  type: "Eltwise"
  bottom: "log"
  bottom: "mask_targets"
  top: "mult1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cross_entropy"
  type: "Power"
  bottom: "mult1"
  top: "cross_entropy"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "ce_sum"
  type: "Convolution"
  bottom: "cross_entropy"
  top: "cross_entropy_sum"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 1
    weight_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "ce_mean"
  type: "Reduction"
  bottom: "cross_entropy_sum"
  top: "cross_entropy_mean"
  loss_weight: 1
  reduction_param {
    operation: MEAN
    axis: 0
  }
}
I0625 17:42:23.699641  6741 layer_factory.hpp:77] Creating layer input-data
I0625 17:42:23.805246  6741 net.cpp:106] Creating Layer input-data
I0625 17:42:23.805263  6741 net.cpp:411] input-data -> data
I0625 17:42:23.805274  6741 net.cpp:411] input-data -> im_info
I0625 17:42:23.805277  6741 net.cpp:411] input-data -> gt_boxes
I0625 17:42:23.805281  6741 net.cpp:411] input-data -> seg_mask_inds
I0625 17:42:23.805284  6741 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0625 17:42:23.902109  6741 net.cpp:150] Setting up input-data
I0625 17:42:23.902127  6741 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 17:42:23.902129  6741 net.cpp:157] Top shape: 1 3 (3)
I0625 17:42:23.902132  6741 net.cpp:157] Top shape: 1 4 (4)
I0625 17:42:23.902133  6741 net.cpp:157] Top shape: 1 2 (2)
I0625 17:42:23.902135  6741 net.cpp:157] Top shape: 1 1 (1)
I0625 17:42:23.902137  6741 net.cpp:165] Memory required for data: 7200040
I0625 17:42:23.902142  6741 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0625 17:42:23.902724  6741 net.cpp:106] Creating Layer data_input-data_0_split
I0625 17:42:23.902729  6741 net.cpp:454] data_input-data_0_split <- data
I0625 17:42:23.902734  6741 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0625 17:42:23.902740  6741 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0625 17:42:23.902761  6741 net.cpp:150] Setting up data_input-data_0_split
I0625 17:42:23.902766  6741 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 17:42:23.902770  6741 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 17:42:23.902770  6741 net.cpp:165] Memory required for data: 21600040
I0625 17:42:23.902772  6741 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0625 17:42:23.902776  6741 net.cpp:106] Creating Layer im_info_input-data_1_split
I0625 17:42:23.902778  6741 net.cpp:454] im_info_input-data_1_split <- im_info
I0625 17:42:23.902781  6741 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0625 17:42:23.902784  6741 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0625 17:42:23.902788  6741 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0625 17:42:23.902812  6741 net.cpp:150] Setting up im_info_input-data_1_split
I0625 17:42:23.902814  6741 net.cpp:157] Top shape: 1 3 (3)
I0625 17:42:23.902817  6741 net.cpp:157] Top shape: 1 3 (3)
I0625 17:42:23.902819  6741 net.cpp:157] Top shape: 1 3 (3)
I0625 17:42:23.902820  6741 net.cpp:165] Memory required for data: 21600076
I0625 17:42:23.902822  6741 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0625 17:42:23.902824  6741 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0625 17:42:23.902827  6741 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0625 17:42:23.902829  6741 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0625 17:42:23.902832  6741 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0625 17:42:23.902848  6741 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0625 17:42:23.902851  6741 net.cpp:157] Top shape: 1 4 (4)
I0625 17:42:23.902853  6741 net.cpp:157] Top shape: 1 4 (4)
I0625 17:42:23.902854  6741 net.cpp:165] Memory required for data: 21600108
I0625 17:42:23.902856  6741 layer_factory.hpp:77] Creating layer conv1_1
I0625 17:42:23.902863  6741 net.cpp:106] Creating Layer conv1_1
I0625 17:42:23.902864  6741 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0625 17:42:23.902868  6741 net.cpp:411] conv1_1 -> conv1_1
I0625 17:42:24.365813  6741 net.cpp:150] Setting up conv1_1
I0625 17:42:24.365830  6741 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 17:42:24.365833  6741 net.cpp:165] Memory required for data: 175200108
I0625 17:42:24.365844  6741 layer_factory.hpp:77] Creating layer relu1_1
I0625 17:42:24.365851  6741 net.cpp:106] Creating Layer relu1_1
I0625 17:42:24.365854  6741 net.cpp:454] relu1_1 <- conv1_1
I0625 17:42:24.365859  6741 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0625 17:42:24.365975  6741 net.cpp:150] Setting up relu1_1
I0625 17:42:24.365981  6741 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 17:42:24.365983  6741 net.cpp:165] Memory required for data: 328800108
I0625 17:42:24.365985  6741 layer_factory.hpp:77] Creating layer conv1_2
I0625 17:42:24.365993  6741 net.cpp:106] Creating Layer conv1_2
I0625 17:42:24.365994  6741 net.cpp:454] conv1_2 <- conv1_1
I0625 17:42:24.365998  6741 net.cpp:411] conv1_2 -> conv1_2
I0625 17:42:24.368212  6741 net.cpp:150] Setting up conv1_2
I0625 17:42:24.368227  6741 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 17:42:24.368229  6741 net.cpp:165] Memory required for data: 482400108
I0625 17:42:24.368237  6741 layer_factory.hpp:77] Creating layer relu1_2
I0625 17:42:24.368244  6741 net.cpp:106] Creating Layer relu1_2
I0625 17:42:24.368247  6741 net.cpp:454] relu1_2 <- conv1_2
I0625 17:42:24.368250  6741 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0625 17:42:24.368363  6741 net.cpp:150] Setting up relu1_2
I0625 17:42:24.368369  6741 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 17:42:24.368371  6741 net.cpp:165] Memory required for data: 636000108
I0625 17:42:24.368372  6741 layer_factory.hpp:77] Creating layer pool1
I0625 17:42:24.368378  6741 net.cpp:106] Creating Layer pool1
I0625 17:42:24.368381  6741 net.cpp:454] pool1 <- conv1_2
I0625 17:42:24.368383  6741 net.cpp:411] pool1 -> pool1
I0625 17:42:24.369011  6741 net.cpp:150] Setting up pool1
I0625 17:42:24.369017  6741 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0625 17:42:24.369019  6741 net.cpp:165] Memory required for data: 674400108
I0625 17:42:24.369021  6741 layer_factory.hpp:77] Creating layer conv2_1
I0625 17:42:24.369026  6741 net.cpp:106] Creating Layer conv2_1
I0625 17:42:24.369029  6741 net.cpp:454] conv2_1 <- pool1
I0625 17:42:24.369031  6741 net.cpp:411] conv2_1 -> conv2_1
I0625 17:42:24.370832  6741 net.cpp:150] Setting up conv2_1
I0625 17:42:24.370841  6741 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 17:42:24.370843  6741 net.cpp:165] Memory required for data: 751200108
I0625 17:42:24.370851  6741 layer_factory.hpp:77] Creating layer relu2_1
I0625 17:42:24.370856  6741 net.cpp:106] Creating Layer relu2_1
I0625 17:42:24.370857  6741 net.cpp:454] relu2_1 <- conv2_1
I0625 17:42:24.370859  6741 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0625 17:42:24.371309  6741 net.cpp:150] Setting up relu2_1
I0625 17:42:24.371316  6741 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 17:42:24.371318  6741 net.cpp:165] Memory required for data: 828000108
I0625 17:42:24.371320  6741 layer_factory.hpp:77] Creating layer conv2_2
I0625 17:42:24.371326  6741 net.cpp:106] Creating Layer conv2_2
I0625 17:42:24.371328  6741 net.cpp:454] conv2_2 <- conv2_1
I0625 17:42:24.371331  6741 net.cpp:411] conv2_2 -> conv2_2
I0625 17:42:24.373098  6741 net.cpp:150] Setting up conv2_2
I0625 17:42:24.373106  6741 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 17:42:24.373109  6741 net.cpp:165] Memory required for data: 904800108
I0625 17:42:24.373113  6741 layer_factory.hpp:77] Creating layer relu2_2
I0625 17:42:24.373117  6741 net.cpp:106] Creating Layer relu2_2
I0625 17:42:24.373119  6741 net.cpp:454] relu2_2 <- conv2_2
I0625 17:42:24.373122  6741 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0625 17:42:24.373235  6741 net.cpp:150] Setting up relu2_2
I0625 17:42:24.373242  6741 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 17:42:24.373244  6741 net.cpp:165] Memory required for data: 981600108
I0625 17:42:24.373245  6741 layer_factory.hpp:77] Creating layer pool2
I0625 17:42:24.373250  6741 net.cpp:106] Creating Layer pool2
I0625 17:42:24.373251  6741 net.cpp:454] pool2 <- conv2_2
I0625 17:42:24.373255  6741 net.cpp:411] pool2 -> pool2
I0625 17:42:24.373281  6741 net.cpp:150] Setting up pool2
I0625 17:42:24.373284  6741 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0625 17:42:24.373286  6741 net.cpp:165] Memory required for data: 1000800108
I0625 17:42:24.373287  6741 layer_factory.hpp:77] Creating layer conv3_1
I0625 17:42:24.373292  6741 net.cpp:106] Creating Layer conv3_1
I0625 17:42:24.373294  6741 net.cpp:454] conv3_1 <- pool2
I0625 17:42:24.373298  6741 net.cpp:411] conv3_1 -> conv3_1
I0625 17:42:24.375159  6741 net.cpp:150] Setting up conv3_1
I0625 17:42:24.375167  6741 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 17:42:24.375169  6741 net.cpp:165] Memory required for data: 1039200108
I0625 17:42:24.375175  6741 layer_factory.hpp:77] Creating layer relu3_1
I0625 17:42:24.375180  6741 net.cpp:106] Creating Layer relu3_1
I0625 17:42:24.375182  6741 net.cpp:454] relu3_1 <- conv3_1
I0625 17:42:24.375185  6741 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0625 17:42:24.375298  6741 net.cpp:150] Setting up relu3_1
I0625 17:42:24.375303  6741 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 17:42:24.375304  6741 net.cpp:165] Memory required for data: 1077600108
I0625 17:42:24.375306  6741 layer_factory.hpp:77] Creating layer conv3_2
I0625 17:42:24.375313  6741 net.cpp:106] Creating Layer conv3_2
I0625 17:42:24.375315  6741 net.cpp:454] conv3_2 <- conv3_1
I0625 17:42:24.375319  6741 net.cpp:411] conv3_2 -> conv3_2
I0625 17:42:24.377301  6741 net.cpp:150] Setting up conv3_2
I0625 17:42:24.377310  6741 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 17:42:24.377312  6741 net.cpp:165] Memory required for data: 1116000108
I0625 17:42:24.377317  6741 layer_factory.hpp:77] Creating layer relu3_2
I0625 17:42:24.377322  6741 net.cpp:106] Creating Layer relu3_2
I0625 17:42:24.377324  6741 net.cpp:454] relu3_2 <- conv3_2
I0625 17:42:24.377327  6741 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0625 17:42:24.377445  6741 net.cpp:150] Setting up relu3_2
I0625 17:42:24.377451  6741 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 17:42:24.377452  6741 net.cpp:165] Memory required for data: 1154400108
I0625 17:42:24.377454  6741 layer_factory.hpp:77] Creating layer conv3_3
I0625 17:42:24.377460  6741 net.cpp:106] Creating Layer conv3_3
I0625 17:42:24.377462  6741 net.cpp:454] conv3_3 <- conv3_2
I0625 17:42:24.377465  6741 net.cpp:411] conv3_3 -> conv3_3
I0625 17:42:24.379516  6741 net.cpp:150] Setting up conv3_3
I0625 17:42:24.379526  6741 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 17:42:24.379528  6741 net.cpp:165] Memory required for data: 1192800108
I0625 17:42:24.379534  6741 layer_factory.hpp:77] Creating layer relu3_3
I0625 17:42:24.379539  6741 net.cpp:106] Creating Layer relu3_3
I0625 17:42:24.379541  6741 net.cpp:454] relu3_3 <- conv3_3
I0625 17:42:24.379544  6741 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0625 17:42:24.379657  6741 net.cpp:150] Setting up relu3_3
I0625 17:42:24.379662  6741 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 17:42:24.379663  6741 net.cpp:165] Memory required for data: 1231200108
I0625 17:42:24.379665  6741 layer_factory.hpp:77] Creating layer pool3
I0625 17:42:24.379670  6741 net.cpp:106] Creating Layer pool3
I0625 17:42:24.379673  6741 net.cpp:454] pool3 <- conv3_3
I0625 17:42:24.379676  6741 net.cpp:411] pool3 -> pool3
I0625 17:42:24.379704  6741 net.cpp:150] Setting up pool3
I0625 17:42:24.379709  6741 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0625 17:42:24.379710  6741 net.cpp:165] Memory required for data: 1240800108
I0625 17:42:24.379712  6741 layer_factory.hpp:77] Creating layer conv4_1
I0625 17:42:24.379719  6741 net.cpp:106] Creating Layer conv4_1
I0625 17:42:24.379720  6741 net.cpp:454] conv4_1 <- pool3
I0625 17:42:24.379724  6741 net.cpp:411] conv4_1 -> conv4_1
I0625 17:42:24.383821  6741 net.cpp:150] Setting up conv4_1
I0625 17:42:24.383841  6741 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 17:42:24.383843  6741 net.cpp:165] Memory required for data: 1260000108
I0625 17:42:24.383852  6741 layer_factory.hpp:77] Creating layer relu4_1
I0625 17:42:24.383859  6741 net.cpp:106] Creating Layer relu4_1
I0625 17:42:24.383864  6741 net.cpp:454] relu4_1 <- conv4_1
I0625 17:42:24.383868  6741 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0625 17:42:24.383997  6741 net.cpp:150] Setting up relu4_1
I0625 17:42:24.384003  6741 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 17:42:24.384004  6741 net.cpp:165] Memory required for data: 1279200108
I0625 17:42:24.384006  6741 layer_factory.hpp:77] Creating layer conv4_2
I0625 17:42:24.384013  6741 net.cpp:106] Creating Layer conv4_2
I0625 17:42:24.384016  6741 net.cpp:454] conv4_2 <- conv4_1
I0625 17:42:24.384018  6741 net.cpp:411] conv4_2 -> conv4_2
I0625 17:42:24.388749  6741 net.cpp:150] Setting up conv4_2
I0625 17:42:24.388768  6741 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 17:42:24.388772  6741 net.cpp:165] Memory required for data: 1298400108
I0625 17:42:24.388782  6741 layer_factory.hpp:77] Creating layer relu4_2
I0625 17:42:24.388789  6741 net.cpp:106] Creating Layer relu4_2
I0625 17:42:24.388793  6741 net.cpp:454] relu4_2 <- conv4_2
I0625 17:42:24.388797  6741 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0625 17:42:24.389258  6741 net.cpp:150] Setting up relu4_2
I0625 17:42:24.389266  6741 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 17:42:24.389268  6741 net.cpp:165] Memory required for data: 1317600108
I0625 17:42:24.389271  6741 layer_factory.hpp:77] Creating layer conv4_3
I0625 17:42:24.389277  6741 net.cpp:106] Creating Layer conv4_3
I0625 17:42:24.389279  6741 net.cpp:454] conv4_3 <- conv4_2
I0625 17:42:24.389283  6741 net.cpp:411] conv4_3 -> conv4_3
I0625 17:42:24.396308  6741 net.cpp:150] Setting up conv4_3
I0625 17:42:24.396334  6741 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 17:42:24.396337  6741 net.cpp:165] Memory required for data: 1336800108
I0625 17:42:24.396348  6741 layer_factory.hpp:77] Creating layer relu4_3
I0625 17:42:24.396361  6741 net.cpp:106] Creating Layer relu4_3
I0625 17:42:24.396368  6741 net.cpp:454] relu4_3 <- conv4_3
I0625 17:42:24.396374  6741 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0625 17:42:24.396497  6741 net.cpp:150] Setting up relu4_3
I0625 17:42:24.396502  6741 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 17:42:24.396503  6741 net.cpp:165] Memory required for data: 1356000108
I0625 17:42:24.396505  6741 layer_factory.hpp:77] Creating layer pool4
I0625 17:42:24.396510  6741 net.cpp:106] Creating Layer pool4
I0625 17:42:24.396512  6741 net.cpp:454] pool4 <- conv4_3
I0625 17:42:24.396517  6741 net.cpp:411] pool4 -> pool4
I0625 17:42:24.396543  6741 net.cpp:150] Setting up pool4
I0625 17:42:24.396546  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.396548  6741 net.cpp:165] Memory required for data: 1360903020
I0625 17:42:24.396549  6741 layer_factory.hpp:77] Creating layer conv5_1
I0625 17:42:24.396555  6741 net.cpp:106] Creating Layer conv5_1
I0625 17:42:24.396558  6741 net.cpp:454] conv5_1 <- pool4
I0625 17:42:24.396561  6741 net.cpp:411] conv5_1 -> conv5_1
I0625 17:42:24.401247  6741 net.cpp:150] Setting up conv5_1
I0625 17:42:24.401266  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.401269  6741 net.cpp:165] Memory required for data: 1365805932
I0625 17:42:24.401276  6741 layer_factory.hpp:77] Creating layer relu5_1
I0625 17:42:24.401285  6741 net.cpp:106] Creating Layer relu5_1
I0625 17:42:24.401290  6741 net.cpp:454] relu5_1 <- conv5_1
I0625 17:42:24.401304  6741 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0625 17:42:24.401439  6741 net.cpp:150] Setting up relu5_1
I0625 17:42:24.401446  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.401448  6741 net.cpp:165] Memory required for data: 1370708844
I0625 17:42:24.401450  6741 layer_factory.hpp:77] Creating layer conv5_2
I0625 17:42:24.401458  6741 net.cpp:106] Creating Layer conv5_2
I0625 17:42:24.401460  6741 net.cpp:454] conv5_2 <- conv5_1
I0625 17:42:24.401464  6741 net.cpp:411] conv5_2 -> conv5_2
I0625 17:42:24.405833  6741 net.cpp:150] Setting up conv5_2
I0625 17:42:24.405849  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.405853  6741 net.cpp:165] Memory required for data: 1375611756
I0625 17:42:24.405859  6741 layer_factory.hpp:77] Creating layer relu5_2
I0625 17:42:24.405867  6741 net.cpp:106] Creating Layer relu5_2
I0625 17:42:24.405871  6741 net.cpp:454] relu5_2 <- conv5_2
I0625 17:42:24.405875  6741 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0625 17:42:24.406013  6741 net.cpp:150] Setting up relu5_2
I0625 17:42:24.406019  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.406021  6741 net.cpp:165] Memory required for data: 1380514668
I0625 17:42:24.406023  6741 layer_factory.hpp:77] Creating layer conv5_3
I0625 17:42:24.406033  6741 net.cpp:106] Creating Layer conv5_3
I0625 17:42:24.406035  6741 net.cpp:454] conv5_3 <- conv5_2
I0625 17:42:24.406040  6741 net.cpp:411] conv5_3 -> conv5_3
I0625 17:42:24.410467  6741 net.cpp:150] Setting up conv5_3
I0625 17:42:24.410485  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.410486  6741 net.cpp:165] Memory required for data: 1385417580
I0625 17:42:24.410493  6741 layer_factory.hpp:77] Creating layer relu5_3
I0625 17:42:24.410501  6741 net.cpp:106] Creating Layer relu5_3
I0625 17:42:24.410504  6741 net.cpp:454] relu5_3 <- conv5_3
I0625 17:42:24.410519  6741 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0625 17:42:24.410663  6741 net.cpp:150] Setting up relu5_3
I0625 17:42:24.410670  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.410671  6741 net.cpp:165] Memory required for data: 1390320492
I0625 17:42:24.410673  6741 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0625 17:42:24.410676  6741 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0625 17:42:24.410678  6741 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0625 17:42:24.410681  6741 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0625 17:42:24.410686  6741 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0625 17:42:24.410688  6741 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0625 17:42:24.410756  6741 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0625 17:42:24.410759  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.410761  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.410778  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.410778  6741 net.cpp:165] Memory required for data: 1405029228
I0625 17:42:24.410780  6741 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0625 17:42:24.410796  6741 net.cpp:106] Creating Layer rpn_conv/3x3
I0625 17:42:24.410799  6741 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0625 17:42:24.410802  6741 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0625 17:42:24.461099  6741 net.cpp:150] Setting up rpn_conv/3x3
I0625 17:42:24.461117  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.461119  6741 net.cpp:165] Memory required for data: 1409932140
I0625 17:42:24.461125  6741 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0625 17:42:24.461133  6741 net.cpp:106] Creating Layer rpn_relu/3x3
I0625 17:42:24.461135  6741 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0625 17:42:24.461150  6741 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0625 17:42:24.461292  6741 net.cpp:150] Setting up rpn_relu/3x3
I0625 17:42:24.461297  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.461298  6741 net.cpp:165] Memory required for data: 1414835052
I0625 17:42:24.461300  6741 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0625 17:42:24.461304  6741 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0625 17:42:24.461306  6741 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0625 17:42:24.461309  6741 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0625 17:42:24.461313  6741 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0625 17:42:24.461370  6741 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0625 17:42:24.461374  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.461375  6741 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 17:42:24.461387  6741 net.cpp:165] Memory required for data: 1424640876
I0625 17:42:24.461390  6741 layer_factory.hpp:77] Creating layer rpn_cls_score
I0625 17:42:24.461406  6741 net.cpp:106] Creating Layer rpn_cls_score
I0625 17:42:24.461408  6741 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0625 17:42:24.461412  6741 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0625 17:42:24.462971  6741 net.cpp:150] Setting up rpn_cls_score
I0625 17:42:24.462980  6741 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 17:42:24.462981  6741 net.cpp:165] Memory required for data: 1424928156
I0625 17:42:24.462985  6741 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0625 17:42:24.462990  6741 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0625 17:42:24.462992  6741 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0625 17:42:24.462996  6741 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0625 17:42:24.463009  6741 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0625 17:42:24.463057  6741 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0625 17:42:24.463068  6741 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 17:42:24.463070  6741 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 17:42:24.463073  6741 net.cpp:165] Memory required for data: 1425502716
I0625 17:42:24.463073  6741 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0625 17:42:24.463089  6741 net.cpp:106] Creating Layer rpn_bbox_pred
I0625 17:42:24.463091  6741 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0625 17:42:24.463095  6741 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0625 17:42:24.464572  6741 net.cpp:150] Setting up rpn_bbox_pred
I0625 17:42:24.464579  6741 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 17:42:24.464581  6741 net.cpp:165] Memory required for data: 1426077276
I0625 17:42:24.464586  6741 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 17:42:24.464589  6741 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 17:42:24.464591  6741 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0625 17:42:24.464596  6741 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 17:42:24.464609  6741 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 17:42:24.464655  6741 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 17:42:24.464668  6741 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 17:42:24.464669  6741 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 17:42:24.464671  6741 net.cpp:165] Memory required for data: 1427226396
I0625 17:42:24.464673  6741 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0625 17:42:24.464692  6741 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0625 17:42:24.464694  6741 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0625 17:42:24.464696  6741 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0625 17:42:24.464722  6741 net.cpp:150] Setting up rpn_cls_score_reshape
I0625 17:42:24.464735  6741 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 17:42:24.464736  6741 net.cpp:165] Memory required for data: 1427513676
I0625 17:42:24.464738  6741 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 17:42:24.464741  6741 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 17:42:24.464751  6741 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0625 17:42:24.464756  6741 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 17:42:24.464758  6741 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 17:42:24.464797  6741 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 17:42:24.464802  6741 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 17:42:24.464803  6741 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 17:42:24.464804  6741 net.cpp:165] Memory required for data: 1428088236
I0625 17:42:24.464807  6741 layer_factory.hpp:77] Creating layer rpn-data
I0625 17:42:24.465180  6741 net.cpp:106] Creating Layer rpn-data
I0625 17:42:24.465188  6741 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0625 17:42:24.465190  6741 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0625 17:42:24.465193  6741 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0625 17:42:24.465195  6741 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0625 17:42:24.465198  6741 net.cpp:411] rpn-data -> rpn_labels
I0625 17:42:24.465204  6741 net.cpp:411] rpn-data -> rpn_bbox_targets
I0625 17:42:24.465217  6741 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0625 17:42:24.465222  6741 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0625 17:42:24.466055  6741 net.cpp:150] Setting up rpn-data
I0625 17:42:24.466063  6741 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0625 17:42:24.466066  6741 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 17:42:24.466068  6741 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 17:42:24.466069  6741 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 17:42:24.466071  6741 net.cpp:165] Memory required for data: 1429955556
I0625 17:42:24.466073  6741 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 17:42:24.466078  6741 net.cpp:106] Creating Layer rpn_loss_cls
I0625 17:42:24.466080  6741 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 17:42:24.466094  6741 net.cpp:454] rpn_loss_cls <- rpn_labels
I0625 17:42:24.466097  6741 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0625 17:42:24.466106  6741 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 17:42:24.467308  6741 net.cpp:150] Setting up rpn_loss_cls
I0625 17:42:24.467316  6741 net.cpp:157] Top shape: (1)
I0625 17:42:24.467319  6741 net.cpp:160]     with loss weight 1
I0625 17:42:24.467325  6741 net.cpp:165] Memory required for data: 1429955560
I0625 17:42:24.467327  6741 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0625 17:42:24.467334  6741 net.cpp:106] Creating Layer rpn_loss_bbox
I0625 17:42:24.467335  6741 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 17:42:24.467339  6741 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0625 17:42:24.467344  6741 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0625 17:42:24.467345  6741 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0625 17:42:24.467348  6741 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0625 17:42:24.468464  6741 net.cpp:150] Setting up rpn_loss_bbox
I0625 17:42:24.468472  6741 net.cpp:157] Top shape: (1)
I0625 17:42:24.468474  6741 net.cpp:160]     with loss weight 1
I0625 17:42:24.468477  6741 net.cpp:165] Memory required for data: 1429955564
I0625 17:42:24.468479  6741 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0625 17:42:24.468483  6741 net.cpp:106] Creating Layer rpn_cls_prob
I0625 17:42:24.468485  6741 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 17:42:24.468488  6741 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0625 17:42:24.468660  6741 net.cpp:150] Setting up rpn_cls_prob
I0625 17:42:24.468667  6741 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 17:42:24.468668  6741 net.cpp:165] Memory required for data: 1430242844
I0625 17:42:24.468669  6741 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0625 17:42:24.468674  6741 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0625 17:42:24.468677  6741 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0625 17:42:24.468678  6741 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0625 17:42:24.468705  6741 net.cpp:150] Setting up rpn_cls_prob_reshape
I0625 17:42:24.468717  6741 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 17:42:24.468719  6741 net.cpp:165] Memory required for data: 1430530124
I0625 17:42:24.468720  6741 layer_factory.hpp:77] Creating layer proposal
I0625 17:42:24.470551  6741 net.cpp:106] Creating Layer proposal
I0625 17:42:24.470559  6741 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0625 17:42:24.470562  6741 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 17:42:24.470566  6741 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0625 17:42:24.470568  6741 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0625 17:42:24.471741  6741 net.cpp:150] Setting up proposal
I0625 17:42:24.471750  6741 net.cpp:157] Top shape: 1 5 (5)
I0625 17:42:24.471751  6741 net.cpp:165] Memory required for data: 1430530144
I0625 17:42:24.471753  6741 layer_factory.hpp:77] Creating layer roi-data
I0625 17:42:24.474637  6741 net.cpp:106] Creating Layer roi-data
I0625 17:42:24.474648  6741 net.cpp:454] roi-data <- rpn_rois
I0625 17:42:24.474661  6741 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0625 17:42:24.474664  6741 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0625 17:42:24.474666  6741 net.cpp:454] roi-data <- seg_mask_inds
I0625 17:42:24.474668  6741 net.cpp:454] roi-data <- flipped
I0625 17:42:24.474673  6741 net.cpp:411] roi-data -> rois
I0625 17:42:24.474678  6741 net.cpp:411] roi-data -> labels
I0625 17:42:24.474684  6741 net.cpp:411] roi-data -> bbox_targets
I0625 17:42:24.474687  6741 net.cpp:411] roi-data -> bbox_inside_weights
I0625 17:42:24.474691  6741 net.cpp:411] roi-data -> bbox_outside_weights
I0625 17:42:24.474695  6741 net.cpp:411] roi-data -> mask_targets
I0625 17:42:24.474700  6741 net.cpp:411] roi-data -> rois_pos
I0625 17:42:24.474704  6741 net.cpp:411] roi-data -> attrArray
I0625 17:42:24.474707  6741 net.cpp:411] roi-data -> attrArrayInd
I0625 17:42:24.474711  6741 net.cpp:411] roi-data -> attrArrayShift
I0625 17:42:24.475121  6741 net.cpp:150] Setting up roi-data
I0625 17:42:24.475129  6741 net.cpp:157] Top shape: 1 5 (5)
I0625 17:42:24.475142  6741 net.cpp:157] Top shape: 1 1 (1)
I0625 17:42:24.475143  6741 net.cpp:157] Top shape: 1 8 (8)
I0625 17:42:24.475145  6741 net.cpp:157] Top shape: 1 8 (8)
I0625 17:42:24.475147  6741 net.cpp:157] Top shape: 1 8 (8)
I0625 17:42:24.475149  6741 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 17:42:24.475152  6741 net.cpp:157] Top shape: 1 5 (5)
I0625 17:42:24.475153  6741 net.cpp:157] Top shape: 1 7 (7)
I0625 17:42:24.475155  6741 net.cpp:157] Top shape: 1 7 (7)
I0625 17:42:24.475157  6741 net.cpp:157] Top shape: 1 7 (7)
I0625 17:42:24.475158  6741 net.cpp:165] Memory required for data: 1432435520
I0625 17:42:24.475160  6741 layer_factory.hpp:77] Creating layer roi_pool5
I0625 17:42:24.475750  6741 net.cpp:106] Creating Layer roi_pool5
I0625 17:42:24.475754  6741 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0625 17:42:24.475757  6741 net.cpp:454] roi_pool5 <- rois
I0625 17:42:24.475760  6741 net.cpp:411] roi_pool5 -> pool5
I0625 17:42:24.475777  6741 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 17:42:24.475869  6741 net.cpp:150] Setting up roi_pool5
I0625 17:42:24.475873  6741 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 17:42:24.475875  6741 net.cpp:165] Memory required for data: 1432535872
I0625 17:42:24.475877  6741 layer_factory.hpp:77] Creating layer fc6
I0625 17:42:24.475881  6741 net.cpp:106] Creating Layer fc6
I0625 17:42:24.475883  6741 net.cpp:454] fc6 <- pool5
I0625 17:42:24.475885  6741 net.cpp:411] fc6 -> fc6
I0625 17:42:24.620110  6741 net.cpp:150] Setting up fc6
I0625 17:42:24.620134  6741 net.cpp:157] Top shape: 1 4096 (4096)
I0625 17:42:24.620136  6741 net.cpp:165] Memory required for data: 1432552256
I0625 17:42:24.620148  6741 layer_factory.hpp:77] Creating layer relu6
I0625 17:42:24.620167  6741 net.cpp:106] Creating Layer relu6
I0625 17:42:24.620170  6741 net.cpp:454] relu6 <- fc6
I0625 17:42:24.620174  6741 net.cpp:397] relu6 -> fc6 (in-place)
I0625 17:42:24.620370  6741 net.cpp:150] Setting up relu6
I0625 17:42:24.620376  6741 net.cpp:157] Top shape: 1 4096 (4096)
I0625 17:42:24.620378  6741 net.cpp:165] Memory required for data: 1432568640
I0625 17:42:24.620379  6741 layer_factory.hpp:77] Creating layer fc7
I0625 17:42:24.620384  6741 net.cpp:106] Creating Layer fc7
I0625 17:42:24.620386  6741 net.cpp:454] fc7 <- fc6
I0625 17:42:24.620388  6741 net.cpp:411] fc7 -> fc7
I0625 17:42:24.644349  6741 net.cpp:150] Setting up fc7
I0625 17:42:24.644373  6741 net.cpp:157] Top shape: 1 4096 (4096)
I0625 17:42:24.644376  6741 net.cpp:165] Memory required for data: 1432585024
I0625 17:42:24.644383  6741 layer_factory.hpp:77] Creating layer relu7
I0625 17:42:24.644392  6741 net.cpp:106] Creating Layer relu7
I0625 17:42:24.644405  6741 net.cpp:454] relu7 <- fc7
I0625 17:42:24.644409  6741 net.cpp:397] relu7 -> fc7 (in-place)
I0625 17:42:24.644665  6741 net.cpp:150] Setting up relu7
I0625 17:42:24.644670  6741 net.cpp:157] Top shape: 1 4096 (4096)
I0625 17:42:24.644672  6741 net.cpp:165] Memory required for data: 1432601408
I0625 17:42:24.644675  6741 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0625 17:42:24.644678  6741 net.cpp:106] Creating Layer fc7_relu7_0_split
I0625 17:42:24.644680  6741 net.cpp:454] fc7_relu7_0_split <- fc7
I0625 17:42:24.644682  6741 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0625 17:42:24.644686  6741 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0625 17:42:24.644690  6741 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0625 17:42:24.644740  6741 net.cpp:150] Setting up fc7_relu7_0_split
I0625 17:42:24.644743  6741 net.cpp:157] Top shape: 1 4096 (4096)
I0625 17:42:24.644745  6741 net.cpp:157] Top shape: 1 4096 (4096)
I0625 17:42:24.644757  6741 net.cpp:157] Top shape: 1 4096 (4096)
I0625 17:42:24.644758  6741 net.cpp:165] Memory required for data: 1432650560
I0625 17:42:24.644760  6741 layer_factory.hpp:77] Creating layer attr_score
I0625 17:42:24.644774  6741 net.cpp:106] Creating Layer attr_score
I0625 17:42:24.644776  6741 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0625 17:42:24.644780  6741 net.cpp:411] attr_score -> attr_score
I0625 17:42:24.645428  6741 net.cpp:150] Setting up attr_score
I0625 17:42:24.645432  6741 net.cpp:157] Top shape: 1 7 (7)
I0625 17:42:24.645434  6741 net.cpp:165] Memory required for data: 1432650588
I0625 17:42:24.645437  6741 layer_factory.hpp:77] Creating layer attr_score_pos
I0625 17:42:24.645442  6741 net.cpp:106] Creating Layer attr_score_pos
I0625 17:42:24.645443  6741 net.cpp:454] attr_score_pos <- attr_score
I0625 17:42:24.645445  6741 net.cpp:454] attr_score_pos <- attrArrayInd
I0625 17:42:24.645448  6741 net.cpp:411] attr_score_pos -> attr_score_pos
I0625 17:42:24.645473  6741 net.cpp:150] Setting up attr_score_pos
I0625 17:42:24.645486  6741 net.cpp:157] Top shape: 1 7 (7)
I0625 17:42:24.645488  6741 net.cpp:165] Memory required for data: 1432650616
I0625 17:42:24.645489  6741 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0625 17:42:24.645493  6741 net.cpp:106] Creating Layer attr_score_pos_shift
I0625 17:42:24.645495  6741 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0625 17:42:24.645498  6741 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0625 17:42:24.645499  6741 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0625 17:42:24.645522  6741 net.cpp:150] Setting up attr_score_pos_shift
I0625 17:42:24.645535  6741 net.cpp:157] Top shape: 1 7 (7)
I0625 17:42:24.645537  6741 net.cpp:165] Memory required for data: 1432650644
I0625 17:42:24.645539  6741 layer_factory.hpp:77] Creating layer cls_score
I0625 17:42:24.645542  6741 net.cpp:106] Creating Layer cls_score
I0625 17:42:24.645545  6741 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0625 17:42:24.645548  6741 net.cpp:411] cls_score -> cls_score
I0625 17:42:24.645781  6741 net.cpp:150] Setting up cls_score
I0625 17:42:24.645786  6741 net.cpp:157] Top shape: 1 2 (2)
I0625 17:42:24.645787  6741 net.cpp:165] Memory required for data: 1432650652
I0625 17:42:24.645790  6741 layer_factory.hpp:77] Creating layer bbox_pred
I0625 17:42:24.645793  6741 net.cpp:106] Creating Layer bbox_pred
I0625 17:42:24.645797  6741 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0625 17:42:24.645799  6741 net.cpp:411] bbox_pred -> bbox_pred
I0625 17:42:24.646546  6741 net.cpp:150] Setting up bbox_pred
I0625 17:42:24.646551  6741 net.cpp:157] Top shape: 1 8 (8)
I0625 17:42:24.646553  6741 net.cpp:165] Memory required for data: 1432650684
I0625 17:42:24.646556  6741 layer_factory.hpp:77] Creating layer loss_attribute
I0625 17:42:24.646560  6741 net.cpp:106] Creating Layer loss_attribute
I0625 17:42:24.646564  6741 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0625 17:42:24.646565  6741 net.cpp:454] loss_attribute <- attrArray
I0625 17:42:24.646569  6741 net.cpp:411] loss_attribute -> loss_attribute
I0625 17:42:24.646618  6741 net.cpp:150] Setting up loss_attribute
I0625 17:42:24.646621  6741 net.cpp:157] Top shape: (1)
I0625 17:42:24.646623  6741 net.cpp:160]     with loss weight 1
I0625 17:42:24.646642  6741 net.cpp:165] Memory required for data: 1432650688
I0625 17:42:24.646644  6741 layer_factory.hpp:77] Creating layer loss_cls
I0625 17:42:24.646647  6741 net.cpp:106] Creating Layer loss_cls
I0625 17:42:24.646651  6741 net.cpp:454] loss_cls <- cls_score
I0625 17:42:24.646652  6741 net.cpp:454] loss_cls <- labels
I0625 17:42:24.646656  6741 net.cpp:411] loss_cls -> loss_cls
I0625 17:42:24.646661  6741 layer_factory.hpp:77] Creating layer loss_cls
I0625 17:42:24.647282  6741 net.cpp:150] Setting up loss_cls
I0625 17:42:24.647289  6741 net.cpp:157] Top shape: (1)
I0625 17:42:24.647292  6741 net.cpp:160]     with loss weight 3
I0625 17:42:24.647296  6741 net.cpp:165] Memory required for data: 1432650692
I0625 17:42:24.647300  6741 layer_factory.hpp:77] Creating layer loss_bbox
I0625 17:42:24.647307  6741 net.cpp:106] Creating Layer loss_bbox
I0625 17:42:24.647310  6741 net.cpp:454] loss_bbox <- bbox_pred
I0625 17:42:24.647313  6741 net.cpp:454] loss_bbox <- bbox_targets
I0625 17:42:24.647316  6741 net.cpp:454] loss_bbox <- bbox_inside_weights
I0625 17:42:24.647318  6741 net.cpp:454] loss_bbox <- bbox_outside_weights
I0625 17:42:24.647321  6741 net.cpp:411] loss_bbox -> loss_bbox
I0625 17:42:24.647377  6741 net.cpp:150] Setting up loss_bbox
I0625 17:42:24.647380  6741 net.cpp:157] Top shape: (1)
I0625 17:42:24.647382  6741 net.cpp:160]     with loss weight 2
I0625 17:42:24.647387  6741 net.cpp:165] Memory required for data: 1432650696
I0625 17:42:24.647388  6741 layer_factory.hpp:77] Creating layer roi_pool5_2
I0625 17:42:24.647392  6741 net.cpp:106] Creating Layer roi_pool5_2
I0625 17:42:24.647395  6741 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0625 17:42:24.647398  6741 net.cpp:454] roi_pool5_2 <- rois_pos
I0625 17:42:24.647403  6741 net.cpp:411] roi_pool5_2 -> pool5_2
I0625 17:42:24.647406  6741 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 17:42:24.647467  6741 net.cpp:150] Setting up roi_pool5_2
I0625 17:42:24.647471  6741 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 17:42:24.647473  6741 net.cpp:165] Memory required for data: 1432751048
I0625 17:42:24.647475  6741 layer_factory.hpp:77] Creating layer pool5_2_conv
I0625 17:42:24.647481  6741 net.cpp:106] Creating Layer pool5_2_conv
I0625 17:42:24.647485  6741 net.cpp:454] pool5_2_conv <- pool5_2
I0625 17:42:24.647487  6741 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0625 17:42:24.654054  6741 net.cpp:150] Setting up pool5_2_conv
I0625 17:42:24.654063  6741 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 17:42:24.654076  6741 net.cpp:165] Memory required for data: 1432851400
I0625 17:42:24.654080  6741 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0625 17:42:24.654085  6741 net.cpp:106] Creating Layer pool5_2_conv_relu
I0625 17:42:24.654088  6741 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0625 17:42:24.654101  6741 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0625 17:42:24.654235  6741 net.cpp:150] Setting up pool5_2_conv_relu
I0625 17:42:24.654242  6741 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 17:42:24.654244  6741 net.cpp:165] Memory required for data: 1432951752
I0625 17:42:24.654247  6741 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0625 17:42:24.654253  6741 net.cpp:106] Creating Layer pool5_2_conv2
I0625 17:42:24.654258  6741 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0625 17:42:24.654263  6741 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0625 17:42:24.704547  6741 net.cpp:150] Setting up pool5_2_conv2
I0625 17:42:24.704563  6741 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 17:42:24.704566  6741 net.cpp:165] Memory required for data: 1433052104
I0625 17:42:24.704571  6741 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0625 17:42:24.704578  6741 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0625 17:42:24.704581  6741 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0625 17:42:24.704597  6741 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0625 17:42:24.704758  6741 net.cpp:150] Setting up pool5_2_conv2_relu
I0625 17:42:24.704764  6741 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 17:42:24.704766  6741 net.cpp:165] Memory required for data: 1433152456
I0625 17:42:24.704767  6741 layer_factory.hpp:77] Creating layer mask_deconv1
I0625 17:42:24.704773  6741 net.cpp:106] Creating Layer mask_deconv1
I0625 17:42:24.704775  6741 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0625 17:42:24.704779  6741 net.cpp:411] mask_deconv1 -> mask_deconv1
I0625 17:42:24.705590  6741 net.cpp:150] Setting up mask_deconv1
I0625 17:42:24.705595  6741 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0625 17:42:24.705597  6741 net.cpp:165] Memory required for data: 1434074056
I0625 17:42:24.705600  6741 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0625 17:42:24.705605  6741 net.cpp:106] Creating Layer pool5_2_conv3
I0625 17:42:24.705607  6741 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0625 17:42:24.705611  6741 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0625 17:42:24.736021  6741 net.cpp:150] Setting up pool5_2_conv3
I0625 17:42:24.736049  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.736052  6741 net.cpp:165] Memory required for data: 1435917256
I0625 17:42:24.736066  6741 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0625 17:42:24.736078  6741 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0625 17:42:24.736083  6741 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0625 17:42:24.736090  6741 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0625 17:42:24.736336  6741 net.cpp:150] Setting up pool5_2_conv3_relu
I0625 17:42:24.736346  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.736348  6741 net.cpp:165] Memory required for data: 1437760456
I0625 17:42:24.736352  6741 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0625 17:42:24.736366  6741 net.cpp:106] Creating Layer pool5_2_conv4
I0625 17:42:24.736371  6741 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0625 17:42:24.736377  6741 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0625 17:42:24.789556  6741 net.cpp:150] Setting up pool5_2_conv4
I0625 17:42:24.789577  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.789579  6741 net.cpp:165] Memory required for data: 1439603656
I0625 17:42:24.789598  6741 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0625 17:42:24.789624  6741 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0625 17:42:24.789630  6741 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0625 17:42:24.789649  6741 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0625 17:42:24.789813  6741 net.cpp:150] Setting up pool5_2_conv4_relu
I0625 17:42:24.789820  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.789824  6741 net.cpp:165] Memory required for data: 1441446856
I0625 17:42:24.789835  6741 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 17:42:24.789842  6741 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 17:42:24.789855  6741 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0625 17:42:24.789868  6741 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0625 17:42:24.789888  6741 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0625 17:42:24.789896  6741 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0625 17:42:24.789911  6741 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0625 17:42:24.789994  6741 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0625 17:42:24.790000  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.790004  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.790007  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.790011  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.790014  6741 net.cpp:165] Memory required for data: 1448819656
I0625 17:42:24.790017  6741 layer_factory.hpp:77] Creating layer query_conv
I0625 17:42:24.790030  6741 net.cpp:106] Creating Layer query_conv
I0625 17:42:24.790033  6741 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0625 17:42:24.790040  6741 net.cpp:411] query_conv -> query_conv
I0625 17:42:24.791658  6741 net.cpp:150] Setting up query_conv
I0625 17:42:24.791668  6741 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0625 17:42:24.791671  6741 net.cpp:165] Memory required for data: 1449050056
I0625 17:42:24.791688  6741 layer_factory.hpp:77] Creating layer key_conv
I0625 17:42:24.791699  6741 net.cpp:106] Creating Layer key_conv
I0625 17:42:24.791703  6741 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0625 17:42:24.791710  6741 net.cpp:411] key_conv -> key_conv
I0625 17:42:24.793274  6741 net.cpp:150] Setting up key_conv
I0625 17:42:24.793282  6741 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0625 17:42:24.793287  6741 net.cpp:165] Memory required for data: 1449280456
I0625 17:42:24.793292  6741 layer_factory.hpp:77] Creating layer value_conv
I0625 17:42:24.793303  6741 net.cpp:106] Creating Layer value_conv
I0625 17:42:24.793308  6741 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0625 17:42:24.793314  6741 net.cpp:411] value_conv -> value_conv
I0625 17:42:24.800222  6741 net.cpp:150] Setting up value_conv
I0625 17:42:24.800238  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.800241  6741 net.cpp:165] Memory required for data: 1451123656
I0625 17:42:24.800258  6741 layer_factory.hpp:77] Creating layer query_conv_reshape
I0625 17:42:24.800268  6741 net.cpp:106] Creating Layer query_conv_reshape
I0625 17:42:24.800274  6741 net.cpp:454] query_conv_reshape <- query_conv
I0625 17:42:24.800292  6741 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0625 17:42:24.800319  6741 net.cpp:150] Setting up query_conv_reshape
I0625 17:42:24.800324  6741 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0625 17:42:24.800326  6741 net.cpp:165] Memory required for data: 1451354056
I0625 17:42:24.800329  6741 layer_factory.hpp:77] Creating layer key_conv_reshape
I0625 17:42:24.800334  6741 net.cpp:106] Creating Layer key_conv_reshape
I0625 17:42:24.800339  6741 net.cpp:454] key_conv_reshape <- key_conv
I0625 17:42:24.800345  6741 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0625 17:42:24.800365  6741 net.cpp:150] Setting up key_conv_reshape
I0625 17:42:24.800370  6741 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0625 17:42:24.800374  6741 net.cpp:165] Memory required for data: 1451584456
I0625 17:42:24.800376  6741 layer_factory.hpp:77] Creating layer value_conv_reshape
I0625 17:42:24.800382  6741 net.cpp:106] Creating Layer value_conv_reshape
I0625 17:42:24.800386  6741 net.cpp:454] value_conv_reshape <- value_conv
I0625 17:42:24.800391  6741 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0625 17:42:24.800411  6741 net.cpp:150] Setting up value_conv_reshape
I0625 17:42:24.800416  6741 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0625 17:42:24.800418  6741 net.cpp:165] Memory required for data: 1453427656
I0625 17:42:24.800421  6741 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0625 17:42:24.800884  6741 net.cpp:106] Creating Layer query_conv_reshape_perm
I0625 17:42:24.800892  6741 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0625 17:42:24.800899  6741 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0625 17:42:24.801005  6741 net.cpp:150] Setting up query_conv_reshape_perm
I0625 17:42:24.801010  6741 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0625 17:42:24.801012  6741 net.cpp:165] Memory required for data: 1453658056
I0625 17:42:24.801013  6741 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0625 17:42:24.801028  6741 net.cpp:106] Creating Layer key_conv_reshape_perm
I0625 17:42:24.801031  6741 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0625 17:42:24.801035  6741 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0625 17:42:24.801103  6741 net.cpp:150] Setting up key_conv_reshape_perm
I0625 17:42:24.801107  6741 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0625 17:42:24.801108  6741 net.cpp:165] Memory required for data: 1453888456
I0625 17:42:24.801110  6741 layer_factory.hpp:77] Creating layer energy
I0625 17:42:24.801126  6741 net.cpp:106] Creating Layer energy
I0625 17:42:24.801129  6741 net.cpp:454] energy <- query_conv_reshape_perm
I0625 17:42:24.801131  6741 net.cpp:454] energy <- key_conv_reshape_perm
I0625 17:42:24.801144  6741 net.cpp:411] energy -> energy
I0625 17:42:24.801169  6741 net.cpp:150] Setting up energy
I0625 17:42:24.801173  6741 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 17:42:24.801174  6741 net.cpp:165] Memory required for data: 1457128456
I0625 17:42:24.801177  6741 layer_factory.hpp:77] Creating layer attention
I0625 17:42:24.801180  6741 net.cpp:106] Creating Layer attention
I0625 17:42:24.801182  6741 net.cpp:454] attention <- energy
I0625 17:42:24.801184  6741 net.cpp:411] attention -> attention
I0625 17:42:24.801345  6741 net.cpp:150] Setting up attention
I0625 17:42:24.801352  6741 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 17:42:24.801353  6741 net.cpp:165] Memory required for data: 1460368456
I0625 17:42:24.801355  6741 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0625 17:42:24.801358  6741 net.cpp:106] Creating Layer value_conv_reshape_perm
I0625 17:42:24.801362  6741 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0625 17:42:24.801365  6741 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0625 17:42:24.801439  6741 net.cpp:150] Setting up value_conv_reshape_perm
I0625 17:42:24.801441  6741 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0625 17:42:24.801443  6741 net.cpp:165] Memory required for data: 1462211656
I0625 17:42:24.801455  6741 layer_factory.hpp:77] Creating layer attention_perm
I0625 17:42:24.801457  6741 net.cpp:106] Creating Layer attention_perm
I0625 17:42:24.801458  6741 net.cpp:454] attention_perm <- attention
I0625 17:42:24.801462  6741 net.cpp:411] attention_perm -> attention_perm
I0625 17:42:24.801532  6741 net.cpp:150] Setting up attention_perm
I0625 17:42:24.801534  6741 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0625 17:42:24.801537  6741 net.cpp:165] Memory required for data: 1465451656
I0625 17:42:24.801548  6741 layer_factory.hpp:77] Creating layer out
I0625 17:42:24.801550  6741 net.cpp:106] Creating Layer out
I0625 17:42:24.801553  6741 net.cpp:454] out <- value_conv_reshape_perm
I0625 17:42:24.801554  6741 net.cpp:454] out <- attention_perm
I0625 17:42:24.801558  6741 net.cpp:411] out -> out
I0625 17:42:24.801570  6741 net.cpp:150] Setting up out
I0625 17:42:24.801584  6741 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0625 17:42:24.801585  6741 net.cpp:165] Memory required for data: 1467294856
I0625 17:42:24.801587  6741 layer_factory.hpp:77] Creating layer out_reshape
I0625 17:42:24.801590  6741 net.cpp:106] Creating Layer out_reshape
I0625 17:42:24.801601  6741 net.cpp:454] out_reshape <- out
I0625 17:42:24.801605  6741 net.cpp:411] out_reshape -> out_reshape
I0625 17:42:24.801620  6741 net.cpp:150] Setting up out_reshape
I0625 17:42:24.801632  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.801635  6741 net.cpp:165] Memory required for data: 1469138056
I0625 17:42:24.801635  6741 layer_factory.hpp:77] Creating layer out_reshape_scale
I0625 17:42:24.801651  6741 net.cpp:106] Creating Layer out_reshape_scale
I0625 17:42:24.801652  6741 net.cpp:454] out_reshape_scale <- out_reshape
I0625 17:42:24.801656  6741 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0625 17:42:24.801723  6741 net.cpp:150] Setting up out_reshape_scale
I0625 17:42:24.801726  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.801728  6741 net.cpp:165] Memory required for data: 1470981256
I0625 17:42:24.801739  6741 layer_factory.hpp:77] Creating layer out_x
I0625 17:42:24.801743  6741 net.cpp:106] Creating Layer out_x
I0625 17:42:24.801745  6741 net.cpp:454] out_x <- out_reshape_scale
I0625 17:42:24.801748  6741 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0625 17:42:24.801751  6741 net.cpp:411] out_x -> out_x
I0625 17:42:24.801779  6741 net.cpp:150] Setting up out_x
I0625 17:42:24.801781  6741 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 17:42:24.801784  6741 net.cpp:165] Memory required for data: 1472824456
I0625 17:42:24.801795  6741 layer_factory.hpp:77] Creating layer mask_deconv2
I0625 17:42:24.801800  6741 net.cpp:106] Creating Layer mask_deconv2
I0625 17:42:24.801802  6741 net.cpp:454] mask_deconv2 <- out_x
I0625 17:42:24.801806  6741 net.cpp:411] mask_deconv2 -> mask_deconv2
I0625 17:42:24.802644  6741 net.cpp:150] Setting up mask_deconv2
I0625 17:42:24.802650  6741 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0625 17:42:24.802652  6741 net.cpp:165] Memory required for data: 1488065672
I0625 17:42:24.802656  6741 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0625 17:42:24.802661  6741 net.cpp:106] Creating Layer pool5_2_conv5
I0625 17:42:24.802664  6741 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0625 17:42:24.802670  6741 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0625 17:42:24.829530  6741 net.cpp:150] Setting up pool5_2_conv5
I0625 17:42:24.829557  6741 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 17:42:24.829560  6741 net.cpp:165] Memory required for data: 1518548104
I0625 17:42:24.829566  6741 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0625 17:42:24.829574  6741 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0625 17:42:24.829578  6741 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0625 17:42:24.829582  6741 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0625 17:42:24.829741  6741 net.cpp:150] Setting up pool5_2_conv5_relu
I0625 17:42:24.829747  6741 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 17:42:24.829759  6741 net.cpp:165] Memory required for data: 1549030536
I0625 17:42:24.829761  6741 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0625 17:42:24.829769  6741 net.cpp:106] Creating Layer pool5_2_conv6
I0625 17:42:24.829771  6741 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0625 17:42:24.829775  6741 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0625 17:42:24.880762  6741 net.cpp:150] Setting up pool5_2_conv6
I0625 17:42:24.880779  6741 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 17:42:24.880781  6741 net.cpp:165] Memory required for data: 1579512968
I0625 17:42:24.880796  6741 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0625 17:42:24.880803  6741 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0625 17:42:24.880817  6741 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0625 17:42:24.880821  6741 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0625 17:42:24.881338  6741 net.cpp:150] Setting up pool5_2_conv6_relu
I0625 17:42:24.881346  6741 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 17:42:24.881350  6741 net.cpp:165] Memory required for data: 1609995400
I0625 17:42:24.881361  6741 layer_factory.hpp:77] Creating layer mask_deconv3
I0625 17:42:24.881367  6741 net.cpp:106] Creating Layer mask_deconv3
I0625 17:42:24.881371  6741 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0625 17:42:24.881376  6741 net.cpp:411] mask_deconv3 -> mask_deconv3
I0625 17:42:24.881733  6741 net.cpp:150] Setting up mask_deconv3
I0625 17:42:24.881738  6741 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0625 17:42:24.881739  6741 net.cpp:165] Memory required for data: 1670960264
I0625 17:42:24.881743  6741 layer_factory.hpp:77] Creating layer mask_score
I0625 17:42:24.881759  6741 net.cpp:106] Creating Layer mask_score
I0625 17:42:24.881762  6741 net.cpp:454] mask_score <- mask_deconv3
I0625 17:42:24.881765  6741 net.cpp:411] mask_score -> mask_score
I0625 17:42:24.882375  6741 net.cpp:150] Setting up mask_score
I0625 17:42:24.882382  6741 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 17:42:24.882385  6741 net.cpp:165] Memory required for data: 1672865416
I0625 17:42:24.882398  6741 layer_factory.hpp:77] Creating layer prob
I0625 17:42:24.882405  6741 net.cpp:106] Creating Layer prob
I0625 17:42:24.882408  6741 net.cpp:454] prob <- mask_score
I0625 17:42:24.882411  6741 net.cpp:411] prob -> mask_score_softmax
I0625 17:42:24.882948  6741 net.cpp:150] Setting up prob
I0625 17:42:24.882956  6741 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 17:42:24.882957  6741 net.cpp:165] Memory required for data: 1674770568
I0625 17:42:24.882959  6741 layer_factory.hpp:77] Creating layer log
I0625 17:42:24.882974  6741 net.cpp:106] Creating Layer log
I0625 17:42:24.882977  6741 net.cpp:454] log <- mask_score_softmax
I0625 17:42:24.882979  6741 net.cpp:411] log -> log
I0625 17:42:24.883002  6741 net.cpp:150] Setting up log
I0625 17:42:24.883006  6741 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 17:42:24.883008  6741 net.cpp:165] Memory required for data: 1676675720
I0625 17:42:24.883009  6741 layer_factory.hpp:77] Creating layer mult1
I0625 17:42:24.883013  6741 net.cpp:106] Creating Layer mult1
I0625 17:42:24.883015  6741 net.cpp:454] mult1 <- log
I0625 17:42:24.883018  6741 net.cpp:454] mult1 <- mask_targets
I0625 17:42:24.883021  6741 net.cpp:411] mult1 -> mult1
I0625 17:42:24.883036  6741 net.cpp:150] Setting up mult1
I0625 17:42:24.883039  6741 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 17:42:24.883041  6741 net.cpp:165] Memory required for data: 1678580872
I0625 17:42:24.883044  6741 layer_factory.hpp:77] Creating layer cross_entropy
I0625 17:42:24.883057  6741 net.cpp:106] Creating Layer cross_entropy
I0625 17:42:24.883059  6741 net.cpp:454] cross_entropy <- mult1
I0625 17:42:24.883074  6741 net.cpp:411] cross_entropy -> cross_entropy
I0625 17:42:24.883086  6741 net.cpp:150] Setting up cross_entropy
I0625 17:42:24.883090  6741 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 17:42:24.883092  6741 net.cpp:165] Memory required for data: 1680486024
I0625 17:42:24.883095  6741 layer_factory.hpp:77] Creating layer ce_sum
I0625 17:42:24.883100  6741 net.cpp:106] Creating Layer ce_sum
I0625 17:42:24.883101  6741 net.cpp:454] ce_sum <- cross_entropy
I0625 17:42:24.883105  6741 net.cpp:411] ce_sum -> cross_entropy_sum
I0625 17:42:24.884274  6741 net.cpp:150] Setting up ce_sum
I0625 17:42:24.884281  6741 net.cpp:157] Top shape: 1 1 244 244 (59536)
I0625 17:42:24.884284  6741 net.cpp:165] Memory required for data: 1680724168
I0625 17:42:24.884297  6741 layer_factory.hpp:77] Creating layer ce_mean
I0625 17:42:24.884302  6741 net.cpp:106] Creating Layer ce_mean
I0625 17:42:24.884305  6741 net.cpp:454] ce_mean <- cross_entropy_sum
I0625 17:42:24.884310  6741 net.cpp:411] ce_mean -> cross_entropy_mean
I0625 17:42:24.884968  6741 net.cpp:150] Setting up ce_mean
I0625 17:42:24.884974  6741 net.cpp:157] Top shape: (1)
I0625 17:42:24.884976  6741 net.cpp:160]     with loss weight 1
I0625 17:42:24.884984  6741 net.cpp:165] Memory required for data: 1680724172
I0625 17:42:24.884986  6741 net.cpp:226] ce_mean needs backward computation.
I0625 17:42:24.884987  6741 net.cpp:226] ce_sum needs backward computation.
I0625 17:42:24.884989  6741 net.cpp:226] cross_entropy needs backward computation.
I0625 17:42:24.884990  6741 net.cpp:226] mult1 needs backward computation.
I0625 17:42:24.884992  6741 net.cpp:226] log needs backward computation.
I0625 17:42:24.884994  6741 net.cpp:226] prob needs backward computation.
I0625 17:42:24.884996  6741 net.cpp:226] mask_score needs backward computation.
I0625 17:42:24.884997  6741 net.cpp:226] mask_deconv3 needs backward computation.
I0625 17:42:24.884999  6741 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0625 17:42:24.885001  6741 net.cpp:226] pool5_2_conv6 needs backward computation.
I0625 17:42:24.885002  6741 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0625 17:42:24.885004  6741 net.cpp:226] pool5_2_conv5 needs backward computation.
I0625 17:42:24.885006  6741 net.cpp:226] mask_deconv2 needs backward computation.
I0625 17:42:24.885007  6741 net.cpp:226] out_x needs backward computation.
I0625 17:42:24.885010  6741 net.cpp:226] out_reshape_scale needs backward computation.
I0625 17:42:24.885012  6741 net.cpp:226] out_reshape needs backward computation.
I0625 17:42:24.885015  6741 net.cpp:226] out needs backward computation.
I0625 17:42:24.885016  6741 net.cpp:226] attention_perm needs backward computation.
I0625 17:42:24.885018  6741 net.cpp:226] value_conv_reshape_perm needs backward computation.
I0625 17:42:24.885020  6741 net.cpp:226] attention needs backward computation.
I0625 17:42:24.885022  6741 net.cpp:226] energy needs backward computation.
I0625 17:42:24.885025  6741 net.cpp:226] key_conv_reshape_perm needs backward computation.
I0625 17:42:24.885026  6741 net.cpp:226] query_conv_reshape_perm needs backward computation.
I0625 17:42:24.885028  6741 net.cpp:226] value_conv_reshape needs backward computation.
I0625 17:42:24.885030  6741 net.cpp:226] key_conv_reshape needs backward computation.
I0625 17:42:24.885031  6741 net.cpp:226] query_conv_reshape needs backward computation.
I0625 17:42:24.885033  6741 net.cpp:226] value_conv needs backward computation.
I0625 17:42:24.885035  6741 net.cpp:226] key_conv needs backward computation.
I0625 17:42:24.885037  6741 net.cpp:226] query_conv needs backward computation.
I0625 17:42:24.885040  6741 net.cpp:226] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split needs backward computation.
I0625 17:42:24.885041  6741 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0625 17:42:24.885043  6741 net.cpp:226] pool5_2_conv4 needs backward computation.
I0625 17:42:24.885046  6741 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0625 17:42:24.885047  6741 net.cpp:226] pool5_2_conv3 needs backward computation.
I0625 17:42:24.885049  6741 net.cpp:226] mask_deconv1 needs backward computation.
I0625 17:42:24.885051  6741 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0625 17:42:24.885052  6741 net.cpp:226] pool5_2_conv2 needs backward computation.
I0625 17:42:24.885054  6741 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0625 17:42:24.885056  6741 net.cpp:226] pool5_2_conv needs backward computation.
I0625 17:42:24.885058  6741 net.cpp:226] roi_pool5_2 needs backward computation.
I0625 17:42:24.885061  6741 net.cpp:226] loss_bbox needs backward computation.
I0625 17:42:24.885063  6741 net.cpp:226] loss_cls needs backward computation.
I0625 17:42:24.885066  6741 net.cpp:226] loss_attribute needs backward computation.
I0625 17:42:24.885067  6741 net.cpp:226] bbox_pred needs backward computation.
I0625 17:42:24.885069  6741 net.cpp:226] cls_score needs backward computation.
I0625 17:42:24.885071  6741 net.cpp:226] attr_score_pos_shift needs backward computation.
I0625 17:42:24.885074  6741 net.cpp:226] attr_score_pos needs backward computation.
I0625 17:42:24.885076  6741 net.cpp:226] attr_score needs backward computation.
I0625 17:42:24.885078  6741 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0625 17:42:24.885080  6741 net.cpp:226] relu7 needs backward computation.
I0625 17:42:24.885082  6741 net.cpp:226] fc7 needs backward computation.
I0625 17:42:24.885083  6741 net.cpp:226] relu6 needs backward computation.
I0625 17:42:24.885085  6741 net.cpp:226] fc6 needs backward computation.
I0625 17:42:24.885087  6741 net.cpp:226] roi_pool5 needs backward computation.
I0625 17:42:24.885089  6741 net.cpp:226] roi-data needs backward computation.
I0625 17:42:24.885093  6741 net.cpp:226] proposal needs backward computation.
I0625 17:42:24.885097  6741 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0625 17:42:24.885099  6741 net.cpp:226] rpn_cls_prob needs backward computation.
I0625 17:42:24.885102  6741 net.cpp:226] rpn_loss_bbox needs backward computation.
I0625 17:42:24.885103  6741 net.cpp:226] rpn_loss_cls needs backward computation.
I0625 17:42:24.885107  6741 net.cpp:226] rpn-data needs backward computation.
I0625 17:42:24.885112  6741 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0625 17:42:24.885114  6741 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0625 17:42:24.885116  6741 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0625 17:42:24.885118  6741 net.cpp:226] rpn_bbox_pred needs backward computation.
I0625 17:42:24.885120  6741 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0625 17:42:24.885123  6741 net.cpp:226] rpn_cls_score needs backward computation.
I0625 17:42:24.885124  6741 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0625 17:42:24.885128  6741 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0625 17:42:24.885128  6741 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0625 17:42:24.885130  6741 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0625 17:42:24.885133  6741 net.cpp:226] relu5_3 needs backward computation.
I0625 17:42:24.885134  6741 net.cpp:226] conv5_3 needs backward computation.
I0625 17:42:24.885136  6741 net.cpp:226] relu5_2 needs backward computation.
I0625 17:42:24.885138  6741 net.cpp:226] conv5_2 needs backward computation.
I0625 17:42:24.885140  6741 net.cpp:226] relu5_1 needs backward computation.
I0625 17:42:24.885141  6741 net.cpp:226] conv5_1 needs backward computation.
I0625 17:42:24.885143  6741 net.cpp:226] pool4 needs backward computation.
I0625 17:42:24.885145  6741 net.cpp:226] relu4_3 needs backward computation.
I0625 17:42:24.885148  6741 net.cpp:226] conv4_3 needs backward computation.
I0625 17:42:24.885149  6741 net.cpp:226] relu4_2 needs backward computation.
I0625 17:42:24.885150  6741 net.cpp:226] conv4_2 needs backward computation.
I0625 17:42:24.885152  6741 net.cpp:226] relu4_1 needs backward computation.
I0625 17:42:24.885154  6741 net.cpp:226] conv4_1 needs backward computation.
I0625 17:42:24.885156  6741 net.cpp:226] pool3 needs backward computation.
I0625 17:42:24.885159  6741 net.cpp:226] relu3_3 needs backward computation.
I0625 17:42:24.885159  6741 net.cpp:226] conv3_3 needs backward computation.
I0625 17:42:24.885161  6741 net.cpp:226] relu3_2 needs backward computation.
I0625 17:42:24.885164  6741 net.cpp:226] conv3_2 needs backward computation.
I0625 17:42:24.885164  6741 net.cpp:226] relu3_1 needs backward computation.
I0625 17:42:24.885166  6741 net.cpp:226] conv3_1 needs backward computation.
I0625 17:42:24.885169  6741 net.cpp:228] pool2 does not need backward computation.
I0625 17:42:24.885171  6741 net.cpp:228] relu2_2 does not need backward computation.
I0625 17:42:24.885172  6741 net.cpp:228] conv2_2 does not need backward computation.
I0625 17:42:24.885174  6741 net.cpp:228] relu2_1 does not need backward computation.
I0625 17:42:24.885176  6741 net.cpp:228] conv2_1 does not need backward computation.
I0625 17:42:24.885179  6741 net.cpp:228] pool1 does not need backward computation.
I0625 17:42:24.885180  6741 net.cpp:228] relu1_2 does not need backward computation.
I0625 17:42:24.885182  6741 net.cpp:228] conv1_2 does not need backward computation.
I0625 17:42:24.885185  6741 net.cpp:228] relu1_1 does not need backward computation.
I0625 17:42:24.885186  6741 net.cpp:228] conv1_1 does not need backward computation.
I0625 17:42:24.885188  6741 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0625 17:42:24.885191  6741 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0625 17:42:24.885193  6741 net.cpp:228] data_input-data_0_split does not need backward computation.
I0625 17:42:24.885196  6741 net.cpp:228] input-data does not need backward computation.
I0625 17:42:24.885197  6741 net.cpp:270] This network produces output cross_entropy_mean
I0625 17:42:24.885200  6741 net.cpp:270] This network produces output loss_attribute
I0625 17:42:24.885202  6741 net.cpp:270] This network produces output loss_bbox
I0625 17:42:24.885205  6741 net.cpp:270] This network produces output loss_cls
I0625 17:42:24.885205  6741 net.cpp:270] This network produces output rpn_cls_loss
I0625 17:42:24.885207  6741 net.cpp:270] This network produces output rpn_loss_bbox
I0625 17:42:24.885258  6741 net.cpp:283] Network initialization done.
I0625 17:42:24.885426  6741 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0625 17:42:27.223969  6741 net.cpp:816] Ignoring source layer pool5
I0625 17:42:27.287756  6741 net.cpp:816] Ignoring source layer drop6
I0625 17:42:27.297842  6741 net.cpp:816] Ignoring source layer drop7
I0625 17:42:27.297857  6741 net.cpp:816] Ignoring source layer fc8
Solving...
[ 0  8 10]
[0 1 5]
I0625 17:42:28.441855  6741 solver.cpp:229] Iteration 0, loss = 5.56851
I0625 17:42:28.496750  6741 solver.cpp:245]     Train net output #0: cross_entropy_mean = 1.54325 (* 1 = 1.54325 loss)
I0625 17:42:28.496769  6741 solver.cpp:245]     Train net output #1: loss_attribute = 0.304792 (* 1 = 0.304792 loss)
I0625 17:42:28.496775  6741 solver.cpp:245]     Train net output #2: loss_bbox = 0.0916567 (* 2 = 0.183313 loss)
I0625 17:42:28.496781  6741 solver.cpp:245]     Train net output #3: loss_cls = 0.947394 (* 3 = 2.84218 loss)
I0625 17:42:28.496798  6741 solver.cpp:245]     Train net output #4: rpn_cls_loss = 0.73882 (* 1 = 0.73882 loss)
I0625 17:42:28.496803  6741 solver.cpp:245]     Train net output #5: rpn_loss_bbox = 0.0189577 (* 1 = 0.0189577 loss)
I0625 17:42:28.496821  6741 sgd_solver.cpp:106] Iteration 0, lr = 0.001
[ 0  4 13]
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 171, in train_net
    model_paths = sw.train_model(max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 110, in train_model
    self.solver.step(1)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_target_layer.py", line 382, in forward
    color_img = label_colours.take(gt_mask, axis=0).astype('uint8')
IndexError: index 13 is out of bounds for size 11
