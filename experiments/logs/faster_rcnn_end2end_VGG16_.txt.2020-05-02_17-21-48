+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2020-05-02_17-21-48
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2020-05-02_17-21-48
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/vgg16_faster_rcnn_iter_200000_imgwise.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/vgg16_faster_rcnn_iter_200000_imgwise.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 36,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
29646 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 29646 -> 29646
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0502 17:21:59.506029  4298 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.0001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0502 17:21:59.506047  4298 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0502 17:21:59.508199  4298 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  top: "attrArrayShift"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "attr_score_pos_shift"
  type: "Eltwise"
  bottom: "attr_score_pos"
  bottom: "attrArrayShift"
  top: "attr_score_pos_shift"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "SigmoidCrossEntropyLoss"
  bottom: "attr_score_pos_shift"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0502 17:21:59.508478  4298 layer_factory.hpp:77] Creating layer input-data
I0502 17:21:59.599030  4298 net.cpp:106] Creating Layer input-data
I0502 17:21:59.599045  4298 net.cpp:411] input-data -> data
I0502 17:21:59.599053  4298 net.cpp:411] input-data -> im_info
I0502 17:21:59.599057  4298 net.cpp:411] input-data -> gt_boxes
I0502 17:21:59.599062  4298 net.cpp:411] input-data -> seg_mask_inds
I0502 17:21:59.599066  4298 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0502 17:21:59.696249  4298 net.cpp:150] Setting up input-data
I0502 17:21:59.696264  4298 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0502 17:21:59.696267  4298 net.cpp:157] Top shape: 1 3 (3)
I0502 17:21:59.696270  4298 net.cpp:157] Top shape: 1 4 (4)
I0502 17:21:59.696272  4298 net.cpp:157] Top shape: 1 2 (2)
I0502 17:21:59.696274  4298 net.cpp:157] Top shape: 1 1 (1)
I0502 17:21:59.696276  4298 net.cpp:165] Memory required for data: 7200040
I0502 17:21:59.696280  4298 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0502 17:21:59.696293  4298 net.cpp:106] Creating Layer data_input-data_0_split
I0502 17:21:59.696296  4298 net.cpp:454] data_input-data_0_split <- data
I0502 17:21:59.696301  4298 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0502 17:21:59.696307  4298 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0502 17:21:59.696327  4298 net.cpp:150] Setting up data_input-data_0_split
I0502 17:21:59.696331  4298 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0502 17:21:59.696334  4298 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0502 17:21:59.696336  4298 net.cpp:165] Memory required for data: 21600040
I0502 17:21:59.696337  4298 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0502 17:21:59.696341  4298 net.cpp:106] Creating Layer im_info_input-data_1_split
I0502 17:21:59.696344  4298 net.cpp:454] im_info_input-data_1_split <- im_info
I0502 17:21:59.696347  4298 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0502 17:21:59.696350  4298 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0502 17:21:59.696355  4298 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0502 17:21:59.696378  4298 net.cpp:150] Setting up im_info_input-data_1_split
I0502 17:21:59.696382  4298 net.cpp:157] Top shape: 1 3 (3)
I0502 17:21:59.696384  4298 net.cpp:157] Top shape: 1 3 (3)
I0502 17:21:59.696386  4298 net.cpp:157] Top shape: 1 3 (3)
I0502 17:21:59.696388  4298 net.cpp:165] Memory required for data: 21600076
I0502 17:21:59.696390  4298 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0502 17:21:59.696393  4298 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0502 17:21:59.696394  4298 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0502 17:21:59.696398  4298 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0502 17:21:59.696401  4298 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0502 17:21:59.696416  4298 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0502 17:21:59.696420  4298 net.cpp:157] Top shape: 1 4 (4)
I0502 17:21:59.696422  4298 net.cpp:157] Top shape: 1 4 (4)
I0502 17:21:59.696424  4298 net.cpp:165] Memory required for data: 21600108
I0502 17:21:59.696426  4298 layer_factory.hpp:77] Creating layer conv1_1
I0502 17:21:59.696435  4298 net.cpp:106] Creating Layer conv1_1
I0502 17:21:59.696439  4298 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0502 17:21:59.696441  4298 net.cpp:411] conv1_1 -> conv1_1
I0502 17:22:00.115058  4298 net.cpp:150] Setting up conv1_1
I0502 17:22:00.115078  4298 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0502 17:22:00.115080  4298 net.cpp:165] Memory required for data: 175200108
I0502 17:22:00.115329  4298 layer_factory.hpp:77] Creating layer relu1_1
I0502 17:22:00.115351  4298 net.cpp:106] Creating Layer relu1_1
I0502 17:22:00.115355  4298 net.cpp:454] relu1_1 <- conv1_1
I0502 17:22:00.115358  4298 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0502 17:22:00.115475  4298 net.cpp:150] Setting up relu1_1
I0502 17:22:00.115481  4298 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0502 17:22:00.115483  4298 net.cpp:165] Memory required for data: 328800108
I0502 17:22:00.115485  4298 layer_factory.hpp:77] Creating layer conv1_2
I0502 17:22:00.115492  4298 net.cpp:106] Creating Layer conv1_2
I0502 17:22:00.115494  4298 net.cpp:454] conv1_2 <- conv1_1
I0502 17:22:00.115499  4298 net.cpp:411] conv1_2 -> conv1_2
I0502 17:22:00.117590  4298 net.cpp:150] Setting up conv1_2
I0502 17:22:00.117600  4298 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0502 17:22:00.117602  4298 net.cpp:165] Memory required for data: 482400108
I0502 17:22:00.117609  4298 layer_factory.hpp:77] Creating layer relu1_2
I0502 17:22:00.117614  4298 net.cpp:106] Creating Layer relu1_2
I0502 17:22:00.117617  4298 net.cpp:454] relu1_2 <- conv1_2
I0502 17:22:00.117620  4298 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0502 17:22:00.117743  4298 net.cpp:150] Setting up relu1_2
I0502 17:22:00.117749  4298 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0502 17:22:00.117750  4298 net.cpp:165] Memory required for data: 636000108
I0502 17:22:00.117753  4298 layer_factory.hpp:77] Creating layer pool1
I0502 17:22:00.117759  4298 net.cpp:106] Creating Layer pool1
I0502 17:22:00.117761  4298 net.cpp:454] pool1 <- conv1_2
I0502 17:22:00.117764  4298 net.cpp:411] pool1 -> pool1
I0502 17:22:00.117794  4298 net.cpp:150] Setting up pool1
I0502 17:22:00.117799  4298 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0502 17:22:00.117800  4298 net.cpp:165] Memory required for data: 674400108
I0502 17:22:00.117802  4298 layer_factory.hpp:77] Creating layer conv2_1
I0502 17:22:00.117807  4298 net.cpp:106] Creating Layer conv2_1
I0502 17:22:00.117810  4298 net.cpp:454] conv2_1 <- pool1
I0502 17:22:00.117812  4298 net.cpp:411] conv2_1 -> conv2_1
I0502 17:22:00.119513  4298 net.cpp:150] Setting up conv2_1
I0502 17:22:00.119521  4298 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0502 17:22:00.119524  4298 net.cpp:165] Memory required for data: 751200108
I0502 17:22:00.119529  4298 layer_factory.hpp:77] Creating layer relu2_1
I0502 17:22:00.119534  4298 net.cpp:106] Creating Layer relu2_1
I0502 17:22:00.119535  4298 net.cpp:454] relu2_1 <- conv2_1
I0502 17:22:00.119539  4298 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0502 17:22:00.120007  4298 net.cpp:150] Setting up relu2_1
I0502 17:22:00.120015  4298 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0502 17:22:00.120018  4298 net.cpp:165] Memory required for data: 828000108
I0502 17:22:00.120019  4298 layer_factory.hpp:77] Creating layer conv2_2
I0502 17:22:00.120024  4298 net.cpp:106] Creating Layer conv2_2
I0502 17:22:00.120028  4298 net.cpp:454] conv2_2 <- conv2_1
I0502 17:22:00.120030  4298 net.cpp:411] conv2_2 -> conv2_2
I0502 17:22:00.121275  4298 net.cpp:150] Setting up conv2_2
I0502 17:22:00.121284  4298 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0502 17:22:00.121285  4298 net.cpp:165] Memory required for data: 904800108
I0502 17:22:00.121290  4298 layer_factory.hpp:77] Creating layer relu2_2
I0502 17:22:00.121294  4298 net.cpp:106] Creating Layer relu2_2
I0502 17:22:00.121296  4298 net.cpp:454] relu2_2 <- conv2_2
I0502 17:22:00.121299  4298 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0502 17:22:00.121417  4298 net.cpp:150] Setting up relu2_2
I0502 17:22:00.121423  4298 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0502 17:22:00.121425  4298 net.cpp:165] Memory required for data: 981600108
I0502 17:22:00.121428  4298 layer_factory.hpp:77] Creating layer pool2
I0502 17:22:00.121431  4298 net.cpp:106] Creating Layer pool2
I0502 17:22:00.121433  4298 net.cpp:454] pool2 <- conv2_2
I0502 17:22:00.121436  4298 net.cpp:411] pool2 -> pool2
I0502 17:22:00.121484  4298 net.cpp:150] Setting up pool2
I0502 17:22:00.121496  4298 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0502 17:22:00.121498  4298 net.cpp:165] Memory required for data: 1000800108
I0502 17:22:00.121500  4298 layer_factory.hpp:77] Creating layer conv3_1
I0502 17:22:00.121515  4298 net.cpp:106] Creating Layer conv3_1
I0502 17:22:00.121516  4298 net.cpp:454] conv3_1 <- pool2
I0502 17:22:00.121520  4298 net.cpp:411] conv3_1 -> conv3_1
I0502 17:22:00.123256  4298 net.cpp:150] Setting up conv3_1
I0502 17:22:00.123265  4298 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0502 17:22:00.123267  4298 net.cpp:165] Memory required for data: 1039200108
I0502 17:22:00.123273  4298 layer_factory.hpp:77] Creating layer relu3_1
I0502 17:22:00.123277  4298 net.cpp:106] Creating Layer relu3_1
I0502 17:22:00.123281  4298 net.cpp:454] relu3_1 <- conv3_1
I0502 17:22:00.123293  4298 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0502 17:22:00.123402  4298 net.cpp:150] Setting up relu3_1
I0502 17:22:00.123409  4298 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0502 17:22:00.123410  4298 net.cpp:165] Memory required for data: 1077600108
I0502 17:22:00.123412  4298 layer_factory.hpp:77] Creating layer conv3_2
I0502 17:22:00.123419  4298 net.cpp:106] Creating Layer conv3_2
I0502 17:22:00.123420  4298 net.cpp:454] conv3_2 <- conv3_1
I0502 17:22:00.123423  4298 net.cpp:411] conv3_2 -> conv3_2
I0502 17:22:00.125303  4298 net.cpp:150] Setting up conv3_2
I0502 17:22:00.125310  4298 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0502 17:22:00.125313  4298 net.cpp:165] Memory required for data: 1116000108
I0502 17:22:00.125316  4298 layer_factory.hpp:77] Creating layer relu3_2
I0502 17:22:00.125320  4298 net.cpp:106] Creating Layer relu3_2
I0502 17:22:00.125324  4298 net.cpp:454] relu3_2 <- conv3_2
I0502 17:22:00.125326  4298 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0502 17:22:00.125456  4298 net.cpp:150] Setting up relu3_2
I0502 17:22:00.125463  4298 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0502 17:22:00.125474  4298 net.cpp:165] Memory required for data: 1154400108
I0502 17:22:00.125476  4298 layer_factory.hpp:77] Creating layer conv3_3
I0502 17:22:00.125483  4298 net.cpp:106] Creating Layer conv3_3
I0502 17:22:00.125484  4298 net.cpp:454] conv3_3 <- conv3_2
I0502 17:22:00.125497  4298 net.cpp:411] conv3_3 -> conv3_3
I0502 17:22:00.127569  4298 net.cpp:150] Setting up conv3_3
I0502 17:22:00.127579  4298 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0502 17:22:00.127593  4298 net.cpp:165] Memory required for data: 1192800108
I0502 17:22:00.127598  4298 layer_factory.hpp:77] Creating layer relu3_3
I0502 17:22:00.127602  4298 net.cpp:106] Creating Layer relu3_3
I0502 17:22:00.127605  4298 net.cpp:454] relu3_3 <- conv3_3
I0502 17:22:00.127609  4298 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0502 17:22:00.127773  4298 net.cpp:150] Setting up relu3_3
I0502 17:22:00.127779  4298 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0502 17:22:00.127791  4298 net.cpp:165] Memory required for data: 1231200108
I0502 17:22:00.127794  4298 layer_factory.hpp:77] Creating layer pool3
I0502 17:22:00.127799  4298 net.cpp:106] Creating Layer pool3
I0502 17:22:00.127810  4298 net.cpp:454] pool3 <- conv3_3
I0502 17:22:00.127813  4298 net.cpp:411] pool3 -> pool3
I0502 17:22:00.127859  4298 net.cpp:150] Setting up pool3
I0502 17:22:00.127863  4298 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0502 17:22:00.127866  4298 net.cpp:165] Memory required for data: 1240800108
I0502 17:22:00.127882  4298 layer_factory.hpp:77] Creating layer conv4_1
I0502 17:22:00.127887  4298 net.cpp:106] Creating Layer conv4_1
I0502 17:22:00.127888  4298 net.cpp:454] conv4_1 <- pool3
I0502 17:22:00.127900  4298 net.cpp:411] conv4_1 -> conv4_1
I0502 17:22:00.131687  4298 net.cpp:150] Setting up conv4_1
I0502 17:22:00.131706  4298 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0502 17:22:00.131708  4298 net.cpp:165] Memory required for data: 1260000108
I0502 17:22:00.131716  4298 layer_factory.hpp:77] Creating layer relu4_1
I0502 17:22:00.131724  4298 net.cpp:106] Creating Layer relu4_1
I0502 17:22:00.131728  4298 net.cpp:454] relu4_1 <- conv4_1
I0502 17:22:00.131731  4298 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0502 17:22:00.131883  4298 net.cpp:150] Setting up relu4_1
I0502 17:22:00.131889  4298 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0502 17:22:00.131891  4298 net.cpp:165] Memory required for data: 1279200108
I0502 17:22:00.131892  4298 layer_factory.hpp:77] Creating layer conv4_2
I0502 17:22:00.131909  4298 net.cpp:106] Creating Layer conv4_2
I0502 17:22:00.131912  4298 net.cpp:454] conv4_2 <- conv4_1
I0502 17:22:00.131929  4298 net.cpp:411] conv4_2 -> conv4_2
I0502 17:22:00.136796  4298 net.cpp:150] Setting up conv4_2
I0502 17:22:00.136826  4298 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0502 17:22:00.136827  4298 net.cpp:165] Memory required for data: 1298400108
I0502 17:22:00.136838  4298 layer_factory.hpp:77] Creating layer relu4_2
I0502 17:22:00.136857  4298 net.cpp:106] Creating Layer relu4_2
I0502 17:22:00.136862  4298 net.cpp:454] relu4_2 <- conv4_2
I0502 17:22:00.136867  4298 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0502 17:22:00.137678  4298 net.cpp:150] Setting up relu4_2
I0502 17:22:00.137686  4298 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0502 17:22:00.137698  4298 net.cpp:165] Memory required for data: 1317600108
I0502 17:22:00.137701  4298 layer_factory.hpp:77] Creating layer conv4_3
I0502 17:22:00.137707  4298 net.cpp:106] Creating Layer conv4_3
I0502 17:22:00.137710  4298 net.cpp:454] conv4_3 <- conv4_2
I0502 17:22:00.137724  4298 net.cpp:411] conv4_3 -> conv4_3
I0502 17:22:00.144363  4298 net.cpp:150] Setting up conv4_3
I0502 17:22:00.144397  4298 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0502 17:22:00.144400  4298 net.cpp:165] Memory required for data: 1336800108
I0502 17:22:00.144423  4298 layer_factory.hpp:77] Creating layer relu4_3
I0502 17:22:00.144452  4298 net.cpp:106] Creating Layer relu4_3
I0502 17:22:00.144459  4298 net.cpp:454] relu4_3 <- conv4_3
I0502 17:22:00.144464  4298 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0502 17:22:00.144609  4298 net.cpp:150] Setting up relu4_3
I0502 17:22:00.144615  4298 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0502 17:22:00.144627  4298 net.cpp:165] Memory required for data: 1356000108
I0502 17:22:00.144629  4298 layer_factory.hpp:77] Creating layer pool4
I0502 17:22:00.144635  4298 net.cpp:106] Creating Layer pool4
I0502 17:22:00.144637  4298 net.cpp:454] pool4 <- conv4_3
I0502 17:22:00.144650  4298 net.cpp:411] pool4 -> pool4
I0502 17:22:00.144690  4298 net.cpp:150] Setting up pool4
I0502 17:22:00.144693  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.144695  4298 net.cpp:165] Memory required for data: 1360903020
I0502 17:22:00.144709  4298 layer_factory.hpp:77] Creating layer conv5_1
I0502 17:22:00.144716  4298 net.cpp:106] Creating Layer conv5_1
I0502 17:22:00.144727  4298 net.cpp:454] conv5_1 <- pool4
I0502 17:22:00.144731  4298 net.cpp:411] conv5_1 -> conv5_1
I0502 17:22:00.148908  4298 net.cpp:150] Setting up conv5_1
I0502 17:22:00.148941  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.148944  4298 net.cpp:165] Memory required for data: 1365805932
I0502 17:22:00.148952  4298 layer_factory.hpp:77] Creating layer relu5_1
I0502 17:22:00.148959  4298 net.cpp:106] Creating Layer relu5_1
I0502 17:22:00.148964  4298 net.cpp:454] relu5_1 <- conv5_1
I0502 17:22:00.148967  4298 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0502 17:22:00.149104  4298 net.cpp:150] Setting up relu5_1
I0502 17:22:00.149109  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.149121  4298 net.cpp:165] Memory required for data: 1370708844
I0502 17:22:00.149123  4298 layer_factory.hpp:77] Creating layer conv5_2
I0502 17:22:00.149130  4298 net.cpp:106] Creating Layer conv5_2
I0502 17:22:00.149143  4298 net.cpp:454] conv5_2 <- conv5_1
I0502 17:22:00.149147  4298 net.cpp:411] conv5_2 -> conv5_2
I0502 17:22:00.153414  4298 net.cpp:150] Setting up conv5_2
I0502 17:22:00.153436  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.153439  4298 net.cpp:165] Memory required for data: 1375611756
I0502 17:22:00.153446  4298 layer_factory.hpp:77] Creating layer relu5_2
I0502 17:22:00.153465  4298 net.cpp:106] Creating Layer relu5_2
I0502 17:22:00.153468  4298 net.cpp:454] relu5_2 <- conv5_2
I0502 17:22:00.153482  4298 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0502 17:22:00.153600  4298 net.cpp:150] Setting up relu5_2
I0502 17:22:00.153605  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.153607  4298 net.cpp:165] Memory required for data: 1380514668
I0502 17:22:00.153609  4298 layer_factory.hpp:77] Creating layer conv5_3
I0502 17:22:00.153628  4298 net.cpp:106] Creating Layer conv5_3
I0502 17:22:00.153631  4298 net.cpp:454] conv5_3 <- conv5_2
I0502 17:22:00.153635  4298 net.cpp:411] conv5_3 -> conv5_3
I0502 17:22:00.158221  4298 net.cpp:150] Setting up conv5_3
I0502 17:22:00.158241  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.158243  4298 net.cpp:165] Memory required for data: 1385417580
I0502 17:22:00.158251  4298 layer_factory.hpp:77] Creating layer relu5_3
I0502 17:22:00.158268  4298 net.cpp:106] Creating Layer relu5_3
I0502 17:22:00.158272  4298 net.cpp:454] relu5_3 <- conv5_3
I0502 17:22:00.158277  4298 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0502 17:22:00.158388  4298 net.cpp:150] Setting up relu5_3
I0502 17:22:00.158394  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.158396  4298 net.cpp:165] Memory required for data: 1390320492
I0502 17:22:00.158398  4298 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0502 17:22:00.158402  4298 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0502 17:22:00.158403  4298 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0502 17:22:00.158407  4298 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0502 17:22:00.158411  4298 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0502 17:22:00.158414  4298 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0502 17:22:00.158464  4298 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0502 17:22:00.158468  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.158481  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.158483  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.158485  4298 net.cpp:165] Memory required for data: 1405029228
I0502 17:22:00.158488  4298 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0502 17:22:00.158504  4298 net.cpp:106] Creating Layer rpn_conv/3x3
I0502 17:22:00.158505  4298 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0502 17:22:00.158519  4298 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0502 17:22:00.207994  4298 net.cpp:150] Setting up rpn_conv/3x3
I0502 17:22:00.208014  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.208015  4298 net.cpp:165] Memory required for data: 1409932140
I0502 17:22:00.208022  4298 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0502 17:22:00.208029  4298 net.cpp:106] Creating Layer rpn_relu/3x3
I0502 17:22:00.208034  4298 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0502 17:22:00.208037  4298 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0502 17:22:00.208163  4298 net.cpp:150] Setting up rpn_relu/3x3
I0502 17:22:00.208168  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.208170  4298 net.cpp:165] Memory required for data: 1414835052
I0502 17:22:00.208173  4298 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0502 17:22:00.208175  4298 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0502 17:22:00.208178  4298 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0502 17:22:00.208180  4298 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0502 17:22:00.208184  4298 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0502 17:22:00.208241  4298 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0502 17:22:00.208245  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.208247  4298 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0502 17:22:00.208248  4298 net.cpp:165] Memory required for data: 1424640876
I0502 17:22:00.208261  4298 layer_factory.hpp:77] Creating layer rpn_cls_score
I0502 17:22:00.208267  4298 net.cpp:106] Creating Layer rpn_cls_score
I0502 17:22:00.208269  4298 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0502 17:22:00.208273  4298 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0502 17:22:00.209785  4298 net.cpp:150] Setting up rpn_cls_score
I0502 17:22:00.209794  4298 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0502 17:22:00.209795  4298 net.cpp:165] Memory required for data: 1424928156
I0502 17:22:00.209800  4298 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0502 17:22:00.209803  4298 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0502 17:22:00.209805  4298 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0502 17:22:00.209808  4298 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0502 17:22:00.209823  4298 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0502 17:22:00.209870  4298 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0502 17:22:00.209874  4298 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0502 17:22:00.209885  4298 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0502 17:22:00.209887  4298 net.cpp:165] Memory required for data: 1425502716
I0502 17:22:00.209889  4298 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0502 17:22:00.209908  4298 net.cpp:106] Creating Layer rpn_bbox_pred
I0502 17:22:00.209909  4298 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0502 17:22:00.209913  4298 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0502 17:22:00.211347  4298 net.cpp:150] Setting up rpn_bbox_pred
I0502 17:22:00.211355  4298 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0502 17:22:00.211357  4298 net.cpp:165] Memory required for data: 1426077276
I0502 17:22:00.211361  4298 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0502 17:22:00.211364  4298 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0502 17:22:00.211367  4298 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0502 17:22:00.211370  4298 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0502 17:22:00.211385  4298 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0502 17:22:00.211429  4298 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0502 17:22:00.211433  4298 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0502 17:22:00.211446  4298 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0502 17:22:00.211447  4298 net.cpp:165] Memory required for data: 1427226396
I0502 17:22:00.211448  4298 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0502 17:22:00.211709  4298 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0502 17:22:00.211717  4298 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0502 17:22:00.211733  4298 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0502 17:22:00.211791  4298 net.cpp:150] Setting up rpn_cls_score_reshape
I0502 17:22:00.211797  4298 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0502 17:22:00.211809  4298 net.cpp:165] Memory required for data: 1427513676
I0502 17:22:00.211812  4298 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0502 17:22:00.211814  4298 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0502 17:22:00.211817  4298 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0502 17:22:00.211820  4298 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0502 17:22:00.211834  4298 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0502 17:22:00.211866  4298 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0502 17:22:00.211879  4298 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0502 17:22:00.211881  4298 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0502 17:22:00.211882  4298 net.cpp:165] Memory required for data: 1428088236
I0502 17:22:00.211884  4298 layer_factory.hpp:77] Creating layer rpn-data
I0502 17:22:00.212915  4298 net.cpp:106] Creating Layer rpn-data
I0502 17:22:00.212922  4298 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0502 17:22:00.212927  4298 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0502 17:22:00.212930  4298 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0502 17:22:00.212932  4298 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0502 17:22:00.212937  4298 net.cpp:411] rpn-data -> rpn_labels
I0502 17:22:00.212942  4298 net.cpp:411] rpn-data -> rpn_bbox_targets
I0502 17:22:00.212946  4298 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0502 17:22:00.212950  4298 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0502 17:22:00.213814  4298 net.cpp:150] Setting up rpn-data
I0502 17:22:00.213822  4298 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0502 17:22:00.213825  4298 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0502 17:22:00.213829  4298 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0502 17:22:00.213830  4298 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0502 17:22:00.213831  4298 net.cpp:165] Memory required for data: 1429955556
I0502 17:22:00.213835  4298 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0502 17:22:00.213840  4298 net.cpp:106] Creating Layer rpn_loss_cls
I0502 17:22:00.213842  4298 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0502 17:22:00.213847  4298 net.cpp:454] rpn_loss_cls <- rpn_labels
I0502 17:22:00.213852  4298 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0502 17:22:00.213861  4298 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0502 17:22:00.214459  4298 net.cpp:150] Setting up rpn_loss_cls
I0502 17:22:00.214468  4298 net.cpp:157] Top shape: (1)
I0502 17:22:00.214469  4298 net.cpp:160]     with loss weight 1
I0502 17:22:00.214476  4298 net.cpp:165] Memory required for data: 1429955560
I0502 17:22:00.214478  4298 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0502 17:22:00.214483  4298 net.cpp:106] Creating Layer rpn_loss_bbox
I0502 17:22:00.214496  4298 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0502 17:22:00.214499  4298 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0502 17:22:00.214502  4298 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0502 17:22:00.214505  4298 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0502 17:22:00.214509  4298 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0502 17:22:00.215631  4298 net.cpp:150] Setting up rpn_loss_bbox
I0502 17:22:00.215639  4298 net.cpp:157] Top shape: (1)
I0502 17:22:00.215641  4298 net.cpp:160]     with loss weight 1
I0502 17:22:00.215644  4298 net.cpp:165] Memory required for data: 1429955564
I0502 17:22:00.215646  4298 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0502 17:22:00.215651  4298 net.cpp:106] Creating Layer rpn_cls_prob
I0502 17:22:00.215653  4298 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0502 17:22:00.215656  4298 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0502 17:22:00.215817  4298 net.cpp:150] Setting up rpn_cls_prob
I0502 17:22:00.215823  4298 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0502 17:22:00.215826  4298 net.cpp:165] Memory required for data: 1430242844
I0502 17:22:00.215827  4298 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0502 17:22:00.215831  4298 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0502 17:22:00.215833  4298 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0502 17:22:00.215837  4298 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0502 17:22:00.215863  4298 net.cpp:150] Setting up rpn_cls_prob_reshape
I0502 17:22:00.215876  4298 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0502 17:22:00.215878  4298 net.cpp:165] Memory required for data: 1430530124
I0502 17:22:00.215879  4298 layer_factory.hpp:77] Creating layer proposal
I0502 17:22:00.218338  4298 net.cpp:106] Creating Layer proposal
I0502 17:22:00.218346  4298 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0502 17:22:00.218349  4298 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0502 17:22:00.218353  4298 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0502 17:22:00.218356  4298 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0502 17:22:00.219897  4298 net.cpp:150] Setting up proposal
I0502 17:22:00.219904  4298 net.cpp:157] Top shape: 1 5 (5)
I0502 17:22:00.219907  4298 net.cpp:165] Memory required for data: 1430530144
I0502 17:22:00.219908  4298 layer_factory.hpp:77] Creating layer roi-data
I0502 17:22:00.220350  4298 net.cpp:106] Creating Layer roi-data
I0502 17:22:00.220357  4298 net.cpp:454] roi-data <- rpn_rois
I0502 17:22:00.220361  4298 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0502 17:22:00.220364  4298 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0502 17:22:00.220366  4298 net.cpp:454] roi-data <- seg_mask_inds
I0502 17:22:00.220368  4298 net.cpp:454] roi-data <- flipped
I0502 17:22:00.220372  4298 net.cpp:411] roi-data -> rois
I0502 17:22:00.220378  4298 net.cpp:411] roi-data -> labels
I0502 17:22:00.220386  4298 net.cpp:411] roi-data -> bbox_targets
I0502 17:22:00.220393  4298 net.cpp:411] roi-data -> bbox_inside_weights
I0502 17:22:00.220400  4298 net.cpp:411] roi-data -> bbox_outside_weights
I0502 17:22:00.220410  4298 net.cpp:411] roi-data -> mask_targets
I0502 17:22:00.220418  4298 net.cpp:411] roi-data -> rois_pos
I0502 17:22:00.220427  4298 net.cpp:411] roi-data -> attrArray
I0502 17:22:00.220435  4298 net.cpp:411] roi-data -> attrArrayInd
I0502 17:22:00.220443  4298 net.cpp:411] roi-data -> attrArrayShift
I0502 17:22:00.220736  4298 net.cpp:150] Setting up roi-data
I0502 17:22:00.220744  4298 net.cpp:157] Top shape: 1 5 (5)
I0502 17:22:00.220749  4298 net.cpp:157] Top shape: 1 1 (1)
I0502 17:22:00.220754  4298 net.cpp:157] Top shape: 1 8 (8)
I0502 17:22:00.220759  4298 net.cpp:157] Top shape: 1 8 (8)
I0502 17:22:00.220764  4298 net.cpp:157] Top shape: 1 8 (8)
I0502 17:22:00.220769  4298 net.cpp:157] Top shape: 1 244 244 (59536)
I0502 17:22:00.220775  4298 net.cpp:157] Top shape: 1 5 (5)
I0502 17:22:00.220780  4298 net.cpp:157] Top shape: 1 7 (7)
I0502 17:22:00.220785  4298 net.cpp:157] Top shape: 1 7 (7)
I0502 17:22:00.220790  4298 net.cpp:157] Top shape: 1 7 (7)
I0502 17:22:00.220794  4298 net.cpp:165] Memory required for data: 1430768512
I0502 17:22:00.220798  4298 layer_factory.hpp:77] Creating layer roi_pool5
I0502 17:22:00.220810  4298 net.cpp:106] Creating Layer roi_pool5
I0502 17:22:00.220815  4298 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0502 17:22:00.220820  4298 net.cpp:454] roi_pool5 <- rois
I0502 17:22:00.220824  4298 net.cpp:411] roi_pool5 -> pool5
I0502 17:22:00.220830  4298 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0502 17:22:00.220894  4298 net.cpp:150] Setting up roi_pool5
I0502 17:22:00.220901  4298 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0502 17:22:00.220902  4298 net.cpp:165] Memory required for data: 1430868864
I0502 17:22:00.220904  4298 layer_factory.hpp:77] Creating layer fc6
I0502 17:22:00.220911  4298 net.cpp:106] Creating Layer fc6
I0502 17:22:00.220913  4298 net.cpp:454] fc6 <- pool5
I0502 17:22:00.220917  4298 net.cpp:411] fc6 -> fc6
I0502 17:22:00.365828  4298 net.cpp:150] Setting up fc6
I0502 17:22:00.365852  4298 net.cpp:157] Top shape: 1 4096 (4096)
I0502 17:22:00.365855  4298 net.cpp:165] Memory required for data: 1430885248
I0502 17:22:00.365869  4298 layer_factory.hpp:77] Creating layer relu6
I0502 17:22:00.365888  4298 net.cpp:106] Creating Layer relu6
I0502 17:22:00.365892  4298 net.cpp:454] relu6 <- fc6
I0502 17:22:00.365909  4298 net.cpp:397] relu6 -> fc6 (in-place)
I0502 17:22:00.366130  4298 net.cpp:150] Setting up relu6
I0502 17:22:00.366137  4298 net.cpp:157] Top shape: 1 4096 (4096)
I0502 17:22:00.366138  4298 net.cpp:165] Memory required for data: 1430901632
I0502 17:22:00.366142  4298 layer_factory.hpp:77] Creating layer fc7
I0502 17:22:00.366147  4298 net.cpp:106] Creating Layer fc7
I0502 17:22:00.366149  4298 net.cpp:454] fc7 <- fc6
I0502 17:22:00.366153  4298 net.cpp:411] fc7 -> fc7
I0502 17:22:00.389313  4298 net.cpp:150] Setting up fc7
I0502 17:22:00.389338  4298 net.cpp:157] Top shape: 1 4096 (4096)
I0502 17:22:00.389343  4298 net.cpp:165] Memory required for data: 1430918016
I0502 17:22:00.389350  4298 layer_factory.hpp:77] Creating layer relu7
I0502 17:22:00.389359  4298 net.cpp:106] Creating Layer relu7
I0502 17:22:00.389374  4298 net.cpp:454] relu7 <- fc7
I0502 17:22:00.389398  4298 net.cpp:397] relu7 -> fc7 (in-place)
I0502 17:22:00.389600  4298 net.cpp:150] Setting up relu7
I0502 17:22:00.389607  4298 net.cpp:157] Top shape: 1 4096 (4096)
I0502 17:22:00.389609  4298 net.cpp:165] Memory required for data: 1430934400
I0502 17:22:00.389611  4298 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0502 17:22:00.389616  4298 net.cpp:106] Creating Layer fc7_relu7_0_split
I0502 17:22:00.389618  4298 net.cpp:454] fc7_relu7_0_split <- fc7
I0502 17:22:00.389622  4298 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0502 17:22:00.389637  4298 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0502 17:22:00.389642  4298 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0502 17:22:00.389709  4298 net.cpp:150] Setting up fc7_relu7_0_split
I0502 17:22:00.389714  4298 net.cpp:157] Top shape: 1 4096 (4096)
I0502 17:22:00.389727  4298 net.cpp:157] Top shape: 1 4096 (4096)
I0502 17:22:00.389729  4298 net.cpp:157] Top shape: 1 4096 (4096)
I0502 17:22:00.389731  4298 net.cpp:165] Memory required for data: 1430983552
I0502 17:22:00.389734  4298 layer_factory.hpp:77] Creating layer attr_score
I0502 17:22:00.389748  4298 net.cpp:106] Creating Layer attr_score
I0502 17:22:00.389750  4298 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0502 17:22:00.389765  4298 net.cpp:411] attr_score -> attr_score
I0502 17:22:00.390425  4298 net.cpp:150] Setting up attr_score
I0502 17:22:00.390429  4298 net.cpp:157] Top shape: 1 7 (7)
I0502 17:22:00.390431  4298 net.cpp:165] Memory required for data: 1430983580
I0502 17:22:00.390435  4298 layer_factory.hpp:77] Creating layer attr_score_pos
I0502 17:22:00.390440  4298 net.cpp:106] Creating Layer attr_score_pos
I0502 17:22:00.390442  4298 net.cpp:454] attr_score_pos <- attr_score
I0502 17:22:00.390445  4298 net.cpp:454] attr_score_pos <- attrArrayInd
I0502 17:22:00.390447  4298 net.cpp:411] attr_score_pos -> attr_score_pos
I0502 17:22:00.390486  4298 net.cpp:150] Setting up attr_score_pos
I0502 17:22:00.390491  4298 net.cpp:157] Top shape: 1 7 (7)
I0502 17:22:00.390501  4298 net.cpp:165] Memory required for data: 1430983608
I0502 17:22:00.390503  4298 layer_factory.hpp:77] Creating layer attr_score_pos_shift
I0502 17:22:00.390506  4298 net.cpp:106] Creating Layer attr_score_pos_shift
I0502 17:22:00.390508  4298 net.cpp:454] attr_score_pos_shift <- attr_score_pos
I0502 17:22:00.390520  4298 net.cpp:454] attr_score_pos_shift <- attrArrayShift
I0502 17:22:00.390523  4298 net.cpp:411] attr_score_pos_shift -> attr_score_pos_shift
I0502 17:22:00.390550  4298 net.cpp:150] Setting up attr_score_pos_shift
I0502 17:22:00.390554  4298 net.cpp:157] Top shape: 1 7 (7)
I0502 17:22:00.390568  4298 net.cpp:165] Memory required for data: 1430983636
I0502 17:22:00.390569  4298 layer_factory.hpp:77] Creating layer cls_score
I0502 17:22:00.390573  4298 net.cpp:106] Creating Layer cls_score
I0502 17:22:00.390591  4298 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0502 17:22:00.390595  4298 net.cpp:411] cls_score -> cls_score
I0502 17:22:00.390838  4298 net.cpp:150] Setting up cls_score
I0502 17:22:00.390842  4298 net.cpp:157] Top shape: 1 2 (2)
I0502 17:22:00.390844  4298 net.cpp:165] Memory required for data: 1430983644
I0502 17:22:00.390847  4298 layer_factory.hpp:77] Creating layer bbox_pred
I0502 17:22:00.390851  4298 net.cpp:106] Creating Layer bbox_pred
I0502 17:22:00.390853  4298 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0502 17:22:00.390856  4298 net.cpp:411] bbox_pred -> bbox_pred
I0502 17:22:00.391607  4298 net.cpp:150] Setting up bbox_pred
I0502 17:22:00.391613  4298 net.cpp:157] Top shape: 1 8 (8)
I0502 17:22:00.391614  4298 net.cpp:165] Memory required for data: 1430983676
I0502 17:22:00.391618  4298 layer_factory.hpp:77] Creating layer loss_attribute
I0502 17:22:00.391623  4298 net.cpp:106] Creating Layer loss_attribute
I0502 17:22:00.391624  4298 net.cpp:454] loss_attribute <- attr_score_pos_shift
I0502 17:22:00.391628  4298 net.cpp:454] loss_attribute <- attrArray
I0502 17:22:00.391630  4298 net.cpp:411] loss_attribute -> loss_attribute
I0502 17:22:00.391691  4298 net.cpp:150] Setting up loss_attribute
I0502 17:22:00.391695  4298 net.cpp:157] Top shape: (1)
I0502 17:22:00.391697  4298 net.cpp:160]     with loss weight 1
I0502 17:22:00.391716  4298 net.cpp:165] Memory required for data: 1430983680
I0502 17:22:00.391717  4298 layer_factory.hpp:77] Creating layer loss_cls
I0502 17:22:00.391721  4298 net.cpp:106] Creating Layer loss_cls
I0502 17:22:00.391724  4298 net.cpp:454] loss_cls <- cls_score
I0502 17:22:00.391727  4298 net.cpp:454] loss_cls <- labels
I0502 17:22:00.391731  4298 net.cpp:411] loss_cls -> loss_cls
I0502 17:22:00.391736  4298 layer_factory.hpp:77] Creating layer loss_cls
I0502 17:22:00.392560  4298 net.cpp:150] Setting up loss_cls
I0502 17:22:00.392568  4298 net.cpp:157] Top shape: (1)
I0502 17:22:00.392580  4298 net.cpp:160]     with loss weight 3
I0502 17:22:00.392585  4298 net.cpp:165] Memory required for data: 1430983684
I0502 17:22:00.392587  4298 layer_factory.hpp:77] Creating layer loss_bbox
I0502 17:22:00.392606  4298 net.cpp:106] Creating Layer loss_bbox
I0502 17:22:00.392611  4298 net.cpp:454] loss_bbox <- bbox_pred
I0502 17:22:00.392613  4298 net.cpp:454] loss_bbox <- bbox_targets
I0502 17:22:00.392616  4298 net.cpp:454] loss_bbox <- bbox_inside_weights
I0502 17:22:00.392618  4298 net.cpp:454] loss_bbox <- bbox_outside_weights
I0502 17:22:00.392621  4298 net.cpp:411] loss_bbox -> loss_bbox
I0502 17:22:00.392696  4298 net.cpp:150] Setting up loss_bbox
I0502 17:22:00.392700  4298 net.cpp:157] Top shape: (1)
I0502 17:22:00.392701  4298 net.cpp:160]     with loss weight 2
I0502 17:22:00.392714  4298 net.cpp:165] Memory required for data: 1430983688
I0502 17:22:00.392717  4298 layer_factory.hpp:77] Creating layer roi_pool5_2
I0502 17:22:00.392721  4298 net.cpp:106] Creating Layer roi_pool5_2
I0502 17:22:00.392724  4298 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0502 17:22:00.392726  4298 net.cpp:454] roi_pool5_2 <- rois_pos
I0502 17:22:00.392740  4298 net.cpp:411] roi_pool5_2 -> pool5_2
I0502 17:22:00.392743  4298 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0502 17:22:00.392819  4298 net.cpp:150] Setting up roi_pool5_2
I0502 17:22:00.392823  4298 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0502 17:22:00.392835  4298 net.cpp:165] Memory required for data: 1431084040
I0502 17:22:00.392836  4298 layer_factory.hpp:77] Creating layer pool5_2_conv
I0502 17:22:00.392843  4298 net.cpp:106] Creating Layer pool5_2_conv
I0502 17:22:00.392855  4298 net.cpp:454] pool5_2_conv <- pool5_2
I0502 17:22:00.392859  4298 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0502 17:22:00.399576  4298 net.cpp:150] Setting up pool5_2_conv
I0502 17:22:00.399585  4298 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0502 17:22:00.399588  4298 net.cpp:165] Memory required for data: 1431184392
I0502 17:22:00.399602  4298 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0502 17:22:00.399607  4298 net.cpp:106] Creating Layer pool5_2_conv_relu
I0502 17:22:00.399610  4298 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0502 17:22:00.399614  4298 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0502 17:22:00.399744  4298 net.cpp:150] Setting up pool5_2_conv_relu
I0502 17:22:00.399750  4298 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0502 17:22:00.399752  4298 net.cpp:165] Memory required for data: 1431284744
I0502 17:22:00.399755  4298 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0502 17:22:00.399771  4298 net.cpp:106] Creating Layer pool5_2_conv2
I0502 17:22:00.399775  4298 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0502 17:22:00.399778  4298 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0502 17:22:00.449797  4298 net.cpp:150] Setting up pool5_2_conv2
I0502 17:22:00.449815  4298 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0502 17:22:00.449816  4298 net.cpp:165] Memory required for data: 1431385096
I0502 17:22:00.449824  4298 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0502 17:22:00.449832  4298 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0502 17:22:00.449847  4298 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0502 17:22:00.449852  4298 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0502 17:22:00.450013  4298 net.cpp:150] Setting up pool5_2_conv2_relu
I0502 17:22:00.450021  4298 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0502 17:22:00.450022  4298 net.cpp:165] Memory required for data: 1431485448
I0502 17:22:00.450024  4298 layer_factory.hpp:77] Creating layer mask_deconv1
I0502 17:22:00.465600  4298 net.cpp:106] Creating Layer mask_deconv1
I0502 17:22:00.465615  4298 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0502 17:22:00.465623  4298 net.cpp:411] mask_deconv1 -> mask_deconv1
I0502 17:22:00.466506  4298 net.cpp:150] Setting up mask_deconv1
I0502 17:22:00.466514  4298 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0502 17:22:00.466516  4298 net.cpp:165] Memory required for data: 1432407048
I0502 17:22:00.466521  4298 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0502 17:22:00.466529  4298 net.cpp:106] Creating Layer pool5_2_conv3
I0502 17:22:00.466531  4298 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0502 17:22:00.466536  4298 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0502 17:22:00.492383  4298 net.cpp:150] Setting up pool5_2_conv3
I0502 17:22:00.492398  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.492400  4298 net.cpp:165] Memory required for data: 1434250248
I0502 17:22:00.492408  4298 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0502 17:22:00.492414  4298 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0502 17:22:00.492429  4298 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0502 17:22:00.492432  4298 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0502 17:22:00.492581  4298 net.cpp:150] Setting up pool5_2_conv3_relu
I0502 17:22:00.492588  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.492589  4298 net.cpp:165] Memory required for data: 1436093448
I0502 17:22:00.492591  4298 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0502 17:22:00.492599  4298 net.cpp:106] Creating Layer pool5_2_conv4
I0502 17:22:00.492601  4298 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0502 17:22:00.492605  4298 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0502 17:22:00.542181  4298 net.cpp:150] Setting up pool5_2_conv4
I0502 17:22:00.542197  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.542201  4298 net.cpp:165] Memory required for data: 1437936648
I0502 17:22:00.542207  4298 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0502 17:22:00.542214  4298 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0502 17:22:00.542218  4298 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0502 17:22:00.542222  4298 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0502 17:22:00.542352  4298 net.cpp:150] Setting up pool5_2_conv4_relu
I0502 17:22:00.542358  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.542361  4298 net.cpp:165] Memory required for data: 1439779848
I0502 17:22:00.542362  4298 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0502 17:22:00.542366  4298 net.cpp:106] Creating Layer pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0502 17:22:00.542368  4298 net.cpp:454] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split <- pool5_2_conv4_relu
I0502 17:22:00.542371  4298 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0502 17:22:00.542376  4298 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0502 17:22:00.542379  4298 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0502 17:22:00.542392  4298 net.cpp:411] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split -> pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0502 17:22:00.542440  4298 net.cpp:150] Setting up pool5_2_conv4_relu_pool5_2_conv4_relu_0_split
I0502 17:22:00.542444  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.542446  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.542448  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.542450  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.542451  4298 net.cpp:165] Memory required for data: 1447152648
I0502 17:22:00.542454  4298 layer_factory.hpp:77] Creating layer query_conv
I0502 17:22:00.542460  4298 net.cpp:106] Creating Layer query_conv
I0502 17:22:00.542462  4298 net.cpp:454] query_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_0
I0502 17:22:00.542475  4298 net.cpp:411] query_conv -> query_conv
I0502 17:22:00.543972  4298 net.cpp:150] Setting up query_conv
I0502 17:22:00.543979  4298 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0502 17:22:00.543982  4298 net.cpp:165] Memory required for data: 1447383048
I0502 17:22:00.543985  4298 layer_factory.hpp:77] Creating layer key_conv
I0502 17:22:00.543992  4298 net.cpp:106] Creating Layer key_conv
I0502 17:22:00.543994  4298 net.cpp:454] key_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_1
I0502 17:22:00.544008  4298 net.cpp:411] key_conv -> key_conv
I0502 17:22:00.545562  4298 net.cpp:150] Setting up key_conv
I0502 17:22:00.545569  4298 net.cpp:157] Top shape: 1 64 30 30 (57600)
I0502 17:22:00.545572  4298 net.cpp:165] Memory required for data: 1447613448
I0502 17:22:00.545576  4298 layer_factory.hpp:77] Creating layer value_conv
I0502 17:22:00.545583  4298 net.cpp:106] Creating Layer value_conv
I0502 17:22:00.545584  4298 net.cpp:454] value_conv <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_2
I0502 17:22:00.545588  4298 net.cpp:411] value_conv -> value_conv
I0502 17:22:00.554229  4298 net.cpp:150] Setting up value_conv
I0502 17:22:00.554289  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.554304  4298 net.cpp:165] Memory required for data: 1449456648
I0502 17:22:00.554327  4298 layer_factory.hpp:77] Creating layer query_conv_reshape
I0502 17:22:00.554348  4298 net.cpp:106] Creating Layer query_conv_reshape
I0502 17:22:00.554363  4298 net.cpp:454] query_conv_reshape <- query_conv
I0502 17:22:00.554375  4298 net.cpp:411] query_conv_reshape -> query_conv_reshape
I0502 17:22:00.554425  4298 net.cpp:150] Setting up query_conv_reshape
I0502 17:22:00.554440  4298 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0502 17:22:00.554451  4298 net.cpp:165] Memory required for data: 1449687048
I0502 17:22:00.554463  4298 layer_factory.hpp:77] Creating layer key_conv_reshape
I0502 17:22:00.554477  4298 net.cpp:106] Creating Layer key_conv_reshape
I0502 17:22:00.554491  4298 net.cpp:454] key_conv_reshape <- key_conv
I0502 17:22:00.554504  4298 net.cpp:411] key_conv_reshape -> key_conv_reshape
I0502 17:22:00.554541  4298 net.cpp:150] Setting up key_conv_reshape
I0502 17:22:00.554558  4298 net.cpp:157] Top shape: 1 64 900 1 (57600)
I0502 17:22:00.554567  4298 net.cpp:165] Memory required for data: 1449917448
I0502 17:22:00.554579  4298 layer_factory.hpp:77] Creating layer value_conv_reshape
I0502 17:22:00.554592  4298 net.cpp:106] Creating Layer value_conv_reshape
I0502 17:22:00.554605  4298 net.cpp:454] value_conv_reshape <- value_conv
I0502 17:22:00.554618  4298 net.cpp:411] value_conv_reshape -> value_conv_reshape
I0502 17:22:00.554652  4298 net.cpp:150] Setting up value_conv_reshape
I0502 17:22:00.554667  4298 net.cpp:157] Top shape: 1 512 900 1 (460800)
I0502 17:22:00.554678  4298 net.cpp:165] Memory required for data: 1451760648
I0502 17:22:00.554688  4298 layer_factory.hpp:77] Creating layer query_conv_reshape_perm
I0502 17:22:00.554703  4298 net.cpp:106] Creating Layer query_conv_reshape_perm
I0502 17:22:00.554715  4298 net.cpp:454] query_conv_reshape_perm <- query_conv_reshape
I0502 17:22:00.554729  4298 net.cpp:411] query_conv_reshape_perm -> query_conv_reshape_perm
I0502 17:22:00.554841  4298 net.cpp:150] Setting up query_conv_reshape_perm
I0502 17:22:00.554858  4298 net.cpp:157] Top shape: 1 1 900 64 (57600)
I0502 17:22:00.554869  4298 net.cpp:165] Memory required for data: 1451991048
I0502 17:22:00.554880  4298 layer_factory.hpp:77] Creating layer key_conv_reshape_perm
I0502 17:22:00.554893  4298 net.cpp:106] Creating Layer key_conv_reshape_perm
I0502 17:22:00.554904  4298 net.cpp:454] key_conv_reshape_perm <- key_conv_reshape
I0502 17:22:00.554926  4298 net.cpp:411] key_conv_reshape_perm -> key_conv_reshape_perm
I0502 17:22:00.555030  4298 net.cpp:150] Setting up key_conv_reshape_perm
I0502 17:22:00.555047  4298 net.cpp:157] Top shape: 1 1 64 900 (57600)
I0502 17:22:00.555056  4298 net.cpp:165] Memory required for data: 1452221448
I0502 17:22:00.555068  4298 layer_factory.hpp:77] Creating layer energy
I0502 17:22:00.555081  4298 net.cpp:106] Creating Layer energy
I0502 17:22:00.555091  4298 net.cpp:454] energy <- query_conv_reshape_perm
I0502 17:22:00.555102  4298 net.cpp:454] energy <- key_conv_reshape_perm
I0502 17:22:00.555115  4298 net.cpp:411] energy -> energy
I0502 17:22:00.555148  4298 net.cpp:150] Setting up energy
I0502 17:22:00.555164  4298 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0502 17:22:00.555174  4298 net.cpp:165] Memory required for data: 1455461448
I0502 17:22:00.555186  4298 layer_factory.hpp:77] Creating layer attention
I0502 17:22:00.555200  4298 net.cpp:106] Creating Layer attention
I0502 17:22:00.555212  4298 net.cpp:454] attention <- energy
I0502 17:22:00.555225  4298 net.cpp:411] attention -> attention
I0502 17:22:00.555508  4298 net.cpp:150] Setting up attention
I0502 17:22:00.555532  4298 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0502 17:22:00.555543  4298 net.cpp:165] Memory required for data: 1458701448
I0502 17:22:00.555553  4298 layer_factory.hpp:77] Creating layer value_conv_reshape_perm
I0502 17:22:00.555565  4298 net.cpp:106] Creating Layer value_conv_reshape_perm
I0502 17:22:00.555575  4298 net.cpp:454] value_conv_reshape_perm <- value_conv_reshape
I0502 17:22:00.555586  4298 net.cpp:411] value_conv_reshape_perm -> value_conv_reshape_perm
I0502 17:22:00.555692  4298 net.cpp:150] Setting up value_conv_reshape_perm
I0502 17:22:00.555711  4298 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0502 17:22:00.555721  4298 net.cpp:165] Memory required for data: 1460544648
I0502 17:22:00.555730  4298 layer_factory.hpp:77] Creating layer attention_perm
I0502 17:22:00.555743  4298 net.cpp:106] Creating Layer attention_perm
I0502 17:22:00.555755  4298 net.cpp:454] attention_perm <- attention
I0502 17:22:00.555768  4298 net.cpp:411] attention_perm -> attention_perm
I0502 17:22:00.555867  4298 net.cpp:150] Setting up attention_perm
I0502 17:22:00.555882  4298 net.cpp:157] Top shape: 1 1 900 900 (810000)
I0502 17:22:00.555893  4298 net.cpp:165] Memory required for data: 1463784648
I0502 17:22:00.555903  4298 layer_factory.hpp:77] Creating layer out
I0502 17:22:00.555915  4298 net.cpp:106] Creating Layer out
I0502 17:22:00.555927  4298 net.cpp:454] out <- value_conv_reshape_perm
I0502 17:22:00.555939  4298 net.cpp:454] out <- attention_perm
I0502 17:22:00.555949  4298 net.cpp:411] out -> out
I0502 17:22:00.555979  4298 net.cpp:150] Setting up out
I0502 17:22:00.555991  4298 net.cpp:157] Top shape: 1 1 512 900 (460800)
I0502 17:22:00.555999  4298 net.cpp:165] Memory required for data: 1465627848
I0502 17:22:00.556008  4298 layer_factory.hpp:77] Creating layer out_reshape
I0502 17:22:00.556022  4298 net.cpp:106] Creating Layer out_reshape
I0502 17:22:00.556032  4298 net.cpp:454] out_reshape <- out
I0502 17:22:00.556043  4298 net.cpp:411] out_reshape -> out_reshape
I0502 17:22:00.556075  4298 net.cpp:150] Setting up out_reshape
I0502 17:22:00.556088  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.556098  4298 net.cpp:165] Memory required for data: 1467471048
I0502 17:22:00.556107  4298 layer_factory.hpp:77] Creating layer out_reshape_scale
I0502 17:22:00.556707  4298 net.cpp:106] Creating Layer out_reshape_scale
I0502 17:22:00.556720  4298 net.cpp:454] out_reshape_scale <- out_reshape
I0502 17:22:00.556727  4298 net.cpp:411] out_reshape_scale -> out_reshape_scale
I0502 17:22:00.556865  4298 net.cpp:150] Setting up out_reshape_scale
I0502 17:22:00.556874  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.556879  4298 net.cpp:165] Memory required for data: 1469314248
I0502 17:22:00.556885  4298 layer_factory.hpp:77] Creating layer out_x
I0502 17:22:00.556892  4298 net.cpp:106] Creating Layer out_x
I0502 17:22:00.556895  4298 net.cpp:454] out_x <- out_reshape_scale
I0502 17:22:00.556900  4298 net.cpp:454] out_x <- pool5_2_conv4_relu_pool5_2_conv4_relu_0_split_3
I0502 17:22:00.556905  4298 net.cpp:411] out_x -> out_x
I0502 17:22:00.556932  4298 net.cpp:150] Setting up out_x
I0502 17:22:00.556939  4298 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0502 17:22:00.556942  4298 net.cpp:165] Memory required for data: 1471157448
I0502 17:22:00.556946  4298 layer_factory.hpp:77] Creating layer mask_deconv2
I0502 17:22:00.556954  4298 net.cpp:106] Creating Layer mask_deconv2
I0502 17:22:00.556957  4298 net.cpp:454] mask_deconv2 <- out_x
I0502 17:22:00.556962  4298 net.cpp:411] mask_deconv2 -> mask_deconv2
I0502 17:22:00.557802  4298 net.cpp:150] Setting up mask_deconv2
I0502 17:22:00.557812  4298 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0502 17:22:00.557816  4298 net.cpp:165] Memory required for data: 1486398664
I0502 17:22:00.557822  4298 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0502 17:22:00.557837  4298 net.cpp:106] Creating Layer pool5_2_conv5
I0502 17:22:00.557842  4298 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0502 17:22:00.557849  4298 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0502 17:22:00.584627  4298 net.cpp:150] Setting up pool5_2_conv5
I0502 17:22:00.584647  4298 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0502 17:22:00.584651  4298 net.cpp:165] Memory required for data: 1516881096
I0502 17:22:00.584661  4298 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0502 17:22:00.584671  4298 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0502 17:22:00.584676  4298 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0502 17:22:00.584683  4298 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0502 17:22:00.584808  4298 net.cpp:150] Setting up pool5_2_conv5_relu
I0502 17:22:00.584815  4298 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0502 17:22:00.584818  4298 net.cpp:165] Memory required for data: 1547363528
I0502 17:22:00.584822  4298 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0502 17:22:00.584832  4298 net.cpp:106] Creating Layer pool5_2_conv6
I0502 17:22:00.584851  4298 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0502 17:22:00.584857  4298 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0502 17:22:00.634658  4298 net.cpp:150] Setting up pool5_2_conv6
I0502 17:22:00.634680  4298 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0502 17:22:00.634683  4298 net.cpp:165] Memory required for data: 1577845960
I0502 17:22:00.634713  4298 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0502 17:22:00.634733  4298 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0502 17:22:00.634739  4298 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0502 17:22:00.634757  4298 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0502 17:22:00.635356  4298 net.cpp:150] Setting up pool5_2_conv6_relu
I0502 17:22:00.635367  4298 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0502 17:22:00.635370  4298 net.cpp:165] Memory required for data: 1608328392
I0502 17:22:00.635375  4298 layer_factory.hpp:77] Creating layer mask_deconv3
I0502 17:22:00.635385  4298 net.cpp:106] Creating Layer mask_deconv3
I0502 17:22:00.635403  4298 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0502 17:22:00.635419  4298 net.cpp:411] mask_deconv3 -> mask_deconv3
I0502 17:22:00.635839  4298 net.cpp:150] Setting up mask_deconv3
I0502 17:22:00.635846  4298 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0502 17:22:00.635860  4298 net.cpp:165] Memory required for data: 1669293256
I0502 17:22:00.635867  4298 layer_factory.hpp:77] Creating layer mask_score
I0502 17:22:00.635896  4298 net.cpp:106] Creating Layer mask_score
I0502 17:22:00.635901  4298 net.cpp:454] mask_score <- mask_deconv3
I0502 17:22:00.635908  4298 net.cpp:411] mask_score -> mask_score
I0502 17:22:00.636849  4298 net.cpp:150] Setting up mask_score
I0502 17:22:00.636857  4298 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0502 17:22:00.636862  4298 net.cpp:165] Memory required for data: 1671198408
I0502 17:22:00.636868  4298 layer_factory.hpp:77] Creating layer loss_mask
I0502 17:22:00.636875  4298 net.cpp:106] Creating Layer loss_mask
I0502 17:22:00.636890  4298 net.cpp:454] loss_mask <- mask_score
I0502 17:22:00.636896  4298 net.cpp:454] loss_mask <- mask_targets
I0502 17:22:00.636902  4298 net.cpp:411] loss_mask -> loss_mask
I0502 17:22:00.636912  4298 layer_factory.hpp:77] Creating layer loss_mask
I0502 17:22:00.638556  4298 net.cpp:150] Setting up loss_mask
I0502 17:22:00.638567  4298 net.cpp:157] Top shape: (1)
I0502 17:22:00.638571  4298 net.cpp:160]     with loss weight 3
I0502 17:22:00.638607  4298 net.cpp:165] Memory required for data: 1671198412
I0502 17:22:00.638610  4298 net.cpp:226] loss_mask needs backward computation.
I0502 17:22:00.638614  4298 net.cpp:226] mask_score needs backward computation.
I0502 17:22:00.638628  4298 net.cpp:226] mask_deconv3 needs backward computation.
I0502 17:22:00.638631  4298 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0502 17:22:00.638649  4298 net.cpp:226] pool5_2_conv6 needs backward computation.
I0502 17:22:00.638653  4298 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0502 17:22:00.638665  4298 net.cpp:226] pool5_2_conv5 needs backward computation.
I0502 17:22:00.638669  4298 net.cpp:226] mask_deconv2 needs backward computation.
I0502 17:22:00.638672  4298 net.cpp:226] out_x needs backward computation.
I0502 17:22:00.638689  4298 net.cpp:226] out_reshape_scale needs backward computation.
I0502 17:22:00.638693  4298 net.cpp:226] out_reshape needs backward computation.
I0502 17:22:00.638698  4298 net.cpp:226] out needs backward computation.
I0502 17:22:00.638701  4298 net.cpp:226] attention_perm needs backward computation.
I0502 17:22:00.638706  4298 net.cpp:226] value_conv_reshape_perm needs backward computation.
I0502 17:22:00.638711  4298 net.cpp:226] attention needs backward computation.
I0502 17:22:00.638715  4298 net.cpp:226] energy needs backward computation.
I0502 17:22:00.638720  4298 net.cpp:226] key_conv_reshape_perm needs backward computation.
I0502 17:22:00.638725  4298 net.cpp:226] query_conv_reshape_perm needs backward computation.
I0502 17:22:00.638728  4298 net.cpp:226] value_conv_reshape needs backward computation.
I0502 17:22:00.638732  4298 net.cpp:226] key_conv_reshape needs backward computation.
I0502 17:22:00.638736  4298 net.cpp:226] query_conv_reshape needs backward computation.
I0502 17:22:00.638741  4298 net.cpp:226] value_conv needs backward computation.
I0502 17:22:00.638744  4298 net.cpp:226] key_conv needs backward computation.
I0502 17:22:00.638748  4298 net.cpp:226] query_conv needs backward computation.
I0502 17:22:00.638753  4298 net.cpp:226] pool5_2_conv4_relu_pool5_2_conv4_relu_0_split needs backward computation.
I0502 17:22:00.638757  4298 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0502 17:22:00.638761  4298 net.cpp:226] pool5_2_conv4 needs backward computation.
I0502 17:22:00.638765  4298 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0502 17:22:00.638769  4298 net.cpp:226] pool5_2_conv3 needs backward computation.
I0502 17:22:00.638773  4298 net.cpp:226] mask_deconv1 needs backward computation.
I0502 17:22:00.638777  4298 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0502 17:22:00.638782  4298 net.cpp:226] pool5_2_conv2 needs backward computation.
I0502 17:22:00.638785  4298 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0502 17:22:00.638790  4298 net.cpp:226] pool5_2_conv needs backward computation.
I0502 17:22:00.638793  4298 net.cpp:226] roi_pool5_2 needs backward computation.
I0502 17:22:00.638798  4298 net.cpp:226] loss_bbox needs backward computation.
I0502 17:22:00.638804  4298 net.cpp:226] loss_cls needs backward computation.
I0502 17:22:00.638810  4298 net.cpp:226] loss_attribute needs backward computation.
I0502 17:22:00.638815  4298 net.cpp:226] bbox_pred needs backward computation.
I0502 17:22:00.638819  4298 net.cpp:226] cls_score needs backward computation.
I0502 17:22:00.638823  4298 net.cpp:226] attr_score_pos_shift needs backward computation.
I0502 17:22:00.638828  4298 net.cpp:226] attr_score_pos needs backward computation.
I0502 17:22:00.638833  4298 net.cpp:226] attr_score needs backward computation.
I0502 17:22:00.638836  4298 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0502 17:22:00.638839  4298 net.cpp:226] relu7 needs backward computation.
I0502 17:22:00.638844  4298 net.cpp:226] fc7 needs backward computation.
I0502 17:22:00.638856  4298 net.cpp:226] relu6 needs backward computation.
I0502 17:22:00.638861  4298 net.cpp:226] fc6 needs backward computation.
I0502 17:22:00.638875  4298 net.cpp:226] roi_pool5 needs backward computation.
I0502 17:22:00.638880  4298 net.cpp:226] roi-data needs backward computation.
I0502 17:22:00.638887  4298 net.cpp:226] proposal needs backward computation.
I0502 17:22:00.638893  4298 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0502 17:22:00.638897  4298 net.cpp:226] rpn_cls_prob needs backward computation.
I0502 17:22:00.638901  4298 net.cpp:226] rpn_loss_bbox needs backward computation.
I0502 17:22:00.638907  4298 net.cpp:226] rpn_loss_cls needs backward computation.
I0502 17:22:00.638913  4298 net.cpp:226] rpn-data needs backward computation.
I0502 17:22:00.638919  4298 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0502 17:22:00.638923  4298 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0502 17:22:00.638928  4298 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0502 17:22:00.638932  4298 net.cpp:226] rpn_bbox_pred needs backward computation.
I0502 17:22:00.638936  4298 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0502 17:22:00.638940  4298 net.cpp:226] rpn_cls_score needs backward computation.
I0502 17:22:00.638944  4298 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0502 17:22:00.638949  4298 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0502 17:22:00.638952  4298 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0502 17:22:00.638957  4298 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0502 17:22:00.638962  4298 net.cpp:226] relu5_3 needs backward computation.
I0502 17:22:00.638967  4298 net.cpp:226] conv5_3 needs backward computation.
I0502 17:22:00.638972  4298 net.cpp:226] relu5_2 needs backward computation.
I0502 17:22:00.638975  4298 net.cpp:226] conv5_2 needs backward computation.
I0502 17:22:00.638980  4298 net.cpp:226] relu5_1 needs backward computation.
I0502 17:22:00.638984  4298 net.cpp:226] conv5_1 needs backward computation.
I0502 17:22:00.638988  4298 net.cpp:226] pool4 needs backward computation.
I0502 17:22:00.638993  4298 net.cpp:226] relu4_3 needs backward computation.
I0502 17:22:00.638996  4298 net.cpp:226] conv4_3 needs backward computation.
I0502 17:22:00.639000  4298 net.cpp:226] relu4_2 needs backward computation.
I0502 17:22:00.639004  4298 net.cpp:226] conv4_2 needs backward computation.
I0502 17:22:00.639008  4298 net.cpp:226] relu4_1 needs backward computation.
I0502 17:22:00.639012  4298 net.cpp:226] conv4_1 needs backward computation.
I0502 17:22:00.639016  4298 net.cpp:226] pool3 needs backward computation.
I0502 17:22:00.639020  4298 net.cpp:226] relu3_3 needs backward computation.
I0502 17:22:00.639024  4298 net.cpp:226] conv3_3 needs backward computation.
I0502 17:22:00.639029  4298 net.cpp:226] relu3_2 needs backward computation.
I0502 17:22:00.639032  4298 net.cpp:226] conv3_2 needs backward computation.
I0502 17:22:00.639035  4298 net.cpp:226] relu3_1 needs backward computation.
I0502 17:22:00.639039  4298 net.cpp:226] conv3_1 needs backward computation.
I0502 17:22:00.639044  4298 net.cpp:228] pool2 does not need backward computation.
I0502 17:22:00.639048  4298 net.cpp:228] relu2_2 does not need backward computation.
I0502 17:22:00.639053  4298 net.cpp:228] conv2_2 does not need backward computation.
I0502 17:22:00.639057  4298 net.cpp:228] relu2_1 does not need backward computation.
I0502 17:22:00.639062  4298 net.cpp:228] conv2_1 does not need backward computation.
I0502 17:22:00.639067  4298 net.cpp:228] pool1 does not need backward computation.
I0502 17:22:00.639071  4298 net.cpp:228] relu1_2 does not need backward computation.
I0502 17:22:00.639075  4298 net.cpp:228] conv1_2 does not need backward computation.
I0502 17:22:00.639078  4298 net.cpp:228] relu1_1 does not need backward computation.
I0502 17:22:00.639081  4298 net.cpp:228] conv1_1 does not need backward computation.
I0502 17:22:00.639086  4298 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0502 17:22:00.639091  4298 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0502 17:22:00.639096  4298 net.cpp:228] data_input-data_0_split does not need backward computation.
I0502 17:22:00.639102  4298 net.cpp:228] input-data does not need backward computation.
I0502 17:22:00.639106  4298 net.cpp:270] This network produces output loss_attribute
I0502 17:22:00.639111  4298 net.cpp:270] This network produces output loss_bbox
I0502 17:22:00.639115  4298 net.cpp:270] This network produces output loss_cls
I0502 17:22:00.639119  4298 net.cpp:270] This network produces output loss_mask
I0502 17:22:00.639122  4298 net.cpp:270] This network produces output rpn_cls_loss
I0502 17:22:00.639127  4298 net.cpp:270] This network produces output rpn_loss_bbox
I0502 17:22:00.639178  4298 net.cpp:283] Network initialization done.
I0502 17:22:00.639351  4298 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/vgg16_faster_rcnn_iter_200000_imgwise.caffemodel
F0502 17:22:00.641196  4298 io.cpp:54] Check failed: fd != -1 (-1 vs. -1) File not found: data/imagenet_models/vgg16_faster_rcnn_iter_200000_imgwise.caffemodel
*** Check failure stack trace: ***
./experiments/scripts/faster_rcnn_end2end.sh: line 65:  4298 Aborted                 /usr/bin/python ./tools/train_net.py --gpu ${GPU_ID} --solver models/${PT_DIR}/${NET}/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/vgg16_faster_rcnn_iter_200000_imgwise.caffemodel --imdb ${TRAIN_IMDB} --iters ${ITERS} --cfg experiments/cfgs/faster_rcnn_end2end.yml ${EXTRA_ARGS}
