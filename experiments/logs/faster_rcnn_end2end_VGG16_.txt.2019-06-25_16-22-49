+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_16-22-49
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-25_16-22-49
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0625 16:23:02.117010 12714 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0625 16:23:02.117027 12714 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0625 16:23:02.133782 12714 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "pool5_2_conv4_relu"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "mask_score"
  top: "mask_score_softmax"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "log"
  type: "Log"
  bottom: "mask_score_softmax"
  top: "log"
}
layer {
  name: "mult1"
  type: "Eltwise"
  bottom: "log"
  bottom: "mask_targets"
  top: "mult1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cross_entropy"
  type: "Power"
  bottom: "mult1"
  top: "cross_entropy"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}
layer {
  name: "ce_sum"
  type: "Convolution"
  bottom: "cross_entropy"
  top: "cross_entropy_sum"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 1
    weight_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "ce_mean"
  type: "Reduction"
  bottom: "cross_entropy_sum"
  top: "cross_entropy_mean"
  loss_weight: 1
  reduction_param {
    operation: MEAN
    axis: 0
  }
}
I0625 16:23:02.134120 12714 layer_factory.hpp:77] Creating layer input-data
I0625 16:23:02.170727 12714 net.cpp:106] Creating Layer input-data
I0625 16:23:02.170753 12714 net.cpp:411] input-data -> data
I0625 16:23:02.170763 12714 net.cpp:411] input-data -> im_info
I0625 16:23:02.170768 12714 net.cpp:411] input-data -> gt_boxes
I0625 16:23:02.170774 12714 net.cpp:411] input-data -> seg_mask_inds
I0625 16:23:02.170779 12714 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0625 16:23:02.214231 12714 net.cpp:150] Setting up input-data
I0625 16:23:02.214248 12714 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:23:02.214254 12714 net.cpp:157] Top shape: 1 3 (3)
I0625 16:23:02.214277 12714 net.cpp:157] Top shape: 1 4 (4)
I0625 16:23:02.214280 12714 net.cpp:157] Top shape: 1 2 (2)
I0625 16:23:02.214285 12714 net.cpp:157] Top shape: 1 1 (1)
I0625 16:23:02.214288 12714 net.cpp:165] Memory required for data: 7200040
I0625 16:23:02.214295 12714 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0625 16:23:02.214313 12714 net.cpp:106] Creating Layer data_input-data_0_split
I0625 16:23:02.214316 12714 net.cpp:454] data_input-data_0_split <- data
I0625 16:23:02.214323 12714 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0625 16:23:02.214332 12714 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0625 16:23:02.214359 12714 net.cpp:150] Setting up data_input-data_0_split
I0625 16:23:02.214365 12714 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:23:02.214370 12714 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0625 16:23:02.214373 12714 net.cpp:165] Memory required for data: 21600040
I0625 16:23:02.214376 12714 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0625 16:23:02.214383 12714 net.cpp:106] Creating Layer im_info_input-data_1_split
I0625 16:23:02.214386 12714 net.cpp:454] im_info_input-data_1_split <- im_info
I0625 16:23:02.214391 12714 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0625 16:23:02.214399 12714 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0625 16:23:02.214406 12714 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0625 16:23:02.214439 12714 net.cpp:150] Setting up im_info_input-data_1_split
I0625 16:23:02.214444 12714 net.cpp:157] Top shape: 1 3 (3)
I0625 16:23:02.214449 12714 net.cpp:157] Top shape: 1 3 (3)
I0625 16:23:02.214453 12714 net.cpp:157] Top shape: 1 3 (3)
I0625 16:23:02.214457 12714 net.cpp:165] Memory required for data: 21600076
I0625 16:23:02.214460 12714 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0625 16:23:02.214466 12714 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0625 16:23:02.214470 12714 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0625 16:23:02.214474 12714 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0625 16:23:02.214480 12714 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0625 16:23:02.214504 12714 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0625 16:23:02.214509 12714 net.cpp:157] Top shape: 1 4 (4)
I0625 16:23:02.214514 12714 net.cpp:157] Top shape: 1 4 (4)
I0625 16:23:02.214517 12714 net.cpp:165] Memory required for data: 21600108
I0625 16:23:02.214520 12714 layer_factory.hpp:77] Creating layer conv1_1
I0625 16:23:02.214530 12714 net.cpp:106] Creating Layer conv1_1
I0625 16:23:02.214534 12714 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0625 16:23:02.214540 12714 net.cpp:411] conv1_1 -> conv1_1
I0625 16:23:02.423246 12714 net.cpp:150] Setting up conv1_1
I0625 16:23:02.423269 12714 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:23:02.423271 12714 net.cpp:165] Memory required for data: 175200108
I0625 16:23:02.423286 12714 layer_factory.hpp:77] Creating layer relu1_1
I0625 16:23:02.423308 12714 net.cpp:106] Creating Layer relu1_1
I0625 16:23:02.423313 12714 net.cpp:454] relu1_1 <- conv1_1
I0625 16:23:02.423329 12714 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0625 16:23:02.423487 12714 net.cpp:150] Setting up relu1_1
I0625 16:23:02.423494 12714 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:23:02.423497 12714 net.cpp:165] Memory required for data: 328800108
I0625 16:23:02.423501 12714 layer_factory.hpp:77] Creating layer conv1_2
I0625 16:23:02.423508 12714 net.cpp:106] Creating Layer conv1_2
I0625 16:23:02.423511 12714 net.cpp:454] conv1_2 <- conv1_1
I0625 16:23:02.423527 12714 net.cpp:411] conv1_2 -> conv1_2
I0625 16:23:02.425590 12714 net.cpp:150] Setting up conv1_2
I0625 16:23:02.425601 12714 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:23:02.425606 12714 net.cpp:165] Memory required for data: 482400108
I0625 16:23:02.425614 12714 layer_factory.hpp:77] Creating layer relu1_2
I0625 16:23:02.425634 12714 net.cpp:106] Creating Layer relu1_2
I0625 16:23:02.425638 12714 net.cpp:454] relu1_2 <- conv1_2
I0625 16:23:02.425652 12714 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0625 16:23:02.425782 12714 net.cpp:150] Setting up relu1_2
I0625 16:23:02.425791 12714 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0625 16:23:02.425807 12714 net.cpp:165] Memory required for data: 636000108
I0625 16:23:02.425809 12714 layer_factory.hpp:77] Creating layer pool1
I0625 16:23:02.425829 12714 net.cpp:106] Creating Layer pool1
I0625 16:23:02.425833 12714 net.cpp:454] pool1 <- conv1_2
I0625 16:23:02.425838 12714 net.cpp:411] pool1 -> pool1
I0625 16:23:02.425899 12714 net.cpp:150] Setting up pool1
I0625 16:23:02.425904 12714 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0625 16:23:02.425916 12714 net.cpp:165] Memory required for data: 674400108
I0625 16:23:02.425918 12714 layer_factory.hpp:77] Creating layer conv2_1
I0625 16:23:02.425925 12714 net.cpp:106] Creating Layer conv2_1
I0625 16:23:02.425927 12714 net.cpp:454] conv2_1 <- pool1
I0625 16:23:02.425930 12714 net.cpp:411] conv2_1 -> conv2_1
I0625 16:23:02.427637 12714 net.cpp:150] Setting up conv2_1
I0625 16:23:02.427645 12714 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:23:02.427647 12714 net.cpp:165] Memory required for data: 751200108
I0625 16:23:02.427654 12714 layer_factory.hpp:77] Creating layer relu2_1
I0625 16:23:02.427657 12714 net.cpp:106] Creating Layer relu2_1
I0625 16:23:02.427659 12714 net.cpp:454] relu2_1 <- conv2_1
I0625 16:23:02.427662 12714 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0625 16:23:02.428110 12714 net.cpp:150] Setting up relu2_1
I0625 16:23:02.428117 12714 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:23:02.428119 12714 net.cpp:165] Memory required for data: 828000108
I0625 16:23:02.428122 12714 layer_factory.hpp:77] Creating layer conv2_2
I0625 16:23:02.428126 12714 net.cpp:106] Creating Layer conv2_2
I0625 16:23:02.428128 12714 net.cpp:454] conv2_2 <- conv2_1
I0625 16:23:02.428133 12714 net.cpp:411] conv2_2 -> conv2_2
I0625 16:23:02.429400 12714 net.cpp:150] Setting up conv2_2
I0625 16:23:02.429409 12714 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:23:02.429410 12714 net.cpp:165] Memory required for data: 904800108
I0625 16:23:02.429414 12714 layer_factory.hpp:77] Creating layer relu2_2
I0625 16:23:02.429419 12714 net.cpp:106] Creating Layer relu2_2
I0625 16:23:02.429421 12714 net.cpp:454] relu2_2 <- conv2_2
I0625 16:23:02.429424 12714 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0625 16:23:02.429550 12714 net.cpp:150] Setting up relu2_2
I0625 16:23:02.429555 12714 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0625 16:23:02.429558 12714 net.cpp:165] Memory required for data: 981600108
I0625 16:23:02.429559 12714 layer_factory.hpp:77] Creating layer pool2
I0625 16:23:02.429563 12714 net.cpp:106] Creating Layer pool2
I0625 16:23:02.429565 12714 net.cpp:454] pool2 <- conv2_2
I0625 16:23:02.429569 12714 net.cpp:411] pool2 -> pool2
I0625 16:23:02.429611 12714 net.cpp:150] Setting up pool2
I0625 16:23:02.429615 12714 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0625 16:23:02.429617 12714 net.cpp:165] Memory required for data: 1000800108
I0625 16:23:02.429628 12714 layer_factory.hpp:77] Creating layer conv3_1
I0625 16:23:02.429635 12714 net.cpp:106] Creating Layer conv3_1
I0625 16:23:02.429636 12714 net.cpp:454] conv3_1 <- pool2
I0625 16:23:02.429639 12714 net.cpp:411] conv3_1 -> conv3_1
I0625 16:23:02.431382 12714 net.cpp:150] Setting up conv3_1
I0625 16:23:02.431391 12714 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:23:02.431393 12714 net.cpp:165] Memory required for data: 1039200108
I0625 16:23:02.431399 12714 layer_factory.hpp:77] Creating layer relu3_1
I0625 16:23:02.431403 12714 net.cpp:106] Creating Layer relu3_1
I0625 16:23:02.431406 12714 net.cpp:454] relu3_1 <- conv3_1
I0625 16:23:02.431408 12714 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0625 16:23:02.431535 12714 net.cpp:150] Setting up relu3_1
I0625 16:23:02.431541 12714 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:23:02.431543 12714 net.cpp:165] Memory required for data: 1077600108
I0625 16:23:02.431545 12714 layer_factory.hpp:77] Creating layer conv3_2
I0625 16:23:02.431551 12714 net.cpp:106] Creating Layer conv3_2
I0625 16:23:02.431552 12714 net.cpp:454] conv3_2 <- conv3_1
I0625 16:23:02.431567 12714 net.cpp:411] conv3_2 -> conv3_2
I0625 16:23:02.433450 12714 net.cpp:150] Setting up conv3_2
I0625 16:23:02.433459 12714 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:23:02.433460 12714 net.cpp:165] Memory required for data: 1116000108
I0625 16:23:02.433465 12714 layer_factory.hpp:77] Creating layer relu3_2
I0625 16:23:02.433468 12714 net.cpp:106] Creating Layer relu3_2
I0625 16:23:02.433470 12714 net.cpp:454] relu3_2 <- conv3_2
I0625 16:23:02.433485 12714 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0625 16:23:02.433609 12714 net.cpp:150] Setting up relu3_2
I0625 16:23:02.433614 12714 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:23:02.433615 12714 net.cpp:165] Memory required for data: 1154400108
I0625 16:23:02.433617 12714 layer_factory.hpp:77] Creating layer conv3_3
I0625 16:23:02.433622 12714 net.cpp:106] Creating Layer conv3_3
I0625 16:23:02.433624 12714 net.cpp:454] conv3_3 <- conv3_2
I0625 16:23:02.433638 12714 net.cpp:411] conv3_3 -> conv3_3
I0625 16:23:02.435938 12714 net.cpp:150] Setting up conv3_3
I0625 16:23:02.435964 12714 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:23:02.435966 12714 net.cpp:165] Memory required for data: 1192800108
I0625 16:23:02.435971 12714 layer_factory.hpp:77] Creating layer relu3_3
I0625 16:23:02.435986 12714 net.cpp:106] Creating Layer relu3_3
I0625 16:23:02.435988 12714 net.cpp:454] relu3_3 <- conv3_3
I0625 16:23:02.435992 12714 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0625 16:23:02.436136 12714 net.cpp:150] Setting up relu3_3
I0625 16:23:02.436142 12714 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0625 16:23:02.436154 12714 net.cpp:165] Memory required for data: 1231200108
I0625 16:23:02.436156 12714 layer_factory.hpp:77] Creating layer pool3
I0625 16:23:02.436161 12714 net.cpp:106] Creating Layer pool3
I0625 16:23:02.436162 12714 net.cpp:454] pool3 <- conv3_3
I0625 16:23:02.436175 12714 net.cpp:411] pool3 -> pool3
I0625 16:23:02.436214 12714 net.cpp:150] Setting up pool3
I0625 16:23:02.436218 12714 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0625 16:23:02.436220 12714 net.cpp:165] Memory required for data: 1240800108
I0625 16:23:02.436231 12714 layer_factory.hpp:77] Creating layer conv4_1
I0625 16:23:02.436237 12714 net.cpp:106] Creating Layer conv4_1
I0625 16:23:02.436239 12714 net.cpp:454] conv4_1 <- pool3
I0625 16:23:02.436244 12714 net.cpp:411] conv4_1 -> conv4_1
I0625 16:23:02.439960 12714 net.cpp:150] Setting up conv4_1
I0625 16:23:02.439978 12714 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:23:02.439980 12714 net.cpp:165] Memory required for data: 1260000108
I0625 16:23:02.439986 12714 layer_factory.hpp:77] Creating layer relu4_1
I0625 16:23:02.439996 12714 net.cpp:106] Creating Layer relu4_1
I0625 16:23:02.440008 12714 net.cpp:454] relu4_1 <- conv4_1
I0625 16:23:02.440012 12714 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0625 16:23:02.440157 12714 net.cpp:150] Setting up relu4_1
I0625 16:23:02.440163 12714 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:23:02.440165 12714 net.cpp:165] Memory required for data: 1279200108
I0625 16:23:02.440166 12714 layer_factory.hpp:77] Creating layer conv4_2
I0625 16:23:02.440176 12714 net.cpp:106] Creating Layer conv4_2
I0625 16:23:02.440178 12714 net.cpp:454] conv4_2 <- conv4_1
I0625 16:23:02.440192 12714 net.cpp:411] conv4_2 -> conv4_2
I0625 16:23:02.444581 12714 net.cpp:150] Setting up conv4_2
I0625 16:23:02.444600 12714 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:23:02.444603 12714 net.cpp:165] Memory required for data: 1298400108
I0625 16:23:02.444613 12714 layer_factory.hpp:77] Creating layer relu4_2
I0625 16:23:02.444631 12714 net.cpp:106] Creating Layer relu4_2
I0625 16:23:02.444635 12714 net.cpp:454] relu4_2 <- conv4_2
I0625 16:23:02.444639 12714 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0625 16:23:02.445102 12714 net.cpp:150] Setting up relu4_2
I0625 16:23:02.445111 12714 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:23:02.445112 12714 net.cpp:165] Memory required for data: 1317600108
I0625 16:23:02.445113 12714 layer_factory.hpp:77] Creating layer conv4_3
I0625 16:23:02.445120 12714 net.cpp:106] Creating Layer conv4_3
I0625 16:23:02.445122 12714 net.cpp:454] conv4_3 <- conv4_2
I0625 16:23:02.445127 12714 net.cpp:411] conv4_3 -> conv4_3
I0625 16:23:02.449299 12714 net.cpp:150] Setting up conv4_3
I0625 16:23:02.449318 12714 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:23:02.449321 12714 net.cpp:165] Memory required for data: 1336800108
I0625 16:23:02.449327 12714 layer_factory.hpp:77] Creating layer relu4_3
I0625 16:23:02.449345 12714 net.cpp:106] Creating Layer relu4_3
I0625 16:23:02.449349 12714 net.cpp:454] relu4_3 <- conv4_3
I0625 16:23:02.449353 12714 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0625 16:23:02.449483 12714 net.cpp:150] Setting up relu4_3
I0625 16:23:02.449489 12714 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0625 16:23:02.449501 12714 net.cpp:165] Memory required for data: 1356000108
I0625 16:23:02.449503 12714 layer_factory.hpp:77] Creating layer pool4
I0625 16:23:02.449508 12714 net.cpp:106] Creating Layer pool4
I0625 16:23:02.449510 12714 net.cpp:454] pool4 <- conv4_3
I0625 16:23:02.449513 12714 net.cpp:411] pool4 -> pool4
I0625 16:23:02.449551 12714 net.cpp:150] Setting up pool4
I0625 16:23:02.449564 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.449565 12714 net.cpp:165] Memory required for data: 1360903020
I0625 16:23:02.449568 12714 layer_factory.hpp:77] Creating layer conv5_1
I0625 16:23:02.449584 12714 net.cpp:106] Creating Layer conv5_1
I0625 16:23:02.449585 12714 net.cpp:454] conv5_1 <- pool4
I0625 16:23:02.449589 12714 net.cpp:411] conv5_1 -> conv5_1
I0625 16:23:02.454392 12714 net.cpp:150] Setting up conv5_1
I0625 16:23:02.454411 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.454413 12714 net.cpp:165] Memory required for data: 1365805932
I0625 16:23:02.454421 12714 layer_factory.hpp:77] Creating layer relu5_1
I0625 16:23:02.454428 12714 net.cpp:106] Creating Layer relu5_1
I0625 16:23:02.454442 12714 net.cpp:454] relu5_1 <- conv5_1
I0625 16:23:02.454447 12714 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0625 16:23:02.454589 12714 net.cpp:150] Setting up relu5_1
I0625 16:23:02.454596 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.454607 12714 net.cpp:165] Memory required for data: 1370708844
I0625 16:23:02.454609 12714 layer_factory.hpp:77] Creating layer conv5_2
I0625 16:23:02.454617 12714 net.cpp:106] Creating Layer conv5_2
I0625 16:23:02.454617 12714 net.cpp:454] conv5_2 <- conv5_1
I0625 16:23:02.454622 12714 net.cpp:411] conv5_2 -> conv5_2
I0625 16:23:02.458859 12714 net.cpp:150] Setting up conv5_2
I0625 16:23:02.458878 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.458880 12714 net.cpp:165] Memory required for data: 1375611756
I0625 16:23:02.458887 12714 layer_factory.hpp:77] Creating layer relu5_2
I0625 16:23:02.458895 12714 net.cpp:106] Creating Layer relu5_2
I0625 16:23:02.458899 12714 net.cpp:454] relu5_2 <- conv5_2
I0625 16:23:02.458904 12714 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0625 16:23:02.459035 12714 net.cpp:150] Setting up relu5_2
I0625 16:23:02.459040 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.459043 12714 net.cpp:165] Memory required for data: 1380514668
I0625 16:23:02.459044 12714 layer_factory.hpp:77] Creating layer conv5_3
I0625 16:23:02.459054 12714 net.cpp:106] Creating Layer conv5_3
I0625 16:23:02.459055 12714 net.cpp:454] conv5_3 <- conv5_2
I0625 16:23:02.459070 12714 net.cpp:411] conv5_3 -> conv5_3
I0625 16:23:02.463563 12714 net.cpp:150] Setting up conv5_3
I0625 16:23:02.463582 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.463583 12714 net.cpp:165] Memory required for data: 1385417580
I0625 16:23:02.463590 12714 layer_factory.hpp:77] Creating layer relu5_3
I0625 16:23:02.463598 12714 net.cpp:106] Creating Layer relu5_3
I0625 16:23:02.463600 12714 net.cpp:454] relu5_3 <- conv5_3
I0625 16:23:02.463605 12714 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0625 16:23:02.463738 12714 net.cpp:150] Setting up relu5_3
I0625 16:23:02.463744 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.463745 12714 net.cpp:165] Memory required for data: 1390320492
I0625 16:23:02.463747 12714 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0625 16:23:02.463752 12714 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0625 16:23:02.463754 12714 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0625 16:23:02.463757 12714 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0625 16:23:02.463773 12714 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0625 16:23:02.463775 12714 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0625 16:23:02.463809 12714 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0625 16:23:02.463812 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.463814 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.463816 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.463826 12714 net.cpp:165] Memory required for data: 1405029228
I0625 16:23:02.463829 12714 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0625 16:23:02.463835 12714 net.cpp:106] Creating Layer rpn_conv/3x3
I0625 16:23:02.463838 12714 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0625 16:23:02.463842 12714 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0625 16:23:02.514418 12714 net.cpp:150] Setting up rpn_conv/3x3
I0625 16:23:02.514437 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.514441 12714 net.cpp:165] Memory required for data: 1409932140
I0625 16:23:02.514446 12714 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0625 16:23:02.514453 12714 net.cpp:106] Creating Layer rpn_relu/3x3
I0625 16:23:02.514457 12714 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0625 16:23:02.514472 12714 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0625 16:23:02.514600 12714 net.cpp:150] Setting up rpn_relu/3x3
I0625 16:23:02.514607 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.514609 12714 net.cpp:165] Memory required for data: 1414835052
I0625 16:23:02.514611 12714 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0625 16:23:02.514616 12714 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0625 16:23:02.514617 12714 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0625 16:23:02.514622 12714 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0625 16:23:02.514636 12714 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0625 16:23:02.514674 12714 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0625 16:23:02.514678 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.514691 12714 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0625 16:23:02.514693 12714 net.cpp:165] Memory required for data: 1424640876
I0625 16:23:02.514694 12714 layer_factory.hpp:77] Creating layer rpn_cls_score
I0625 16:23:02.514710 12714 net.cpp:106] Creating Layer rpn_cls_score
I0625 16:23:02.514714 12714 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0625 16:23:02.514727 12714 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0625 16:23:02.516345 12714 net.cpp:150] Setting up rpn_cls_score
I0625 16:23:02.516355 12714 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:23:02.516356 12714 net.cpp:165] Memory required for data: 1424928156
I0625 16:23:02.516360 12714 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0625 16:23:02.516376 12714 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0625 16:23:02.516378 12714 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0625 16:23:02.516381 12714 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0625 16:23:02.516386 12714 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0625 16:23:02.516412 12714 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0625 16:23:02.516424 12714 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:23:02.516427 12714 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:23:02.516428 12714 net.cpp:165] Memory required for data: 1425502716
I0625 16:23:02.516429 12714 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0625 16:23:02.516446 12714 net.cpp:106] Creating Layer rpn_bbox_pred
I0625 16:23:02.516448 12714 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0625 16:23:02.516453 12714 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0625 16:23:02.518065 12714 net.cpp:150] Setting up rpn_bbox_pred
I0625 16:23:02.518074 12714 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:23:02.518076 12714 net.cpp:165] Memory required for data: 1426077276
I0625 16:23:02.518090 12714 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:23:02.518095 12714 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:23:02.518098 12714 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0625 16:23:02.518101 12714 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 16:23:02.518106 12714 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 16:23:02.518142 12714 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0625 16:23:02.518146 12714 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:23:02.518148 12714 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:23:02.518149 12714 net.cpp:165] Memory required for data: 1427226396
I0625 16:23:02.518162 12714 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0625 16:23:02.518170 12714 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0625 16:23:02.518172 12714 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0625 16:23:02.518175 12714 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0625 16:23:02.518191 12714 net.cpp:150] Setting up rpn_cls_score_reshape
I0625 16:23:02.518195 12714 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:23:02.518196 12714 net.cpp:165] Memory required for data: 1427513676
I0625 16:23:02.518198 12714 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:23:02.518210 12714 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:23:02.518213 12714 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0625 16:23:02.518215 12714 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 16:23:02.518229 12714 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 16:23:02.518247 12714 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0625 16:23:02.518251 12714 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:23:02.518254 12714 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:23:02.518254 12714 net.cpp:165] Memory required for data: 1428088236
I0625 16:23:02.518270 12714 layer_factory.hpp:77] Creating layer rpn-data
I0625 16:23:02.519281 12714 net.cpp:106] Creating Layer rpn-data
I0625 16:23:02.519289 12714 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0625 16:23:02.519294 12714 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0625 16:23:02.519297 12714 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0625 16:23:02.519300 12714 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0625 16:23:02.519304 12714 net.cpp:411] rpn-data -> rpn_labels
I0625 16:23:02.519309 12714 net.cpp:411] rpn-data -> rpn_bbox_targets
I0625 16:23:02.519312 12714 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0625 16:23:02.519317 12714 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0625 16:23:02.520191 12714 net.cpp:150] Setting up rpn-data
I0625 16:23:02.520200 12714 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0625 16:23:02.520203 12714 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:23:02.520205 12714 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:23:02.520208 12714 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0625 16:23:02.520210 12714 net.cpp:165] Memory required for data: 1429955556
I0625 16:23:02.520213 12714 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 16:23:02.520218 12714 net.cpp:106] Creating Layer rpn_loss_cls
I0625 16:23:02.520221 12714 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0625 16:23:02.520226 12714 net.cpp:454] rpn_loss_cls <- rpn_labels
I0625 16:23:02.520228 12714 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0625 16:23:02.520239 12714 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0625 16:23:02.520859 12714 net.cpp:150] Setting up rpn_loss_cls
I0625 16:23:02.520866 12714 net.cpp:157] Top shape: (1)
I0625 16:23:02.520869 12714 net.cpp:160]     with loss weight 1
I0625 16:23:02.520886 12714 net.cpp:165] Memory required for data: 1429955560
I0625 16:23:02.520902 12714 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0625 16:23:02.520908 12714 net.cpp:106] Creating Layer rpn_loss_bbox
I0625 16:23:02.520911 12714 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0625 16:23:02.520915 12714 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0625 16:23:02.520918 12714 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0625 16:23:02.520920 12714 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0625 16:23:02.520923 12714 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0625 16:23:02.522011 12714 net.cpp:150] Setting up rpn_loss_bbox
I0625 16:23:02.522019 12714 net.cpp:157] Top shape: (1)
I0625 16:23:02.522022 12714 net.cpp:160]     with loss weight 1
I0625 16:23:02.522037 12714 net.cpp:165] Memory required for data: 1429955564
I0625 16:23:02.522038 12714 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0625 16:23:02.522042 12714 net.cpp:106] Creating Layer rpn_cls_prob
I0625 16:23:02.522047 12714 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0625 16:23:02.522049 12714 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0625 16:23:02.522212 12714 net.cpp:150] Setting up rpn_cls_prob
I0625 16:23:02.522217 12714 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0625 16:23:02.522219 12714 net.cpp:165] Memory required for data: 1430242844
I0625 16:23:02.522222 12714 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0625 16:23:02.522235 12714 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0625 16:23:02.522238 12714 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0625 16:23:02.522241 12714 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0625 16:23:02.522270 12714 net.cpp:150] Setting up rpn_cls_prob_reshape
I0625 16:23:02.522275 12714 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0625 16:23:02.522276 12714 net.cpp:165] Memory required for data: 1430530124
I0625 16:23:02.522279 12714 layer_factory.hpp:77] Creating layer proposal
I0625 16:23:02.523988 12714 net.cpp:106] Creating Layer proposal
I0625 16:23:02.523996 12714 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0625 16:23:02.524000 12714 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0625 16:23:02.524003 12714 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0625 16:23:02.524006 12714 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0625 16:23:02.525010 12714 net.cpp:150] Setting up proposal
I0625 16:23:02.525018 12714 net.cpp:157] Top shape: 1 5 (5)
I0625 16:23:02.525022 12714 net.cpp:165] Memory required for data: 1430530144
I0625 16:23:02.525023 12714 layer_factory.hpp:77] Creating layer roi-data
I0625 16:23:02.527515 12714 net.cpp:106] Creating Layer roi-data
I0625 16:23:02.527523 12714 net.cpp:454] roi-data <- rpn_rois
I0625 16:23:02.527526 12714 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0625 16:23:02.527529 12714 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0625 16:23:02.527531 12714 net.cpp:454] roi-data <- seg_mask_inds
I0625 16:23:02.527534 12714 net.cpp:454] roi-data <- flipped
I0625 16:23:02.527536 12714 net.cpp:411] roi-data -> rois
I0625 16:23:02.527551 12714 net.cpp:411] roi-data -> labels
I0625 16:23:02.527555 12714 net.cpp:411] roi-data -> bbox_targets
I0625 16:23:02.527559 12714 net.cpp:411] roi-data -> bbox_inside_weights
I0625 16:23:02.527562 12714 net.cpp:411] roi-data -> bbox_outside_weights
I0625 16:23:02.527566 12714 net.cpp:411] roi-data -> mask_targets
I0625 16:23:02.527570 12714 net.cpp:411] roi-data -> rois_pos
I0625 16:23:02.527839 12714 net.cpp:150] Setting up roi-data
I0625 16:23:02.527848 12714 net.cpp:157] Top shape: 1 5 (5)
I0625 16:23:02.527850 12714 net.cpp:157] Top shape: 1 1 (1)
I0625 16:23:02.527863 12714 net.cpp:157] Top shape: 1 8 (8)
I0625 16:23:02.527864 12714 net.cpp:157] Top shape: 1 8 (8)
I0625 16:23:02.527866 12714 net.cpp:157] Top shape: 1 8 (8)
I0625 16:23:02.527868 12714 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:23:02.527870 12714 net.cpp:157] Top shape: 1 5 (5)
I0625 16:23:02.527873 12714 net.cpp:165] Memory required for data: 1432435436
I0625 16:23:02.527874 12714 layer_factory.hpp:77] Creating layer roi_pool5
I0625 16:23:02.527894 12714 net.cpp:106] Creating Layer roi_pool5
I0625 16:23:02.527897 12714 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0625 16:23:02.527900 12714 net.cpp:454] roi_pool5 <- rois
I0625 16:23:02.527904 12714 net.cpp:411] roi_pool5 -> pool5
I0625 16:23:02.527909 12714 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 16:23:02.527987 12714 net.cpp:150] Setting up roi_pool5
I0625 16:23:02.527990 12714 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:23:02.527992 12714 net.cpp:165] Memory required for data: 1432535788
I0625 16:23:02.527994 12714 layer_factory.hpp:77] Creating layer fc6
I0625 16:23:02.528010 12714 net.cpp:106] Creating Layer fc6
I0625 16:23:02.528013 12714 net.cpp:454] fc6 <- pool5
I0625 16:23:02.528017 12714 net.cpp:411] fc6 -> fc6
I0625 16:23:02.665944 12714 net.cpp:150] Setting up fc6
I0625 16:23:02.665968 12714 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:23:02.665971 12714 net.cpp:165] Memory required for data: 1432552172
I0625 16:23:02.665997 12714 layer_factory.hpp:77] Creating layer relu6
I0625 16:23:02.666005 12714 net.cpp:106] Creating Layer relu6
I0625 16:23:02.666010 12714 net.cpp:454] relu6 <- fc6
I0625 16:23:02.666014 12714 net.cpp:397] relu6 -> fc6 (in-place)
I0625 16:23:02.666206 12714 net.cpp:150] Setting up relu6
I0625 16:23:02.666213 12714 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:23:02.666216 12714 net.cpp:165] Memory required for data: 1432568556
I0625 16:23:02.666218 12714 layer_factory.hpp:77] Creating layer fc7
I0625 16:23:02.666234 12714 net.cpp:106] Creating Layer fc7
I0625 16:23:02.666236 12714 net.cpp:454] fc7 <- fc6
I0625 16:23:02.666240 12714 net.cpp:411] fc7 -> fc7
I0625 16:23:02.691010 12714 net.cpp:150] Setting up fc7
I0625 16:23:02.691038 12714 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:23:02.691041 12714 net.cpp:165] Memory required for data: 1432584940
I0625 16:23:02.691061 12714 layer_factory.hpp:77] Creating layer relu7
I0625 16:23:02.691069 12714 net.cpp:106] Creating Layer relu7
I0625 16:23:02.691074 12714 net.cpp:454] relu7 <- fc7
I0625 16:23:02.691081 12714 net.cpp:397] relu7 -> fc7 (in-place)
I0625 16:23:02.691273 12714 net.cpp:150] Setting up relu7
I0625 16:23:02.691282 12714 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:23:02.691283 12714 net.cpp:165] Memory required for data: 1432601324
I0625 16:23:02.691285 12714 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0625 16:23:02.691301 12714 net.cpp:106] Creating Layer fc7_relu7_0_split
I0625 16:23:02.691304 12714 net.cpp:454] fc7_relu7_0_split <- fc7
I0625 16:23:02.691308 12714 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0625 16:23:02.691313 12714 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0625 16:23:02.691354 12714 net.cpp:150] Setting up fc7_relu7_0_split
I0625 16:23:02.691359 12714 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:23:02.691361 12714 net.cpp:157] Top shape: 1 4096 (4096)
I0625 16:23:02.691363 12714 net.cpp:165] Memory required for data: 1432634092
I0625 16:23:02.691365 12714 layer_factory.hpp:77] Creating layer cls_score
I0625 16:23:02.691371 12714 net.cpp:106] Creating Layer cls_score
I0625 16:23:02.691375 12714 net.cpp:454] cls_score <- fc7_relu7_0_split_0
I0625 16:23:02.691378 12714 net.cpp:411] cls_score -> cls_score
I0625 16:23:02.691628 12714 net.cpp:150] Setting up cls_score
I0625 16:23:02.691633 12714 net.cpp:157] Top shape: 1 2 (2)
I0625 16:23:02.691635 12714 net.cpp:165] Memory required for data: 1432634100
I0625 16:23:02.691639 12714 layer_factory.hpp:77] Creating layer bbox_pred
I0625 16:23:02.691643 12714 net.cpp:106] Creating Layer bbox_pred
I0625 16:23:02.691646 12714 net.cpp:454] bbox_pred <- fc7_relu7_0_split_1
I0625 16:23:02.691649 12714 net.cpp:411] bbox_pred -> bbox_pred
I0625 16:23:02.692435 12714 net.cpp:150] Setting up bbox_pred
I0625 16:23:02.692441 12714 net.cpp:157] Top shape: 1 8 (8)
I0625 16:23:02.692443 12714 net.cpp:165] Memory required for data: 1432634132
I0625 16:23:02.692447 12714 layer_factory.hpp:77] Creating layer loss_cls
I0625 16:23:02.692452 12714 net.cpp:106] Creating Layer loss_cls
I0625 16:23:02.692456 12714 net.cpp:454] loss_cls <- cls_score
I0625 16:23:02.692459 12714 net.cpp:454] loss_cls <- labels
I0625 16:23:02.692462 12714 net.cpp:411] loss_cls -> loss_cls
I0625 16:23:02.692467 12714 layer_factory.hpp:77] Creating layer loss_cls
I0625 16:23:02.693212 12714 net.cpp:150] Setting up loss_cls
I0625 16:23:02.693220 12714 net.cpp:157] Top shape: (1)
I0625 16:23:02.693222 12714 net.cpp:160]     with loss weight 3
I0625 16:23:02.693239 12714 net.cpp:165] Memory required for data: 1432634136
I0625 16:23:02.693243 12714 layer_factory.hpp:77] Creating layer loss_bbox
I0625 16:23:02.693246 12714 net.cpp:106] Creating Layer loss_bbox
I0625 16:23:02.693250 12714 net.cpp:454] loss_bbox <- bbox_pred
I0625 16:23:02.693254 12714 net.cpp:454] loss_bbox <- bbox_targets
I0625 16:23:02.693259 12714 net.cpp:454] loss_bbox <- bbox_inside_weights
I0625 16:23:02.693262 12714 net.cpp:454] loss_bbox <- bbox_outside_weights
I0625 16:23:02.693269 12714 net.cpp:411] loss_bbox -> loss_bbox
I0625 16:23:02.693352 12714 net.cpp:150] Setting up loss_bbox
I0625 16:23:02.693357 12714 net.cpp:157] Top shape: (1)
I0625 16:23:02.693358 12714 net.cpp:160]     with loss weight 2
I0625 16:23:02.693361 12714 net.cpp:165] Memory required for data: 1432634140
I0625 16:23:02.693373 12714 layer_factory.hpp:77] Creating layer roi_pool5_2
I0625 16:23:02.693378 12714 net.cpp:106] Creating Layer roi_pool5_2
I0625 16:23:02.693382 12714 net.cpp:454] roi_pool5_2 <- conv5_3_relu5_3_0_split_2
I0625 16:23:02.693385 12714 net.cpp:454] roi_pool5_2 <- rois_pos
I0625 16:23:02.693387 12714 net.cpp:411] roi_pool5_2 -> pool5_2
I0625 16:23:02.693401 12714 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0625 16:23:02.693477 12714 net.cpp:150] Setting up roi_pool5_2
I0625 16:23:02.693481 12714 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:23:02.693485 12714 net.cpp:165] Memory required for data: 1432734492
I0625 16:23:02.693496 12714 layer_factory.hpp:77] Creating layer pool5_2_conv
I0625 16:23:02.693503 12714 net.cpp:106] Creating Layer pool5_2_conv
I0625 16:23:02.693519 12714 net.cpp:454] pool5_2_conv <- pool5_2
I0625 16:23:02.693522 12714 net.cpp:411] pool5_2_conv -> pool5_2_conv
I0625 16:23:02.700347 12714 net.cpp:150] Setting up pool5_2_conv
I0625 16:23:02.700357 12714 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:23:02.700368 12714 net.cpp:165] Memory required for data: 1432834844
I0625 16:23:02.700373 12714 layer_factory.hpp:77] Creating layer pool5_2_conv_relu
I0625 16:23:02.700387 12714 net.cpp:106] Creating Layer pool5_2_conv_relu
I0625 16:23:02.700390 12714 net.cpp:454] pool5_2_conv_relu <- pool5_2_conv
I0625 16:23:02.700395 12714 net.cpp:411] pool5_2_conv_relu -> pool5_2_conv_relu
I0625 16:23:02.700552 12714 net.cpp:150] Setting up pool5_2_conv_relu
I0625 16:23:02.700558 12714 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:23:02.700569 12714 net.cpp:165] Memory required for data: 1432935196
I0625 16:23:02.700572 12714 layer_factory.hpp:77] Creating layer pool5_2_conv2
I0625 16:23:02.700595 12714 net.cpp:106] Creating Layer pool5_2_conv2
I0625 16:23:02.700608 12714 net.cpp:454] pool5_2_conv2 <- pool5_2_conv_relu
I0625 16:23:02.700613 12714 net.cpp:411] pool5_2_conv2 -> pool5_2_conv2
I0625 16:23:02.776068 12714 net.cpp:150] Setting up pool5_2_conv2
I0625 16:23:02.776103 12714 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:23:02.776108 12714 net.cpp:165] Memory required for data: 1433035548
I0625 16:23:02.776123 12714 layer_factory.hpp:77] Creating layer pool5_2_conv2_relu
I0625 16:23:02.776135 12714 net.cpp:106] Creating Layer pool5_2_conv2_relu
I0625 16:23:02.776146 12714 net.cpp:454] pool5_2_conv2_relu <- pool5_2_conv2
I0625 16:23:02.776154 12714 net.cpp:411] pool5_2_conv2_relu -> pool5_2_conv2_relu
I0625 16:23:02.776417 12714 net.cpp:150] Setting up pool5_2_conv2_relu
I0625 16:23:02.776443 12714 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0625 16:23:02.776456 12714 net.cpp:165] Memory required for data: 1433135900
I0625 16:23:02.776468 12714 layer_factory.hpp:77] Creating layer mask_deconv1
I0625 16:23:02.776484 12714 net.cpp:106] Creating Layer mask_deconv1
I0625 16:23:02.776495 12714 net.cpp:454] mask_deconv1 <- pool5_2_conv2_relu
I0625 16:23:02.776511 12714 net.cpp:411] mask_deconv1 -> mask_deconv1
I0625 16:23:02.778070 12714 net.cpp:150] Setting up mask_deconv1
I0625 16:23:02.778101 12714 net.cpp:157] Top shape: 1 256 30 30 (230400)
I0625 16:23:02.778115 12714 net.cpp:165] Memory required for data: 1434057500
I0625 16:23:02.778129 12714 layer_factory.hpp:77] Creating layer pool5_2_conv3
I0625 16:23:02.778151 12714 net.cpp:106] Creating Layer pool5_2_conv3
I0625 16:23:02.778168 12714 net.cpp:454] pool5_2_conv3 <- mask_deconv1
I0625 16:23:02.778183 12714 net.cpp:411] pool5_2_conv3 -> pool5_2_conv3
I0625 16:23:02.814396 12714 net.cpp:150] Setting up pool5_2_conv3
I0625 16:23:02.814424 12714 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 16:23:02.814427 12714 net.cpp:165] Memory required for data: 1435900700
I0625 16:23:02.814435 12714 layer_factory.hpp:77] Creating layer pool5_2_conv3_relu
I0625 16:23:02.814441 12714 net.cpp:106] Creating Layer pool5_2_conv3_relu
I0625 16:23:02.814445 12714 net.cpp:454] pool5_2_conv3_relu <- pool5_2_conv3
I0625 16:23:02.814450 12714 net.cpp:411] pool5_2_conv3_relu -> pool5_2_conv3_relu
I0625 16:23:02.814597 12714 net.cpp:150] Setting up pool5_2_conv3_relu
I0625 16:23:02.814604 12714 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 16:23:02.814615 12714 net.cpp:165] Memory required for data: 1437743900
I0625 16:23:02.814616 12714 layer_factory.hpp:77] Creating layer pool5_2_conv4
I0625 16:23:02.814625 12714 net.cpp:106] Creating Layer pool5_2_conv4
I0625 16:23:02.814627 12714 net.cpp:454] pool5_2_conv4 <- pool5_2_conv3_relu
I0625 16:23:02.814631 12714 net.cpp:411] pool5_2_conv4 -> pool5_2_conv4
I0625 16:23:02.867803 12714 net.cpp:150] Setting up pool5_2_conv4
I0625 16:23:02.867832 12714 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 16:23:02.867835 12714 net.cpp:165] Memory required for data: 1439587100
I0625 16:23:02.867841 12714 layer_factory.hpp:77] Creating layer pool5_2_conv4_relu
I0625 16:23:02.867859 12714 net.cpp:106] Creating Layer pool5_2_conv4_relu
I0625 16:23:02.867863 12714 net.cpp:454] pool5_2_conv4_relu <- pool5_2_conv4
I0625 16:23:02.867868 12714 net.cpp:411] pool5_2_conv4_relu -> pool5_2_conv4_relu
I0625 16:23:02.868016 12714 net.cpp:150] Setting up pool5_2_conv4_relu
I0625 16:23:02.868021 12714 net.cpp:157] Top shape: 1 512 30 30 (460800)
I0625 16:23:02.868033 12714 net.cpp:165] Memory required for data: 1441430300
I0625 16:23:02.868036 12714 layer_factory.hpp:77] Creating layer mask_deconv2
I0625 16:23:02.868041 12714 net.cpp:106] Creating Layer mask_deconv2
I0625 16:23:02.868043 12714 net.cpp:454] mask_deconv2 <- pool5_2_conv4_relu
I0625 16:23:02.868047 12714 net.cpp:411] mask_deconv2 -> mask_deconv2
I0625 16:23:02.868870 12714 net.cpp:150] Setting up mask_deconv2
I0625 16:23:02.868875 12714 net.cpp:157] Top shape: 1 256 122 122 (3810304)
I0625 16:23:02.868887 12714 net.cpp:165] Memory required for data: 1456671516
I0625 16:23:02.868891 12714 layer_factory.hpp:77] Creating layer pool5_2_conv5
I0625 16:23:02.868896 12714 net.cpp:106] Creating Layer pool5_2_conv5
I0625 16:23:02.868898 12714 net.cpp:454] pool5_2_conv5 <- mask_deconv2
I0625 16:23:02.868913 12714 net.cpp:411] pool5_2_conv5 -> pool5_2_conv5
I0625 16:23:02.895114 12714 net.cpp:150] Setting up pool5_2_conv5
I0625 16:23:02.895131 12714 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 16:23:02.895133 12714 net.cpp:165] Memory required for data: 1487153948
I0625 16:23:02.895140 12714 layer_factory.hpp:77] Creating layer pool5_2_conv5_relu
I0625 16:23:02.895148 12714 net.cpp:106] Creating Layer pool5_2_conv5_relu
I0625 16:23:02.895150 12714 net.cpp:454] pool5_2_conv5_relu <- pool5_2_conv5
I0625 16:23:02.895155 12714 net.cpp:411] pool5_2_conv5_relu -> pool5_2_conv5_relu
I0625 16:23:02.895306 12714 net.cpp:150] Setting up pool5_2_conv5_relu
I0625 16:23:02.895313 12714 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 16:23:02.895313 12714 net.cpp:165] Memory required for data: 1517636380
I0625 16:23:02.895315 12714 layer_factory.hpp:77] Creating layer pool5_2_conv6
I0625 16:23:02.895325 12714 net.cpp:106] Creating Layer pool5_2_conv6
I0625 16:23:02.895328 12714 net.cpp:454] pool5_2_conv6 <- pool5_2_conv5_relu
I0625 16:23:02.895330 12714 net.cpp:411] pool5_2_conv6 -> pool5_2_conv6
I0625 16:23:02.945796 12714 net.cpp:150] Setting up pool5_2_conv6
I0625 16:23:02.945814 12714 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 16:23:02.945816 12714 net.cpp:165] Memory required for data: 1548118812
I0625 16:23:02.945822 12714 layer_factory.hpp:77] Creating layer pool5_2_conv6_relu
I0625 16:23:02.945829 12714 net.cpp:106] Creating Layer pool5_2_conv6_relu
I0625 16:23:02.945833 12714 net.cpp:454] pool5_2_conv6_relu <- pool5_2_conv6
I0625 16:23:02.945847 12714 net.cpp:411] pool5_2_conv6_relu -> pool5_2_conv6_relu
I0625 16:23:02.946369 12714 net.cpp:150] Setting up pool5_2_conv6_relu
I0625 16:23:02.946377 12714 net.cpp:157] Top shape: 1 512 122 122 (7620608)
I0625 16:23:02.946378 12714 net.cpp:165] Memory required for data: 1578601244
I0625 16:23:02.946380 12714 layer_factory.hpp:77] Creating layer mask_deconv3
I0625 16:23:02.946386 12714 net.cpp:106] Creating Layer mask_deconv3
I0625 16:23:02.946388 12714 net.cpp:454] mask_deconv3 <- pool5_2_conv6_relu
I0625 16:23:02.946393 12714 net.cpp:411] mask_deconv3 -> mask_deconv3
I0625 16:23:02.946753 12714 net.cpp:150] Setting up mask_deconv3
I0625 16:23:02.946758 12714 net.cpp:157] Top shape: 1 256 244 244 (15241216)
I0625 16:23:02.946759 12714 net.cpp:165] Memory required for data: 1639566108
I0625 16:23:02.946763 12714 layer_factory.hpp:77] Creating layer mask_score
I0625 16:23:02.946768 12714 net.cpp:106] Creating Layer mask_score
I0625 16:23:02.946771 12714 net.cpp:454] mask_score <- mask_deconv3
I0625 16:23:02.946774 12714 net.cpp:411] mask_score -> mask_score
I0625 16:23:02.947729 12714 net.cpp:150] Setting up mask_score
I0625 16:23:02.947737 12714 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:23:02.947739 12714 net.cpp:165] Memory required for data: 1641471260
I0625 16:23:02.947743 12714 layer_factory.hpp:77] Creating layer prob
I0625 16:23:02.947747 12714 net.cpp:106] Creating Layer prob
I0625 16:23:02.947751 12714 net.cpp:454] prob <- mask_score
I0625 16:23:02.947753 12714 net.cpp:411] prob -> mask_score_softmax
I0625 16:23:02.947924 12714 net.cpp:150] Setting up prob
I0625 16:23:02.947930 12714 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:23:02.947932 12714 net.cpp:165] Memory required for data: 1643376412
I0625 16:23:02.947934 12714 layer_factory.hpp:77] Creating layer log
I0625 16:23:02.947942 12714 net.cpp:106] Creating Layer log
I0625 16:23:02.947943 12714 net.cpp:454] log <- mask_score_softmax
I0625 16:23:02.947947 12714 net.cpp:411] log -> log
I0625 16:23:02.947973 12714 net.cpp:150] Setting up log
I0625 16:23:02.947984 12714 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:23:02.947986 12714 net.cpp:165] Memory required for data: 1645281564
I0625 16:23:02.947988 12714 layer_factory.hpp:77] Creating layer mult1
I0625 16:23:02.948002 12714 net.cpp:106] Creating Layer mult1
I0625 16:23:02.948004 12714 net.cpp:454] mult1 <- log
I0625 16:23:02.948007 12714 net.cpp:454] mult1 <- mask_targets
I0625 16:23:02.948009 12714 net.cpp:411] mult1 -> mult1
I0625 16:23:02.948024 12714 net.cpp:150] Setting up mult1
I0625 16:23:02.948036 12714 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:23:02.948038 12714 net.cpp:165] Memory required for data: 1647186716
I0625 16:23:02.948040 12714 layer_factory.hpp:77] Creating layer cross_entropy
I0625 16:23:02.948043 12714 net.cpp:106] Creating Layer cross_entropy
I0625 16:23:02.948045 12714 net.cpp:454] cross_entropy <- mult1
I0625 16:23:02.948060 12714 net.cpp:411] cross_entropy -> cross_entropy
I0625 16:23:02.948082 12714 net.cpp:150] Setting up cross_entropy
I0625 16:23:02.948099 12714 net.cpp:157] Top shape: 1 8 244 244 (476288)
I0625 16:23:02.948101 12714 net.cpp:165] Memory required for data: 1649091868
I0625 16:23:02.948102 12714 layer_factory.hpp:77] Creating layer ce_sum
I0625 16:23:02.948117 12714 net.cpp:106] Creating Layer ce_sum
I0625 16:23:02.948118 12714 net.cpp:454] ce_sum <- cross_entropy
I0625 16:23:02.948122 12714 net.cpp:411] ce_sum -> cross_entropy_sum
I0625 16:23:02.949301 12714 net.cpp:150] Setting up ce_sum
I0625 16:23:02.949308 12714 net.cpp:157] Top shape: 1 1 244 244 (59536)
I0625 16:23:02.949311 12714 net.cpp:165] Memory required for data: 1649330012
I0625 16:23:02.949313 12714 layer_factory.hpp:77] Creating layer ce_mean
I0625 16:23:02.949317 12714 net.cpp:106] Creating Layer ce_mean
I0625 16:23:02.949319 12714 net.cpp:454] ce_mean <- cross_entropy_sum
I0625 16:23:02.949323 12714 net.cpp:411] ce_mean -> cross_entropy_mean
I0625 16:23:02.949419 12714 net.cpp:150] Setting up ce_mean
I0625 16:23:02.949424 12714 net.cpp:157] Top shape: (1)
I0625 16:23:02.949425 12714 net.cpp:160]     with loss weight 1
I0625 16:23:02.949431 12714 net.cpp:165] Memory required for data: 1649330016
I0625 16:23:02.949434 12714 net.cpp:226] ce_mean needs backward computation.
I0625 16:23:02.949434 12714 net.cpp:226] ce_sum needs backward computation.
I0625 16:23:02.949436 12714 net.cpp:226] cross_entropy needs backward computation.
I0625 16:23:02.949437 12714 net.cpp:226] mult1 needs backward computation.
I0625 16:23:02.949440 12714 net.cpp:226] log needs backward computation.
I0625 16:23:02.949440 12714 net.cpp:226] prob needs backward computation.
I0625 16:23:02.949452 12714 net.cpp:226] mask_score needs backward computation.
I0625 16:23:02.949455 12714 net.cpp:226] mask_deconv3 needs backward computation.
I0625 16:23:02.949455 12714 net.cpp:226] pool5_2_conv6_relu needs backward computation.
I0625 16:23:02.949457 12714 net.cpp:226] pool5_2_conv6 needs backward computation.
I0625 16:23:02.949460 12714 net.cpp:226] pool5_2_conv5_relu needs backward computation.
I0625 16:23:02.949460 12714 net.cpp:226] pool5_2_conv5 needs backward computation.
I0625 16:23:02.949462 12714 net.cpp:226] mask_deconv2 needs backward computation.
I0625 16:23:02.949465 12714 net.cpp:226] pool5_2_conv4_relu needs backward computation.
I0625 16:23:02.949465 12714 net.cpp:226] pool5_2_conv4 needs backward computation.
I0625 16:23:02.949467 12714 net.cpp:226] pool5_2_conv3_relu needs backward computation.
I0625 16:23:02.949470 12714 net.cpp:226] pool5_2_conv3 needs backward computation.
I0625 16:23:02.949471 12714 net.cpp:226] mask_deconv1 needs backward computation.
I0625 16:23:02.949473 12714 net.cpp:226] pool5_2_conv2_relu needs backward computation.
I0625 16:23:02.949476 12714 net.cpp:226] pool5_2_conv2 needs backward computation.
I0625 16:23:02.949476 12714 net.cpp:226] pool5_2_conv_relu needs backward computation.
I0625 16:23:02.949478 12714 net.cpp:226] pool5_2_conv needs backward computation.
I0625 16:23:02.949481 12714 net.cpp:226] roi_pool5_2 needs backward computation.
I0625 16:23:02.949482 12714 net.cpp:226] loss_bbox needs backward computation.
I0625 16:23:02.949486 12714 net.cpp:226] loss_cls needs backward computation.
I0625 16:23:02.949489 12714 net.cpp:226] bbox_pred needs backward computation.
I0625 16:23:02.949492 12714 net.cpp:226] cls_score needs backward computation.
I0625 16:23:02.949494 12714 net.cpp:226] fc7_relu7_0_split needs backward computation.
I0625 16:23:02.949496 12714 net.cpp:226] relu7 needs backward computation.
I0625 16:23:02.949498 12714 net.cpp:226] fc7 needs backward computation.
I0625 16:23:02.949501 12714 net.cpp:226] relu6 needs backward computation.
I0625 16:23:02.949502 12714 net.cpp:226] fc6 needs backward computation.
I0625 16:23:02.949504 12714 net.cpp:226] roi_pool5 needs backward computation.
I0625 16:23:02.949506 12714 net.cpp:226] roi-data needs backward computation.
I0625 16:23:02.949510 12714 net.cpp:226] proposal needs backward computation.
I0625 16:23:02.949513 12714 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0625 16:23:02.949517 12714 net.cpp:226] rpn_cls_prob needs backward computation.
I0625 16:23:02.949519 12714 net.cpp:226] rpn_loss_bbox needs backward computation.
I0625 16:23:02.949522 12714 net.cpp:226] rpn_loss_cls needs backward computation.
I0625 16:23:02.949524 12714 net.cpp:226] rpn-data needs backward computation.
I0625 16:23:02.949529 12714 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0625 16:23:02.949532 12714 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0625 16:23:02.949533 12714 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0625 16:23:02.949537 12714 net.cpp:226] rpn_bbox_pred needs backward computation.
I0625 16:23:02.949538 12714 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0625 16:23:02.949542 12714 net.cpp:226] rpn_cls_score needs backward computation.
I0625 16:23:02.949543 12714 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0625 16:23:02.949545 12714 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0625 16:23:02.949548 12714 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0625 16:23:02.949549 12714 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0625 16:23:02.949551 12714 net.cpp:226] relu5_3 needs backward computation.
I0625 16:23:02.949553 12714 net.cpp:226] conv5_3 needs backward computation.
I0625 16:23:02.949555 12714 net.cpp:226] relu5_2 needs backward computation.
I0625 16:23:02.949558 12714 net.cpp:226] conv5_2 needs backward computation.
I0625 16:23:02.949559 12714 net.cpp:226] relu5_1 needs backward computation.
I0625 16:23:02.949560 12714 net.cpp:226] conv5_1 needs backward computation.
I0625 16:23:02.949563 12714 net.cpp:226] pool4 needs backward computation.
I0625 16:23:02.949564 12714 net.cpp:226] relu4_3 needs backward computation.
I0625 16:23:02.949566 12714 net.cpp:226] conv4_3 needs backward computation.
I0625 16:23:02.949568 12714 net.cpp:226] relu4_2 needs backward computation.
I0625 16:23:02.949569 12714 net.cpp:226] conv4_2 needs backward computation.
I0625 16:23:02.949573 12714 net.cpp:226] relu4_1 needs backward computation.
I0625 16:23:02.949573 12714 net.cpp:226] conv4_1 needs backward computation.
I0625 16:23:02.949575 12714 net.cpp:226] pool3 needs backward computation.
I0625 16:23:02.949578 12714 net.cpp:226] relu3_3 needs backward computation.
I0625 16:23:02.949579 12714 net.cpp:226] conv3_3 needs backward computation.
I0625 16:23:02.949581 12714 net.cpp:226] relu3_2 needs backward computation.
I0625 16:23:02.949582 12714 net.cpp:226] conv3_2 needs backward computation.
I0625 16:23:02.949584 12714 net.cpp:226] relu3_1 needs backward computation.
I0625 16:23:02.949586 12714 net.cpp:226] conv3_1 needs backward computation.
I0625 16:23:02.949599 12714 net.cpp:228] pool2 does not need backward computation.
I0625 16:23:02.949600 12714 net.cpp:228] relu2_2 does not need backward computation.
I0625 16:23:02.949602 12714 net.cpp:228] conv2_2 does not need backward computation.
I0625 16:23:02.949604 12714 net.cpp:228] relu2_1 does not need backward computation.
I0625 16:23:02.949606 12714 net.cpp:228] conv2_1 does not need backward computation.
I0625 16:23:02.949609 12714 net.cpp:228] pool1 does not need backward computation.
I0625 16:23:02.949610 12714 net.cpp:228] relu1_2 does not need backward computation.
I0625 16:23:02.949612 12714 net.cpp:228] conv1_2 does not need backward computation.
I0625 16:23:02.949615 12714 net.cpp:228] relu1_1 does not need backward computation.
I0625 16:23:02.949615 12714 net.cpp:228] conv1_1 does not need backward computation.
I0625 16:23:02.949618 12714 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0625 16:23:02.949620 12714 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0625 16:23:02.949623 12714 net.cpp:228] data_input-data_0_split does not need backward computation.
I0625 16:23:02.949635 12714 net.cpp:228] input-data does not need backward computation.
I0625 16:23:02.949638 12714 net.cpp:270] This network produces output cross_entropy_mean
I0625 16:23:02.949640 12714 net.cpp:270] This network produces output loss_bbox
I0625 16:23:02.949642 12714 net.cpp:270] This network produces output loss_cls
I0625 16:23:02.949645 12714 net.cpp:270] This network produces output rpn_cls_loss
I0625 16:23:02.949646 12714 net.cpp:270] This network produces output rpn_loss_bbox
I0625 16:23:02.949685 12714 net.cpp:283] Network initialization done.
I0625 16:23:02.949837 12714 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0625 16:23:12.259830 12714 net.cpp:816] Ignoring source layer pool5
I0625 16:23:12.331661 12714 net.cpp:816] Ignoring source layer drop6
I0625 16:23:12.343188 12714 net.cpp:816] Ignoring source layer drop7
I0625 16:23:12.343201 12714 net.cpp:816] Ignoring source layer fc8
Solving...
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 171, in train_net
    model_paths = sw.train_model(max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 110, in train_model
    self.solver.step(1)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_target_layer.py", line 396, in forward
    mask_targets[ix, :, :, :] = roi_mask_kl
ValueError: could not broadcast input array from shape (8,244,244) into shape (4,244,244)
