+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-11_14-06-08
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-11_14-06-08
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0611 14:06:23.013562 12504 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0611 14:06:23.013587 12504 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0611 14:06:23.015102 12504 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0611 14:06:23.015518 12504 layer_factory.hpp:77] Creating layer input-data
I0611 14:06:23.143375 12504 net.cpp:106] Creating Layer input-data
I0611 14:06:23.143414 12504 net.cpp:411] input-data -> data
I0611 14:06:23.143435 12504 net.cpp:411] input-data -> im_info
I0611 14:06:23.143446 12504 net.cpp:411] input-data -> gt_boxes
I0611 14:06:23.143461 12504 net.cpp:411] input-data -> seg_mask_inds
I0611 14:06:23.143471 12504 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0611 14:06:23.199115 12504 net.cpp:150] Setting up input-data
I0611 14:06:23.199137 12504 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 14:06:23.199146 12504 net.cpp:157] Top shape: 1 3 (3)
I0611 14:06:23.199151 12504 net.cpp:157] Top shape: 1 4 (4)
I0611 14:06:23.199156 12504 net.cpp:157] Top shape: 1 2 (2)
I0611 14:06:23.199162 12504 net.cpp:157] Top shape: 1 1 (1)
I0611 14:06:23.199167 12504 net.cpp:165] Memory required for data: 7200040
I0611 14:06:23.199175 12504 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0611 14:06:23.199767 12504 net.cpp:106] Creating Layer data_input-data_0_split
I0611 14:06:23.199775 12504 net.cpp:454] data_input-data_0_split <- data
I0611 14:06:23.199782 12504 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0611 14:06:23.199791 12504 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0611 14:06:23.199820 12504 net.cpp:150] Setting up data_input-data_0_split
I0611 14:06:23.199826 12504 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 14:06:23.199831 12504 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 14:06:23.199832 12504 net.cpp:165] Memory required for data: 21600040
I0611 14:06:23.199836 12504 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0611 14:06:23.199841 12504 net.cpp:106] Creating Layer im_info_input-data_1_split
I0611 14:06:23.199843 12504 net.cpp:454] im_info_input-data_1_split <- im_info
I0611 14:06:23.199847 12504 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0611 14:06:23.199852 12504 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0611 14:06:23.199859 12504 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0611 14:06:23.199882 12504 net.cpp:150] Setting up im_info_input-data_1_split
I0611 14:06:23.199885 12504 net.cpp:157] Top shape: 1 3 (3)
I0611 14:06:23.199888 12504 net.cpp:157] Top shape: 1 3 (3)
I0611 14:06:23.199893 12504 net.cpp:157] Top shape: 1 3 (3)
I0611 14:06:23.199895 12504 net.cpp:165] Memory required for data: 21600076
I0611 14:06:23.199900 12504 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0611 14:06:23.199903 12504 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0611 14:06:23.199908 12504 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0611 14:06:23.199913 12504 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0611 14:06:23.199916 12504 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0611 14:06:23.199932 12504 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0611 14:06:23.199936 12504 net.cpp:157] Top shape: 1 4 (4)
I0611 14:06:23.199939 12504 net.cpp:157] Top shape: 1 4 (4)
I0611 14:06:23.199944 12504 net.cpp:165] Memory required for data: 21600108
I0611 14:06:23.199945 12504 layer_factory.hpp:77] Creating layer conv1_1
I0611 14:06:23.199954 12504 net.cpp:106] Creating Layer conv1_1
I0611 14:06:23.199957 12504 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0611 14:06:23.199961 12504 net.cpp:411] conv1_1 -> conv1_1
I0611 14:06:23.829643 12504 net.cpp:150] Setting up conv1_1
I0611 14:06:23.829666 12504 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 14:06:23.829669 12504 net.cpp:165] Memory required for data: 175200108
I0611 14:06:23.829682 12504 layer_factory.hpp:77] Creating layer relu1_1
I0611 14:06:23.829691 12504 net.cpp:106] Creating Layer relu1_1
I0611 14:06:23.829695 12504 net.cpp:454] relu1_1 <- conv1_1
I0611 14:06:23.829699 12504 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0611 14:06:23.829850 12504 net.cpp:150] Setting up relu1_1
I0611 14:06:23.829857 12504 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 14:06:23.829859 12504 net.cpp:165] Memory required for data: 328800108
I0611 14:06:23.829864 12504 layer_factory.hpp:77] Creating layer conv1_2
I0611 14:06:23.829871 12504 net.cpp:106] Creating Layer conv1_2
I0611 14:06:23.829874 12504 net.cpp:454] conv1_2 <- conv1_1
I0611 14:06:23.829877 12504 net.cpp:411] conv1_2 -> conv1_2
I0611 14:06:23.832592 12504 net.cpp:150] Setting up conv1_2
I0611 14:06:23.832634 12504 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 14:06:23.832639 12504 net.cpp:165] Memory required for data: 482400108
I0611 14:06:23.832653 12504 layer_factory.hpp:77] Creating layer relu1_2
I0611 14:06:23.832662 12504 net.cpp:106] Creating Layer relu1_2
I0611 14:06:23.832670 12504 net.cpp:454] relu1_2 <- conv1_2
I0611 14:06:23.832676 12504 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0611 14:06:23.832818 12504 net.cpp:150] Setting up relu1_2
I0611 14:06:23.832823 12504 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 14:06:23.832835 12504 net.cpp:165] Memory required for data: 636000108
I0611 14:06:23.832839 12504 layer_factory.hpp:77] Creating layer pool1
I0611 14:06:23.832845 12504 net.cpp:106] Creating Layer pool1
I0611 14:06:23.832849 12504 net.cpp:454] pool1 <- conv1_2
I0611 14:06:23.832861 12504 net.cpp:411] pool1 -> pool1
I0611 14:06:23.833514 12504 net.cpp:150] Setting up pool1
I0611 14:06:23.833521 12504 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0611 14:06:23.833523 12504 net.cpp:165] Memory required for data: 674400108
I0611 14:06:23.833526 12504 layer_factory.hpp:77] Creating layer conv2_1
I0611 14:06:23.833534 12504 net.cpp:106] Creating Layer conv2_1
I0611 14:06:23.833536 12504 net.cpp:454] conv2_1 <- pool1
I0611 14:06:23.833540 12504 net.cpp:411] conv2_1 -> conv2_1
I0611 14:06:23.835429 12504 net.cpp:150] Setting up conv2_1
I0611 14:06:23.835438 12504 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 14:06:23.835440 12504 net.cpp:165] Memory required for data: 751200108
I0611 14:06:23.835448 12504 layer_factory.hpp:77] Creating layer relu2_1
I0611 14:06:23.835453 12504 net.cpp:106] Creating Layer relu2_1
I0611 14:06:23.835455 12504 net.cpp:454] relu2_1 <- conv2_1
I0611 14:06:23.835469 12504 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0611 14:06:23.835958 12504 net.cpp:150] Setting up relu2_1
I0611 14:06:23.835966 12504 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 14:06:23.835969 12504 net.cpp:165] Memory required for data: 828000108
I0611 14:06:23.835971 12504 layer_factory.hpp:77] Creating layer conv2_2
I0611 14:06:23.835978 12504 net.cpp:106] Creating Layer conv2_2
I0611 14:06:23.835981 12504 net.cpp:454] conv2_2 <- conv2_1
I0611 14:06:23.835984 12504 net.cpp:411] conv2_2 -> conv2_2
I0611 14:06:23.837869 12504 net.cpp:150] Setting up conv2_2
I0611 14:06:23.837877 12504 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 14:06:23.837882 12504 net.cpp:165] Memory required for data: 904800108
I0611 14:06:23.837885 12504 layer_factory.hpp:77] Creating layer relu2_2
I0611 14:06:23.837890 12504 net.cpp:106] Creating Layer relu2_2
I0611 14:06:23.837893 12504 net.cpp:454] relu2_2 <- conv2_2
I0611 14:06:23.837896 12504 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0611 14:06:23.838073 12504 net.cpp:150] Setting up relu2_2
I0611 14:06:23.838081 12504 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 14:06:23.838083 12504 net.cpp:165] Memory required for data: 981600108
I0611 14:06:23.838085 12504 layer_factory.hpp:77] Creating layer pool2
I0611 14:06:23.838091 12504 net.cpp:106] Creating Layer pool2
I0611 14:06:23.838093 12504 net.cpp:454] pool2 <- conv2_2
I0611 14:06:23.838096 12504 net.cpp:411] pool2 -> pool2
I0611 14:06:23.838156 12504 net.cpp:150] Setting up pool2
I0611 14:06:23.838160 12504 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0611 14:06:23.838171 12504 net.cpp:165] Memory required for data: 1000800108
I0611 14:06:23.838173 12504 layer_factory.hpp:77] Creating layer conv3_1
I0611 14:06:23.838179 12504 net.cpp:106] Creating Layer conv3_1
I0611 14:06:23.838181 12504 net.cpp:454] conv3_1 <- pool2
I0611 14:06:23.838186 12504 net.cpp:411] conv3_1 -> conv3_1
I0611 14:06:23.840106 12504 net.cpp:150] Setting up conv3_1
I0611 14:06:23.840114 12504 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:23.840116 12504 net.cpp:165] Memory required for data: 1039200108
I0611 14:06:23.840123 12504 layer_factory.hpp:77] Creating layer relu3_1
I0611 14:06:23.840128 12504 net.cpp:106] Creating Layer relu3_1
I0611 14:06:23.840131 12504 net.cpp:454] relu3_1 <- conv3_1
I0611 14:06:23.840143 12504 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0611 14:06:23.840286 12504 net.cpp:150] Setting up relu3_1
I0611 14:06:23.840298 12504 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:23.840301 12504 net.cpp:165] Memory required for data: 1077600108
I0611 14:06:23.840306 12504 layer_factory.hpp:77] Creating layer conv3_2
I0611 14:06:23.840327 12504 net.cpp:106] Creating Layer conv3_2
I0611 14:06:23.840332 12504 net.cpp:454] conv3_2 <- conv3_1
I0611 14:06:23.840348 12504 net.cpp:411] conv3_2 -> conv3_2
I0611 14:06:23.842576 12504 net.cpp:150] Setting up conv3_2
I0611 14:06:23.842594 12504 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:23.842597 12504 net.cpp:165] Memory required for data: 1116000108
I0611 14:06:23.842603 12504 layer_factory.hpp:77] Creating layer relu3_2
I0611 14:06:23.842608 12504 net.cpp:106] Creating Layer relu3_2
I0611 14:06:23.842622 12504 net.cpp:454] relu3_2 <- conv3_2
I0611 14:06:23.842628 12504 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0611 14:06:23.842761 12504 net.cpp:150] Setting up relu3_2
I0611 14:06:23.842766 12504 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:23.842778 12504 net.cpp:165] Memory required for data: 1154400108
I0611 14:06:23.842782 12504 layer_factory.hpp:77] Creating layer conv3_3
I0611 14:06:23.842787 12504 net.cpp:106] Creating Layer conv3_3
I0611 14:06:23.842790 12504 net.cpp:454] conv3_3 <- conv3_2
I0611 14:06:23.842804 12504 net.cpp:411] conv3_3 -> conv3_3
I0611 14:06:23.845139 12504 net.cpp:150] Setting up conv3_3
I0611 14:06:23.845151 12504 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:23.845155 12504 net.cpp:165] Memory required for data: 1192800108
I0611 14:06:23.845160 12504 layer_factory.hpp:77] Creating layer relu3_3
I0611 14:06:23.845166 12504 net.cpp:106] Creating Layer relu3_3
I0611 14:06:23.845180 12504 net.cpp:454] relu3_3 <- conv3_3
I0611 14:06:23.845183 12504 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0611 14:06:23.845327 12504 net.cpp:150] Setting up relu3_3
I0611 14:06:23.845333 12504 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 14:06:23.845345 12504 net.cpp:165] Memory required for data: 1231200108
I0611 14:06:23.845348 12504 layer_factory.hpp:77] Creating layer pool3
I0611 14:06:23.845355 12504 net.cpp:106] Creating Layer pool3
I0611 14:06:23.845357 12504 net.cpp:454] pool3 <- conv3_3
I0611 14:06:23.845362 12504 net.cpp:411] pool3 -> pool3
I0611 14:06:23.845403 12504 net.cpp:150] Setting up pool3
I0611 14:06:23.845408 12504 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0611 14:06:23.845410 12504 net.cpp:165] Memory required for data: 1240800108
I0611 14:06:23.845438 12504 layer_factory.hpp:77] Creating layer conv4_1
I0611 14:06:23.845449 12504 net.cpp:106] Creating Layer conv4_1
I0611 14:06:23.845453 12504 net.cpp:454] conv4_1 <- pool3
I0611 14:06:23.845458 12504 net.cpp:411] conv4_1 -> conv4_1
I0611 14:06:23.850467 12504 net.cpp:150] Setting up conv4_1
I0611 14:06:23.850486 12504 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:23.850489 12504 net.cpp:165] Memory required for data: 1260000108
I0611 14:06:23.850497 12504 layer_factory.hpp:77] Creating layer relu4_1
I0611 14:06:23.850505 12504 net.cpp:106] Creating Layer relu4_1
I0611 14:06:23.850510 12504 net.cpp:454] relu4_1 <- conv4_1
I0611 14:06:23.850514 12504 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0611 14:06:23.850644 12504 net.cpp:150] Setting up relu4_1
I0611 14:06:23.850651 12504 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:23.850652 12504 net.cpp:165] Memory required for data: 1279200108
I0611 14:06:23.850656 12504 layer_factory.hpp:77] Creating layer conv4_2
I0611 14:06:23.850662 12504 net.cpp:106] Creating Layer conv4_2
I0611 14:06:23.850666 12504 net.cpp:454] conv4_2 <- conv4_1
I0611 14:06:23.850669 12504 net.cpp:411] conv4_2 -> conv4_2
I0611 14:06:23.855523 12504 net.cpp:150] Setting up conv4_2
I0611 14:06:23.855540 12504 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:23.855545 12504 net.cpp:165] Memory required for data: 1298400108
I0611 14:06:23.855554 12504 layer_factory.hpp:77] Creating layer relu4_2
I0611 14:06:23.855562 12504 net.cpp:106] Creating Layer relu4_2
I0611 14:06:23.855567 12504 net.cpp:454] relu4_2 <- conv4_2
I0611 14:06:23.855571 12504 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0611 14:06:23.856088 12504 net.cpp:150] Setting up relu4_2
I0611 14:06:23.856096 12504 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:23.856098 12504 net.cpp:165] Memory required for data: 1317600108
I0611 14:06:23.856101 12504 layer_factory.hpp:77] Creating layer conv4_3
I0611 14:06:23.856109 12504 net.cpp:106] Creating Layer conv4_3
I0611 14:06:23.856112 12504 net.cpp:454] conv4_3 <- conv4_2
I0611 14:06:23.856127 12504 net.cpp:411] conv4_3 -> conv4_3
I0611 14:06:23.860766 12504 net.cpp:150] Setting up conv4_3
I0611 14:06:23.860787 12504 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:23.860790 12504 net.cpp:165] Memory required for data: 1336800108
I0611 14:06:23.860798 12504 layer_factory.hpp:77] Creating layer relu4_3
I0611 14:06:23.860817 12504 net.cpp:106] Creating Layer relu4_3
I0611 14:06:23.860822 12504 net.cpp:454] relu4_3 <- conv4_3
I0611 14:06:23.860826 12504 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0611 14:06:23.860945 12504 net.cpp:150] Setting up relu4_3
I0611 14:06:23.860951 12504 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 14:06:23.860954 12504 net.cpp:165] Memory required for data: 1356000108
I0611 14:06:23.860956 12504 layer_factory.hpp:77] Creating layer pool4
I0611 14:06:23.860972 12504 net.cpp:106] Creating Layer pool4
I0611 14:06:23.860976 12504 net.cpp:454] pool4 <- conv4_3
I0611 14:06:23.860980 12504 net.cpp:411] pool4 -> pool4
I0611 14:06:23.861017 12504 net.cpp:150] Setting up pool4
I0611 14:06:23.861021 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.861023 12504 net.cpp:165] Memory required for data: 1360903020
I0611 14:06:23.861027 12504 layer_factory.hpp:77] Creating layer conv5_1
I0611 14:06:23.861045 12504 net.cpp:106] Creating Layer conv5_1
I0611 14:06:23.861049 12504 net.cpp:454] conv5_1 <- pool4
I0611 14:06:23.861065 12504 net.cpp:411] conv5_1 -> conv5_1
I0611 14:06:23.866514 12504 net.cpp:150] Setting up conv5_1
I0611 14:06:23.866544 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.866546 12504 net.cpp:165] Memory required for data: 1365805932
I0611 14:06:23.866554 12504 layer_factory.hpp:77] Creating layer relu5_1
I0611 14:06:23.866573 12504 net.cpp:106] Creating Layer relu5_1
I0611 14:06:23.866577 12504 net.cpp:454] relu5_1 <- conv5_1
I0611 14:06:23.866582 12504 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0611 14:06:23.866719 12504 net.cpp:150] Setting up relu5_1
I0611 14:06:23.866724 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.866737 12504 net.cpp:165] Memory required for data: 1370708844
I0611 14:06:23.866740 12504 layer_factory.hpp:77] Creating layer conv5_2
I0611 14:06:23.866749 12504 net.cpp:106] Creating Layer conv5_2
I0611 14:06:23.866760 12504 net.cpp:454] conv5_2 <- conv5_1
I0611 14:06:23.866765 12504 net.cpp:411] conv5_2 -> conv5_2
I0611 14:06:23.871239 12504 net.cpp:150] Setting up conv5_2
I0611 14:06:23.871259 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.871263 12504 net.cpp:165] Memory required for data: 1375611756
I0611 14:06:23.871269 12504 layer_factory.hpp:77] Creating layer relu5_2
I0611 14:06:23.871278 12504 net.cpp:106] Creating Layer relu5_2
I0611 14:06:23.871281 12504 net.cpp:454] relu5_2 <- conv5_2
I0611 14:06:23.871296 12504 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0611 14:06:23.871418 12504 net.cpp:150] Setting up relu5_2
I0611 14:06:23.871424 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.871428 12504 net.cpp:165] Memory required for data: 1380514668
I0611 14:06:23.871429 12504 layer_factory.hpp:77] Creating layer conv5_3
I0611 14:06:23.871439 12504 net.cpp:106] Creating Layer conv5_3
I0611 14:06:23.871441 12504 net.cpp:454] conv5_3 <- conv5_2
I0611 14:06:23.871456 12504 net.cpp:411] conv5_3 -> conv5_3
I0611 14:06:23.876127 12504 net.cpp:150] Setting up conv5_3
I0611 14:06:23.876147 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.876148 12504 net.cpp:165] Memory required for data: 1385417580
I0611 14:06:23.876157 12504 layer_factory.hpp:77] Creating layer relu5_3
I0611 14:06:23.876176 12504 net.cpp:106] Creating Layer relu5_3
I0611 14:06:23.876180 12504 net.cpp:454] relu5_3 <- conv5_3
I0611 14:06:23.876185 12504 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0611 14:06:23.876349 12504 net.cpp:150] Setting up relu5_3
I0611 14:06:23.876355 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.876368 12504 net.cpp:165] Memory required for data: 1390320492
I0611 14:06:23.876371 12504 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0611 14:06:23.876375 12504 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0611 14:06:23.876379 12504 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0611 14:06:23.876392 12504 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0611 14:06:23.876397 12504 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0611 14:06:23.876402 12504 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0611 14:06:23.876437 12504 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0611 14:06:23.876442 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.876456 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.876459 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.876461 12504 net.cpp:165] Memory required for data: 1405029228
I0611 14:06:23.876473 12504 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0611 14:06:23.876482 12504 net.cpp:106] Creating Layer rpn_conv/3x3
I0611 14:06:23.876485 12504 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0611 14:06:23.876490 12504 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0611 14:06:23.928818 12504 net.cpp:150] Setting up rpn_conv/3x3
I0611 14:06:23.928848 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.928851 12504 net.cpp:165] Memory required for data: 1409932140
I0611 14:06:23.928859 12504 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0611 14:06:23.928879 12504 net.cpp:106] Creating Layer rpn_relu/3x3
I0611 14:06:23.928884 12504 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0611 14:06:23.928889 12504 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0611 14:06:23.929025 12504 net.cpp:150] Setting up rpn_relu/3x3
I0611 14:06:23.929034 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.929046 12504 net.cpp:165] Memory required for data: 1414835052
I0611 14:06:23.929049 12504 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0611 14:06:23.929059 12504 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0611 14:06:23.929064 12504 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0611 14:06:23.929069 12504 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0611 14:06:23.929073 12504 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0611 14:06:23.929121 12504 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0611 14:06:23.929128 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.929133 12504 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 14:06:23.929147 12504 net.cpp:165] Memory required for data: 1424640876
I0611 14:06:23.929152 12504 layer_factory.hpp:77] Creating layer rpn_cls_score
I0611 14:06:23.929177 12504 net.cpp:106] Creating Layer rpn_cls_score
I0611 14:06:23.929181 12504 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0611 14:06:23.929193 12504 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0611 14:06:23.931196 12504 net.cpp:150] Setting up rpn_cls_score
I0611 14:06:23.931208 12504 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 14:06:23.931212 12504 net.cpp:165] Memory required for data: 1424928156
I0611 14:06:23.931219 12504 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0611 14:06:23.931231 12504 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0611 14:06:23.931236 12504 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0611 14:06:23.931242 12504 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0611 14:06:23.931250 12504 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0611 14:06:23.931286 12504 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0611 14:06:23.931293 12504 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 14:06:23.931296 12504 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 14:06:23.931300 12504 net.cpp:165] Memory required for data: 1425502716
I0611 14:06:23.931304 12504 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0611 14:06:23.931316 12504 net.cpp:106] Creating Layer rpn_bbox_pred
I0611 14:06:23.931320 12504 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0611 14:06:23.931327 12504 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0611 14:06:23.932925 12504 net.cpp:150] Setting up rpn_bbox_pred
I0611 14:06:23.932934 12504 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:23.932938 12504 net.cpp:165] Memory required for data: 1426077276
I0611 14:06:23.932945 12504 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 14:06:23.932952 12504 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 14:06:23.932957 12504 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0611 14:06:23.932965 12504 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0611 14:06:23.932984 12504 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0611 14:06:23.933027 12504 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 14:06:23.933033 12504 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:23.933037 12504 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:23.933050 12504 net.cpp:165] Memory required for data: 1427226396
I0611 14:06:23.933058 12504 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0611 14:06:23.933068 12504 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0611 14:06:23.933073 12504 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0611 14:06:23.933077 12504 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0611 14:06:23.933101 12504 net.cpp:150] Setting up rpn_cls_score_reshape
I0611 14:06:23.933106 12504 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 14:06:23.933109 12504 net.cpp:165] Memory required for data: 1427513676
I0611 14:06:23.933115 12504 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 14:06:23.933120 12504 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 14:06:23.933127 12504 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0611 14:06:23.933133 12504 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0611 14:06:23.933141 12504 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0611 14:06:23.933167 12504 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 14:06:23.933173 12504 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 14:06:23.933178 12504 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 14:06:23.933182 12504 net.cpp:165] Memory required for data: 1428088236
I0611 14:06:23.933187 12504 layer_factory.hpp:77] Creating layer rpn-data
I0611 14:06:23.934226 12504 net.cpp:106] Creating Layer rpn-data
I0611 14:06:23.934237 12504 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0611 14:06:23.934243 12504 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0611 14:06:23.934249 12504 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0611 14:06:23.934254 12504 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0611 14:06:23.934262 12504 net.cpp:411] rpn-data -> rpn_labels
I0611 14:06:23.934270 12504 net.cpp:411] rpn-data -> rpn_bbox_targets
I0611 14:06:23.934278 12504 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0611 14:06:23.934285 12504 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0611 14:06:23.935282 12504 net.cpp:150] Setting up rpn-data
I0611 14:06:23.935292 12504 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0611 14:06:23.935297 12504 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:23.935302 12504 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:23.935307 12504 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 14:06:23.935312 12504 net.cpp:165] Memory required for data: 1429955556
I0611 14:06:23.935319 12504 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0611 14:06:23.935329 12504 net.cpp:106] Creating Layer rpn_loss_cls
I0611 14:06:23.935334 12504 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0611 14:06:23.935339 12504 net.cpp:454] rpn_loss_cls <- rpn_labels
I0611 14:06:23.935345 12504 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0611 14:06:23.935360 12504 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0611 14:06:23.936640 12504 net.cpp:150] Setting up rpn_loss_cls
I0611 14:06:23.936648 12504 net.cpp:157] Top shape: (1)
I0611 14:06:23.936651 12504 net.cpp:160]     with loss weight 1
I0611 14:06:23.936659 12504 net.cpp:165] Memory required for data: 1429955560
I0611 14:06:23.936662 12504 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0611 14:06:23.936672 12504 net.cpp:106] Creating Layer rpn_loss_bbox
I0611 14:06:23.936678 12504 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0611 14:06:23.936683 12504 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0611 14:06:23.936688 12504 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0611 14:06:23.936691 12504 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0611 14:06:23.936695 12504 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0611 14:06:23.937911 12504 net.cpp:150] Setting up rpn_loss_bbox
I0611 14:06:23.937921 12504 net.cpp:157] Top shape: (1)
I0611 14:06:23.937922 12504 net.cpp:160]     with loss weight 1
I0611 14:06:23.937927 12504 net.cpp:165] Memory required for data: 1429955564
I0611 14:06:23.937929 12504 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0611 14:06:23.937933 12504 net.cpp:106] Creating Layer rpn_cls_prob
I0611 14:06:23.937937 12504 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0611 14:06:23.937950 12504 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0611 14:06:23.938124 12504 net.cpp:150] Setting up rpn_cls_prob
I0611 14:06:23.938130 12504 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 14:06:23.938133 12504 net.cpp:165] Memory required for data: 1430242844
I0611 14:06:23.938134 12504 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0611 14:06:23.938140 12504 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0611 14:06:23.938143 12504 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0611 14:06:23.938146 12504 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0611 14:06:23.938184 12504 net.cpp:150] Setting up rpn_cls_prob_reshape
I0611 14:06:23.938189 12504 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 14:06:23.938190 12504 net.cpp:165] Memory required for data: 1430530124
I0611 14:06:23.938203 12504 layer_factory.hpp:77] Creating layer proposal
I0611 14:06:23.940937 12504 net.cpp:106] Creating Layer proposal
I0611 14:06:23.940948 12504 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0611 14:06:23.940955 12504 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0611 14:06:23.940960 12504 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0611 14:06:23.940968 12504 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0611 14:06:23.942059 12504 net.cpp:150] Setting up proposal
I0611 14:06:23.942070 12504 net.cpp:157] Top shape: 1 5 (5)
I0611 14:06:23.942075 12504 net.cpp:165] Memory required for data: 1430530144
I0611 14:06:23.942080 12504 layer_factory.hpp:77] Creating layer roi-data
I0611 14:06:23.942529 12504 net.cpp:106] Creating Layer roi-data
I0611 14:06:23.942536 12504 net.cpp:454] roi-data <- rpn_rois
I0611 14:06:23.942540 12504 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0611 14:06:23.942543 12504 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0611 14:06:23.942546 12504 net.cpp:454] roi-data <- seg_mask_inds
I0611 14:06:23.942549 12504 net.cpp:454] roi-data <- flipped
I0611 14:06:23.942553 12504 net.cpp:411] roi-data -> rois
I0611 14:06:23.942559 12504 net.cpp:411] roi-data -> labels
I0611 14:06:23.942565 12504 net.cpp:411] roi-data -> bbox_targets
I0611 14:06:23.942570 12504 net.cpp:411] roi-data -> bbox_inside_weights
I0611 14:06:23.942574 12504 net.cpp:411] roi-data -> bbox_outside_weights
I0611 14:06:23.942579 12504 net.cpp:411] roi-data -> mask_targets
I0611 14:06:23.942582 12504 net.cpp:411] roi-data -> rois_pos
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 168, in train_net
    pretrained_model=pretrained_model)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 52, in __init__
    self.solver = caffe.SGDSolver(solver_prototxt)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/rpn/proposal_target_layer.py", line 80, in setup
    top[7].reshape(1, 10)
IndexError: Index out of range
