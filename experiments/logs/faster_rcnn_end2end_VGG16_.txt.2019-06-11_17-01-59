+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-11_17-01-59
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2019-06-11_17-01-59
+ /usr/bin/python ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb voc_2012_train --iters 2000000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2012_train', max_iters=2000000, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'BBOX_XFORM_CLIP': 4.135166556742356,
 'DATA_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net/models/coco',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 7,
 'ROOT_DIR': '/home/fujenchu/projects/affordanceContext/affordance-net',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MASK_REG': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False,
          'TEST_INSTANCE': True},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 48,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CLASS_NUM': 7,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'KLdivergence': True,
           'MASK_REG': True,
           'MASK_SIZE': 244,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'TRAINING_DATA': 'VOC_2012_train',
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2012_train` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2012_train gt roidb loaded from /home/fujenchu/projects/affordanceContext/affordance-net/data/cache/voc_2012_train_gt_roidb.pkl
done
Preparing training data...
done
41748 roidb entries
Output will be saved to `/home/fujenchu/projects/affordanceContext/affordance-net/output/faster_rcnn_end2end/voc_2012_train`
Filtered 0 roidb entries: 41748 -> 41748
cfg.TRAIN.BBOX_REG = True
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0611 17:02:06.792629 18751 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 49370
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0611 17:02:06.792649 18751 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0611 17:02:06.794035 18751 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  top: "seg_mask_inds"
  top: "flipped"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 60
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 30
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16 \n\'scales\': !!python/tuple [2, 4, 8, 16, 32]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "seg_mask_inds"
  bottom: "flipped"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  top: "mask_targets"
  top: "rois_pos"
  top: "attrArray"
  top: "attrArrayInd"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "attr_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "attr_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "attr_score_pos"
  type: "Eltwise"
  bottom: "attr_score"
  bottom: "attrArrayInd"
  top: "attr_score_pos"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_attribute"
  type: "Python"
  bottom: "attr_score_pos"
  bottom: "attrArray"
  top: "loss_attribute"
  loss_weight: 1
  include {
    phase: TRAIN
  }
  python_param {
    module: "utils.SigmoidCrossEntropyWeightLossLayer"
    layer: "SigmoidCrossEntropyWeightLossLayer"
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 2
}
layer {
  name: "roi_pool5_2"
  type: "ROIAlignment"
  bottom: "conv5_3"
  bottom: "rois_pos"
  top: "pool5_2"
  roi_alignment_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "pool5_2_conv"
  type: "Convolution"
  bottom: "pool5_2"
  top: "pool5_2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv_relu"
  type: "ReLU"
  bottom: "pool5_2_conv"
  top: "pool5_2_conv_relu"
}
layer {
  name: "pool5_2_conv2"
  type: "Convolution"
  bottom: "pool5_2_conv_relu"
  top: "pool5_2_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv2_relu"
  type: "ReLU"
  bottom: "pool5_2_conv2"
  top: "pool5_2_conv2_relu"
}
layer {
  name: "mask_deconv1"
  type: "Deconvolution"
  bottom: "pool5_2_conv2_relu"
  top: "mask_deconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv3"
  type: "Convolution"
  bottom: "mask_deconv1"
  top: "pool5_2_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv3_relu"
  type: "ReLU"
  bottom: "pool5_2_conv3"
  top: "pool5_2_conv3_relu"
}
layer {
  name: "pool5_2_conv4"
  type: "Convolution"
  bottom: "pool5_2_conv3_relu"
  top: "pool5_2_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv4_relu"
  type: "ReLU"
  bottom: "pool5_2_conv4"
  top: "pool5_2_conv4_relu"
}
layer {
  name: "query_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "query_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "key_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "key_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "value_conv"
  type: "Convolution"
  bottom: "pool5_2_conv4_relu"
  top: "value_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "query_conv_reshape"
  type: "Reshape"
  bottom: "query_conv"
  top: "query_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "key_conv_reshape"
  type: "Reshape"
  bottom: "key_conv"
  top: "key_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 64
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "value_conv_reshape"
  type: "Reshape"
  bottom: "value_conv"
  top: "value_conv_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 900
      dim: 1
    }
  }
}
layer {
  name: "query_conv_reshape_perm"
  type: "Permute"
  bottom: "query_conv_reshape"
  top: "query_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 2
    order: 1
  }
}
layer {
  name: "key_conv_reshape_perm"
  type: "Permute"
  bottom: "key_conv_reshape"
  top: "key_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "energy"
  type: "MatrixMultiplication"
  bottom: "query_conv_reshape_perm"
  bottom: "key_conv_reshape_perm"
  top: "energy"
}
layer {
  name: "attention"
  type: "Softmax"
  bottom: "energy"
  top: "attention"
  softmax_param {
    axis: 3
  }
}
layer {
  name: "value_conv_reshape_perm"
  type: "Permute"
  bottom: "value_conv_reshape"
  top: "value_conv_reshape_perm"
  permute_param {
    order: 0
    order: 3
    order: 1
    order: 2
  }
}
layer {
  name: "attention_perm"
  type: "Permute"
  bottom: "attention"
  top: "attention_perm"
  permute_param {
    order: 0
    order: 1
    order: 2
    order: 3
  }
}
layer {
  name: "out"
  type: "MatrixMultiplication"
  bottom: "value_conv_reshape_perm"
  bottom: "attention_perm"
  top: "out"
}
layer {
  name: "out_reshape"
  type: "Reshape"
  bottom: "out"
  top: "out_reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 512
      dim: 30
      dim: 30
    }
  }
}
layer {
  name: "out_reshape_scale"
  type: "Scale"
  bottom: "out_reshape"
  top: "out_reshape_scale"
  param {
    name: "scale_conv1_1"
    lr_mult: 1
  }
  scale_param {
    bias_term: false
  }
}
layer {
  name: "out_x"
  type: "Eltwise"
  bottom: "out_reshape_scale"
  bottom: "pool5_2_conv4_relu"
  top: "out_x"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "mask_deconv2"
  type: "Deconvolution"
  bottom: "out_x"
  top: "mask_deconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 8
    group: 256
    stride: 4
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "pool5_2_conv5"
  type: "Convolution"
  bottom: "mask_deconv2"
  top: "pool5_2_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv5_relu"
  type: "ReLU"
  bottom: "pool5_2_conv5"
  top: "pool5_2_conv5_relu"
}
layer {
  name: "pool5_2_conv6"
  type: "Convolution"
  bottom: "pool5_2_conv5_relu"
  top: "pool5_2_conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool5_2_conv6_relu"
  type: "ReLU"
  bottom: "pool5_2_conv6"
  top: "pool5_2_conv6_relu"
}
layer {
  name: "mask_deconv3"
  type: "Deconvolution"
  bottom: "pool5_2_conv6_relu"
  top: "mask_deconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    group: 256
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "mask_score"
  type: "Convolution"
  bottom: "mask_deconv3"
  top: "mask_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_mask"
  type: "SoftmaxWithLoss"
  bottom: "mask_score"
  bottom: "mask_targets"
  top: "loss_mask"
  loss_weight: 3
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0611 17:02:06.794298 18751 layer_factory.hpp:77] Creating layer input-data
I0611 17:02:06.855228 18751 net.cpp:106] Creating Layer input-data
I0611 17:02:06.855243 18751 net.cpp:411] input-data -> data
I0611 17:02:06.855252 18751 net.cpp:411] input-data -> im_info
I0611 17:02:06.855257 18751 net.cpp:411] input-data -> gt_boxes
I0611 17:02:06.855262 18751 net.cpp:411] input-data -> seg_mask_inds
I0611 17:02:06.855265 18751 net.cpp:411] input-data -> flipped
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'seg_mask_inds': 3, 'im_info': 1, 'flipped': 4}
I0611 17:02:06.866510 18751 net.cpp:150] Setting up input-data
I0611 17:02:06.866545 18751 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 17:02:06.866549 18751 net.cpp:157] Top shape: 1 3 (3)
I0611 17:02:06.866552 18751 net.cpp:157] Top shape: 1 4 (4)
I0611 17:02:06.866555 18751 net.cpp:157] Top shape: 1 2 (2)
I0611 17:02:06.866559 18751 net.cpp:157] Top shape: 1 1 (1)
I0611 17:02:06.866561 18751 net.cpp:165] Memory required for data: 7200040
I0611 17:02:06.866566 18751 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0611 17:02:06.866581 18751 net.cpp:106] Creating Layer data_input-data_0_split
I0611 17:02:06.866585 18751 net.cpp:454] data_input-data_0_split <- data
I0611 17:02:06.866591 18751 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0611 17:02:06.866597 18751 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0611 17:02:06.866628 18751 net.cpp:150] Setting up data_input-data_0_split
I0611 17:02:06.866632 18751 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 17:02:06.866645 18751 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0611 17:02:06.866647 18751 net.cpp:165] Memory required for data: 21600040
I0611 17:02:06.866650 18751 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0611 17:02:06.866663 18751 net.cpp:106] Creating Layer im_info_input-data_1_split
I0611 17:02:06.866667 18751 net.cpp:454] im_info_input-data_1_split <- im_info
I0611 17:02:06.866669 18751 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0611 17:02:06.866683 18751 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0611 17:02:06.866688 18751 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_2
I0611 17:02:06.866714 18751 net.cpp:150] Setting up im_info_input-data_1_split
I0611 17:02:06.866719 18751 net.cpp:157] Top shape: 1 3 (3)
I0611 17:02:06.866721 18751 net.cpp:157] Top shape: 1 3 (3)
I0611 17:02:06.866724 18751 net.cpp:157] Top shape: 1 3 (3)
I0611 17:02:06.866727 18751 net.cpp:165] Memory required for data: 21600076
I0611 17:02:06.866730 18751 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0611 17:02:06.866734 18751 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0611 17:02:06.866736 18751 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0611 17:02:06.866741 18751 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0611 17:02:06.866746 18751 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0611 17:02:06.866763 18751 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0611 17:02:06.866770 18751 net.cpp:157] Top shape: 1 4 (4)
I0611 17:02:06.866771 18751 net.cpp:157] Top shape: 1 4 (4)
I0611 17:02:06.866775 18751 net.cpp:165] Memory required for data: 21600108
I0611 17:02:06.866778 18751 layer_factory.hpp:77] Creating layer conv1_1
I0611 17:02:06.866789 18751 net.cpp:106] Creating Layer conv1_1
I0611 17:02:06.866793 18751 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0611 17:02:06.866798 18751 net.cpp:411] conv1_1 -> conv1_1
I0611 17:02:07.626807 18751 net.cpp:150] Setting up conv1_1
I0611 17:02:07.626827 18751 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 17:02:07.626830 18751 net.cpp:165] Memory required for data: 175200108
I0611 17:02:07.626842 18751 layer_factory.hpp:77] Creating layer relu1_1
I0611 17:02:07.626852 18751 net.cpp:106] Creating Layer relu1_1
I0611 17:02:07.626865 18751 net.cpp:454] relu1_1 <- conv1_1
I0611 17:02:07.626869 18751 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0611 17:02:07.626986 18751 net.cpp:150] Setting up relu1_1
I0611 17:02:07.626991 18751 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 17:02:07.626994 18751 net.cpp:165] Memory required for data: 328800108
I0611 17:02:07.626997 18751 layer_factory.hpp:77] Creating layer conv1_2
I0611 17:02:07.627004 18751 net.cpp:106] Creating Layer conv1_2
I0611 17:02:07.627007 18751 net.cpp:454] conv1_2 <- conv1_1
I0611 17:02:07.627010 18751 net.cpp:411] conv1_2 -> conv1_2
I0611 17:02:07.629093 18751 net.cpp:150] Setting up conv1_2
I0611 17:02:07.629106 18751 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 17:02:07.629107 18751 net.cpp:165] Memory required for data: 482400108
I0611 17:02:07.629115 18751 layer_factory.hpp:77] Creating layer relu1_2
I0611 17:02:07.629122 18751 net.cpp:106] Creating Layer relu1_2
I0611 17:02:07.629124 18751 net.cpp:454] relu1_2 <- conv1_2
I0611 17:02:07.629137 18751 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0611 17:02:07.629251 18751 net.cpp:150] Setting up relu1_2
I0611 17:02:07.629258 18751 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0611 17:02:07.629261 18751 net.cpp:165] Memory required for data: 636000108
I0611 17:02:07.629262 18751 layer_factory.hpp:77] Creating layer pool1
I0611 17:02:07.629271 18751 net.cpp:106] Creating Layer pool1
I0611 17:02:07.629272 18751 net.cpp:454] pool1 <- conv1_2
I0611 17:02:07.629276 18751 net.cpp:411] pool1 -> pool1
I0611 17:02:07.629329 18751 net.cpp:150] Setting up pool1
I0611 17:02:07.629333 18751 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0611 17:02:07.629345 18751 net.cpp:165] Memory required for data: 674400108
I0611 17:02:07.629348 18751 layer_factory.hpp:77] Creating layer conv2_1
I0611 17:02:07.629354 18751 net.cpp:106] Creating Layer conv2_1
I0611 17:02:07.629356 18751 net.cpp:454] conv2_1 <- pool1
I0611 17:02:07.629361 18751 net.cpp:411] conv2_1 -> conv2_1
I0611 17:02:07.631146 18751 net.cpp:150] Setting up conv2_1
I0611 17:02:07.631155 18751 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 17:02:07.631158 18751 net.cpp:165] Memory required for data: 751200108
I0611 17:02:07.631165 18751 layer_factory.hpp:77] Creating layer relu2_1
I0611 17:02:07.631170 18751 net.cpp:106] Creating Layer relu2_1
I0611 17:02:07.631172 18751 net.cpp:454] relu2_1 <- conv2_1
I0611 17:02:07.631186 18751 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0611 17:02:07.631634 18751 net.cpp:150] Setting up relu2_1
I0611 17:02:07.631642 18751 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 17:02:07.631645 18751 net.cpp:165] Memory required for data: 828000108
I0611 17:02:07.631647 18751 layer_factory.hpp:77] Creating layer conv2_2
I0611 17:02:07.631654 18751 net.cpp:106] Creating Layer conv2_2
I0611 17:02:07.631656 18751 net.cpp:454] conv2_2 <- conv2_1
I0611 17:02:07.631660 18751 net.cpp:411] conv2_2 -> conv2_2
I0611 17:02:07.632946 18751 net.cpp:150] Setting up conv2_2
I0611 17:02:07.632954 18751 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 17:02:07.632957 18751 net.cpp:165] Memory required for data: 904800108
I0611 17:02:07.632962 18751 layer_factory.hpp:77] Creating layer relu2_2
I0611 17:02:07.632967 18751 net.cpp:106] Creating Layer relu2_2
I0611 17:02:07.632969 18751 net.cpp:454] relu2_2 <- conv2_2
I0611 17:02:07.632974 18751 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0611 17:02:07.633102 18751 net.cpp:150] Setting up relu2_2
I0611 17:02:07.633108 18751 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0611 17:02:07.633111 18751 net.cpp:165] Memory required for data: 981600108
I0611 17:02:07.633112 18751 layer_factory.hpp:77] Creating layer pool2
I0611 17:02:07.633117 18751 net.cpp:106] Creating Layer pool2
I0611 17:02:07.633119 18751 net.cpp:454] pool2 <- conv2_2
I0611 17:02:07.633124 18751 net.cpp:411] pool2 -> pool2
I0611 17:02:07.633168 18751 net.cpp:150] Setting up pool2
I0611 17:02:07.633174 18751 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0611 17:02:07.633186 18751 net.cpp:165] Memory required for data: 1000800108
I0611 17:02:07.633189 18751 layer_factory.hpp:77] Creating layer conv3_1
I0611 17:02:07.633194 18751 net.cpp:106] Creating Layer conv3_1
I0611 17:02:07.633196 18751 net.cpp:454] conv3_1 <- pool2
I0611 17:02:07.633209 18751 net.cpp:411] conv3_1 -> conv3_1
I0611 17:02:07.635021 18751 net.cpp:150] Setting up conv3_1
I0611 17:02:07.635031 18751 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 17:02:07.635035 18751 net.cpp:165] Memory required for data: 1039200108
I0611 17:02:07.635041 18751 layer_factory.hpp:77] Creating layer relu3_1
I0611 17:02:07.635046 18751 net.cpp:106] Creating Layer relu3_1
I0611 17:02:07.635049 18751 net.cpp:454] relu3_1 <- conv3_1
I0611 17:02:07.635052 18751 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0611 17:02:07.635186 18751 net.cpp:150] Setting up relu3_1
I0611 17:02:07.635191 18751 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 17:02:07.635195 18751 net.cpp:165] Memory required for data: 1077600108
I0611 17:02:07.635196 18751 layer_factory.hpp:77] Creating layer conv3_2
I0611 17:02:07.635203 18751 net.cpp:106] Creating Layer conv3_2
I0611 17:02:07.635205 18751 net.cpp:454] conv3_2 <- conv3_1
I0611 17:02:07.635210 18751 net.cpp:411] conv3_2 -> conv3_2
I0611 17:02:07.637184 18751 net.cpp:150] Setting up conv3_2
I0611 17:02:07.637194 18751 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 17:02:07.637197 18751 net.cpp:165] Memory required for data: 1116000108
I0611 17:02:07.637202 18751 layer_factory.hpp:77] Creating layer relu3_2
I0611 17:02:07.637207 18751 net.cpp:106] Creating Layer relu3_2
I0611 17:02:07.637209 18751 net.cpp:454] relu3_2 <- conv3_2
I0611 17:02:07.637213 18751 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0611 17:02:07.637346 18751 net.cpp:150] Setting up relu3_2
I0611 17:02:07.637352 18751 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 17:02:07.637364 18751 net.cpp:165] Memory required for data: 1154400108
I0611 17:02:07.637367 18751 layer_factory.hpp:77] Creating layer conv3_3
I0611 17:02:07.637373 18751 net.cpp:106] Creating Layer conv3_3
I0611 17:02:07.637377 18751 net.cpp:454] conv3_3 <- conv3_2
I0611 17:02:07.637382 18751 net.cpp:411] conv3_3 -> conv3_3
I0611 17:02:07.639483 18751 net.cpp:150] Setting up conv3_3
I0611 17:02:07.639493 18751 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 17:02:07.639495 18751 net.cpp:165] Memory required for data: 1192800108
I0611 17:02:07.639502 18751 layer_factory.hpp:77] Creating layer relu3_3
I0611 17:02:07.639505 18751 net.cpp:106] Creating Layer relu3_3
I0611 17:02:07.639508 18751 net.cpp:454] relu3_3 <- conv3_3
I0611 17:02:07.639513 18751 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0611 17:02:07.639629 18751 net.cpp:150] Setting up relu3_3
I0611 17:02:07.639636 18751 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0611 17:02:07.639638 18751 net.cpp:165] Memory required for data: 1231200108
I0611 17:02:07.639641 18751 layer_factory.hpp:77] Creating layer pool3
I0611 17:02:07.639647 18751 net.cpp:106] Creating Layer pool3
I0611 17:02:07.639648 18751 net.cpp:454] pool3 <- conv3_3
I0611 17:02:07.639653 18751 net.cpp:411] pool3 -> pool3
I0611 17:02:07.639681 18751 net.cpp:150] Setting up pool3
I0611 17:02:07.639686 18751 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0611 17:02:07.639688 18751 net.cpp:165] Memory required for data: 1240800108
I0611 17:02:07.639691 18751 layer_factory.hpp:77] Creating layer conv4_1
I0611 17:02:07.639698 18751 net.cpp:106] Creating Layer conv4_1
I0611 17:02:07.639701 18751 net.cpp:454] conv4_1 <- pool3
I0611 17:02:07.639704 18751 net.cpp:411] conv4_1 -> conv4_1
I0611 17:02:07.643442 18751 net.cpp:150] Setting up conv4_1
I0611 17:02:07.643461 18751 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 17:02:07.643465 18751 net.cpp:165] Memory required for data: 1260000108
I0611 17:02:07.643472 18751 layer_factory.hpp:77] Creating layer relu4_1
I0611 17:02:07.643481 18751 net.cpp:106] Creating Layer relu4_1
I0611 17:02:07.643486 18751 net.cpp:454] relu4_1 <- conv4_1
I0611 17:02:07.643491 18751 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0611 17:02:07.643625 18751 net.cpp:150] Setting up relu4_1
I0611 17:02:07.643631 18751 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 17:02:07.643633 18751 net.cpp:165] Memory required for data: 1279200108
I0611 17:02:07.643635 18751 layer_factory.hpp:77] Creating layer conv4_2
I0611 17:02:07.643642 18751 net.cpp:106] Creating Layer conv4_2
I0611 17:02:07.643646 18751 net.cpp:454] conv4_2 <- conv4_1
I0611 17:02:07.643649 18751 net.cpp:411] conv4_2 -> conv4_2
I0611 17:02:07.648558 18751 net.cpp:150] Setting up conv4_2
I0611 17:02:07.648578 18751 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 17:02:07.648581 18751 net.cpp:165] Memory required for data: 1298400108
I0611 17:02:07.648593 18751 layer_factory.hpp:77] Creating layer relu4_2
I0611 17:02:07.648602 18751 net.cpp:106] Creating Layer relu4_2
I0611 17:02:07.648607 18751 net.cpp:454] relu4_2 <- conv4_2
I0611 17:02:07.648610 18751 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0611 17:02:07.649112 18751 net.cpp:150] Setting up relu4_2
I0611 17:02:07.649121 18751 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 17:02:07.649122 18751 net.cpp:165] Memory required for data: 1317600108
I0611 17:02:07.649124 18751 layer_factory.hpp:77] Creating layer conv4_3
I0611 17:02:07.649143 18751 net.cpp:106] Creating Layer conv4_3
I0611 17:02:07.649147 18751 net.cpp:454] conv4_3 <- conv4_2
I0611 17:02:07.649161 18751 net.cpp:411] conv4_3 -> conv4_3
I0611 17:02:07.653486 18751 net.cpp:150] Setting up conv4_3
I0611 17:02:07.653507 18751 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 17:02:07.653511 18751 net.cpp:165] Memory required for data: 1336800108
I0611 17:02:07.653517 18751 layer_factory.hpp:77] Creating layer relu4_3
I0611 17:02:07.653525 18751 net.cpp:106] Creating Layer relu4_3
I0611 17:02:07.653539 18751 net.cpp:454] relu4_3 <- conv4_3
I0611 17:02:07.653544 18751 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0611 17:02:07.653688 18751 net.cpp:150] Setting up relu4_3
I0611 17:02:07.653694 18751 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0611 17:02:07.653697 18751 net.cpp:165] Memory required for data: 1356000108
I0611 17:02:07.653698 18751 layer_factory.hpp:77] Creating layer pool4
I0611 17:02:07.653703 18751 net.cpp:106] Creating Layer pool4
I0611 17:02:07.653707 18751 net.cpp:454] pool4 <- conv4_3
I0611 17:02:07.653710 18751 net.cpp:411] pool4 -> pool4
I0611 17:02:07.653769 18751 net.cpp:150] Setting up pool4
I0611 17:02:07.653781 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.653784 18751 net.cpp:165] Memory required for data: 1360903020
I0611 17:02:07.653785 18751 layer_factory.hpp:77] Creating layer conv5_1
I0611 17:02:07.653802 18751 net.cpp:106] Creating Layer conv5_1
I0611 17:02:07.653805 18751 net.cpp:454] conv5_1 <- pool4
I0611 17:02:07.653820 18751 net.cpp:411] conv5_1 -> conv5_1
I0611 17:02:07.658135 18751 net.cpp:150] Setting up conv5_1
I0611 17:02:07.658156 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.658159 18751 net.cpp:165] Memory required for data: 1365805932
I0611 17:02:07.658166 18751 layer_factory.hpp:77] Creating layer relu5_1
I0611 17:02:07.658174 18751 net.cpp:106] Creating Layer relu5_1
I0611 17:02:07.658179 18751 net.cpp:454] relu5_1 <- conv5_1
I0611 17:02:07.658193 18751 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0611 17:02:07.658336 18751 net.cpp:150] Setting up relu5_1
I0611 17:02:07.658342 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.658344 18751 net.cpp:165] Memory required for data: 1370708844
I0611 17:02:07.658347 18751 layer_factory.hpp:77] Creating layer conv5_2
I0611 17:02:07.658354 18751 net.cpp:106] Creating Layer conv5_2
I0611 17:02:07.658357 18751 net.cpp:454] conv5_2 <- conv5_1
I0611 17:02:07.658360 18751 net.cpp:411] conv5_2 -> conv5_2
I0611 17:02:07.662680 18751 net.cpp:150] Setting up conv5_2
I0611 17:02:07.662699 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.662703 18751 net.cpp:165] Memory required for data: 1375611756
I0611 17:02:07.662708 18751 layer_factory.hpp:77] Creating layer relu5_2
I0611 17:02:07.662717 18751 net.cpp:106] Creating Layer relu5_2
I0611 17:02:07.662721 18751 net.cpp:454] relu5_2 <- conv5_2
I0611 17:02:07.662736 18751 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0611 17:02:07.662883 18751 net.cpp:150] Setting up relu5_2
I0611 17:02:07.662889 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.662890 18751 net.cpp:165] Memory required for data: 1380514668
I0611 17:02:07.662892 18751 layer_factory.hpp:77] Creating layer conv5_3
I0611 17:02:07.662902 18751 net.cpp:106] Creating Layer conv5_3
I0611 17:02:07.662905 18751 net.cpp:454] conv5_3 <- conv5_2
I0611 17:02:07.662920 18751 net.cpp:411] conv5_3 -> conv5_3
I0611 17:02:07.667120 18751 net.cpp:150] Setting up conv5_3
I0611 17:02:07.667140 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.667142 18751 net.cpp:165] Memory required for data: 1385417580
I0611 17:02:07.667150 18751 layer_factory.hpp:77] Creating layer relu5_3
I0611 17:02:07.667157 18751 net.cpp:106] Creating Layer relu5_3
I0611 17:02:07.667160 18751 net.cpp:454] relu5_3 <- conv5_3
I0611 17:02:07.667176 18751 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0611 17:02:07.667299 18751 net.cpp:150] Setting up relu5_3
I0611 17:02:07.667304 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.667306 18751 net.cpp:165] Memory required for data: 1390320492
I0611 17:02:07.667309 18751 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0611 17:02:07.667313 18751 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0611 17:02:07.667315 18751 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0611 17:02:07.667320 18751 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0611 17:02:07.667323 18751 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0611 17:02:07.667338 18751 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0611 17:02:07.667382 18751 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0611 17:02:07.667385 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.667388 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.667390 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.667392 18751 net.cpp:165] Memory required for data: 1405029228
I0611 17:02:07.667395 18751 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0611 17:02:07.667403 18751 net.cpp:106] Creating Layer rpn_conv/3x3
I0611 17:02:07.667416 18751 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0611 17:02:07.667420 18751 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0611 17:02:07.718075 18751 net.cpp:150] Setting up rpn_conv/3x3
I0611 17:02:07.718103 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.718106 18751 net.cpp:165] Memory required for data: 1409932140
I0611 17:02:07.718113 18751 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0611 17:02:07.718132 18751 net.cpp:106] Creating Layer rpn_relu/3x3
I0611 17:02:07.718135 18751 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0611 17:02:07.718142 18751 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0611 17:02:07.718288 18751 net.cpp:150] Setting up rpn_relu/3x3
I0611 17:02:07.718297 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.718310 18751 net.cpp:165] Memory required for data: 1414835052
I0611 17:02:07.718314 18751 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0611 17:02:07.718322 18751 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0611 17:02:07.718324 18751 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0611 17:02:07.718343 18751 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0611 17:02:07.718358 18751 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0611 17:02:07.718407 18751 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0611 17:02:07.718412 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.718425 18751 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0611 17:02:07.718427 18751 net.cpp:165] Memory required for data: 1424640876
I0611 17:02:07.718430 18751 layer_factory.hpp:77] Creating layer rpn_cls_score
I0611 17:02:07.718448 18751 net.cpp:106] Creating Layer rpn_cls_score
I0611 17:02:07.718451 18751 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0611 17:02:07.718464 18751 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0611 17:02:07.720034 18751 net.cpp:150] Setting up rpn_cls_score
I0611 17:02:07.720043 18751 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 17:02:07.720055 18751 net.cpp:165] Memory required for data: 1424928156
I0611 17:02:07.720060 18751 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0611 17:02:07.720065 18751 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0611 17:02:07.720068 18751 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0611 17:02:07.720072 18751 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0611 17:02:07.720078 18751 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0611 17:02:07.720104 18751 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0611 17:02:07.720109 18751 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 17:02:07.720113 18751 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 17:02:07.720114 18751 net.cpp:165] Memory required for data: 1425502716
I0611 17:02:07.720118 18751 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0611 17:02:07.720135 18751 net.cpp:106] Creating Layer rpn_bbox_pred
I0611 17:02:07.720139 18751 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0611 17:02:07.720144 18751 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0611 17:02:07.721834 18751 net.cpp:150] Setting up rpn_bbox_pred
I0611 17:02:07.721844 18751 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 17:02:07.721858 18751 net.cpp:165] Memory required for data: 1426077276
I0611 17:02:07.721861 18751 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 17:02:07.721866 18751 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 17:02:07.721869 18751 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0611 17:02:07.721874 18751 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0611 17:02:07.721880 18751 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0611 17:02:07.721920 18751 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0611 17:02:07.721923 18751 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 17:02:07.721936 18751 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 17:02:07.721940 18751 net.cpp:165] Memory required for data: 1427226396
I0611 17:02:07.721941 18751 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0611 17:02:07.721953 18751 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0611 17:02:07.721957 18751 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0611 17:02:07.721961 18751 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0611 17:02:07.721981 18751 net.cpp:150] Setting up rpn_cls_score_reshape
I0611 17:02:07.721994 18751 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 17:02:07.721997 18751 net.cpp:165] Memory required for data: 1427513676
I0611 17:02:07.721998 18751 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 17:02:07.722012 18751 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 17:02:07.722014 18751 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0611 17:02:07.722018 18751 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0611 17:02:07.722023 18751 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0611 17:02:07.722044 18751 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0611 17:02:07.722049 18751 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 17:02:07.722052 18751 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 17:02:07.722054 18751 net.cpp:165] Memory required for data: 1428088236
I0611 17:02:07.722057 18751 layer_factory.hpp:77] Creating layer rpn-data
I0611 17:02:07.722405 18751 net.cpp:106] Creating Layer rpn-data
I0611 17:02:07.722412 18751 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0611 17:02:07.722417 18751 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0611 17:02:07.722422 18751 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0611 17:02:07.722426 18751 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0611 17:02:07.722430 18751 net.cpp:411] rpn-data -> rpn_labels
I0611 17:02:07.722435 18751 net.cpp:411] rpn-data -> rpn_bbox_targets
I0611 17:02:07.722440 18751 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0611 17:02:07.722445 18751 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
===================================anchor_scales in AnchorTargetLayer:=============(2, 4, 8, 16, 32)
I0611 17:02:07.723384 18751 net.cpp:150] Setting up rpn-data
I0611 17:02:07.723405 18751 net.cpp:157] Top shape: 1 1 570 63 (35910)
I0611 17:02:07.723409 18751 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 17:02:07.723412 18751 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 17:02:07.723415 18751 net.cpp:157] Top shape: 1 60 38 63 (143640)
I0611 17:02:07.723417 18751 net.cpp:165] Memory required for data: 1429955556
I0611 17:02:07.723423 18751 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0611 17:02:07.723428 18751 net.cpp:106] Creating Layer rpn_loss_cls
I0611 17:02:07.723433 18751 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0611 17:02:07.723436 18751 net.cpp:454] rpn_loss_cls <- rpn_labels
I0611 17:02:07.723440 18751 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0611 17:02:07.723453 18751 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0611 17:02:07.724397 18751 net.cpp:150] Setting up rpn_loss_cls
I0611 17:02:07.724407 18751 net.cpp:157] Top shape: (1)
I0611 17:02:07.724419 18751 net.cpp:160]     with loss weight 1
I0611 17:02:07.724427 18751 net.cpp:165] Memory required for data: 1429955560
I0611 17:02:07.724439 18751 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0611 17:02:07.724462 18751 net.cpp:106] Creating Layer rpn_loss_bbox
I0611 17:02:07.724468 18751 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0611 17:02:07.724472 18751 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0611 17:02:07.724475 18751 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0611 17:02:07.724489 18751 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0611 17:02:07.724493 18751 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0611 17:02:07.725775 18751 net.cpp:150] Setting up rpn_loss_bbox
I0611 17:02:07.725783 18751 net.cpp:157] Top shape: (1)
I0611 17:02:07.725785 18751 net.cpp:160]     with loss weight 1
I0611 17:02:07.725790 18751 net.cpp:165] Memory required for data: 1429955564
I0611 17:02:07.725792 18751 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0611 17:02:07.725798 18751 net.cpp:106] Creating Layer rpn_cls_prob
I0611 17:02:07.725812 18751 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0611 17:02:07.725817 18751 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0611 17:02:07.726016 18751 net.cpp:150] Setting up rpn_cls_prob
I0611 17:02:07.726022 18751 net.cpp:157] Top shape: 1 2 570 63 (71820)
I0611 17:02:07.726024 18751 net.cpp:165] Memory required for data: 1430242844
I0611 17:02:07.726027 18751 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0611 17:02:07.726033 18751 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0611 17:02:07.726037 18751 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0611 17:02:07.726049 18751 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0611 17:02:07.726094 18751 net.cpp:150] Setting up rpn_cls_prob_reshape
I0611 17:02:07.726097 18751 net.cpp:157] Top shape: 1 30 38 63 (71820)
I0611 17:02:07.726099 18751 net.cpp:165] Memory required for data: 1430530124
I0611 17:02:07.726111 18751 layer_factory.hpp:77] Creating layer proposal
I0611 17:02:07.726629 18751 net.cpp:106] Creating Layer proposal
I0611 17:02:07.726637 18751 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0611 17:02:07.726640 18751 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0611 17:02:07.726644 18751 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0611 17:02:07.726647 18751 net.cpp:411] proposal -> rpn_rois
=================================anchor_scales in ProposalLayer:=============(2, 4, 8, 16, 32)
I0611 17:02:07.727502 18751 net.cpp:150] Setting up proposal
I0611 17:02:07.727511 18751 net.cpp:157] Top shape: 1 5 (5)
I0611 17:02:07.727514 18751 net.cpp:165] Memory required for data: 1430530144
I0611 17:02:07.727516 18751 layer_factory.hpp:77] Creating layer roi-data
I0611 17:02:07.727706 18751 net.cpp:106] Creating Layer roi-data
I0611 17:02:07.727713 18751 net.cpp:454] roi-data <- rpn_rois
I0611 17:02:07.727717 18751 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0611 17:02:07.727720 18751 net.cpp:454] roi-data <- im_info_input-data_1_split_2
I0611 17:02:07.727723 18751 net.cpp:454] roi-data <- seg_mask_inds
I0611 17:02:07.727726 18751 net.cpp:454] roi-data <- flipped
I0611 17:02:07.727741 18751 net.cpp:411] roi-data -> rois
I0611 17:02:07.727746 18751 net.cpp:411] roi-data -> labels
I0611 17:02:07.727752 18751 net.cpp:411] roi-data -> bbox_targets
I0611 17:02:07.727757 18751 net.cpp:411] roi-data -> bbox_inside_weights
I0611 17:02:07.727762 18751 net.cpp:411] roi-data -> bbox_outside_weights
I0611 17:02:07.727767 18751 net.cpp:411] roi-data -> mask_targets
I0611 17:02:07.727774 18751 net.cpp:411] roi-data -> rois_pos
I0611 17:02:07.727779 18751 net.cpp:411] roi-data -> attrArray
I0611 17:02:07.727784 18751 net.cpp:411] roi-data -> attrArrayInd
I0611 17:02:07.728066 18751 net.cpp:150] Setting up roi-data
I0611 17:02:07.728075 18751 net.cpp:157] Top shape: 1 5 (5)
I0611 17:02:07.728077 18751 net.cpp:157] Top shape: 1 1 (1)
I0611 17:02:07.728080 18751 net.cpp:157] Top shape: 1 8 (8)
I0611 17:02:07.728082 18751 net.cpp:157] Top shape: 1 8 (8)
I0611 17:02:07.728085 18751 net.cpp:157] Top shape: 1 8 (8)
I0611 17:02:07.728087 18751 net.cpp:157] Top shape: 1 244 244 (59536)
I0611 17:02:07.728091 18751 net.cpp:157] Top shape: 1 5 (5)
I0611 17:02:07.728103 18751 net.cpp:157] Top shape: 1 7 (7)
I0611 17:02:07.728106 18751 net.cpp:157] Top shape: 1 7 (7)
I0611 17:02:07.728108 18751 net.cpp:165] Memory required for data: 1430768484
I0611 17:02:07.728121 18751 layer_factory.hpp:77] Creating layer roi_pool5
I0611 17:02:07.728127 18751 net.cpp:106] Creating Layer roi_pool5
I0611 17:02:07.728132 18751 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0611 17:02:07.728134 18751 net.cpp:454] roi_pool5 <- rois
I0611 17:02:07.728140 18751 net.cpp:411] roi_pool5 -> pool5
I0611 17:02:07.728152 18751 roi_alignment_layer.cpp:32] Spatial scale: 0.0625
I0611 17:02:07.728250 18751 net.cpp:150] Setting up roi_pool5
I0611 17:02:07.728255 18751 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0611 17:02:07.728266 18751 net.cpp:165] Memory required for data: 1430868836
I0611 17:02:07.728268 18751 layer_factory.hpp:77] Creating layer fc6
I0611 17:02:07.728274 18751 net.cpp:106] Creating Layer fc6
I0611 17:02:07.728277 18751 net.cpp:454] fc6 <- pool5
I0611 17:02:07.728282 18751 net.cpp:411] fc6 -> fc6
I0611 17:02:07.868902 18751 net.cpp:150] Setting up fc6
I0611 17:02:07.868926 18751 net.cpp:157] Top shape: 1 4096 (4096)
I0611 17:02:07.868928 18751 net.cpp:165] Memory required for data: 1430885220
I0611 17:02:07.868942 18751 layer_factory.hpp:77] Creating layer relu6
I0611 17:02:07.868952 18751 net.cpp:106] Creating Layer relu6
I0611 17:02:07.868958 18751 net.cpp:454] relu6 <- fc6
I0611 17:02:07.868966 18751 net.cpp:397] relu6 -> fc6 (in-place)
I0611 17:02:07.869189 18751 net.cpp:150] Setting up relu6
I0611 17:02:07.869199 18751 net.cpp:157] Top shape: 1 4096 (4096)
I0611 17:02:07.869201 18751 net.cpp:165] Memory required for data: 1430901604
I0611 17:02:07.869204 18751 layer_factory.hpp:77] Creating layer fc7
I0611 17:02:07.869211 18751 net.cpp:106] Creating Layer fc7
I0611 17:02:07.869215 18751 net.cpp:454] fc7 <- fc6
I0611 17:02:07.869220 18751 net.cpp:411] fc7 -> fc7
I0611 17:02:07.893692 18751 net.cpp:150] Setting up fc7
I0611 17:02:07.893725 18751 net.cpp:157] Top shape: 1 4096 (4096)
I0611 17:02:07.893728 18751 net.cpp:165] Memory required for data: 1430917988
I0611 17:02:07.893748 18751 layer_factory.hpp:77] Creating layer relu7
I0611 17:02:07.893759 18751 net.cpp:106] Creating Layer relu7
I0611 17:02:07.893764 18751 net.cpp:454] relu7 <- fc7
I0611 17:02:07.893769 18751 net.cpp:397] relu7 -> fc7 (in-place)
I0611 17:02:07.894008 18751 net.cpp:150] Setting up relu7
I0611 17:02:07.894027 18751 net.cpp:157] Top shape: 1 4096 (4096)
I0611 17:02:07.894031 18751 net.cpp:165] Memory required for data: 1430934372
I0611 17:02:07.894033 18751 layer_factory.hpp:77] Creating layer fc7_relu7_0_split
I0611 17:02:07.894050 18751 net.cpp:106] Creating Layer fc7_relu7_0_split
I0611 17:02:07.894055 18751 net.cpp:454] fc7_relu7_0_split <- fc7
I0611 17:02:07.894060 18751 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_0
I0611 17:02:07.894065 18751 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_1
I0611 17:02:07.894070 18751 net.cpp:411] fc7_relu7_0_split -> fc7_relu7_0_split_2
I0611 17:02:07.894130 18751 net.cpp:150] Setting up fc7_relu7_0_split
I0611 17:02:07.894136 18751 net.cpp:157] Top shape: 1 4096 (4096)
I0611 17:02:07.894150 18751 net.cpp:157] Top shape: 1 4096 (4096)
I0611 17:02:07.894151 18751 net.cpp:157] Top shape: 1 4096 (4096)
I0611 17:02:07.894153 18751 net.cpp:165] Memory required for data: 1430983524
I0611 17:02:07.894155 18751 layer_factory.hpp:77] Creating layer attr_score
I0611 17:02:07.894163 18751 net.cpp:106] Creating Layer attr_score
I0611 17:02:07.894166 18751 net.cpp:454] attr_score <- fc7_relu7_0_split_0
I0611 17:02:07.894173 18751 net.cpp:411] attr_score -> attr_score
I0611 17:02:07.894924 18751 net.cpp:150] Setting up attr_score
I0611 17:02:07.894932 18751 net.cpp:157] Top shape: 1 7 (7)
I0611 17:02:07.894933 18751 net.cpp:165] Memory required for data: 1430983552
I0611 17:02:07.894938 18751 layer_factory.hpp:77] Creating layer attr_score_pos
I0611 17:02:07.894945 18751 net.cpp:106] Creating Layer attr_score_pos
I0611 17:02:07.894949 18751 net.cpp:454] attr_score_pos <- attr_score
I0611 17:02:07.894953 18751 net.cpp:454] attr_score_pos <- attrArrayInd
I0611 17:02:07.894956 18751 net.cpp:411] attr_score_pos -> attr_score_pos
I0611 17:02:07.894974 18751 net.cpp:150] Setting up attr_score_pos
I0611 17:02:07.894979 18751 net.cpp:157] Top shape: 1 7 (7)
I0611 17:02:07.894981 18751 net.cpp:165] Memory required for data: 1430983580
I0611 17:02:07.894984 18751 layer_factory.hpp:77] Creating layer cls_score
I0611 17:02:07.894989 18751 net.cpp:106] Creating Layer cls_score
I0611 17:02:07.894992 18751 net.cpp:454] cls_score <- fc7_relu7_0_split_1
I0611 17:02:07.894996 18751 net.cpp:411] cls_score -> cls_score
I0611 17:02:07.895246 18751 net.cpp:150] Setting up cls_score
I0611 17:02:07.895251 18751 net.cpp:157] Top shape: 1 2 (2)
I0611 17:02:07.895262 18751 net.cpp:165] Memory required for data: 1430983588
I0611 17:02:07.895267 18751 layer_factory.hpp:77] Creating layer bbox_pred
I0611 17:02:07.895272 18751 net.cpp:106] Creating Layer bbox_pred
I0611 17:02:07.895274 18751 net.cpp:454] bbox_pred <- fc7_relu7_0_split_2
I0611 17:02:07.895279 18751 net.cpp:411] bbox_pred -> bbox_pred
I0611 17:02:07.896049 18751 net.cpp:150] Setting up bbox_pred
I0611 17:02:07.896054 18751 net.cpp:157] Top shape: 1 8 (8)
I0611 17:02:07.896055 18751 net.cpp:165] Memory required for data: 1430983620
I0611 17:02:07.896059 18751 layer_factory.hpp:77] Creating layer loss_attribute
I0611 17:02:07.896255 18751 net.cpp:106] Creating Layer loss_attribute
I0611 17:02:07.896261 18751 net.cpp:454] loss_attribute <- attr_score_pos
I0611 17:02:07.896265 18751 net.cpp:454] loss_attribute <- attrArray
I0611 17:02:07.896281 18751 net.cpp:411] loss_attribute -> loss_attribute
Traceback (most recent call last):
  File "./tools/train_net.py", line 116, in <module>
    max_iters=args.max_iters)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 168, in train_net
    pretrained_model=pretrained_model)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/fast_rcnn/train.py", line 52, in __init__
    self.solver = caffe.SGDSolver(solver_prototxt)
  File "/home/fujenchu/projects/affordanceContext/affordance-net/tools/../lib/utils/SigmoidCrossEntropyWeightLossLayer.py", line 8, in setup
    params = eval(self.param_str)
AttributeError: 'SigmoidCrossEntropyWeightLossLayer' object has no attribute 'param_str'
